var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(e){for(var t,r=1,o=arguments.length;r<o;r++)for(var a in t=arguments[r])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)},__rest=this&&this.__rest||function(e,t){var r={};for(a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.indexOf(a)<0&&(r[a]=e[a]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var o=0,a=Object.getOwnPropertySymbols(e);o<a.length;o++)t.indexOf(a[o])<0&&Object.prototype.propertyIsEnumerable.call(e,a[o])&&(r[a[o]]=e[a[o]]);return r};import React,{memo,useMemo}from"react";import Tree from"@baifendian/adhere-mobile-ui-tree";import Util from"@baifendian/adhere-util";import AutoComplete from"./AutoComplete";var TreeAutoComplete=memo(function(e){var o=e.treeSelectProps,a=__rest(e,["treeSelectProps"]),e=useMemo(function(){return a.searchDataSource&&a.searchDataSource.length?Util.treeToArray(a.searchDataSource,{parentIdAttr:"pId",rootParentId:0},"key"):[]},[a.searchDataSource]);return React.createElement(AutoComplete,__assign({},null!=a?a:{},{searchDataSource:e}),function(e){var t=e.value,e=e.onChange,r=a.searchDataSource;return React.createElement(Tree.TreeSelect,__assign({},null!=o?o:{},{value:t,treeData:r,onChange:e}))})});TreeAutoComplete.displayName="TreeAutoComplete";export default TreeAutoComplete;
//# sourceMappingURL=TreeAutoComplete.js.map
