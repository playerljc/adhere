import _CloseCircleFill from"antd-mobile-icons/es/CloseCircleFill";import _List from"antd-mobile/es/components/list";import _NoticeBar from"antd-mobile/es/components/notice-bar";import _FloatingPanel from"antd-mobile/es/components/floating-panel";import _SearchBar from"antd-mobile/es/components/search-bar";import _ErrorBlock from"antd-mobile/es/components/error-block";import _Typography from"antd/es/typography";var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(e){for(var l,t=1,n=arguments.length;t<n;t++)for(var r in l=arguments[t])Object.prototype.hasOwnProperty.call(l,r)&&(e[r]=l[r]);return e}).apply(this,arguments)},__spreadArray=this&&this.__spreadArray||function(e,l,t){if(t||2===arguments.length)for(var n,r=0,a=l.length;r<a;r++)!n&&r in l||((n=n||Array.prototype.slice.call(l,0,r))[r]=l[r]);return e.concat(n||Array.prototype.slice.call(l))};import classNames from"classnames";import React,{memo,useEffect,useMemo,useRef,useState}from"react";import Util from"@baifendian/adhere-util";import Intl from"@baifendian/adhere-util-intl";import TreeAutoComplete from"./TreeAutoComplete";var selectorPrefix="adhere-mobile-ui-auto-complete",Title=_Typography.Title,Text=_Typography.Text,InternalAutoComplete=memo(function(e){var l=e.className,t=e.style,n=e.searchBarClassName,r=e.searchBarStyle,a=e.bodyClassName,o=e.bodyStyle,u=e.placeholder,c=e.searchBarProps,i=e.loadData,s=e.defaultDataSource,m=e.searchDataSource,p=e.rowKey,f=e.labelProp,d=e.valueProp,v=e.value,y=e.onChange,h=e.renderResultItem,_=e.renderEmpty,g=e.showResult,g=void 0===g||g,e=e.children,C=useRef(),b=useState(""),A=b[0],R=b[1],b=useState(null!=s?s:[]),E=b[0],N=b[1],T=useMemo(function(){return(null!=v?v:[]).map(function(e){var l;return Util.isObject(e)?null!=(l=x(e))?l:S(e):e})},[v]);function P(){return!(null!=m&&m.length)}function S(e){return null==e?void 0:e[null!=p?p:"id"]}function x(e){return null==e?void 0:e[null!=d?d:"value"]}function B(t){var l,e;N(function(e){return e.filter(function(e){var l;return(null!=(l=x(e))?l:S(e))!==t})}),null!=y&&y((l=t,null!=(e=null==(e=null==T?void 0:T.filter)?void 0:e.call(T,function(e){return e!==l}))?e:[]))}return useEffect(function(){N(function(e){var l=__spreadArray(__spreadArray(__spreadArray([],null!=m?m:[],!0),null!=s?s:[],!0),e,!0);return null!=(e=null==(e=null==v?void 0:v.map)?void 0:e.call(v,function(t){return Util.isObject(t)?t:l.find(function(e){var l;return(null!=(l=x(e))?l:S(e))===t})}))?e:[]})},[m,s,v]),React.createElement("div",{className:classNames(selectorPrefix,null!=l?l:""),style:null!=t?t:{},ref:C},React.createElement("div",{className:classNames("".concat(selectorPrefix,"-search-bar"),null!=n?n:""),style:null!=r?r:{}},React.createElement(_SearchBar,__assign({placeholder:null!=u?u:Intl.v("输入文字过滤选项"),value:A,onChange:function(e){e||null!=i&&i(""),R(e)},onSearch:function(){null!=i&&i(A)}},null!=c?c:{}))),React.createElement("div",{className:classNames("".concat(selectorPrefix,"-body"),null!=a?a:""),style:null!=o?o:{}},P()&&(null!=(b=null==_?void 0:_())?b:React.createElement(_ErrorBlock,{status:"empty"})),!P()&&(null==e?void 0:e({value:T,onChange:function(e){var l=Array.isArray(e)?e:[e];N(function(n){return l.map(function(t){var e,l;return null==(l=null==(e=__spreadArray(__spreadArray([],null!=m?m:[],!0),n,!0))?void 0:e.find)?void 0:l.call(e,function(e){var l;return(null!=(l=x(e))?l:S(e))===t})})}),null!=y&&y(e)},searchDataSource:null!=m?m:[]}))),g&&!(null==v||!v.length)&&React.createElement(_FloatingPanel,{anchors:[28,(null!=(t=null==(l=null==C?void 0:C.current)?void 0:l.offsetHeight)?t:0)-200].filter(function(e){return 0<=e})},React.createElement("div",{className:"".concat(selectorPrefix,"-result")},React.createElement(_NoticeBar,{content:Intl.vHtml("共 <em>{n}</em> 条",{n:E.length}),color:"info"}),React.createElement(_List,null,null==E?void 0:E.map(function(e,l){var t=S(e),n=null!=(n=null==(n=e)?void 0:n[null!=f?f:"label"])?n:null,n=React.createElement(React.Fragment,null,React.createElement(Title,{level:5,ellipsis:!0},n),React.createElement(Text,{type:"secondary",ellipsis:!0},n));return React.createElement(_List.Item,{key:t},React.createElement("div",{className:"".concat(selectorPrefix,"-result-item-close"),onClick:function(){return B(null==T?void 0:T[l])}},React.createElement(_CloseCircleFill,null)),null!=(t=null==h?void 0:h(e,n))?t:n)})))))}),AutoComplete=InternalAutoComplete;AutoComplete.TreeAutoComplete=TreeAutoComplete,AutoComplete.displayName="AutoComplete";export default AutoComplete;
//# sourceMappingURL=AutoComplete.js.map
