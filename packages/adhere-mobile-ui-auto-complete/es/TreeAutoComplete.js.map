{"version":3,"file":"TreeAutoComplete.js","sources":["TreeAutoComplete.js"],"sourcesContent":["var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport React, { memo, useMemo } from 'react';\nimport Tree from '@baifendian/adhere-mobile-ui-tree';\nimport Util from '@baifendian/adhere-util';\nimport AutoComplete from './AutoComplete';\nvar TreeAutoComplete = /*#__PURE__*/memo(function (_a) {\n  var treeSelectProps = _a.treeSelectProps,\n    autoCompleteProps = __rest(_a, [\"treeSelectProps\"]);\n  var autoCompleteSearchDataSource = useMemo(function () {\n    if (!autoCompleteProps.searchDataSource) return [];\n    if (!autoCompleteProps.searchDataSource.length) return [];\n    return Util.treeToArray(autoCompleteProps.searchDataSource, {\n      parentIdAttr: 'pId',\n      rootParentId: 0\n    }, 'key');\n  }, [autoCompleteProps.searchDataSource]);\n  return /*#__PURE__*/React.createElement(AutoComplete, __assign({}, autoCompleteProps !== null && autoCompleteProps !== void 0 ? autoCompleteProps : {}, {\n    searchDataSource: autoCompleteSearchDataSource\n  }), function (_a) {\n    var value = _a.value,\n      onChange = _a.onChange;\n    var searchDataSource = autoCompleteProps.searchDataSource;\n    return /*#__PURE__*/React.createElement(Tree.TreeSelect, __assign({}, treeSelectProps !== null && treeSelectProps !== void 0 ? treeSelectProps : {}, {\n      value: value,\n      treeData: searchDataSource,\n      onChange: onChange\n    }));\n  });\n});\nTreeAutoComplete.displayName = 'TreeAutoComplete';\nexport default TreeAutoComplete;"],"names":["__assign","this","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","memo","useMemo","Tree","Util","AutoComplete","TreeAutoComplete","_a","treeSelectProps","autoCompleteProps","autoCompleteSearchDataSource","searchDataSource","treeToArray","parentIdAttr","rootParentId","createElement","value","onChange","TreeSelect","treeData","displayName"],"mappings":"AAAA,IAAIA,SAAWC,MAAQA,KAAKD,UAAY,WAQtC,OAPAA,SAAWE,OAAOC,QAAU,SAAUC,GACpC,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,CAAC,GAE/C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,CAAC,IAAGN,EAAEM,GAAKL,EAAEK,IAE5E,OAAON,CACT,GACgBU,MAAMb,KAAMO,SAAS,CACvC,EACIO,OAASd,MAAQA,KAAKc,QAAU,SAAUV,EAAGW,GAC/C,IAAIZ,EAAI,GACR,IAASM,KAAKL,EAAOH,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,CAAC,GAAKM,EAAEC,QAAQP,CAAC,EAAI,IAAGN,EAAEM,GAAKL,EAAEK,IAC9F,GAAS,MAALL,GAAqD,YAAxC,OAAOH,OAAOgB,sBAAsC,IAAK,IAAIZ,EAAI,EAAGI,EAAIR,OAAOgB,sBAAsBb,CAAC,EAAGC,EAAII,EAAED,OAAQH,CAAC,GACnIU,EAAEC,QAAQP,EAAEJ,EAAE,EAAI,GAAKJ,OAAOS,UAAUQ,qBAAqBN,KAAKR,EAAGK,EAAEJ,EAAE,IAAGF,EAAEM,EAAEJ,IAAMD,EAAEK,EAAEJ,KAEhG,OAAOF,CACT,SACOgB,OAASC,KAAMC,OAAsB,KAAP,eAC9BC,SAAU,2CACVC,SAAU,iCACVC,iBAAkB,iBACzB,IAAIC,iBAAgCL,KAAK,SAAUM,GACjD,IAAIC,EAAkBD,EAAGC,gBACvBC,EAAoBd,OAAOY,EAAI,CAAC,kBAAkB,EAChDG,EAA+BR,QAAQ,WACzC,OAAKO,EAAkBE,kBAClBF,EAAkBE,iBAAiBtB,OACjCe,KAAKQ,YAAYH,EAAkBE,iBAAkB,CAC1DE,aAAc,MACdC,aAAc,CAChB,EAAG,KAAK,EALwC,EAMlD,EAAG,CAACL,EAAkBE,iBAAiB,EACvC,OAAoBX,MAAMe,cAAcV,aAAczB,SAAS,GAAI6B,MAAAA,EAA6DA,EAAoB,GAAI,CACtJE,iBAAkBD,CACpB,CAAC,EAAG,SAAUH,GACZ,IAAIS,EAAQT,EAAGS,MACbC,EAAWV,EAAGU,SACZN,EAAmBF,EAAkBE,iBACzC,OAAoBX,MAAMe,cAAcZ,KAAKe,WAAYtC,SAAS,GAAI4B,MAAAA,EAAyDA,EAAkB,GAAI,CACnJQ,MAAOA,EACPG,SAAUR,EACVM,SAAUA,CACZ,CAAC,CAAC,CACJ,CAAC,CACH,CAAC,EACDX,iBAAiBc,YAAc,kCAChBd"}