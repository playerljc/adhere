import { Card } from 'antd';
import React from 'react';

import SplitLayout from '../src/index';

import 'antd/dist/reset.css';

import '../src/index.less';
import './index.less';

export default () => {
  return (
    <div style={{ height: '100%', padding: 20, background: '#ccc' }}>
      {/*<SplitLayout.TRBLC.TCSplitLayout
        gutter={20}
        tProps={{
          render: () => <Card style={{ height: '100%' }}>top</Card>,
        }}
        cProps={{
          autoFixed: false,
          render: () => (
            <Card>
              {Array.from({ length: 100 }).map((t) => (
                <p>111111</p>
              ))}
            </Card>
          ),
        }}
      />*/}

      {/*<SplitLayout.TRBLC.CBSplitLayout
        gutter={20}
        bProps={{
          span: 12,
          fit: true,
          render: () => <Card>bottom</Card>,
        }}
        cProps={{
          render: () => <Card>center</Card>,
        }}
      />*/}

      {/*<SplitLayout.TRBLC.TLCSplitLayout
        gutter={20}
        autoWrapProps={{ autoFixed: false }}
        autoInnerProps={{ autoFixed: true, gutter: [0, 20] }}
        tProps={{
          fit: true,
          span: 8,
          render: () => <Card>Top</Card>,
        }}
        lProps={{
          fit: true,
          span: 8,
          render: () => <Card>Left</Card>,
        }}
        cProps={{
          autoFixed: false,
          render: () => (
            <Card>
              {Array.from({ length: 1 }).map((t) => (
                <p>1</p>
              ))}
            </Card>
          ),
        }}
      />*/}

      {/*<SplitLayout.TRBLC.TRCSplitLayout
        gutter={20}
        autoInnerProps={{ gutter: [0, 20] }}
        tProps={{
          fit: true,
          span: 8,
          render: () => <Card>Top</Card>,
        }}
        rProps={{
          fit: true,
          span: 8,
          render: () => <Card>Right</Card>,
        }}
        cProps={{
          render: () => <Card>center</Card>,
        }}
      />*/}

      {/*<SplitLayout.TRBLC.TLRCSplitLayout
        gutter={20}
        autoInnerProps={{ gutter: [0, 20] }}
        tProps={{
          fit: true,
          span: 3,
          render: () => <Card>Top</Card>,
        }}
        lProps={{
          fit: true,
          span: 3,
          render: () => <Card>Left</Card>,
        }}
        rProps={{
          fit: true,
          span: 3,
          render: () => <Card>Right</Card>,
        }}
        cProps={{
          render: () => <Card>center</Card>,
        }}
      />*/}

      {/*<SplitLayout.TRBLC.LCBSplitLayout
        gutter={20}
        autoInnerProps={{ gutter: [0, 20] }}
        lProps={{
          fit: true,
          span: 3,
          render: () => <Card>Left</Card>,
        }}
        cProps={{
          render: () => <Card>Center</Card>,
        }}
        bProps={{
          fit: true,
          span: 3,
          render: () => <Card>Bottom</Card>,
        }}
      />*/}

      {/*<SplitLayout.TRBLC.CRBSplitLayout
        gutter={20}
        autoInnerProps={{ gutter: [0, 20] }}
        rProps={{
          fit: true,
          span: 3,
          render: () => <Card>Right</Card>,
        }}
        cProps={{
          render: () => <Card>Center</Card>,
        }}
        bProps={{
          fit: true,
          span: 3,
          render: () => <Card>Bottom</Card>,
        }}
      />*/}

      {/*<SplitLayout.TRBLC.LCRBSplitLayout
        gutter={20}
        autoInnerProps={{ gutter: [0, 20] }}
        lProps={{
          fit: true,
          span: 3,
          render: () => <Card>Left</Card>,
        }}
        rProps={{
          fit: true,
          span: 3,
          render: () => <Card>Right</Card>,
        }}
        cProps={{
          render: () => <Card>Center</Card>,
        }}
        bProps={{
          fit: true,
          span: 3,
          render: () => <Card>Bottom</Card>,
        }}
      />*/}

      {/*<SplitLayout.TRBLC.LCSplitLayout
        gutter={20}
        lProps={{
          fit: true,
          span: 3,
          render: () => <Card>Left</Card>,
        }}
        cProps={{
          autoFixed: true,
          render: () => (
            <Card>
              {Array.from({ length: 100 }).map((t) => (
                <p>
                  1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
                </p>
              ))}
            </Card>
          ),
        }}
      />*/}

      {/*<SplitLayout.TRBLC.CRSplitLayout
        gutter={20}
        rProps={{
          fit: true,
          span: 3,
          render: () => <Card>Right</Card>,
        }}
        cProps={{
          render: () => <Card>Center</Card>,
        }}
      />*/}

      {/*<SplitLayout.TRBLC.LTCSplitLayout
        gutter={20}
        autoInnerProps={{ gutter: [0, 20] }}
        lProps={{
          fit: true,
          span: 3,
          render: () => <Card>Left</Card>,
        }}
        tProps={{
          fit: true,
          span: 3,
          render: () => <Card>Top</Card>,
        }}
        cProps={{
          render: () => <Card>Center</Card>,
        }}
      />*/}

      {/*<SplitLayout.TRBLC.LBCSplitLayout
        gutter={20}
        autoInnerProps={{ gutter: [0, 20] }}
        lProps={{
          fit: true,
          span: 3,
          render: () => <Card>Left</Card>,
        }}
        bProps={{
          fit: true,
          span: 3,
          render: () => <Card>Bottom</Card>,
        }}
        cProps={{
          render: () => <Card>Center</Card>,
        }}
      />*/}

      {/*<SplitLayout.TRBLC.LTCBSplitLayout
        gutter={20}
        autoWrapProps={{ autoFixed: false }}
        autoInnerProps={{ autoFixed: true, gutter: [0, 20] }}
        lProps={{
          fit: true,
          span: 3,
          render: () => <Card>Left</Card>,
        }}
        tProps={{
          fit: true,
          span: 3,
          render: () => <Card>Top</Card>,
        }}
        bProps={{
          fit: true,
          span: 3,
          render: () => <Card>Bottom</Card>,
        }}
        cProps={{
          autoFixed: false,
          render: () => (
            <Card>
              {Array.from({ length: 100 }).map((t) => (
                <p>

                </p>
              ))}
            </Card>
          ),
        }}
      />*/}

      {/*<SplitLayout.TRBLC.TCRSplitLayout
        gutter={20}
        autoInnerProps={{ gutter: [0, 20] }}
        tProps={{
          fit: true,
          span: 3,
          render: () => <Card>Top</Card>,
        }}
        rProps={{
          fit: true,
          span: 3,
          render: () => <Card>Right</Card>,
        }}
        cProps={{
          render: () => <Card>Center</Card>,
        }}
      />*/}

      {/*<SplitLayout.TRBLC.CBRSplitLayout
        gutter={20}
        autoInnerProps={{ gutter: [0, 20] }}
        bProps={{
          fit: true,
          span: 3,
          render: () => <Card>Bottom</Card>,
        }}
        rProps={{
          fit: true,
          span: 3,
          render: () => <Card>Right</Card>,
        }}
        cProps={{
          render: () => <Card>Center</Card>,
        }}
      />*/}

      {/*<SplitLayout.TRBLC.TCBRSplitLayout
        gutter={20}
        autoWrapProps={{ autoFixed: false }}
        autoInnerProps={{ autoFixed: true, gutter: [0, 20] }}
        tProps={{
          fit: true,
          span: 3,
          render: () => <Card>Top</Card>,
        }}
        bProps={{
          fit: true,
          span: 3,
          render: () => <Card>Bottom</Card>,
        }}
        rProps={{
          fit: true,
          span: 3,
          render: () => <Card>Right</Card>,
        }}
        cProps={{
          autoFixed: false,
          render: () => (
            <Card>
              {Array.from({ length: 100 }).map((t) => (
                <p>

                </p>
              ))}
            </Card>
          ),
        }}
      />*/}

      {/*<SplitLayout.TRBLC.TBLCRSplitLayout
        gutter={20}
        autoWrapProps={{ autoFixed: false }}
        autoInnerProps={{ autoFixed: true, gutter: [0, 20] }}
        tProps={{
          fit: true,
          span: 3,
          render: () => <Card>Top</Card>,
        }}
        rProps={{
          fit: true,
          span: 3,
          render: () => <Card>Right</Card>,
        }}
        bProps={{
          fit: true,
          span: 3,
          render: () => <Card>Bottom</Card>,
        }}
        lProps={{
          fit: true,
          span: 3,
          render: () => <Card>Left</Card>,
        }}
        cProps={{
          autoFixed: false,
          render: () => (
            <Card>
              {Array.from({ length: 100 }).map((t) => (
                <p>

                </p>
              ))}
            </Card>
          ),
        }}
      />*/}

      {/*<SplitLayout.TRBLC.LRTCBSplitLayout
        gutter={20}
        autoWrapProps={{ autoFixed: false }}
        autoInnerProps={{ autoFixed: true, gutter: [0, 20] }}
        tProps={{
          fit: true,
          span: 4,
          render: () => <Card>Top</Card>,
        }}
        rProps={{
          fit: true,
          span: 3,
          render: () => <Card>Right</Card>,
        }}
        bProps={{
          fit: true,
          span: 3,
          render: () => <Card>Bottom</Card>,
        }}
        lProps={{
          fit: true,
          style: { width: '50%' },
          render: () => <Card>Left</Card>,
        }}
        cProps={{
          autoFixed: false,
          render: () => (
            <Card>
              {Array.from({ length: 100 }).map((t) => (
                <p>

                </p>
              ))}
            </Card>
          ),
        }}
      />*/}
    </div>
  );
};
