{"version":3,"file":"math.js","sources":["math.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = {\r\n    /**--------------------------math-start----------------------**/\r\n    /**\r\n     * toPoint - 百分数转化为小数\r\n     * @param percent\r\n     */\r\n    toPoint: function (percent) {\r\n        var str = percent.replace('%', '');\r\n        return parseInt(str) / 100;\r\n    },\r\n    /**\r\n     * point - 小数转化为百分数\r\n     * @param point\r\n     */\r\n    toPercent: function (point) {\r\n        var str = Number(point * 100).toFixed(1);\r\n        str += '%';\r\n        return str;\r\n    },\r\n    /**\r\n     * straightLineIntersection - 计算两个直线的交点\r\n     * @param p1\r\n     * @param p2\r\n     * @param p3\r\n     * @param p4\r\n     */\r\n    straightLineIntersection: function (p1, p2, p3, p4) {\r\n        var x1 = p1.x, y1 = p1.y;\r\n        var x2 = p2.x, y2 = p2.y;\r\n        var x3 = p3.x, y3 = p3.y;\r\n        var x4 = p4.x, y4 = p4.y;\r\n        return {\r\n            x: ((x3 - x4) * (x2 * y1 - x1 * y2) - (x1 - x2) * (x4 * y3 - x3 * y4)) /\r\n                ((x3 - x4) * (y1 - y2) - (x1 - x2) * (y3 - y4)),\r\n            y: ((y3 - y4) * (y2 * x1 - y1 * x2) - (y1 - y2) * (y4 * x3 - y3 * x4)) /\r\n                ((y3 - y4) * (x1 - x2) - (y1 - y2) * (x3 - x4)),\r\n        };\r\n    },\r\n    /**\r\n     * getA3Piint - 计算两点p1,p2 距离p1点distance距离的点p3的坐标\r\n     * @param {Point} - p1\r\n     * @param {Point} - p2\r\n     * @param {Number} - distance 与p1的距离\r\n     * @return {{x: *, y: *}}\r\n     */\r\n    getA3Point: function (_a) {\r\n        var p1 = _a.p1, p2 = _a.p2, distance = _a.distance;\r\n        var Ax1 = p1.x, Ay1 = p1.y;\r\n        var Ax2 = p2.x, Ay2 = p2.y;\r\n        var dLA1A2 = Math.sqrt(Math.pow(Ax2 - Ax1, 2) + Math.pow(Ay2 - Ay1, 2)); // 计算A1A2的长度\r\n        var Ax3 = (distance / dLA1A2) * (Ax2 - Ax1) + Ax1; // A3的横坐标\r\n        var Ay3 = (distance / dLA1A2) * (Ay2 - Ay1) + Ay1; // A3的横坐标\r\n        return {\r\n            x: Ax3,\r\n            y: Ay3,\r\n        };\r\n    },\r\n    /**\r\n     * getDistanceByBetweenPoint - 获取p1,p2两点间的距离\r\n     * @param {Point} - p1\r\n     * @param {Point} - p2\r\n     * @return {number}\r\n     */\r\n    getDistanceByBetweenPoint: function (_a) {\r\n        var p1 = _a.p1, p2 = _a.p2;\r\n        var Ax1 = p1.x, Ay1 = p1.y;\r\n        var Ax2 = p2.x, Ay2 = p2.y;\r\n        return Math.sqrt(Math.pow(Ax2 - Ax1, 2) + Math.pow(Ay2 - Ay1, 2)); // 计算A1A2的长度\r\n    },\r\n    /**\r\n     * clientToCtxPoint - 屏幕坐标转换成画布坐标\r\n     * @param {Event} - event\r\n     * @param {Rect} - rect\r\n     * @return {x:number,y:number}\r\n     */\r\n    clientToCtxPoint: function (_a) {\r\n        var event = _a.event, rect = _a.rect;\r\n        var clientX = event.clientX, clientY = event.clientY;\r\n        return {\r\n            x: clientX - rect.left,\r\n            y: clientY - rect.top,\r\n        };\r\n    },\r\n    /**\r\n     * isPointInCircle - 判断一个点是否在圆内\r\n     * @param point\r\n     * @param circle\r\n     */\r\n    isPointInCircle: function (point, circle) {\r\n        var _x = point.x - circle.center.x;\r\n        var _y = point.y - circle.center.y;\r\n        return !(_x * _x + _y * _y > circle.radius * circle.radius);\r\n    },\r\n    /**\r\n     * isPointInRect - 点是否在矩形中\r\n     * @param point\r\n     * @param rect 1 2 3 4 5 6 7 8 9 10\r\n     */\r\n    isPointInRect: function (point, rect) {\r\n        return (point.x >= rect.x &&\r\n            point.x <= rect.x + rect.width - 1 &&\r\n            point.y >= rect.y &&\r\n            point.y <= rect.y + rect.height - 1);\r\n    },\r\n    /**\r\n     * getCanvasTextInGemX\r\n     * @description - 获取一个文本在Rect中的居中的X位置\r\n     * @param ctx\r\n     * @param text\r\n     * @param rect\r\n     */\r\n    getCanvasTextInGemX: function (ctx, text, rect) {\r\n        var left = rect.leftTop.x;\r\n        var right = rect.rightBottom.x;\r\n        var rectWidth = right - left;\r\n        var textWidth = ctx.measureText(text).width;\r\n        return (rectWidth - textWidth) / 2;\r\n    },\r\n    /**\r\n     * midpoint - 计算两个点的中心点\r\n     * @param fromPoint\r\n     * @param toPoint\r\n     * @return IPoint\r\n     */\r\n    midpoint: function (fromPoint, toPoint) {\r\n        return { x: (fromPoint.x + toPoint.x) / 2, y: (fromPoint.y + toPoint.y) / 2 };\r\n    },\r\n    /**\r\n     * slope - 计算两个点的斜率\r\n     * @param fromPoint\r\n     * @param toPoint\r\n     * @param axis - 'cartesian' | 'geographic'\r\n     * @return number | undefined\r\n     */\r\n    slope: function (fromPoint, toPoint, \r\n    // cartesian 平面直角坐标系\r\n    // geographic 地理坐标系\r\n    axis) {\r\n        if (axis === void 0) { axis = 'geographic'; }\r\n        // 垂直\r\n        if (fromPoint.x === toPoint.x)\r\n            return undefined;\r\n        // 平行\r\n        if (fromPoint.y === toPoint.y)\r\n            return 0;\r\n        // 有角度\r\n        var slope = (toPoint.y - fromPoint.y) / (toPoint.x - fromPoint.x);\r\n        // 如果是地理坐标系则取负值\r\n        return axis === 'geographic' ? -slope : slope;\r\n    },\r\n    /**\r\n     * slopToRadian - 获取两点斜率的弧度\r\n     * @param fromPoint\r\n     * @param toPoint\r\n     * @param axis cartesian(平面) | geographic(地理)\r\n     */\r\n    slopToRadian: function (fromPoint, toPoint, axis) {\r\n        if (axis === void 0) { axis = 'geographic'; }\r\n        // 斜率\r\n        var slope = this.slope(fromPoint, toPoint);\r\n        // 垂直\r\n        if (slope === 0) {\r\n            return fromPoint.x < toPoint.x ? this.angleToRadian(0) : this.angleToRadian(180);\r\n        }\r\n        // 平行\r\n        else if (slope === undefined) {\r\n            return axis === 'cartesian'\r\n                ? fromPoint.y <= toPoint.y\r\n                    ? this.angleToRadian(90)\r\n                    : this.angleToRadian(-90)\r\n                : fromPoint.y <= toPoint.y\r\n                    ? this.angleToRadian(-90)\r\n                    : this.angleToRadian(90);\r\n        }\r\n        // 有角度\r\n        else {\r\n            var dy = toPoint.y - fromPoint.y;\r\n            var dx = toPoint.x - fromPoint.x;\r\n            var degrees = Math.atan2(dy, dx);\r\n            return axis === 'cartesian' ? degrees : -degrees;\r\n        }\r\n    },\r\n    /**\r\n     * slopToAngle - 获取两点斜率的角度\r\n     * @param fromPoint\r\n     * @param toPoint\r\n     * @param axis\r\n     * @return number - 角度\r\n     */\r\n    slopToAngle: function (fromPoint, toPoint, axis) {\r\n        if (axis === void 0) { axis = 'geographic'; }\r\n        // 获取斜率的弧度\r\n        var slopRadian = this.slopToRadian(fromPoint, toPoint, axis);\r\n        // 弧度转换成角度\r\n        return this.radianToAngle(slopRadian);\r\n    },\r\n    /**\r\n     * radianToAngle - 弧度转换成角度\r\n     * @param radian - 弧度\r\n     * @return number - 角度\r\n     */\r\n    radianToAngle: function (radian) {\r\n        return (180 * radian) / Math.PI;\r\n    },\r\n    /**\r\n     * angleToRadian - 角度转弧度\r\n     * @param angle - 角度\r\n     * @return number - 弧度\r\n     */\r\n    angleToRadian: function (angle) {\r\n        return (angle * Math.PI) / 180;\r\n    },\r\n    /**\r\n     * distance - 距离\r\n     * @param value - 数值(m)\r\n     * @param unit - 单位\r\n     * @return 转换后的数值\r\n     */\r\n    distance: function (value, unit) {\r\n        var map = new Map([['kilometer', 1000]]);\r\n        return value / map.get(unit);\r\n    },\r\n    /**\r\n     * getCirclePoint\r\n     * @description - 获取圆上任意一点\r\n     * @param center\r\n     * @param raduis\r\n     * @param angle\r\n     */\r\n    getCirclePoint: function (center, raduis, angle) {\r\n        return {\r\n            x: center.x + Math.cos(angle) * raduis,\r\n            y: center.y + Math.sin(angle) * raduis,\r\n        };\r\n    },\r\n    /**\r\n     * getOvalPoint\r\n     * @description - 获取椭圆上任意一点\r\n     * @param center\r\n     * @param raduisX\r\n     * @param radiusY\r\n     * @param angle\r\n     */\r\n    getOvalPoint: function (center, raduisX, radiusY, angle) {\r\n        return {\r\n            x: center.x + Math.cos(angle) * raduisX,\r\n            y: center.y + Math.sin(angle) * radiusY,\r\n        };\r\n    },\r\n    /**--------------------------math-end------------------------**/\r\n};\r\n"],"names":["Object","defineProperty","exports","value","default","toPoint","percent","str","replace","parseInt","toPercent","point","Number","toFixed","straightLineIntersection","p1","p2","p3","p4","x1","x","y1","y","x2","y2","x3","y3","x4","y4","getA3Point","_a","distance","Ax1","Ay1","Ax2","Ay2","dLA1A2","Math","sqrt","pow","getDistanceByBetweenPoint","clientToCtxPoint","event","rect","clientX","clientY","left","top","isPointInCircle","circle","_x","center","_y","radius","isPointInRect","width","height","getCanvasTextInGemX","ctx","text","leftTop","rightBottom","measureText","midpoint","fromPoint","slope","axis","slopToRadian","this","angleToRadian","undefined","dy","dx","degrees","atan2","slopToAngle","slopRadian","radianToAngle","radian","PI","angle","unit","Map","get","getCirclePoint","raduis","cos","sin","getOvalPoint","raduisX","radiusY"],"mappings":"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"}