{"version":3,"file":"util.js","sources":["util.js"],"sourcesContent":["import Preferences from '@baifendian/adhere-util-preferences';\r\nvar eventListenerHandlers = new Map();\r\n// 特殊符号\r\nvar SPECIAL_SYMBOL = '__';\r\n// 记录对象路径的变量\r\nvar PATH_SYMBOLS = [\r\n    SPECIAL_SYMBOL + \"parentName\" + SPECIAL_SYMBOL,\r\n    SPECIAL_SYMBOL + \"parent\" + SPECIAL_SYMBOL,\r\n];\r\nexport default {\r\n    /**----------------------------基本---------------------------**/\r\n    /**\r\n     * isEmpty - 对象是否为空\r\n     * @param value\r\n     */\r\n    isEmpty: function (value) {\r\n        if (value === null || value === '' || value === undefined)\r\n            return true;\r\n        return false;\r\n    },\r\n    /**\r\n     * isNumber - 判断是否是number\r\n     * @param val\r\n     * @return {boolean}\r\n     */\r\n    isNumber: function (val) {\r\n        return (!this.isObject(val) && !this.isArray(val) && !this.isFunction(val) && typeof val === 'number');\r\n    },\r\n    /**\r\n     * isBoolean - 判断是否是boolean\r\n     * @param val\r\n     * @return {boolean}\r\n     */\r\n    isBoolean: function (val) {\r\n        return (typeof val).toLowerCase() === 'boolean';\r\n    },\r\n    /**\r\n     * isString - 判断是否是string\r\n     * @param val\r\n     * @return {boolean}\r\n     */\r\n    isString: function (val) {\r\n        return (typeof val).toLowerCase() === 'string';\r\n    },\r\n    /**\r\n     * isSymbol - 是否是符号类型\r\n     * @param val\r\n     * @return boolean\r\n     */\r\n    isSymbol: function (val) {\r\n        return (typeof val).toLowerCase() === 'symbol';\r\n    },\r\n    /**\r\n     * isPrimitive - 是否是基本类型\r\n     * @param val\r\n     */\r\n    isPrimitive: function (val) {\r\n        return this.isBoolean(val) || this.isNumber(val) || this.isString(val) || this.isSymbol(val);\r\n    },\r\n    /**\r\n     * isArray - 判断数组\r\n     * @param obj\r\n     * @return {boolean}\r\n     */\r\n    isArray: function (obj) {\r\n        return Array.isArray(obj);\r\n    },\r\n    /**\r\n     * isFunction - 判断函数\r\n     * @param obj\r\n     * @return {boolean}\r\n     */\r\n    isFunction: function (obj) {\r\n        return obj instanceof Function;\r\n    },\r\n    /**\r\n     * isObject - 是否是对象\r\n     * @param obj\r\n     * @return {boolean}\r\n     */\r\n    isObject: function (obj) {\r\n        return obj instanceof Object && !Array.isArray(obj) && !(obj instanceof Function);\r\n    },\r\n    /**\r\n     * isRef - 是否是引用类型\r\n     * @param obj\r\n     */\r\n    isRef: function (obj) {\r\n        return this.isArray(obj) || this.isObject(obj);\r\n    },\r\n    /**\r\n     * chainCallAssignment - 对象的链式赋值\r\n     * obj.a.b.c.d.x.x.x = value\r\n     * @param obj Object - 赋值的对象\r\n     * @param chainStr string - 属性链式表达式 a.b.c\r\n     * @param value any - 要复值的值\r\n     */\r\n    chainCallAssignment: function (_a) {\r\n        var obj = _a.obj, chainStr = _a.chainStr, value = _a.value;\r\n        if (!this.isObject(obj) ||\r\n            !this.isString(chainStr) ||\r\n            this.isEmpty(chainStr) ||\r\n            this.isEmpty(obj))\r\n            return false;\r\n        var chain = chainStr.split('.');\r\n        // const obj = {};\r\n        // a.b.c\r\n        // const item = obj['a']\r\n        var target = obj;\r\n        for (var i = 0; i < chain.length; i++) {\r\n            var property = chain[i];\r\n            if (i < chain.length - 1) {\r\n                target = target[property];\r\n            }\r\n            else {\r\n                target[property] = value;\r\n            }\r\n        }\r\n    },\r\n    /**\r\n     * getObjectByChainStr - 通过chainStr获取对象\r\n     * obj.a.b.c.d.x.x.x = value\r\n     * @param obj Object - 赋值的对象\r\n     * @param chainStr string - 属性链式表达式 a.b.c\r\n     * @return Object\r\n     */\r\n    getObjectByChainStr: function (_a) {\r\n        var obj = _a.obj, chainStr = _a.chainStr;\r\n        if (!this.isObject(obj) ||\r\n            !this.isString(chainStr) ||\r\n            this.isEmpty(chainStr) ||\r\n            this.isEmpty(obj))\r\n            return obj;\r\n        var chain = chainStr.split('.');\r\n        // const obj = {};\r\n        // a.b.c\r\n        // const item = obj['a']\r\n        var target = obj;\r\n        for (var i = 0; i < chain.length; i++) {\r\n            target = target[chain[i]];\r\n        }\r\n        return target;\r\n    },\r\n    /**\r\n     * toCamelCase - 用连接符链接的字符串转换成驼峰写法\r\n     * 例：abc-def AbcDef\r\n     * @param str - string 用连接符节点的字符串\r\n     * @param toUpperCase - boolean 是否转换成大写\r\n     * @return {String}\r\n     */\r\n    toCamelCase: function (str, toUpperCase) {\r\n        if (toUpperCase === void 0) { toUpperCase = false; }\r\n        var result = str\r\n            .split('-')\r\n            .map(function (item) { return item.charAt(0).toUpperCase() + item.substring(1); })\r\n            .join('');\r\n        return !toUpperCase ? \"\" + result.charAt(0).toLowerCase() + result.substring(1) : result;\r\n    },\r\n    /**\r\n     * isKebabCase - 是否是烤肉串形式的名字\r\n     * @param name - string 名称\r\n     * @return boolean\r\n     */\r\n    isKebabCase: function (name) {\r\n        return /^([a-z][a-z0-9]*)(-[a-z0-9]+)*$/.test(name);\r\n    },\r\n    /**\r\n     * isPascalCase - 是否是驼峰形式的名字\r\n     * @param name - string 名称\r\n     * @return boolean\r\n     */\r\n    isPascalCase: function (name) {\r\n        return /^[A-Z][a-z]+(?:[A-Z][a-z]+)*$/.test(name);\r\n    },\r\n    /**\r\n     * pascalCaseToKebabCase 驼峰转xxx-xxx-xxx\r\n     * @param name - string pascalCase的字符串\r\n     * @return {string}\r\n     */\r\n    pascalCaseToKebabCase: function (name) {\r\n        var result = name.replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g, '$1-$2');\r\n        return (result.startsWith('-') ? result.substring(1) : result).toLowerCase();\r\n    },\r\n    /**\r\n     * execExpression - 执行表达式\r\n     * @param context - {Object} 执行的上下文\r\n     * @param expressionStr - {String} 表达式\r\n     * @param data\r\n     * @return {any}\r\n     */\r\n    execExpression: function (context, expressionStr, data) {\r\n        // 实参列表，调用函数传递的参数\r\n        var argv = [data];\r\n        // 形参列表，函数声明的参数列表\r\n        var parameters = ['context'];\r\n        // 迭代context\r\n        for (var p in context) {\r\n            // 拼凑其他实参\r\n            argv.push(context[p]);\r\n            // 拼凑其他形参\r\n            parameters.push(p);\r\n        }\r\n        // 创建函数并调用\r\n        return eval(\"\\n    const fun = new Function(\\n      `\" + parameters.join(',') + \"`,\\n      `return eval(\\\"with(context){\" + expressionStr + \"}\\\")`,\\n    );\\n  \\n    fun.apply(window, argv);\\n  \");\r\n    },\r\n    /**\r\n     * getCookie\r\n     * @return {string}\r\n     * @param name\r\n     */\r\n    getCookie: function (name) {\r\n        if (name === void 0) { name = 'lang'; }\r\n        var strCookie = document.cookie; // 获取cookie字符串\r\n        var arrCookie = strCookie.split(';'); // 分割\r\n        // 遍历匹配\r\n        var value = '';\r\n        for (var i = 0; i < arrCookie.length; i++) {\r\n            var arr = arrCookie[i].split('=');\r\n            if (arr[0].trim() === name) {\r\n                value = arr[1];\r\n                break;\r\n            }\r\n        }\r\n        return value;\r\n    },\r\n    /**\r\n     * noop - 返回一个空实现的函数\r\n     * @return Function\r\n     */\r\n    noop: function () {\r\n        return function () { };\r\n    },\r\n    /**\r\n     * generatorRandom - 生成随机数\r\n     * @param lowerValue - 最小值\r\n     * @param upperValue - 最大值\r\n     */\r\n    generatorRandom: function (lowerValue, upperValue) {\r\n        var choices = upperValue - lowerValue + 1;\r\n        return Math.floor(Math.random() * choices + lowerValue);\r\n    },\r\n    /**\r\n     * uuid - 获取uuid\r\n     * @return string\r\n     */\r\n    uuid: function () {\r\n        var s = [];\r\n        var hexDigits = '0123456789abcdef';\r\n        for (var i = 0; i < 36; i++) {\r\n            // @ts-ignore\r\n            s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);\r\n        }\r\n        // @ts-ignore\r\n        s[14] = '4'; // bits 12-15 of the time_hi_and_version field to 0010\r\n        // @ts-ignore\r\n        s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1); // bits 6-7 of the clock_seq_hi_and_reserved to 01\r\n        // @ts-ignore\r\n        s[8] = s[13] = s[18] = s[23] = '-';\r\n        return s.join('');\r\n    },\r\n    /**\r\n     * getPropertyVisitPathStr - 获取属性访问的完整字符串路径 a.b.c.d.e.f\r\n     * @param target Proxy中set的target参数\r\n     * @param key Proxy中set的key参数\r\n     * @return {string}\r\n     */\r\n    getPropertyVisitPathStr: function (target, key) {\r\n        // 最终的访问路径 - 先将最后一个key放入\r\n        var visitPath = this.isArray(target) /* && key !== 'length' */ ? [] : [key];\r\n        if (target[PATH_SYMBOLS[0]]) {\r\n            visitPath.push(target[PATH_SYMBOLS[0]]);\r\n        }\r\n        var parent = target[PATH_SYMBOLS[1]];\r\n        while (parent) {\r\n            if (parent[PATH_SYMBOLS[0]]) {\r\n                visitPath.push(parent[PATH_SYMBOLS[0]]);\r\n            }\r\n            parent = parent[PATH_SYMBOLS[1]];\r\n        }\r\n        // [0] c b a\r\n        // a b c [0]\r\n        // a [0]\r\n        visitPath.reverse();\r\n        var result = [];\r\n        for (var i = 0; i < visitPath.length; i++) {\r\n            var item = visitPath[i];\r\n            if (item.startsWith('[') && item.endsWith(']')) {\r\n                // @ts-ignore\r\n                result[result.length - 1] = \"\" + result[result.length - 1] + item;\r\n            }\r\n            else {\r\n                // @ts-ignore\r\n                result.push(item);\r\n            }\r\n        }\r\n        return result.join('.');\r\n    },\r\n    /**\r\n     * convertBase64UrlToBlob - 转换base64位blob对象\r\n     * @return Blob\r\n     * @param data\r\n     */\r\n    convertBase64UrlToBlob: function (data) {\r\n        var bytes = window.atob(data.split(',')[1]); // 去掉url的头，并转换为byte\r\n        // 处理异常,将ascii码小于0的转换为大于0\r\n        var ab = new ArrayBuffer(bytes.length);\r\n        var ia = new Uint8Array(ab);\r\n        for (var i = 0; i < bytes.length; i++) {\r\n            ia[i] = bytes.charCodeAt(i);\r\n        }\r\n        return new Blob([ab], { type: 'image/png' });\r\n    },\r\n    /**----------------------------基本end---------------------------**/\r\n    /**--------------------------dom-start-------------------------**/\r\n    /**\r\n     * isTextNode - 是否是文本节点\r\n     * @param el - Node\r\n     * @return {boolean}\r\n     */\r\n    isTextNode: function (el) {\r\n        return el.nodeType === Node.TEXT_NODE;\r\n    },\r\n    /**\r\n     * isCommentNode - 是否是注释节点\r\n     * @param el\r\n     * @return {boolean}\r\n     */\r\n    isCommentNode: function (el) {\r\n        return el.nodeType === Node.COMMENT_NODE;\r\n    },\r\n    /**\r\n     * isElementNode - 是否是元素节点\r\n     * @param el - Element\r\n     * @return {boolean}\r\n     */\r\n    isElementNode: function (el) {\r\n        return el.nodeType === Node.ELEMENT_NODE;\r\n    },\r\n    /**\r\n     * createElement - 根据html字符串创建dom\r\n     * @param htmlStr - string\r\n     * @return {Element}\r\n     */\r\n    createElement: function (htmlStr) {\r\n        var el = document.createElement('div');\r\n        el.innerHTML = htmlStr;\r\n        return el.firstElementChild;\r\n    },\r\n    /**\r\n     * getTopDom - 已target为开始向上查找元素\r\n     * @param {HtmlElement} target\r\n     * @param {string} selector\r\n     * @return {HtmlElement}\r\n     */\r\n    getTopDom: function (target, selector) {\r\n        if (!target || !selector)\r\n            return null;\r\n        if (target.className.indexOf(selector) !== -1) {\r\n            return target;\r\n        }\r\n        var parentDom = target;\r\n        while ((parentDom = parentDom.parentNode)) {\r\n            if (parentDom.className.indexOf(selector) !== -1) {\r\n                break;\r\n            }\r\n            else if (parentDom === document.body)\r\n                break;\r\n        }\r\n        if (parentDom) {\r\n            if (parentDom === document.body) {\r\n                return null;\r\n            }\r\n            else {\r\n                return parentDom;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    },\r\n    /**\r\n     * on - 注册事件\r\n     * @param el\r\n     * @param tag\r\n     * @param type\r\n     * @param handler\r\n     * @param capture\r\n     */\r\n    on: function (el, tag, type, handler, capture) {\r\n        var _a, _b, _c;\r\n        if (capture === void 0) { capture = false; }\r\n        var value = eventListenerHandlers.get(el);\r\n        if (!value) {\r\n            value = (_a = {},\r\n                _a[tag] = (_b = {},\r\n                    _b[type] = [],\r\n                    _b),\r\n                _a);\r\n            eventListenerHandlers.set(el, value);\r\n        }\r\n        var evtObj = value[tag];\r\n        if (!evtObj) {\r\n            evtObj = (_c = {},\r\n                _c[type] = [],\r\n                _c);\r\n            value[tag] = evtObj;\r\n        }\r\n        var handlers = evtObj[type];\r\n        if (!handlers) {\r\n            handlers = [];\r\n            evtObj[type] = handlers;\r\n        }\r\n        handlers.push(handler);\r\n        el.addEventListener(type, handler, capture);\r\n    },\r\n    /**\r\n     * off\r\n     * @param el\r\n     * @param tag\r\n     * @param type\r\n     * @param handler\r\n     */\r\n    off: function (el, tag, type, handler) {\r\n        if (tag && type && handler) {\r\n            var value = eventListenerHandlers.get(el);\r\n            if (value && value[tag] && value[tag][type]) {\r\n                var index = value[tag][type].indexOf(handler);\r\n                if (index !== -1) {\r\n                    value[tag][type].splice(index, 1);\r\n                }\r\n                // @ts-ignore\r\n                el.removeEventListener(type, handler);\r\n            }\r\n        }\r\n        else if (tag && type && !handler) {\r\n            var value = eventListenerHandlers.get(el);\r\n            if (value && value[tag] && value[tag][type]) {\r\n                value[tag][type].forEach(function (h) {\r\n                    el.removeEventListener(type, h);\r\n                });\r\n                value[tag][type] = [];\r\n            }\r\n        }\r\n        else if (tag && !type && !handler) {\r\n            var value = eventListenerHandlers.get(el);\r\n            if (value && value[tag]) {\r\n                var _loop_1 = function (t) {\r\n                    var h = value[tag][t];\r\n                    h.forEach(function (ih) {\r\n                        el.removeEventListener(t, ih);\r\n                    });\r\n                    value[tag][t] = [];\r\n                };\r\n                for (var t in value[tag]) {\r\n                    _loop_1(t);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    /**\r\n     * addClass\r\n     * @param {HTMLElement} el\r\n     * @param {String} classes\r\n     */\r\n    addClass: function (el, classes) {\r\n        if (classes === void 0) { classes = ''; }\r\n        var classNames = classes.split(' ');\r\n        for (var i = 0; i < classNames.length; i++) {\r\n            el.classList.add(classNames[i]);\r\n        }\r\n    },\r\n    /**\r\n     * removeClass\r\n     * @param {HTMLElement} el\r\n     * @param {String} classes\r\n     */\r\n    removeClass: function (el, classes) {\r\n        if (classes === void 0) { classes = ''; }\r\n        var classNames = classes.split(' ');\r\n        for (var i = 0; i < classNames.length; i++) {\r\n            el.classList.remove(classNames[i]);\r\n        }\r\n    },\r\n    /**\r\n     * hasClass\r\n     * @param {HTMLElement} el\r\n     * @param {String} className\r\n     * @return {Boolean}\r\n     */\r\n    hasClass: function (el, className) {\r\n        return el.classList.contains(className);\r\n    },\r\n    /**\r\n     * DOM没有提供insertAfter()方法\r\n     * @param {HtmlElement} newElement\r\n     * @param {HtmlElement} targetElement\r\n     */\r\n    insertAfter: function (newElement, targetElement) {\r\n        var parent = targetElement.parentNode;\r\n        if (parent.lastChild === targetElement) {\r\n            // 如果最后的节点是目标元素，则直接添加。因为默认是最后\r\n            parent.appendChild(newElement);\r\n        }\r\n        else {\r\n            parent.insertBefore(newElement, targetElement.nextSibling);\r\n            // 如果不是，则插入在目标元素的下一个兄弟节点 的前面。也就是目标元素的后面\r\n        }\r\n    },\r\n    /**\r\n     * prepend\r\n     * @param {HTMLElement} - el\r\n     * @param {HTMLElement | String} - children\r\n     */\r\n    prepend: function (el, children) {\r\n        var childrenEl;\r\n        if (children instanceof String) {\r\n            // @ts-ignore\r\n            childrenEl = this.createElement(children);\r\n        }\r\n        else {\r\n            childrenEl = children;\r\n        }\r\n        var firstEl = el.firstChild;\r\n        el.insertBefore(childrenEl, firstEl);\r\n    },\r\n    /**\r\n     * remove\r\n     * @param {HTMLElement} - el\r\n     */\r\n    remove: function (el) {\r\n        el.parentNode.removeChild(el);\r\n    },\r\n    /**\r\n     * getParentElementByTag\r\n     * @param {HtmlElement} el\r\n     * @param {string} tag\r\n     * @return {HtmlElement}\r\n     */\r\n    getParentElementByTag: function (el, tag) {\r\n        if (!tag)\r\n            return null;\r\n        var element;\r\n        var parent = el;\r\n        var popup = function () {\r\n            parent = parent.parentElement;\r\n            if (!parent)\r\n                return null;\r\n            var tagParent = parent.tagName.toLocaleLowerCase();\r\n            if (tagParent === tag) {\r\n                element = parent;\r\n            }\r\n            else if (tagParent === 'body') {\r\n                element = null;\r\n            }\r\n            else {\r\n                popup();\r\n            }\r\n        };\r\n        popup();\r\n        return element;\r\n    },\r\n    /**\r\n     * children\r\n     * @param {HTMLElement} el\r\n     * @param {string} selector\r\n     */\r\n    children: function (el, selector) {\r\n        var elements = Array.prototype.filter.call(el.children, function (t) {\r\n            return t.nodeType === 1;\r\n        });\r\n        return elements.filter(function (t) {\r\n            return t.classList.contains(selector);\r\n        });\r\n    },\r\n    /**\r\n     * isTouch\r\n     * @return {boolean}\r\n     */\r\n    isTouch: function () {\r\n        return 'ontouchend' in document;\r\n    },\r\n    /**\r\n     * objectToDataSet\r\n     * @param {Object} - obj\r\n     * @param {HTMLElement} - dom\r\n     */\r\n    objectToDataSet: function (obj, dom) {\r\n        for (var p in obj) {\r\n            dom.dataset[p] = obj[p];\r\n        }\r\n    },\r\n    /**\r\n     * dataSetToObj\r\n     * @param {HTMLElement} - dom\r\n     * @returns {Object}\r\n     */\r\n    dataSetToObject: function (dom) {\r\n        var obj = {};\r\n        for (var p in dom.dataset) {\r\n            obj[p] = dom.dataset[p];\r\n        }\r\n        return obj;\r\n    },\r\n    /**\r\n     * getPageLeft - 获取指定元素距离视口的left\r\n     * @param {HTMLElement} - el\r\n     * @return {SelectOptions}\r\n     */\r\n    getPageLeft: function (el) {\r\n        var left = el.offsetLeft;\r\n        var offsetParent = el.offsetParent;\r\n        do {\r\n            // @ts-ignore\r\n            left += offsetParent.offsetLeft;\r\n        } while ((offsetParent = offsetParent.offsetParent));\r\n        return left;\r\n    },\r\n    /**\r\n     * getPageTop - 获取指定元素距离视口的top\r\n     * @param {HTMLElement} - el\r\n     * @return {SelectOptions}\r\n     */\r\n    getPageTop: function (el) {\r\n        var top = el.offsetTop;\r\n        var offsetParent = el.offsetParent;\r\n        do {\r\n            // @ts-ignore\r\n            top += offsetParent.offsetTop;\r\n        } while ((offsetParent = offsetParent.offsetParent));\r\n        return top;\r\n    },\r\n    /**\r\n     * getPageRect - 获取元素距离视口的Rect\r\n     * @param {HTMLElement} - el\r\n     * @return {{top: number, left: number}}\r\n     */\r\n    getPageRect: function (el) {\r\n        var top = el.offsetTop;\r\n        var left = el.offsetLeft;\r\n        var offsetParent = el.offsetParent;\r\n        do {\r\n            // @ts-ignore\r\n            top += offsetParent.offsetTop;\r\n            // @ts-ignore\r\n            left += offsetParent.offsetLeft;\r\n        } while ((offsetParent = offsetParent.offsetParent));\r\n        return {\r\n            top: top,\r\n            bottom: top + el.offsetHeight,\r\n            left: left,\r\n            right: left + el.offsetWidth,\r\n        };\r\n    },\r\n    /**\r\n     * isIframeEmbed - 是否是iframe嵌入\r\n     * @return {boolean}\r\n     */\r\n    isIframeEmbed: function () {\r\n        return window.top && window.top !== window;\r\n    },\r\n    /**--------------------------dom-end-------------------------**/\r\n    /**--------------------------math-start----------------------**/\r\n    /**\r\n     * toPoint - 百分数转化为小数\r\n     * @param percent\r\n     */\r\n    toPoint: function (percent) {\r\n        var str = percent.replace('%', '');\r\n        // @ts-ignore\r\n        return str / 100;\r\n    },\r\n    /**\r\n     * point - 小数转化为百分数\r\n     * @param point\r\n     */\r\n    toPercent: function (point) {\r\n        var str = Number(point * 100).toFixed(1);\r\n        str += '%';\r\n        return str;\r\n    },\r\n    /**\r\n     * straightLineIntersection - 计算两个直线的交点\r\n     * @param p1\r\n     * @param p2\r\n     * @param p3\r\n     * @param p4\r\n     */\r\n    straightLineIntersection: function (p1, p2, p3, p4) {\r\n        var x1 = p1.x, y1 = p1.y;\r\n        var x2 = p2.x, y2 = p2.y;\r\n        var x3 = p3.x, y3 = p3.y;\r\n        var x4 = p4.x, y4 = p4.y;\r\n        return {\r\n            x: ((x3 - x4) * (x2 * y1 - x1 * y2) - (x1 - x2) * (x4 * y3 - x3 * y4)) /\r\n                ((x3 - x4) * (y1 - y2) - (x1 - x2) * (y3 - y4)),\r\n            y: ((y3 - y4) * (y2 * x1 - y1 * x2) - (y1 - y2) * (y4 * x3 - y3 * x4)) /\r\n                ((y3 - y4) * (x1 - x2) - (y1 - y2) * (x3 - x4)),\r\n        };\r\n    },\r\n    /**--------------------------math-end------------------------**/\r\n    /**--------------------------color-start----------------------**/\r\n    /**\r\n     * rgb - rgb颜色随机\r\n     */\r\n    rgb: function () {\r\n        // rgb颜色随机\r\n        var r = Math.floor(Math.random() * 256);\r\n        var g = Math.floor(Math.random() * 256);\r\n        var b = Math.floor(Math.random() * 256);\r\n        return \"(\" + r + \",\" + g + \",\" + b + \")\";\r\n    },\r\n    /**\r\n     * color16 - 十六进制颜色随机\r\n     */\r\n    color16: function () {\r\n        // 十六进制颜色随机\r\n        var r = Math.floor(Math.random() * 256);\r\n        var g = Math.floor(Math.random() * 256);\r\n        var b = Math.floor(Math.random() * 256);\r\n        return \"#\" + r.toString(16) + g.toString(16) + b.toString(16);\r\n    },\r\n    /**--------------------------color-end----------------------**/\r\n    /**\r\n     * 函数节流\r\n     */\r\n    /**\r\n     * getLang\r\n     * @return {String}\r\n     */\r\n    getLang: function () {\r\n        var language = this.getCookie('lang') || Preferences.getStringByLocal('language');\r\n        if (!language) {\r\n            Preferences.putStringByLocal('language', 'zh_CN');\r\n            language = 'zh_CN';\r\n        }\r\n        return language;\r\n    },\r\n    /**\r\n     * setLang\r\n     * @param lang\r\n     */\r\n    setLang: function (lang) {\r\n        if (lang === void 0) { lang = 'zh_CN'; }\r\n        Preferences.putStringByLocal('language', lang);\r\n    },\r\n    /**\r\n     * getDatePickerFormat\r\n     * @return {string}\r\n     */\r\n    getDatePickerFormat: function () {\r\n        var lang = this.getLang();\r\n        if (lang === 'zh_CN') {\r\n            return 'YYYY-MM-DD';\r\n        }\r\n        else {\r\n            return 'DD-MM-YYYY';\r\n        }\r\n    },\r\n    /**\r\n     * 401 casUrl\r\n     * @param baseUrl\r\n     * @param enterUrl\r\n     * @return {string}\r\n     */\r\n    casUrl: function (_a) {\r\n        var baseUrl = _a.baseUrl, enterUrl = _a.enterUrl;\r\n        var language = this.getLang();\r\n        var languageParam = language ? \"&locale=\" + language : '';\r\n        return baseUrl + \"/gotoLogin?backUrl=\" + enterUrl + languageParam;\r\n    },\r\n    /**\r\n     * casLogoutUrl\r\n     * @param {String} - baseUrl\r\n     * @param {String} - enterUrl\r\n     * @param {String} - params\r\n     * @return {string}\r\n     */\r\n    casLogoutUrl: function (_a) {\r\n        var baseUrl = _a.baseUrl, enterUrl = _a.enterUrl, _b = _a.params, params = _b === void 0 ? '' : _b;\r\n        return baseUrl + \"/logout?service=\" + enterUrl + params;\r\n    },\r\n};\r\n"],"names":["Preferences","eventListenerHandlers","Map","SPECIAL_SYMBOL","PATH_SYMBOLS","isEmpty","value","undefined","isNumber","val","this","isObject","isArray","isFunction","isBoolean","toLowerCase","isString","isSymbol","isPrimitive","obj","Array","Function","Object","isRef","chainCallAssignment","_a","chainStr","chain","split","target","i","length","property","getObjectByChainStr","toCamelCase","str","toUpperCase","result","map","item","charAt","substring","join","isKebabCase","name","test","isPascalCase","pascalCaseToKebabCase","replace","startsWith","execExpression","context","expressionStr","data","argv","parameters","p","push","eval","getCookie","arrCookie","document","cookie","arr","trim","noop","generatorRandom","lowerValue","upperValue","choices","Math","floor","random","uuid","s","hexDigits","substr","getPropertyVisitPathStr","key","visitPath","parent","reverse","endsWith","convertBase64UrlToBlob","bytes","window","atob","ab","ArrayBuffer","ia","Uint8Array","charCodeAt","Blob","type","isTextNode","el","nodeType","Node","TEXT_NODE","isCommentNode","COMMENT_NODE","isElementNode","ELEMENT_NODE","createElement","htmlStr","innerHTML","firstElementChild","getTopDom","selector","className","indexOf","parentDom","parentNode","body","on","tag","handler","capture","_b","get","set","evtObj","_c","handlers","addEventListener","off","index","splice","removeEventListener","forEach","h","t","ih","_loop_1","addClass","classes","classNames","classList","add","removeClass","remove","hasClass","contains","insertAfter","newElement","targetElement","lastChild","appendChild","insertBefore","nextSibling","prepend","children","childrenEl","String","firstEl","firstChild","removeChild","getParentElementByTag","element","popup","parentElement","tagParent","tagName","toLocaleLowerCase","prototype","filter","call","isTouch","objectToDataSet","dom","dataset","dataSetToObject","getPageLeft","left","offsetLeft","offsetParent","getPageTop","top","offsetTop","getPageRect","bottom","offsetHeight","right","offsetWidth","isIframeEmbed","toPoint","percent","toPercent","point","Number","toFixed","straightLineIntersection","p1","p2","p3","p4","x1","x","y1","y","x2","y2","x3","y3","x4","y4","rgb","color16","r","g","b","toString","getLang","language","getStringByLocal","putStringByLocal","setLang","lang","getDatePickerFormat","casUrl","baseUrl","enterUrl","casLogoutUrl","params"],"mappings":"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"}