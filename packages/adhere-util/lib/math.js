export default{toPoint:function(t){t=t.replace("%","");return parseInt(t)/100},toPercent:function(t){t=Number(100*t).toFixed(1);return t+="%"},straightLineIntersection:function(t,n,e,i){var r=t.x,t=t.y,a=n.x,n=n.y,o=e.x,e=e.y,c=i.x,i=i.y;return{x:((o-c)*(a*t-r*n)-(r-a)*(c*e-o*i))/((o-c)*(t-n)-(r-a)*(e-i)),y:((e-i)*(n*r-t*a)-(t-n)*(i*o-e*c))/((e-i)*(r-a)-(t-n)*(o-c))}},getA3Point:function(t){var n=t.p1,e=t.p2,t=t.distance,i=n.x,n=n.y,r=e.x,e=e.y,a=Math.sqrt(Math.pow(r-i,2)+Math.pow(e-n,2));return{x:t/a*(r-i)+i,y:t/a*(e-n)+n}},getDistanceByBetweenPoint:function(t){var n=t.p1,t=t.p2,e=n.x,n=n.y,i=t.x,t=t.y;return Math.sqrt(Math.pow(i-e,2)+Math.pow(t-n,2))},clientToCtxPoint:function(t){var n=t.event,t=t.rect,e=n.clientX,n=n.clientY;return{x:e-t.left,y:n-t.top}},isPointInCircle:function(t,n){var e=t.x-n.center.x,t=t.y-n.center.y;return!(e*e+t*t>n.radius*n.radius)},isPointInRect:function(t,n){return t.x>=n.x&&t.x<=n.x+n.width-1&&t.y>=n.y&&t.y<=n.y+n.height-1},getCanvasTextInGemX:function(t,n,e){var i=e.leftTop.x;return(e.rightBottom.x-i-t.measureText(n).width)/2},midpoint:function(t,n){return{x:(t.x+n.x)/2,y:(t.y+n.y)/2}},slope:function(t,n,e){if(void 0===e&&(e="geographic"),t.x!==n.x)return t.y===n.y?0:(n=(n.y-t.y)/(n.x-t.x),"geographic"===e?-n:n)},slopToRadian:function(t,n,e){void 0===e&&(e="geographic");var i=this.slope(t,n);return 0===i?t.x<n.x?this.angleToRadian(0):this.angleToRadian(180):void 0===i?"cartesian"===e?t.y<=n.y?this.angleToRadian(90):this.angleToRadian(-90):t.y<=n.y?this.angleToRadian(-90):this.angleToRadian(90):(i=n.y-t.y,n=n.x-t.x,t=Math.atan2(i,n),"cartesian"===e?t:-t)},slopToAngle:function(t,n,e){t=this.slopToRadian(t,n,e=void 0===e?"geographic":e);return this.radianToAngle(t)},radianToAngle:function(t){return 180*t/Math.PI},angleToRadian:function(t){return t*Math.PI/180},distance:function(t,n){return t/new Map([["kilometer",1e3]]).get(n)},getCirclePoint:function(t,n,e){return{x:t.x+Math.cos(e)*n,y:t.y+Math.sin(e)*n}},getOvalPoint:function(t,n,e,i){return{x:t.x+Math.cos(i)*n,y:t.y+Math.sin(i)*e}},pxToRemNumber:function(t,n){return t/n},pxToRem:function(t,n,e){return!e||e.isUseMedia?"".concat(this.pxToRemNumber(t,n),"rem"):"".concat(t,"px")}};
//# sourceMappingURL=math.js.map
