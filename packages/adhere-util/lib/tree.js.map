{"version":3,"file":"tree.js","sources":["tree.js"],"sourcesContent":["\"use strict\";\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __rest = (this && this.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = {\r\n    /**\r\n     * treeToArray\r\n     * @description tree数据转换成Array\r\n     * @param treeData\r\n     * @param config\r\n     */\r\n    treeToArray: function (treeData, config) {\r\n        // key: string;\r\n        // title: string;\r\n        // isLeaf: boolean;\r\n        // children?: IAntdTreeNode[];\r\n        // properties?: any;\r\n        var parentIdAttr = config.parentIdAttr, rootParentId = config.rootParentId;\r\n        var result = [];\r\n        function loop(context, data, parentId) {\r\n            var _a;\r\n            for (var i = 0; i < data.length; i++) {\r\n                var item = data[i];\r\n                result.push(__assign(__assign({}, item.properties), (_a = {}, _a[parentIdAttr] = parentId, _a)));\r\n                if (item.children) {\r\n                    loop(context, item.children, item.key);\r\n                }\r\n            }\r\n        }\r\n        loop(result, treeData, rootParentId);\r\n        return result;\r\n    },\r\n    /**\r\n     * arrayToAntdTree - array转换成Tree\r\n     * @param arr\r\n     * @param keyAttr - id的属性\r\n     * @param titleAttr - title的属性\r\n     * @param parentIdAttr - parentId的属性\r\n     * @param rootParentId - root的parentId值\r\n     */\r\n    arrayToAntdTree: function (arr, _a) {\r\n        var keyAttr = _a.keyAttr, titleAttr = _a.titleAttr, rootParentId = _a.rootParentId, parentIdAttr = _a.parentIdAttr;\r\n        /**\r\n         * findNodesByParentId\r\n         * @param arr\r\n         * @param parentId\r\n         * @return {*}\r\n         */\r\n        function findNodesByParentId(arr, parentId) {\r\n            return arr\r\n                .filter(function (item) { return item[parentIdAttr] == parentId; })\r\n                .map(function (item) { return (__assign(__assign({}, item), { title: item[titleAttr], key: item[keyAttr], children: [], properties: __assign({}, item), isLeaf: true })); });\r\n        }\r\n        /**\r\n         * Recursion\r\n         * @constructor\r\n         */\r\n        function Recursion(node) {\r\n            node.children = findNodesByParentId(arr, node.properties[keyAttr]);\r\n            node.isLeaf = !node.children.length;\r\n            if (node.isLeaf) {\r\n                delete node.children;\r\n            }\r\n            (node.children || []).forEach(function (node) {\r\n                Recursion(node);\r\n            });\r\n        }\r\n        var roots = findNodesByParentId(arr, rootParentId);\r\n        roots.forEach(function (root) {\r\n            Recursion(root);\r\n        });\r\n        return roots;\r\n    },\r\n    /**\r\n     * arrayToAntdTreeSelect - array转换成TreeSelect\r\n     * @param arr\r\n     * @param keyAttr - id的属性\r\n     * @param titleAttr - title的属性\r\n     * @param parentIdAttr - parentId的属性\r\n     * @param rootParentId - root的parentId值\r\n     */\r\n    arrayToAntdTreeSelect: function (arr, _a) {\r\n        var keyAttr = _a.keyAttr, titleAttr = _a.titleAttr, rootParentId = _a.rootParentId, parentIdAttr = _a.parentIdAttr;\r\n        /**\r\n         * findNodesByParentId\r\n         * @param arr\r\n         * @param parentId\r\n         * @return {*}\r\n         */\r\n        function findNodesByParentId(arr, parentId) {\r\n            return arr\r\n                .filter(function (item) { return item[parentIdAttr] == parentId; })\r\n                .map(function (item) { return (__assign(__assign({}, item), { title: item[titleAttr], key: item[keyAttr], value: item[keyAttr], children: [], properties: __assign({}, item), isLeaf: true })); });\r\n        }\r\n        /**\r\n         * Recursion\r\n         * @constructor\r\n         */\r\n        function Recursion(node) {\r\n            node.children = findNodesByParentId(arr, node.properties[keyAttr]);\r\n            node.isLeaf = !node.children.length;\r\n            if (node.isLeaf) {\r\n                delete node.children;\r\n            }\r\n            (node.children || []).forEach(function (node) {\r\n                Recursion(node);\r\n            });\r\n        }\r\n        var roots = findNodesByParentId(arr, rootParentId);\r\n        roots.forEach(function (root) {\r\n            Recursion(root);\r\n        });\r\n        return roots;\r\n    },\r\n    /**\r\n     * getAncestor - 获取祖先\r\n     * @param data\r\n     * @param node\r\n     * @param config\r\n     */\r\n    getAncestor: function (data, node, config) {\r\n        var result = [];\r\n        var curNode = node;\r\n        while (curNode && curNode[config.parentIdAttr] != config.rootParentId) {\r\n            var item = data.find(function (t) { return t[config.keyAttr] === curNode[config.parentIdAttr]; });\r\n            if (item) {\r\n                result.push(item);\r\n            }\r\n            curNode = item;\r\n        }\r\n        return result;\r\n    },\r\n    /**\r\n     * getDescendants\r\n     * @description - 获取子孙\r\n     */\r\n    getDescendants: function (data, node, config) {\r\n        function loop(n) {\r\n            var children = data.filter(function (t) { return t[config.parentIdAttr] === n[config.keyAttr]; });\r\n            children.forEach(function (t) {\r\n                result.push(t);\r\n                loop(t);\r\n            });\r\n        }\r\n        var result = [];\r\n        loop(node);\r\n        return result;\r\n    },\r\n    /**\r\n     * filterTree - 本地过滤tree\r\n     * @param data\r\n     * @param kw\r\n     * @param config\r\n     */\r\n    filterTree: function (data, kw, config) {\r\n        var _this = this;\r\n        var filterAttr = config.filterAttr, arrayToAntdTreeConfig = __rest(config, [\"filterAttr\"]);\r\n        if (kw) {\r\n            var set_1 = new Set();\r\n            var arr = data.filter(function (node) {\r\n                return node[config.filterAttr].indexOf(kw) !== -1;\r\n            });\r\n            arr.forEach(function (t) {\r\n                var tops = _this.getAncestor(data, t, config);\r\n                var tArr = __spreadArrays((tops || [])).map(function (item) { return item[config.keyAttr]; });\r\n                // @ts-ignore\r\n                set_1 = new Set(__spreadArrays(set_1, tArr));\r\n            });\r\n            // @ts-ignore\r\n            set_1 = new Set(__spreadArrays(set_1, arr.map(function (t) { return t[config.keyAttr]; })));\r\n            return this.arrayToAntdTree(\r\n            // @ts-ignore\r\n            __spreadArrays(set_1).map(function (t) { return data.find(function (item) { return item[config.keyAttr] === t; }); }), arrayToAntdTreeConfig);\r\n        }\r\n        else {\r\n            return this.arrayToAntdTree(data, arrayToAntdTreeConfig);\r\n        }\r\n    },\r\n    /**\r\n     * findNodeByKey\r\n     * @description - 根据keyAttr查找结点\r\n     * @param treeData\r\n     * @param val\r\n     * @param config\r\n     */\r\n    findNodeByKey: function (treeData, val, config) {\r\n        function findLoop(data) {\r\n            var result;\r\n            for (var i = 0; i < data.length; i++) {\r\n                if (data[i][config.keyAttr] === val) {\r\n                    result = data[i];\r\n                    break;\r\n                }\r\n                else {\r\n                    // @ts-ignore\r\n                    if ('children' in data[i] && Array.isArray(data[i].children) && data[i].children.length) {\r\n                        // @ts-ignore\r\n                        result = findLoop(data[i].children);\r\n                        if (result)\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            // @ts-ignore\r\n            return result;\r\n        }\r\n        return findLoop(treeData);\r\n    },\r\n};\r\n"],"names":["__assign","this","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__spreadArrays","il","r","Array","k","a","j","jl","defineProperty","exports","value","default","treeToArray","treeData","config","parentIdAttr","rootParentId","result","loop","context","data","parentId","_a","item","push","properties","children","key","arrayToAntdTree","arr","keyAttr","titleAttr","findNodesByParentId","filter","map","title","isLeaf","roots","forEach","root","Recursion","node","arrayToAntdTreeSelect","getAncestor","curNode","find","getDescendants","filterTree","kw","_this","arrayToAntdTreeConfig","filterAttr","set_1","Set","tops","tArr","findNodeByKey","val","findLoop","isArray"],"mappings":"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"}