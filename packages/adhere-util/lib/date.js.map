{"version":3,"file":"date.js","sources":["date.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DateUtil = {\r\n    /**\r\n     * toTimestampByTimeZone\r\n     * @description 根据format字符串和时区获取时间错\r\n     * @param str format的str YYYY-MM-DD HH:mm:ss\r\n     * @param timezone utc的字符串 11 ~ 0 ~ -12\r\n     * @return number timestamp 时间错\r\n     */\r\n    toTimestampByFormatStrAndTimeZone: function (str, timezone) {\r\n        var datetime = Date.parse(str);\r\n        return Math.ceil(datetime / 1000) - (parseInt(timezone, 10) - DateUtil.getTimezone()) * 3600;\r\n    },\r\n    /**\r\n     * toStrByTimestampAndTimeZone\r\n     * @description 通过时间错和时区获取format时间字符串\r\n     * @param _timestamp 时间错的字符串\r\n     * @param timezone utc的字符串 11 ~ 0 ~ -12\r\n     * @return YYYY-MM-DD HH:mm:ss\r\n     */\r\n    toStrByTimestampAndTimeZone: function (_timestamp, timezone) {\r\n        var timestamp = (parseInt(_timestamp, 10) + (parseInt(timezone, 10) - DateUtil.getTimezone()) * 3600) *\r\n            1000, dt = new Date(timestamp);\r\n        dt.setMinutes(dt.getMinutes() - dt.getTimezoneOffset()); // 修正时区偏移\r\n        return dt.toISOString().slice(0, -5).replace(/[T]/g, ' ');\r\n    },\r\n    /**\r\n     * getCurrentTimestamp\r\n     * @description 获取当前的时间错\r\n     * @return number\r\n     */\r\n    getCurrentTimestamp: function () {\r\n        return Math.ceil(new Date().getTime() / 1000);\r\n    },\r\n    /**\r\n     * getTimezone\r\n     * @description 获取当前Timezone(时区) 11 ~ 0 ~ -12\r\n     * @return number\r\n     */\r\n    getTimezone: function () {\r\n        return -Math.floor(\r\n        //获取本地计算机上的时间与世界协调时间（UTC）之间的分钟差\r\n        new Date().getTimezoneOffset() / 60);\r\n    },\r\n};\r\nexports.default = DateUtil;\r\n"],"names":["Object","defineProperty","exports","value","DateUtil","toTimestampByFormatStrAndTimeZone","str","timezone","datetime","Date","parse","Math","ceil","parseInt","getTimezone","toStrByTimestampAndTimeZone","_timestamp","timestamp","dt","setMinutes","getMinutes","getTimezoneOffset","toISOString","slice","replace","getCurrentTimestamp","getTime","floor","default"],"mappings":"AAAA,aACAA,OAAOC,eAAeC,QAAS,aAAc,CAAEC,MAAO,CAAA,CAAK,CAAC,EAC5D,IAAIC,SAAW,CAQXC,kCAAmC,SAAUC,EAAKC,GAC1CC,EAAWC,KAAKC,MAAMJ,CAAG,EAC7B,OAAOK,KAAKC,KAAKJ,EAAW,GAAI,EAAwD,MAAnDK,SAASN,EAAU,EAAE,EAAIH,SAASU,YAAY,EACvF,EAQAC,4BAA6B,SAAUC,EAAYT,GAC3CU,EACA,KADaJ,SAASG,EAAY,EAAE,EAAwD,MAAnDH,SAASN,EAAU,EAAE,EAAIH,SAASU,YAAY,IACjFI,EAAK,IAAIT,KAAKQ,CAAS,EAEjC,OADAC,EAAGC,WAAWD,EAAGE,WAAW,EAAIF,EAAGG,kBAAkB,CAAC,EAC/CH,EAAGI,YAAY,EAAEC,MAAM,EAAG,CAAC,CAAC,EAAEC,QAAQ,OAAQ,GAAG,CAC5D,EAMAC,oBAAqB,WACjB,OAAOd,KAAKC,MAAK,IAAIH,MAAOiB,QAAQ,EAAI,GAAI,CAChD,EAMAZ,YAAa,WACT,MAAO,CAACH,KAAKgB,OAEb,IAAIlB,MAAOY,kBAAkB,EAAI,EAAE,CACvC,CACJ,EACAnB,QAAQ0B,QAAUxB"}