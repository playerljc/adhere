{"version":3,"file":"base.js","sources":["base.js"],"sourcesContent":["// 特殊符号\nvar SPECIAL_SYMBOL = '__';\n// 记录对象路径的变量\nvar PATH_SYMBOLS = [\n    \"\".concat(SPECIAL_SYMBOL, \"parentName\").concat(SPECIAL_SYMBOL),\n    \"\".concat(SPECIAL_SYMBOL, \"parent\").concat(SPECIAL_SYMBOL),\n];\nexport default {\n    /**----------------------------基本---------------------------**/\n    /**\n     * isEmpty - 对象是否为空\n     * @param value\n     */\n    isEmpty: function (value) {\n        return value === null || value === '' || value === undefined;\n    },\n    /**\n     * isNumber - 判断是否是number\n     * @param val\n     * @return {boolean}\n     */\n    isNumber: function (val) {\n        return (!this.isObject(val) && !this.isArray(val) && !this.isFunction(val) && typeof val === 'number');\n    },\n    /**\n     * isBoolean - 判断是否是boolean\n     * @param val\n     * @return {boolean}\n     */\n    isBoolean: function (val) {\n        return (typeof val).toLowerCase() === 'boolean';\n    },\n    /**\n     * isString - 判断是否是string\n     * @param val\n     * @return {boolean}\n     */\n    isString: function (val) {\n        return (typeof val).toLowerCase() === 'string';\n    },\n    /**\n     * isSymbol - 是否是符号类型\n     * @param val\n     * @return boolean\n     */\n    isSymbol: function (val) {\n        return (typeof val).toLowerCase() === 'symbol';\n    },\n    /**\n     * isPrimitive - 是否是基本类型\n     * @param val\n     */\n    isPrimitive: function (val) {\n        return this.isBoolean(val) || this.isNumber(val) || this.isString(val) || this.isSymbol(val);\n    },\n    /**\n     * isArray - 判断数组\n     * @param obj\n     * @return {boolean}\n     */\n    isArray: function (obj) {\n        return Array.isArray(obj);\n    },\n    /**\n     * isFunction - 判断函数\n     * @param obj\n     * @return {boolean}\n     */\n    isFunction: function (obj) {\n        return obj instanceof Function;\n    },\n    /**\n     * isObject - 是否是对象\n     * @param obj\n     * @return {boolean}\n     */\n    isObject: function (obj) {\n        return obj instanceof Object && !Array.isArray(obj) && !(obj instanceof Function);\n    },\n    /**\n     * isRef - 是否是引用类型\n     * @param obj\n     */\n    isRef: function (obj) {\n        return this.isArray(obj) || this.isObject(obj);\n    },\n    /**\n     * chainCallAssignment - 对象的链式赋值\n     * obj.a.b.c.d.x.x.x = value\n     * @param obj Object - 赋值的对象\n     * @param chainStr string - 属性链式表达式 a.b.c\n     * @param value any - 要复值的值\n     */\n    chainCallAssignment: function (_a) {\n        var obj = _a.obj, chainStr = _a.chainStr, value = _a.value;\n        if (!this.isObject(obj) ||\n            !this.isString(chainStr) ||\n            this.isEmpty(chainStr) ||\n            this.isEmpty(obj))\n            return false;\n        var chain = chainStr.split('.');\n        // const obj = {};\n        // a.b.c\n        // const item = obj['a']\n        var target = obj;\n        for (var i = 0; i < chain.length; i++) {\n            var property = chain[i];\n            if (i < chain.length - 1) {\n                target = target[property];\n            }\n            else {\n                target[property] = value;\n            }\n        }\n    },\n    /**\n     * getObjectByChainStr - 通过chainStr获取对象\n     * obj.a.b.c.d.x.x.x = value\n     * @param obj Object - 赋值的对象\n     * @param chainStr string - 属性链式表达式 a.b.c\n     * @return Object\n     */\n    getObjectByChainStr: function (_a) {\n        var obj = _a.obj, chainStr = _a.chainStr;\n        if (!this.isObject(obj) ||\n            !this.isString(chainStr) ||\n            this.isEmpty(chainStr) ||\n            this.isEmpty(obj))\n            return obj;\n        var chain = chainStr.split('.');\n        // const obj = {};\n        // a.b.c\n        // const item = obj['a']\n        var target = obj;\n        for (var i = 0; i < chain.length; i++) {\n            target = target[chain[i]];\n        }\n        return target;\n    },\n    /**\n     * toCamelCase - 用连接符链接的字符串转换成驼峰写法\n     * 例：abc-def AbcDef\n     * @param str - string 用连接符节点的字符串\n     * @param split - string 分割的字符\n     * @param toUpperCase - boolean 是否转换成大写\n     * @return {String}\n     */\n    toCamelCase: function (str, split, toUpperCase) {\n        if (split === void 0) { split = '_'; }\n        if (toUpperCase === void 0) { toUpperCase = false; }\n        var result = str\n            .split(split)\n            .map(function (item) { return item.charAt(0).toUpperCase() + item.substring(1); })\n            .join('');\n        return !toUpperCase ? \"\".concat(result.charAt(0).toLowerCase()).concat(result.substring(1)) : result;\n    },\n    /**\n     * isKebabCase - 是否是烤肉串形式的名字\n     * @param name - string 名称\n     * @return boolean\n     */\n    isKebabCase: function (name) {\n        return /^([a-z][a-z0-9]*)(-[a-z0-9]+)*$/.test(name);\n    },\n    /**\n     * isPascalCase - 是否是驼峰形式的名字\n     * @param name - string 名称\n     * @return boolean\n     */\n    isPascalCase: function (name) {\n        return /^[A-Z][a-z]+(?:[A-Z][a-z]+)*$/.test(name);\n    },\n    /**\n     * pascalCaseToKebabCase 驼峰转xxx-xxx-xxx\n     * @param _str - string pascalCase的字符串\n     * @param symbol 分隔符\n     * @return {string}\n     */\n    pascalCaseToKebabCase: function (_str, symbol) {\n        if (symbol === void 0) { symbol = '-'; }\n        // const result = name.replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g, '$1-$2');\n        // return (result.startsWith('-') ? result.substring(1) : result).toLowerCase();\n        var cells = _str.match(/([A-Z]+(?=[A-Z]|$))|([A-Z]?[^A-Z]+)/g) || [];\n        return cells.map(function (c) { return c.toLowerCase(); }).join(symbol);\n    },\n    /**\n     * execExpression - 执行表达式\n     * @param context - {Object} 执行的上下文\n     * @param expressionStr - {String} 表达式\n     * @param data\n     * @return {any}\n     */\n    execExpression: function (context, expressionStr, data) {\n        // 实参列表，调用函数传递的参数\n        var argv = [data];\n        // 形参列表，函数声明的参数列表\n        var parameters = ['context'];\n        // 迭代context\n        for (var p in context) {\n            // 拼凑其他实参\n            argv.push(context[p]);\n            // 拼凑其他形参\n            parameters.push(p);\n        }\n        // 创建函数并调用\n        return eval(\"\\n    const fun = new Function(\\n      `\".concat(parameters.join(','), \"`,\\n      `return eval(\\\"with(context){\").concat(expressionStr, \"}\\\")`,\\n    );\\n\\n    fun.apply(window, argv);\\n  \"));\n    },\n    /**\n     * getCookie\n     * @return {string}\n     * @param name\n     */\n    getCookie: function (name) {\n        if (name === void 0) { name = 'lang'; }\n        var strCookie = typeof document !== 'undefined' ? document.cookie : ''; // 获取cookie字符串\n        var arrCookie = strCookie.split(';'); // 分割\n        // 遍历匹配\n        var value = '';\n        for (var i = 0; i < arrCookie.length; i++) {\n            var arr = arrCookie[i].split('=');\n            if (arr[0].trim() === name) {\n                value = arr[1];\n                break;\n            }\n        }\n        return value;\n    },\n    /**\n     * noop - 返回一个空实现的函数\n     * @return Function\n     */\n    noop: function () {\n        return function () { };\n    },\n    /**\n     * generatorRandom - 生成随机数\n     * @param lowerValue - 最小值\n     * @param upperValue - 最大值\n     */\n    generatorRandom: function (lowerValue, upperValue) {\n        var choices = upperValue - lowerValue + 1;\n        return Math.floor(Math.random() * choices + lowerValue);\n    },\n    /**\n     * uuid - 获取uuid\n     * @return string\n     */\n    uuid: function () {\n        var s = [];\n        var hexDigits = '0123456789abcdef';\n        for (var i = 0; i < 36; i++) {\n            s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);\n        }\n        s[14] = '4'; // bits 12-15 of the time_hi_and_version field to 0010\n        s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1); // bits 6-7 of the clock_seq_hi_and_reserved to 01\n        s[8] = s[13] = s[18] = s[23] = '-';\n        return s.join('');\n    },\n    /**\n     * getPropertyVisitPathStr - 获取属性访问的完整字符串路径 a.b.c.d.e.f\n     * @param target Proxy中set的target参数\n     * @param key Proxy中set的key参数\n     * @return {string}\n     */\n    getPropertyVisitPathStr: function (target, key) {\n        // 最终的访问路径 - 先将最后一个key放入\n        var visitPath = this.isArray(target) /* && key !== 'length' */ ? [] : [key];\n        if (target[PATH_SYMBOLS[0]]) {\n            visitPath.push(target[PATH_SYMBOLS[0]]);\n        }\n        var parent = target[PATH_SYMBOLS[1]];\n        while (parent) {\n            if (parent[PATH_SYMBOLS[0]]) {\n                visitPath.push(parent[PATH_SYMBOLS[0]]);\n            }\n            parent = parent[PATH_SYMBOLS[1]];\n        }\n        // [0] c b a\n        // a b c [0]\n        // a [0]\n        visitPath.reverse();\n        var result = [];\n        for (var i = 0; i < visitPath.length; i++) {\n            var item = visitPath[i];\n            if (item.startsWith('[') && item.endsWith(']')) {\n                result[result.length - 1] = \"\".concat(result[result.length - 1]).concat(item);\n            }\n            else {\n                result.push(item);\n            }\n        }\n        return result.join('.');\n    },\n    /**\n     * convertBase64UrlToBlob - 转换base64位blob对象\n     * @return Blob\n     * @param data\n     */\n    convertBase64UrlToBlob: function (data) {\n        if (typeof window === 'undefined')\n            return null;\n        var bytes = window.atob(data.split(',')[1]); // 去掉url的头，并转换为byte\n        // 处理异常,将ascii码小于0的转换为大于0\n        var ab = new ArrayBuffer(bytes.length);\n        var ia = new Uint8Array(ab);\n        for (var i = 0; i < bytes.length; i++) {\n            ia[i] = bytes.charCodeAt(i);\n        }\n        return new Blob([ab], { type: 'image/png' });\n    },\n    /**\n     * omitObject\n     * @description - 对象排除空值\n     * @param obj\n     * @return object\n     */\n    omitObject: function (obj) {\n        // eslint-disable-next-line no-param-reassign\n        obj = obj !== null && obj !== void 0 ? obj : {};\n        var res = {};\n        var keys = Object.keys(obj);\n        keys.forEach(function (key) {\n            var value = obj[key];\n            if (![null, undefined, '', 'undefined'].includes(value)) {\n                if (typeof value === 'string') {\n                    value = value.trim();\n                }\n                res[key] = value;\n            }\n        });\n        return res;\n    },\n    /**\n     * capitalized\n     * @description 首字母大写\n     * @param str\n     */\n    capitalized: function (str) {\n        return \"\".concat(str.charAt(0).toUpperCase()).concat(str.substring(1));\n    },\n    /**\n     * lowercaseInitial\n     * @description 首字母小写\n     * @param str\n     */\n    lowercaseInitial: function (str) {\n        return \"\".concat(str.charAt(0).toLowerCase()).concat(str.substring(1));\n    },\n    /**----------------------------基本end---------------------------**/\n};\n"],"names":["SPECIAL_SYMBOL","PATH_SYMBOLS","concat","isEmpty","value","undefined","isNumber","val","this","isObject","isArray","isFunction","isBoolean","toLowerCase","isString","isSymbol","isPrimitive","obj","Array","Function","Object","isRef","chainCallAssignment","_a","chainStr","chain","split","target","i","length","property","getObjectByChainStr","toCamelCase","str","toUpperCase","result","map","item","charAt","substring","join","isKebabCase","name","test","isPascalCase","pascalCaseToKebabCase","_str","symbol","match","c","execExpression","context","expressionStr","data","argv","parameters","p","push","eval","getCookie","arrCookie","document","cookie","arr","trim","noop","generatorRandom","lowerValue","upperValue","choices","Math","floor","random","uuid","s","hexDigits","substr","getPropertyVisitPathStr","key","visitPath","parent","reverse","startsWith","endsWith","convertBase64UrlToBlob","window","bytes","atob","ab","ArrayBuffer","ia","Uint8Array","charCodeAt","Blob","type","omitObject","res","keys","forEach","includes","capitalized","lowercaseInitial"],"mappings":"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"}