{"version":3,"file":"tree.js","sources":["tree.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __rest = (this && this.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\nexport default {\r\n    /**\r\n     * treeToArray\r\n     * @description tree数据转换成Array\r\n     * @param treeData\r\n     * @param config\r\n     */\r\n    treeToArray: function (treeData, config) {\r\n        // key: string;\r\n        // title: string;\r\n        // isLeaf: boolean;\r\n        // children?: IAntdTreeNode[];\r\n        // properties?: any;\r\n        var parentIdAttr = config.parentIdAttr, rootParentId = config.rootParentId;\r\n        var result = [];\r\n        function loop(context, data, parentId) {\r\n            var _a;\r\n            for (var i = 0; i < data.length; i++) {\r\n                var item = data[i];\r\n                result.push(__assign(__assign({}, ('properties' in item ? item.properties : item)), (_a = {}, _a[parentIdAttr] = parentId, _a)));\r\n                if (item.children && Array.isArray(item.children) && item.children.length) {\r\n                    loop(context, item.children, item.key);\r\n                }\r\n            }\r\n        }\r\n        loop(result, treeData, rootParentId);\r\n        return result;\r\n    },\r\n    /**\r\n     * arrayToAntdTree - array转换成Tree\r\n     * @param arr\r\n     * @param keyAttr - id的属性\r\n     * @param titleAttr - title的属性\r\n     * @param parentIdAttr - parentId的属性\r\n     * @param rootParentId - root的parentId值\r\n     */\r\n    arrayToAntdTree: function (arr, _a) {\r\n        var keyAttr = _a.keyAttr, titleAttr = _a.titleAttr, rootParentId = _a.rootParentId, parentIdAttr = _a.parentIdAttr;\r\n        /**\r\n         * findNodesByParentId\r\n         * @param arr\r\n         * @param parentId\r\n         * @return {*}\r\n         */\r\n        // eslint-disable-next-line @typescript-eslint/no-shadow\r\n        function findNodesByParentId(arr, parentId) {\r\n            return arr\r\n                .filter(function (item) { return item[parentIdAttr] == parentId; })\r\n                .map(function (item) { return (__assign(__assign({}, item), { title: item[titleAttr], key: item[keyAttr], children: [], properties: __assign({}, item), isLeaf: true })); });\r\n        }\r\n        /**\r\n         * Recursion\r\n         * @constructor\r\n         */\r\n        function Recursion(node) {\r\n            node.children = findNodesByParentId(arr, node.properties[keyAttr]);\r\n            node.isLeaf = !node.children.length;\r\n            if (node.isLeaf) {\r\n                delete node.children;\r\n            }\r\n            // eslint-disable-next-line @typescript-eslint/no-shadow\r\n            (node.children || []).forEach(function (node) {\r\n                Recursion(node);\r\n            });\r\n        }\r\n        var roots = findNodesByParentId(arr, rootParentId);\r\n        roots.forEach(function (root) {\r\n            Recursion(root);\r\n        });\r\n        return roots;\r\n    },\r\n    /**\r\n     * arrayToAntdTreeSelect - array转换成TreeSelect\r\n     * @param arr\r\n     * @param keyAttr - id的属性\r\n     * @param titleAttr - title的属性\r\n     * @param parentIdAttr - parentId的属性\r\n     * @param rootParentId - root的parentId值\r\n     */\r\n    arrayToAntdTreeSelect: function (arr, _a) {\r\n        var keyAttr = _a.keyAttr, titleAttr = _a.titleAttr, rootParentId = _a.rootParentId, parentIdAttr = _a.parentIdAttr;\r\n        /**\r\n         * findNodesByParentId\r\n         * @param arr\r\n         * @param parentId\r\n         * @return {*}\r\n         */\r\n        // eslint-disable-next-line @typescript-eslint/no-shadow\r\n        function findNodesByParentId(arr, parentId) {\r\n            return arr\r\n                .filter(function (item) { return item[parentIdAttr] == parentId; })\r\n                .map(function (item) { return (__assign(__assign({}, item), { title: item[titleAttr], key: item[keyAttr], value: item[keyAttr], children: [], properties: __assign({}, item), isLeaf: true })); });\r\n        }\r\n        /**\r\n         * Recursion\r\n         * @constructor\r\n         */\r\n        function Recursion(node) {\r\n            node.children = findNodesByParentId(arr, node.properties[keyAttr]);\r\n            node.isLeaf = !node.children.length;\r\n            if (node.isLeaf) {\r\n                delete node.children;\r\n            }\r\n            // eslint-disable-next-line @typescript-eslint/no-shadow\r\n            (node.children || []).forEach(function (node) {\r\n                Recursion(node);\r\n            });\r\n        }\r\n        var roots = findNodesByParentId(arr, rootParentId);\r\n        roots.forEach(function (root) {\r\n            Recursion(root);\r\n        });\r\n        return roots;\r\n    },\r\n    /**\r\n     * getAncestor - 获取祖先\r\n     * @param data\r\n     * @param node\r\n     * @param config\r\n     */\r\n    getAncestor: function (data, node, config) {\r\n        var result = [];\r\n        var curNode = node;\r\n        while (curNode && curNode[config.parentIdAttr] != config.rootParentId) {\r\n            // eslint-disable-next-line @typescript-eslint/no-loop-func\r\n            var item = data.find(function (t) { return t[config.keyAttr] === curNode[config.parentIdAttr]; });\r\n            if (item) {\r\n                result.push(item);\r\n            }\r\n            curNode = item;\r\n        }\r\n        return result;\r\n    },\r\n    /**\r\n     * getDescendants\r\n     * @description - 获取子孙\r\n     */\r\n    getDescendants: function (data, node, config) {\r\n        function loop(n) {\r\n            var children = data.filter(function (t) { return t[config.parentIdAttr] === n[config.keyAttr]; });\r\n            children.forEach(function (t) {\r\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\r\n                result.push(t);\r\n                loop(t);\r\n            });\r\n        }\r\n        var result = [];\r\n        loop(node);\r\n        return result;\r\n    },\r\n    /**\r\n     * filterTree - 本地过滤tree\r\n     * @param data\r\n     * @param kw\r\n     * @param config\r\n     */\r\n    filterTree: function (data, kw, config) {\r\n        var _this = this;\r\n        var filterAttr = config.filterAttr, arrayToAntdTreeConfig = __rest(config, [\"filterAttr\"]);\r\n        if (kw) {\r\n            var set_1 = new Set();\r\n            var arr = data.filter(function (node) {\r\n                return node[config.filterAttr].indexOf(kw) !== -1;\r\n            });\r\n            arr.forEach(function (t) {\r\n                var tops = _this.getAncestor(data, t, config);\r\n                var tArr = __spreadArrays((tops || [])).map(function (item) { return item[config.keyAttr]; });\r\n                set_1 = new Set(__spreadArrays(Array.from(set_1), tArr));\r\n            });\r\n            set_1 = new Set(__spreadArrays(Array.from(set_1), arr.map(function (t) { return t[config.keyAttr]; })));\r\n            return this.arrayToAntdTree(__spreadArrays(Array.from(set_1)).map(function (t) { return data.find(function (item) { return item[config.keyAttr] === t; }); }), arrayToAntdTreeConfig);\r\n        }\r\n        else {\r\n            return this.arrayToAntdTree(data, arrayToAntdTreeConfig);\r\n        }\r\n    },\r\n    /**\r\n     * findNodeByKey\r\n     * @description - 根据keyAttr查找结点\r\n     * @param treeData\r\n     * @param val\r\n     * @param config\r\n     */\r\n    findNodeByKey: function (treeData, val, config) {\r\n        function findLoop(data) {\r\n            var _a, _b;\r\n            var result;\r\n            for (var i = 0; i < data.length; i++) {\r\n                if (data[i][config.keyAttr] === val) {\r\n                    result = data[i];\r\n                    break;\r\n                }\r\n                else {\r\n                    if ('children' in data[i] &&\r\n                        Array.isArray(data[i].children) && ((_b = (_a = data[i]) === null || _a === void 0 ? void 0 : _a.children) === null || _b === void 0 ? void 0 : _b.length)) {\r\n                        // @ts-ignore\r\n                        result = findLoop(data[i].children);\r\n                        if (result)\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            // @ts-ignore\r\n            return result;\r\n        }\r\n        return findLoop(treeData);\r\n    },\r\n    /**\r\n     * transformTreeData\r\n     * @description - 转换一个treeData为antd的TreeData\r\n     * @param treeData\r\n     * @param onCallback\r\n     * @return IAntdTreeNode[]\r\n     */\r\n    transformTreeData: function (treeData, onCallback) {\r\n        function loop(children) {\r\n            var result = [];\r\n            for (var i = 0; i < children.length; i++) {\r\n                var node = children[i];\r\n                result.push(onCallback(node));\r\n            }\r\n            return result;\r\n        }\r\n        return loop(treeData);\r\n    },\r\n};\r\n"],"names":["__assign","this","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__spreadArrays","il","r","Array","k","a","j","jl","treeToArray","treeData","config","parentIdAttr","rootParentId","result","loop","context","data","parentId","_a","item","push","properties","children","isArray","key","arrayToAntdTree","arr","keyAttr","titleAttr","findNodesByParentId","filter","map","title","isLeaf","roots","forEach","root","Recursion","node","arrayToAntdTreeSelect","value","getAncestor","curNode","find","getDescendants","filterTree","kw","_this","arrayToAntdTreeConfig","filterAttr","set_1","Set","tops","tArr","from","findNodeByKey","val","findLoop","_b","transformTreeData","onCallback"],"mappings":"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"}