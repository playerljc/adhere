export default{drawStart:function(a,e,t){a.save(),a.beginPath();for(var o=e.startCount,r=360/o,n=90-r,x=r-n,y=e.center,i=e.outRadius,s=e.innerRadius,h=0;h<o;h++)a.lineTo(Math.cos((n+h*r)/180*Math.PI)*i+y.x,-Math.sin((n+h*r)/180*Math.PI)*i+y.y),a.lineTo(Math.cos((x+h*r)/180*Math.PI)*s+y.x,-Math.sin((x+h*r)/180*Math.PI)*s+y.y);t(a),a.restore()},drawSector:function(a,e,t){a.save(),a.beginPath();var o=e.center,r=e.radius,n=e.angle1,e=e.angle2;a.moveTo(o.x,o.y),a.arc(o.x,o.y,r,n*Math.PI/180,e*Math.PI/180,!1),a.closePath(),t(a),a.restore()},drawLeaf:function(a,e,t){a.save(),a.beginPath();for(var o=e.n,r=e.center,n=e.size,x=e.length,y=(a.moveTo(r.x,r.y+n),2*Math.PI/o),i=1;i<o+1;i++){var s=Math.sin((i-1)*y)*x+r.x,h=Math.cos((i-1)*y)*x+r.y,c=Math.sin(i*y)*x+r.x,M=Math.cos(i*y)*x+r.y,l=Math.sin(i*y)*n+r.x,P=Math.cos(i*y)*n+r.y;a.bezierCurveTo(s,h,c,M,l,P),a.closePath(),t(a),a.restore()}},drawRegularPolygon:function(a,e,t){a.save(),a.beginPath();for(var o=e.n,r=e.center,n=e.size,x=2*Math.PI/o,y=0;y<o;y++){var i=Math.cos(y*x),s=Math.sin(y*x);a.lineTo(i*n+r.x,s*n+r.y)}a.closePath(),t(a),a.restore()},drawRadiusRect:function(a,e,t){a.save(),a.beginPath();var o,r=e.leftTop,n=e.width,x=e.height,e=e.radius;a.moveTo(r.x,r.y+e),a.arcTo(r.x,r.y,r.x+e,r.y,e),a.lineTo(r.x+n-e,r.y),o={x:r.x+n-e,y:r.y},a.arcTo(o.x+e,r.y,o.x+e,r.y+e,e),o={x:o.x+e,y:r.y+e},a.lineTo(o.x,o.y+(x-2*e)),a.arcTo((o={x:o.x,y:o.y+(x-2*e)}).x,o.y+e,o.x-e,o.y+e,e),a.lineTo((o={x:o.x-e,y:o.y+e}).x-(n-2*e),o.y),a.arcTo((o={x:o.x-(n-2*e),y:o.y}).x-e,o.y,o.x-e,o.y-e,e),a.lineTo((o={x:o.x-e,y:o.y-e}).x,o.y-(x-2*e)),t(a),a.restore()}};
//# sourceMappingURL=geometry.js.map
