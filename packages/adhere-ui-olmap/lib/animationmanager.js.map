{"version":3,"file":"animationmanager.js","sources":["animationmanager.js"],"sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar algebra_js_1 = __importDefault(require(\"algebra.js\"));\nvar proj_js_1 = require(\"ol/proj.js\");\nvar uuid_1 = require(\"uuid\");\nvar util_1 = __importDefault(require(\"./util\"));\n/**\n * AnimationManager\n * @class AnimationManager\n * @classdesc 地图轨迹播放动画\n */\nvar AnimationManager = /** @class */ (function () {\n    // runing: boolean;\n    // vectorSource: any;\n    // animationMap: {};\n    // preAnimations: any[];\n    // pointsMapIndex: any;\n    // preActiveId: string | undefined;\n    // handler: any;\n    // lines: any;\n    // pref: any;\n    // config: {\n    //   arrowImg: '';\n    //   pointImg: '';\n    //   lineWidth: 8,\n    //   lineColor: '#FF5D00',\n    // };\n    function AnimationManager(vectorSource, config) {\n        this.runing = false;\n        this.vectorSource = vectorSource;\n        this.animationMap = [];\n        this.preAnimations = [];\n        this.config = config;\n    }\n    AnimationManager.prototype.isRun = function () {\n        return this.runing;\n    };\n    AnimationManager.prototype.getPoints = function (locations) {\n        console.log('locations', locations);\n        var distance = 0;\n        // let speed = 0;\n        var addPoints = [];\n        this.animationMap = [];\n        for (var i = locations.length - 1; i >= 1; i--) {\n            var startPoint = (0, proj_js_1.fromLonLat)(locations[i]);\n            var endPoint = (0, proj_js_1.fromLonLat)(locations[i - 1]);\n            // 距离\n            var xDistance = Math.abs(startPoint[0] - endPoint[0]);\n            distance += xDistance;\n        }\n        var speed = Math.floor(distance / (locations.length * 80));\n        if (speed === 0) {\n            speed = 0.01;\n        }\n        this.animationMap[0] = locations.length - 1;\n        for (var i = locations.length - 1; i >= 1; i--) {\n            var startPoint = (0, proj_js_1.fromLonLat)(locations[i]);\n            var endPoint = (0, proj_js_1.fromLonLat)(locations[i - 1]);\n            var xDirection = startPoint[0] < endPoint[0] ? '->' : '<-';\n            var yDirection = startPoint[1] < endPoint[1] ? '->' : '<-';\n            // 同一个点没有轨迹\n            // eslint-disable-next-line no-continue\n            if (startPoint[0] === endPoint[0] && startPoint[1] === endPoint[1])\n                continue;\n            // 垂直的\n            if (startPoint[0] === endPoint[0] && startPoint[1] !== endPoint[1]) {\n                // 距离\n                var xdistance = Math.abs(startPoint[1] - endPoint[1]);\n                // 段数\n                var interval = Math.floor(xdistance / speed);\n                if (xdistance % speed > 0) {\n                    interval += 1;\n                }\n                for (var j = 1; j <= interval; j++) {\n                    var x = startPoint[0];\n                    var y = void 0;\n                    if (yDirection === '->') {\n                        if (j * speed > xdistance) {\n                            // eslint-disable-next-line prefer-destructuring\n                            x = endPoint[0];\n                            // eslint-disable-next-line prefer-destructuring\n                            y = endPoint[1];\n                        }\n                        else {\n                            y = startPoint[1] + j * speed;\n                        }\n                    }\n                    else if (yDirection === '<-') {\n                        if (j * speed > xdistance) {\n                            // eslint-disable-next-line prefer-destructuring\n                            x = endPoint[0];\n                            // eslint-disable-next-line prefer-destructuring\n                            y = endPoint[1];\n                        }\n                        else {\n                            y = startPoint[1] - j * speed;\n                        }\n                    }\n                    // @ts-ignore\n                    addPoints.push([x, y]);\n                }\n            }\n            else if (startPoint[0] !== endPoint[0] && startPoint[1] === endPoint[1]) {\n                // 水平的\n                // 距离\n                var xDistance = Math.abs(startPoint[0] - endPoint[0]);\n                // 段数\n                var interval = Math.floor(xDistance / speed);\n                if (xDistance % speed > 0) {\n                    interval += 1;\n                }\n                for (var j = 1; j <= interval; j++) {\n                    var x = void 0;\n                    var y = startPoint[1];\n                    if (xDirection === '->') {\n                        if (j * speed > xDistance) {\n                            // eslint-disable-next-line prefer-destructuring\n                            x = endPoint[0];\n                            // eslint-disable-next-line prefer-destructuring\n                            y = endPoint[1];\n                        }\n                        else {\n                            x = startPoint[0] + j * speed;\n                        }\n                    }\n                    else if (xDirection === '<-') {\n                        if (j * speed > xDistance) {\n                            // eslint-disable-next-line prefer-destructuring\n                            x = endPoint[0];\n                            // eslint-disable-next-line prefer-destructuring\n                            y = endPoint[1];\n                        }\n                        else {\n                            x = startPoint[0] - j * speed;\n                        }\n                    }\n                    // @ts-ignore\n                    addPoints.push([x, y]);\n                }\n            }\n            else {\n                // 有角度的\n                // 距离\n                var time = 5 * 30;\n                var xDistance = Math.abs(startPoint[0] - endPoint[0]);\n                speed = xDistance / time;\n                // 段数\n                var interval = Math.floor(xDistance / speed);\n                if (xDistance % speed > 0) {\n                    interval += 1;\n                }\n                var Equation = algebra_js_1.default.Equation;\n                //= ======================================\n                var x1 = algebra_js_1.default.parse(\"\".concat(startPoint[1], \"=\").concat(startPoint[0], \"k+b\"));\n                var answer1 = x1.solveFor('k');\n                // console.log(`k = ${answer1.toString()}`);\n                var x2 = algebra_js_1.default.parse(\"\".concat(endPoint[1], \"=\").concat(endPoint[0], \"k+b\"));\n                var answer2 = x2.solveFor('k');\n                // console.log(`k = ${answer2.toString()}`);\n                //= ================================================\n                // 解出b值\n                var eq = new Equation(answer1, answer2);\n                // console.log(`b表达式：${eq.toString()}`);\n                var answerX = eq.solveFor('b');\n                // console.log(`解出B的值为：${answerX.toString()}`);\n                //= ================================================\n                // 解出Y值（把x的值代入x1或x2）\n                eq = x1.eval({\n                    b: answerX,\n                });\n                // console.log(`k表达式：${eq.toString()}`);\n                var answerY = eq.solveFor('k');\n                // console.log(`解出k的值为：${answerY.toString()}`);\n                // eslint-disable-next-line no-eval\n                var b = eval(answerX.toString());\n                // eslint-disable-next-line no-eval\n                var k = eval(answerY.toString());\n                for (var j = 1; j <= interval; j++) {\n                    var x = void 0;\n                    var y = void 0;\n                    if (xDirection === '->') {\n                        if (j * speed > xDistance) {\n                            // eslint-disable-next-line prefer-destructuring\n                            x = endPoint[0];\n                            // eslint-disable-next-line prefer-destructuring\n                            y = endPoint[1];\n                        }\n                        else {\n                            x = startPoint[0] + j * speed;\n                            y = k * x + b;\n                        }\n                    }\n                    else if (xDirection === '<-') {\n                        if (j * speed > xDistance) {\n                            // eslint-disable-next-line prefer-destructuring\n                            x = endPoint[0];\n                            // eslint-disable-next-line prefer-destructuring\n                            y = endPoint[1];\n                        }\n                        else {\n                            x = startPoint[0] - j * speed;\n                            y = k * x + b;\n                        }\n                    }\n                    // @ts-ignore\n                    addPoints.push([x, y]);\n                }\n            }\n            this.animationMap[addPoints.length - 1] = i - 1;\n        }\n        return addPoints;\n    };\n    // eslint-disable-next-line consistent-return\n    AnimationManager.prototype.run = function (lineData, pointsMapIndex) {\n        var _this = this;\n        if (!lineData || this.runing)\n            return false;\n        this.runing = true;\n        this.pointsMapIndex = pointsMapIndex;\n        var it = lineData.values();\n        this.loopTask(it).then(function () {\n            // 所有动画完成\n            _this.runing = false;\n            console.log('finish');\n        });\n    };\n    AnimationManager.prototype.loopTask = function (it) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var entry = it.next();\n            if (entry.done) {\n                resolve();\n            }\n            else {\n                var lines = entry.value;\n                var points = _this.getPoints(lines);\n                _this.runTask(points)\n                    .then(function () {\n                    _this.loopTask(it).then(function () {\n                        resolve();\n                    });\n                })\n                    .catch(function (error) {\n                    reject(error);\n                });\n            }\n        });\n    };\n    AnimationManager.prototype.runTask = function (points) {\n        var _this = this;\n        this.preActiveId = '';\n        // eslint-disable-next-line no-unused-vars,consistent-return\n        return new Promise(function (resolve) {\n            var self = _this;\n            if (!points.length) {\n                resolve();\n                return false;\n            }\n            var topIndex = 0;\n            _this.pref = null;\n            _this.lines = [];\n            _this.handler = null;\n            // eslint-disable-next-line consistent-return\n            function loop() {\n                if (topIndex === points.length) {\n                    self.stopTask();\n                    if (self.preAnimations) {\n                        self.preAnimations.forEach(function (p) {\n                            self.vectorSource.removeFeature(p);\n                        });\n                        self.preAnimations = [];\n                    }\n                    resolve();\n                    return false;\n                }\n                if (self.pref) {\n                    self.vectorSource.removeFeature(self.pref);\n                }\n                var point = points[topIndex];\n                var rotation = 0;\n                if (topIndex !== 0) {\n                    var line = util_1.default.drawLine({\n                        points: [points[topIndex - 1], points[topIndex]],\n                        width: self.config.lineWidth,\n                        color: self.config.lineColor,\n                    });\n                    self.vectorSource.addFeature(line);\n                    self.lines.push(line);\n                    var prePoint = points[topIndex - 1];\n                    var dx = point[0] - prePoint[0];\n                    var dy = point[1] - prePoint[1];\n                    rotation = Math.atan2(dy, dx);\n                }\n                if (self.animationMap[topIndex] || self.animationMap[topIndex] === 0) {\n                    if (self.preActiveId) {\n                        var preFeature = self.vectorSource.getFeatureById(self.preActiveId);\n                        self.vectorSource.removeFeature(preFeature);\n                        self.preActiveId = '';\n                    }\n                    var pointConfig = self.pointsMapIndex[self.animationMap[topIndex]];\n                    if (pointConfig) {\n                        var id = \"active_\".concat(pointConfig.id);\n                        var node = util_1.default.drawImagePoint(__assign(__assign({}, pointConfig), { id: id, src: self.config.pointImg, zIndex: pointConfig.zIndex + 10 }));\n                        self.vectorSource.addFeature(node);\n                        self.preActiveId = id;\n                    }\n                }\n                // @ts-ignore\n                var f = util_1.default.drawImagePoint({\n                    id: (0, uuid_1.v1)(),\n                    pos: point,\n                    src: self.config.arrowImg,\n                    scale: 1,\n                    zIndex: 1000,\n                    rotation: -rotation,\n                });\n                self.vectorSource.addFeature(f);\n                self.pref = f;\n                // eslint-disable-next-line no-plusplus\n                ++topIndex;\n                self.handler = requestAnimationFrame(loop);\n            }\n            self.handler = requestAnimationFrame(loop);\n        });\n    };\n    // eslint-disable-next-line consistent-return\n    AnimationManager.prototype.stopTask = function () {\n        if (!this.runing)\n            return false;\n        if (this.handler) {\n            cancelAnimationFrame(this.handler);\n        }\n        if (this.pref) {\n            this.vectorSource.removeFeature(this.pref);\n        }\n        if (this.lines) {\n            for (var i = 0; i < this.lines.length; i++) {\n                this.vectorSource.removeFeature(this.lines[i]);\n            }\n        }\n        if (this.preActiveId) {\n            var preFeature = this.vectorSource.getFeatureById(this.preActiveId);\n            this.vectorSource.removeFeature(preFeature);\n            this.preActiveId = '';\n        }\n    };\n    AnimationManager.prototype.stop = function () {\n        this.stopTask();\n        this.runing = false;\n    };\n    return AnimationManager;\n}());\nexports.default = AnimationManager;\n"],"names":["__assign","this","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__importDefault","mod","__esModule","default","algebra_js_1","defineProperty","exports","value","require","proj_js_1","uuid_1","util_1","AnimationManager","vectorSource","config","runing","animationMap","preAnimations","isRun","getPoints","locations","console","log","distance","addPoints","startPoint","fromLonLat","endPoint","xDistance","Math","abs","speed","floor","xDirection","yDirection","xdistance","interval","j","x","y","push","time","Equation","x1","parse","concat","answer1","solveFor","x2","answer2","eq","answerX","eval","b","answerY","toString","k","run","lineData","pointsMapIndex","_this","it","values","loopTask","then","Promise","resolve","reject","entry","next","done","lines","points","runTask","catch","error","preActiveId","self","topIndex","pref","handler","requestAnimationFrame","loop","stopTask","forEach","removeFeature","id","point","rotation","f","line","drawLine","width","lineWidth","color","lineColor","addFeature","prePoint","dx","dy","atan2","preFeature","getFeatureById","pointConfig","node","drawImagePoint","src","pointImg","zIndex","v1","pos","arrowImg","scale","cancelAnimationFrame","stop"],"mappings":"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"}