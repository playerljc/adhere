{"version":3,"file":"animationmanager.js","sources":["animationmanager.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nimport algebra from 'algebra.js';\r\nimport { fromLonLat } from 'ol/proj.js';\r\nimport { v1 } from 'uuid';\r\nimport Util from './util';\r\n/**\r\n * AnimationManager\r\n * @class AnimationManager\r\n * @classdesc 地图轨迹播放动画\r\n */\r\nvar AnimationManager = /** @class */ (function () {\r\n    // runing: boolean;\r\n    // vectorSource: any;\r\n    // animationMap: {};\r\n    // preAnimations: any[];\r\n    // pointsMapIndex: any;\r\n    // preActiveId: string | undefined;\r\n    // handler: any;\r\n    // lines: any;\r\n    // pref: any;\r\n    // config: {\r\n    //   arrowImg: '';\r\n    //   pointImg: '';\r\n    //   lineWidth: 8,\r\n    //   lineColor: '#FF5D00',\r\n    // };\r\n    function AnimationManager(vectorSource, config) {\r\n        this.runing = false;\r\n        this.vectorSource = vectorSource;\r\n        this.animationMap = [];\r\n        this.preAnimations = [];\r\n        this.config = config;\r\n    }\r\n    AnimationManager.prototype.isRun = function () {\r\n        return this.runing;\r\n    };\r\n    AnimationManager.prototype.getPoints = function (locations) {\r\n        console.log('locations', locations);\r\n        var distance = 0;\r\n        // let speed = 0;\r\n        var addPoints = [];\r\n        this.animationMap = [];\r\n        for (var i = locations.length - 1; i >= 1; i--) {\r\n            var startPoint = fromLonLat(locations[i]);\r\n            var endPoint = fromLonLat(locations[i - 1]);\r\n            // 距离\r\n            var xDistance = Math.abs(startPoint[0] - endPoint[0]);\r\n            distance += xDistance;\r\n        }\r\n        var speed = Math.floor(distance / (locations.length * 80));\r\n        if (speed === 0) {\r\n            speed = 0.01;\r\n        }\r\n        this.animationMap[0] = locations.length - 1;\r\n        for (var i = locations.length - 1; i >= 1; i--) {\r\n            var startPoint = fromLonLat(locations[i]);\r\n            var endPoint = fromLonLat(locations[i - 1]);\r\n            var xDirection = startPoint[0] < endPoint[0] ? '->' : '<-';\r\n            var yDirection = startPoint[1] < endPoint[1] ? '->' : '<-';\r\n            // 同一个点没有轨迹\r\n            // eslint-disable-next-line no-continue\r\n            if (startPoint[0] === endPoint[0] && startPoint[1] === endPoint[1])\r\n                continue;\r\n            // 垂直的\r\n            if (startPoint[0] === endPoint[0] && startPoint[1] !== endPoint[1]) {\r\n                // 距离\r\n                var xdistance = Math.abs(startPoint[1] - endPoint[1]);\r\n                // 段数\r\n                var interval = Math.floor(xdistance / speed);\r\n                if (xdistance % speed > 0) {\r\n                    interval += 1;\r\n                }\r\n                for (var j = 1; j <= interval; j++) {\r\n                    var x = startPoint[0];\r\n                    var y = void 0;\r\n                    if (yDirection === '->') {\r\n                        if (j * speed > xdistance) {\r\n                            // eslint-disable-next-line prefer-destructuring\r\n                            x = endPoint[0];\r\n                            // eslint-disable-next-line prefer-destructuring\r\n                            y = endPoint[1];\r\n                        }\r\n                        else {\r\n                            y = startPoint[1] + j * speed;\r\n                        }\r\n                    }\r\n                    else if (yDirection === '<-') {\r\n                        if (j * speed > xdistance) {\r\n                            // eslint-disable-next-line prefer-destructuring\r\n                            x = endPoint[0];\r\n                            // eslint-disable-next-line prefer-destructuring\r\n                            y = endPoint[1];\r\n                        }\r\n                        else {\r\n                            y = startPoint[1] - j * speed;\r\n                        }\r\n                    }\r\n                    // @ts-ignore\r\n                    addPoints.push([x, y]);\r\n                }\r\n            }\r\n            else if (startPoint[0] !== endPoint[0] && startPoint[1] === endPoint[1]) {\r\n                // 水平的\r\n                // 距离\r\n                var xDistance = Math.abs(startPoint[0] - endPoint[0]);\r\n                // 段数\r\n                var interval = Math.floor(xDistance / speed);\r\n                if (xDistance % speed > 0) {\r\n                    interval += 1;\r\n                }\r\n                for (var j = 1; j <= interval; j++) {\r\n                    var x = void 0;\r\n                    var y = startPoint[1];\r\n                    if (xDirection === '->') {\r\n                        if (j * speed > xDistance) {\r\n                            // eslint-disable-next-line prefer-destructuring\r\n                            x = endPoint[0];\r\n                            // eslint-disable-next-line prefer-destructuring\r\n                            y = endPoint[1];\r\n                        }\r\n                        else {\r\n                            x = startPoint[0] + j * speed;\r\n                        }\r\n                    }\r\n                    else if (xDirection === '<-') {\r\n                        if (j * speed > xDistance) {\r\n                            // eslint-disable-next-line prefer-destructuring\r\n                            x = endPoint[0];\r\n                            // eslint-disable-next-line prefer-destructuring\r\n                            y = endPoint[1];\r\n                        }\r\n                        else {\r\n                            x = startPoint[0] - j * speed;\r\n                        }\r\n                    }\r\n                    // @ts-ignore\r\n                    addPoints.push([x, y]);\r\n                }\r\n            }\r\n            else {\r\n                // 有角度的\r\n                // 距离\r\n                var time = 5 * 30;\r\n                var xDistance = Math.abs(startPoint[0] - endPoint[0]);\r\n                speed = xDistance / time;\r\n                // 段数\r\n                var interval = Math.floor(xDistance / speed);\r\n                if (xDistance % speed > 0) {\r\n                    interval += 1;\r\n                }\r\n                var Equation = algebra.Equation;\r\n                //= ======================================\r\n                var x1 = algebra.parse(startPoint[1] + \"=\" + startPoint[0] + \"k+b\");\r\n                var answer1 = x1.solveFor('k');\r\n                // console.log(`k = ${answer1.toString()}`);\r\n                var x2 = algebra.parse(endPoint[1] + \"=\" + endPoint[0] + \"k+b\");\r\n                var answer2 = x2.solveFor('k');\r\n                // console.log(`k = ${answer2.toString()}`);\r\n                //= ================================================\r\n                // 解出b值\r\n                var eq = new Equation(answer1, answer2);\r\n                // console.log(`b表达式：${eq.toString()}`);\r\n                var answerX = eq.solveFor('b');\r\n                // console.log(`解出B的值为：${answerX.toString()}`);\r\n                //= ================================================\r\n                // 解出Y值（把x的值代入x1或x2）\r\n                eq = x1.eval({\r\n                    b: answerX,\r\n                });\r\n                // console.log(`k表达式：${eq.toString()}`);\r\n                var answerY = eq.solveFor('k');\r\n                // console.log(`解出k的值为：${answerY.toString()}`);\r\n                // eslint-disable-next-line no-eval\r\n                var b = eval(answerX.toString());\r\n                // eslint-disable-next-line no-eval\r\n                var k = eval(answerY.toString());\r\n                for (var j = 1; j <= interval; j++) {\r\n                    var x = void 0;\r\n                    var y = void 0;\r\n                    if (xDirection === '->') {\r\n                        if (j * speed > xDistance) {\r\n                            // eslint-disable-next-line prefer-destructuring\r\n                            x = endPoint[0];\r\n                            // eslint-disable-next-line prefer-destructuring\r\n                            y = endPoint[1];\r\n                        }\r\n                        else {\r\n                            x = startPoint[0] + j * speed;\r\n                            y = k * x + b;\r\n                        }\r\n                    }\r\n                    else if (xDirection === '<-') {\r\n                        if (j * speed > xDistance) {\r\n                            // eslint-disable-next-line prefer-destructuring\r\n                            x = endPoint[0];\r\n                            // eslint-disable-next-line prefer-destructuring\r\n                            y = endPoint[1];\r\n                        }\r\n                        else {\r\n                            x = startPoint[0] - j * speed;\r\n                            y = k * x + b;\r\n                        }\r\n                    }\r\n                    // @ts-ignore\r\n                    addPoints.push([x, y]);\r\n                }\r\n            }\r\n            this.animationMap[addPoints.length - 1] = i - 1;\r\n        }\r\n        return addPoints;\r\n    };\r\n    // eslint-disable-next-line consistent-return\r\n    AnimationManager.prototype.run = function (lineData, pointsMapIndex) {\r\n        var _this = this;\r\n        if (!lineData || this.runing)\r\n            return false;\r\n        this.runing = true;\r\n        this.pointsMapIndex = pointsMapIndex;\r\n        var it = lineData.values();\r\n        this.loopTask(it).then(function () {\r\n            // 所有动画完成\r\n            _this.runing = false;\r\n            console.log('finish');\r\n        });\r\n    };\r\n    AnimationManager.prototype.loopTask = function (it) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var entry = it.next();\r\n            if (entry.done) {\r\n                resolve();\r\n            }\r\n            else {\r\n                var lines = entry.value;\r\n                var points = _this.getPoints(lines);\r\n                _this.runTask(points)\r\n                    .then(function () {\r\n                    _this.loopTask(it).then(function () {\r\n                        resolve();\r\n                    });\r\n                })\r\n                    .catch(function (error) {\r\n                    reject(error);\r\n                });\r\n            }\r\n        });\r\n    };\r\n    AnimationManager.prototype.runTask = function (points) {\r\n        var _this = this;\r\n        this.preActiveId = '';\r\n        // eslint-disable-next-line no-unused-vars,consistent-return\r\n        return new Promise(function (resolve) {\r\n            var self = _this;\r\n            if (!points.length) {\r\n                resolve();\r\n                return false;\r\n            }\r\n            var topIndex = 0;\r\n            _this.pref = null;\r\n            _this.lines = [];\r\n            _this.handler = null;\r\n            // eslint-disable-next-line consistent-return\r\n            function loop() {\r\n                if (topIndex === points.length) {\r\n                    self.stopTask();\r\n                    if (self.preAnimations) {\r\n                        self.preAnimations.forEach(function (p) {\r\n                            self.vectorSource.removeFeature(p);\r\n                        });\r\n                        self.preAnimations = [];\r\n                    }\r\n                    resolve();\r\n                    return false;\r\n                }\r\n                if (self.pref) {\r\n                    self.vectorSource.removeFeature(self.pref);\r\n                }\r\n                var point = points[topIndex];\r\n                var rotation = 0;\r\n                if (topIndex !== 0) {\r\n                    var line = Util.drawLine({\r\n                        points: [points[topIndex - 1], points[topIndex]],\r\n                        width: self.config.lineWidth,\r\n                        color: self.config.lineColor,\r\n                    });\r\n                    self.vectorSource.addFeature(line);\r\n                    self.lines.push(line);\r\n                    var prePoint = points[topIndex - 1];\r\n                    var dx = point[0] - prePoint[0];\r\n                    var dy = point[1] - prePoint[1];\r\n                    rotation = Math.atan2(dy, dx);\r\n                }\r\n                if (self.animationMap[topIndex] || self.animationMap[topIndex] === 0) {\r\n                    if (self.preActiveId) {\r\n                        var preFeature = self.vectorSource.getFeatureById(self.preActiveId);\r\n                        self.vectorSource.removeFeature(preFeature);\r\n                        self.preActiveId = '';\r\n                    }\r\n                    var pointConfig = self.pointsMapIndex[self.animationMap[topIndex]];\r\n                    if (pointConfig) {\r\n                        var id = \"active_\" + pointConfig.id;\r\n                        var node = Util.drawImagePoint(__assign(__assign({}, pointConfig), { id: id, src: self.config.pointImg, zIndex: pointConfig.zIndex + 10 }));\r\n                        self.vectorSource.addFeature(node);\r\n                        self.preActiveId = id;\r\n                    }\r\n                }\r\n                // @ts-ignore\r\n                var f = Util.drawImagePoint({\r\n                    id: v1(),\r\n                    pos: point,\r\n                    src: self.config.arrowImg,\r\n                    scale: 1,\r\n                    zIndex: 1000,\r\n                    rotation: -rotation,\r\n                });\r\n                self.vectorSource.addFeature(f);\r\n                self.pref = f;\r\n                // eslint-disable-next-line no-plusplus\r\n                ++topIndex;\r\n                self.handler = requestAnimationFrame(loop);\r\n            }\r\n            self.handler = requestAnimationFrame(loop);\r\n        });\r\n    };\r\n    // eslint-disable-next-line consistent-return\r\n    AnimationManager.prototype.stopTask = function () {\r\n        if (!this.runing)\r\n            return false;\r\n        if (this.handler) {\r\n            cancelAnimationFrame(this.handler);\r\n        }\r\n        if (this.pref) {\r\n            this.vectorSource.removeFeature(this.pref);\r\n        }\r\n        if (this.lines) {\r\n            for (var i = 0; i < this.lines.length; i++) {\r\n                this.vectorSource.removeFeature(this.lines[i]);\r\n            }\r\n        }\r\n        if (this.preActiveId) {\r\n            var preFeature = this.vectorSource.getFeatureById(this.preActiveId);\r\n            this.vectorSource.removeFeature(preFeature);\r\n            this.preActiveId = '';\r\n        }\r\n    };\r\n    AnimationManager.prototype.stop = function () {\r\n        this.stopTask();\r\n        this.runing = false;\r\n    };\r\n    return AnimationManager;\r\n}());\r\nexport default AnimationManager;\r\n"],"names":["__assign","this","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","algebra","fromLonLat","v1","Util","AnimationManager","vectorSource","config","runing","animationMap","preAnimations","isRun","getPoints","locations","console","log","distance","addPoints","startPoint","endPoint","xDistance","Math","abs","speed","floor","xDirection","yDirection","xdistance","interval","j","x","y","push","time","Equation","x1","parse","answer1","solveFor","x2","answer2","eq","answerX","eval","b","answerY","toString","k","run","lineData","pointsMapIndex","_this","it","values","loopTask","then","Promise","resolve","reject","entry","next","done","lines","value","points","runTask","catch","error","preActiveId","self","topIndex","pref","handler","requestAnimationFrame","loop","stopTask","forEach","removeFeature","id","point","rotation","f","line","drawLine","width","lineWidth","color","lineColor","addFeature","prePoint","dx","dy","atan2","preFeature","getFeatureById","pointConfig","node","drawImagePoint","src","pointImg","zIndex","pos","arrowImg","scale","cancelAnimationFrame","stop"],"mappings":"AAAA,IAAIA,SAAYC,MAAQA,KAAKD,UAAa,WAStC,OARAA,SAAWE,OAAOC,QAAU,SAASC,GACjC,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,CAAC,GAE7C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,CAAC,IAC1DN,EAAEM,GAAKL,EAAEK,IAEjB,OAAON,CACX,GACgBU,MAAMb,KAAMO,SAAS,CACzC,SACOO,YAAa,oBACXC,UAA8B,KAAZ,oBAClBC,EAAgB,KAAN,cACZC,SAAU,SAMjB,IAAIC,iBAAkC,WAgBlC,SAASA,iBAAiBC,EAAcC,GACpCpB,KAAKqB,OAAS,CAAA,EACdrB,KAAKmB,aAAeA,EACpBnB,KAAKsB,aAAe,GACpBtB,KAAKuB,cAAgB,GACrBvB,KAAKoB,OAASA,CAClB,CA6TA,OA5TAF,iBAAiBR,UAAUc,MAAQ,WAC/B,OAAOxB,KAAKqB,MAChB,EACAH,iBAAiBR,UAAUe,UAAY,SAAUC,WAC7CC,QAAQC,IAAI,YAAaF,SAAS,EAClC,IAAIG,SAAW,EAEXC,UAAY,GAChB9B,KAAKsB,aAAe,GACpB,IAAK,IAAIjB,EAAIqB,UAAUlB,OAAS,EAAQ,GAALH,EAAQA,CAAC,GAAI,CAC5C,IAAI0B,WAAahB,WAAWW,UAAUrB,EAAE,EACpC2B,SAAWjB,WAAWW,UAAUrB,EAAI,EAAE,EAEtC4B,UAAYC,KAAKC,IAAIJ,WAAW,GAAKC,SAAS,EAAE,EACpDH,UAAYI,SAChB,CACA,IAAIG,MAAQF,KAAKG,MAAMR,UAA+B,GAAnBH,UAAUlB,OAAY,EAC3C,IAAV4B,QACAA,MAAQ,KAEZpC,KAAKsB,aAAa,GAAKI,UAAUlB,OAAS,EAC1C,IAAK,IAAIH,EAAIqB,UAAUlB,OAAS,EAAQ,GAALH,EAAQA,CAAC,GAAI,CAC5C,IAAI0B,WAAahB,WAAWW,UAAUrB,EAAE,EACpC2B,SAAWjB,WAAWW,UAAUrB,EAAI,EAAE,EACtCiC,WAAaP,WAAW,GAAKC,SAAS,GAAK,KAAO,KAClDO,WAAaR,WAAW,GAAKC,SAAS,GAAK,KAAO,KAGtD,GAAID,WAAW,KAAOC,SAAS,IAAMD,WAAW,KAAOC,SAAS,GAAhE,CAGA,GAAID,WAAW,KAAOC,SAAS,IAAMD,WAAW,KAAOC,SAAS,GAAI,CAEhE,IAAIQ,UAAYN,KAAKC,IAAIJ,WAAW,GAAKC,SAAS,EAAE,EAEhDS,SAAWP,KAAKG,MAAMG,UAAYJ,KAAK,EACnB,EAApBI,UAAYJ,QACZK,UAAY,GAEhB,IAAK,IAAIC,EAAI,EAAGA,GAAKD,SAAUC,CAAC,GAAI,CAChC,IAAIC,EAAIZ,WAAW,GACfa,EAAI,KAAA,EACW,OAAfL,WAKIK,EAJYJ,UAAZE,EAAIN,OAEJO,EAAIX,SAAS,GAETA,SAAS,IAGTD,WAAW,GAAKW,EAAIN,MAGR,OAAfG,aAKDK,EAJYJ,UAAZE,EAAIN,OAEJO,EAAIX,SAAS,GAETA,SAAS,IAGTD,WAAW,GAAKW,EAAIN,OAIhCN,UAAUe,KAAK,CAACF,EAAGC,EAAE,CACzB,CACJ,MACK,GAAIb,WAAW,KAAOC,SAAS,IAAMD,WAAW,KAAOC,SAAS,GAAI,CAGrE,IAAIC,UAAYC,KAAKC,IAAIJ,WAAW,GAAKC,SAAS,EAAE,EAEhDS,SAAWP,KAAKG,MAAMJ,UAAYG,KAAK,EACnB,EAApBH,UAAYG,QACZK,UAAY,GAEhB,IAAK,IAAIC,EAAI,EAAGA,GAAKD,SAAUC,CAAC,GAAI,CAChC,IAAIC,EAAI,KAAA,EACJC,EAAIb,WAAW,GACA,OAAfO,WACgBL,UAAZS,EAAIN,OAEJO,EAAIX,SAAS,GAEbY,EAAIZ,SAAS,IAGbW,EAAIZ,WAAW,GAAKW,EAAIN,MAGR,OAAfE,aACWL,UAAZS,EAAIN,OAEJO,EAAIX,SAAS,GAEbY,EAAIZ,SAAS,IAGbW,EAAIZ,WAAW,GAAKW,EAAIN,OAIhCN,UAAUe,KAAK,CAACF,EAAGC,EAAE,CACzB,CACJ,MAsCI,IAlCA,IAAIE,KAAO,IACPb,UAAYC,KAAKC,IAAIJ,WAAW,GAAKC,SAAS,EAAE,EACpDI,MAAQH,UAAYa,KAEhBL,SAAWP,KAAKG,MAAMJ,UAAYG,KAAK,EAIvCW,UAHoB,EAApBd,UAAYG,QACZK,UAAY,GAED3B,QAAQiC,UAEnBC,GAAKlC,QAAQmC,MAAMlB,WAAW,GAAK,IAAMA,WAAW,GAAK,KAAK,EAC9DmB,QAAUF,GAAGG,SAAS,GAAG,EAEzBC,GAAKtC,QAAQmC,MAAMjB,SAAS,GAAK,IAAMA,SAAS,GAAK,KAAK,EAC1DqB,QAAUD,GAAGD,SAAS,GAAG,EAIzBG,GAAK,IAAIP,SAASG,QAASG,OAAO,EAElCE,QAAUD,GAAGH,SAAS,GAAG,EAI7BG,GAAKN,GAAGQ,KAAK,CACTC,EAAGF,OACP,CAAC,EAEGG,QAAUJ,GAAGH,SAAS,GAAG,EAGzBM,EAAID,KAAKD,QAAQI,SAAS,CAAC,EAE3BC,EAAIJ,KAAKE,QAAQC,SAAS,CAAC,EACtBjB,EAAI,EAAGA,GAAKD,SAAUC,CAAC,GAAI,CAChC,IAAIC,EAAI,KAAA,EACJC,EAAI,KAAA,EACW,OAAfN,WAKIM,EAJYX,UAAZS,EAAIN,OAEJO,EAAIX,SAAS,GAETA,SAAS,KAGbW,EAAIZ,WAAW,GAAKW,EAAIN,MACpBwB,EAAIjB,EAAIc,GAGI,OAAfnB,aAKDM,EAJYX,UAAZS,EAAIN,OAEJO,EAAIX,SAAS,GAETA,SAAS,KAGbW,EAAIZ,WAAW,GAAKW,EAAIN,MACpBwB,EAAIjB,EAAIc,IAIpB3B,UAAUe,KAAK,CAACF,EAAGC,EAAE,CACzB,CAEJ5C,KAAKsB,aAAaQ,UAAUtB,OAAS,GAAKH,EAAI,CAjJlC,CAkJhB,CACA,OAAOyB,SACX,EAEAZ,iBAAiBR,UAAUmD,IAAM,SAAUC,EAAUC,GACjD,IAAIC,EAAQhE,KACZ,GAAI,CAAC8D,GAAY9D,KAAKqB,OAClB,MAAO,CAAA,EACXrB,KAAKqB,OAAS,CAAA,EACdrB,KAAK+D,eAAiBA,EAClBE,EAAKH,EAASI,OAAO,EACzBlE,KAAKmE,SAASF,CAAE,EAAEG,KAAK,WAEnBJ,EAAM3C,OAAS,CAAA,EACfM,QAAQC,IAAI,QAAQ,CACxB,CAAC,CACL,EACAV,iBAAiBR,UAAUyD,SAAW,SAAUF,GAC5C,IAAID,EAAQhE,KACZ,OAAO,IAAIqE,QAAQ,SAAUC,EAASC,GAClC,IAAIC,EAAQP,EAAGQ,KAAK,EAChBD,EAAME,KACNJ,EAAQ,GAGJK,EAAQH,EAAMI,MACdC,EAASb,EAAMvC,UAAUkD,CAAK,EAClCX,EAAMc,QAAQD,CAAM,EACfT,KAAK,WACNJ,EAAMG,SAASF,CAAE,EAAEG,KAAK,WACpBE,EAAQ,CACZ,CAAC,CACL,CAAC,EACIS,MAAM,SAAUC,GACjBT,EAAOS,CAAK,CAChB,CAAC,EAET,CAAC,CACL,EACA9D,iBAAiBR,UAAUoE,QAAU,SAAUD,GAC3C,IAAIb,EAAQhE,KAGZ,OAFAA,KAAKiF,YAAc,GAEZ,IAAIZ,QAAQ,SAAUC,GACzB,IAAIY,EAAOlB,EACX,GAAI,CAACa,EAAOrE,OAER,OADA8D,EAAQ,EACD,CAAA,EAEX,IAAIa,EAAW,EACfnB,EAAMoB,KAAO,KACbpB,EAAMW,MAAQ,GACdX,EAAMqB,QAAU,KA6DhBH,EAAKG,QAAUC,sBA3Df,SAASC,IACL,GAAIJ,IAAaN,EAAOrE,OASpB,OARA0E,EAAKM,SAAS,EACVN,EAAK3D,gBACL2D,EAAK3D,cAAckE,QAAQ,SAAUhF,GACjCyE,EAAK/D,aAAauE,cAAcjF,CAAC,CACrC,CAAC,EACDyE,EAAK3D,cAAgB,IAEzB+C,EAAQ,EACD,CAAA,EAEPY,EAAKE,MACLF,EAAK/D,aAAauE,cAAcR,EAAKE,IAAI,EAE7C,IAuBYO,EAvBRC,EAAQf,EAAOM,GACfU,EAAW,EA6BXC,GA5Ba,IAAbX,IACIY,EAAO9E,KAAK+E,SAAS,CACrBnB,OAAQ,CAACA,EAAOM,EAAW,GAAIN,EAAOM,IACtCc,MAAOf,EAAK9D,OAAO8E,UACnBC,MAAOjB,EAAK9D,OAAOgF,SACvB,CAAC,EACDlB,EAAK/D,aAAakF,WAAWN,CAAI,EACjCb,EAAKP,MAAM9B,KAAKkD,CAAI,EAChBO,EAAWzB,EAAOM,EAAW,GAC7BoB,EAAKX,EAAM,GAAKU,EAAS,GACzBE,EAAKZ,EAAM,GAAKU,EAAS,GAC7BT,EAAW3D,KAAKuE,MAAMD,EAAID,CAAE,GAE5BrB,CAAAA,EAAK5D,aAAa6D,IAA6C,IAAhCD,EAAK5D,aAAa6D,KAC7CD,EAAKD,cACDyB,EAAaxB,EAAK/D,aAAawF,eAAezB,EAAKD,WAAW,EAClEC,EAAK/D,aAAauE,cAAcgB,CAAU,EAC1CxB,EAAKD,YAAc,KAEnB2B,EAAc1B,EAAKnB,eAAemB,EAAK5D,aAAa6D,OAEhDQ,EAAK,UAAYiB,EAAYjB,GAC7BkB,EAAO5F,KAAK6F,eAAe/G,SAASA,SAAS,GAAI6G,CAAW,EAAG,CAAEjB,GAAIA,EAAIoB,IAAK7B,EAAK9D,OAAO4F,SAAUC,OAAQL,EAAYK,OAAS,EAAG,CAAC,CAAC,EAC1I/B,EAAK/D,aAAakF,WAAWQ,CAAI,EACjC3B,EAAKD,YAAcU,IAInB1E,KAAK6F,eAAe,CACxBnB,GAAI3E,GAAG,EACPkG,IAAKtB,EACLmB,IAAK7B,EAAK9D,OAAO+F,SACjBC,MAAO,EACPH,OAAQ,IACRpB,SAAU,CAACA,CACf,CAAC,GACDX,EAAK/D,aAAakF,WAAWP,CAAC,EAC9BZ,EAAKE,KAAOU,EAEZ,EAAEX,EACFD,EAAKG,QAAUC,sBAAsBC,CAAI,CAC7C,CACyC,CAC7C,CAAC,CACL,EAEArE,iBAAiBR,UAAU8E,SAAW,WAClC,GAAI,CAACxF,KAAKqB,OACN,MAAO,CAAA,EAOX,GANIrB,KAAKqF,SACLgC,qBAAqBrH,KAAKqF,OAAO,EAEjCrF,KAAKoF,MACLpF,KAAKmB,aAAauE,cAAc1F,KAAKoF,IAAI,EAEzCpF,KAAK2E,MACL,IAAK,IAAItE,EAAI,EAAGA,EAAIL,KAAK2E,MAAMnE,OAAQH,CAAC,GACpCL,KAAKmB,aAAauE,cAAc1F,KAAK2E,MAAMtE,EAAE,EAGrD,IACQqG,EADJ1G,KAAKiF,cACDyB,EAAa1G,KAAKmB,aAAawF,eAAe3G,KAAKiF,WAAW,EAClEjF,KAAKmB,aAAauE,cAAcgB,CAAU,EAC1C1G,KAAKiF,YAAc,GAE3B,EACA/D,iBAAiBR,UAAU4G,KAAO,WAC9BtH,KAAKwF,SAAS,EACdxF,KAAKqB,OAAS,CAAA,CAClB,EACOH,gBACX,EAAG,iBACYA"}