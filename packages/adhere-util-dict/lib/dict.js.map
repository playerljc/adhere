{"version":3,"file":"dict.js","sources":["dict.js"],"sourcesContent":["var target = {};\r\nvar funParams = new Map();\r\n/**\r\n * diffParams\r\n * @param preArgArray - {Array}\r\n * @param curArgArray - {Array}\r\n * @return {boolean}\r\n */\r\nfunction diffParams(preArgArray, curArgArray) {\r\n    if (preArgArray.length !== curArgArray.length)\r\n        return false;\r\n    var flag = false;\r\n    for (var i = 0; i < preArgArray.length; i++) {\r\n        if (preArgArray[i] !== curArgArray[i]) {\r\n            flag = true;\r\n            break;\r\n        }\r\n    }\r\n    return !flag;\r\n}\r\n/**\r\n * CreateFunProxy\r\n * @param fun - {Function}\r\n * @param property - {String}\r\n * @return {Proxy}\r\n */\r\nfunction CreateFunProxy(fun, property) {\r\n    return new Proxy(fun, {\r\n        apply: function (funTarget, thisArg, argArray) {\r\n            var context = thisArg || window;\r\n            var result = null;\r\n            var entry = funParams.get(property);\r\n            if (!entry) {\r\n                result = funTarget.apply(context, argArray);\r\n                funParams.set(property, {\r\n                    argArray: argArray,\r\n                    result: result,\r\n                });\r\n            }\r\n            else if (!diffParams(entry.argArray, argArray)) {\r\n                result = funTarget.apply(context, argArray);\r\n                funParams.set(property, {\r\n                    argArray: argArray,\r\n                    result: result,\r\n                });\r\n            }\r\n            else {\r\n                result = entry.result;\r\n            }\r\n            return result;\r\n        },\r\n    });\r\n}\r\nfunction initValue(p, params) {\r\n    var handler = ins.handlers[p];\r\n    // 返回值 - 一般都不是函数\r\n    var value = handler(params);\r\n    // 如果返回值是Function\r\n    if (value instanceof Function) {\r\n        value = CreateFunProxy(value, p);\r\n    }\r\n    return value;\r\n}\r\nvar ins = {\r\n    handlers: {},\r\n    value: new Proxy(target, {\r\n        get: function (t, p, receiver) {\r\n            // 如果p属性没在t中\r\n            if (!(p in t)) {\r\n                receiver[p] = {\r\n                    value: initValue(p, null),\r\n                    refresh: function (params) {\r\n                        receiver[p].value = initValue(p, params);\r\n                    },\r\n                };\r\n            }\r\n            return Reflect.get(target, p, receiver);\r\n        },\r\n    }),\r\n    init: function (dictArr) {\r\n        if (dictArr === void 0) { dictArr = []; }\r\n        (dictArr || []).forEach(function (dict) {\r\n            if (dict) {\r\n                dict.initStatic();\r\n                dict.initRemote();\r\n            }\r\n        });\r\n    },\r\n};\r\nexport default ins;\r\n"],"names":["target","funParams","Map","diffParams","preArgArray","curArgArray","length","flag","i","CreateFunProxy","fun","property","Proxy","apply","funTarget","thisArg","argArray","context","window","result","entry","get","set","initValue","p","params","value","handler","ins","handlers","Function","t","receiver","refresh","Reflect","init","dictArr","forEach","dict","initStatic","initRemote"],"mappings":"AAAA,IAAIA,OAAS,GACTC,UAAY,IAAIC,IAOpB,SAASC,WAAWC,EAAaC,GAC7B,GAAID,EAAYE,SAAWD,EAAYC,OACnC,OAAO,EAEX,IADA,IAAIC,GAAO,EACFC,EAAI,EAAGA,EAAIJ,EAAYE,OAAQE,IACpC,GAAIJ,EAAYI,KAAOH,EAAYG,GAAI,CACnCD,GAAO,EACP,MAGR,OAAQA,EAQZ,SAASE,eAAeC,EAAKC,GACzB,OAAO,IAAIC,MAAMF,EAAK,CAClBG,MAAO,SAAUC,EAAWC,EAASC,GACjC,IAAIC,EAAUF,GAAWG,OACrBC,EAAS,KACTC,EAAQnB,UAAUoB,IAAIV,GAkB1B,OAjBKS,GAOKjB,WAAWiB,EAAMJ,SAAUA,GAQjCG,EAASC,EAAMD,QAdfA,EAASL,EAAUD,MAAMI,EAASD,GAClCf,UAAUqB,IAAIX,EAAU,CACpBK,SAAUA,EACVG,OAAQA,KAaTA,KAInB,SAASI,UAAUC,EAAGC,GAGdC,GAAQC,EAFEC,IAAIC,SAASL,IAEPC,GAKpB,OAFIC,EADAA,aAAiBI,SACTrB,eAAeiB,EAAOF,GAE3BE,EAEX,IAAIE,IAAM,CACNC,SAAU,GACVH,MAAO,IAAId,MAAMZ,OAAQ,CACrBqB,IAAK,SAAUU,EAAGP,EAAGQ,GAUjB,OARMR,KAAKO,IACPC,EAASR,GAAK,CACVE,MAAOH,UAAUC,EAAG,MACpBS,QAAS,SAAUR,GACfO,EAASR,GAAGE,MAAQH,UAAUC,EAAGC,MAItCS,QAAQb,IAAIrB,OAAQwB,EAAGQ,MAGtCG,KAAM,SAAUC,KACcA,OAAV,IAAZA,EAAgC,GACnCA,IAAW,IAAIC,QAAQ,SAAUC,GAC1BA,IACAA,EAAKC,aACLD,EAAKE,iCAKNZ"}