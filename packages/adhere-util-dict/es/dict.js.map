{"version":3,"file":"dict.js","sources":["dict.js"],"sourcesContent":["import DictReactComponent, { set } from './react';\nvar target = {};\nvar handlerTarget = {};\nvar funParams = new Map();\nvar defaultConfig = {\n    isUseMemo: true,\n};\nvar config = defaultConfig;\n/**\n * diffParams\n * @param {Array} preArgArray\n * @param {Array} curArgArray\n * @return {boolean}\n */\nfunction diffParams(preArgArray, curArgArray) {\n    if (preArgArray.length !== curArgArray.length)\n        return false;\n    var flag = false;\n    for (var i = 0; i < preArgArray.length; i++) {\n        if (preArgArray[i] !== curArgArray[i]) {\n            flag = true;\n            break;\n        }\n    }\n    return !flag;\n}\n/**\n * CreateFunProxy\n * @param {Function} fun\n * @param {String} property\n * @return {Proxy}\n */\nfunction CreateFunProxy(fun, property) {\n    return new Proxy(fun, {\n        apply: function (funTarget, thisArg, argArray) {\n            var context = thisArg || window;\n            var result = null;\n            var entry = funParams.get(property);\n            if (!entry) {\n                result = funTarget.apply(context, argArray);\n                funParams.set(property, {\n                    argArray: argArray,\n                    result: result,\n                });\n            }\n            else if (!diffParams(entry.argArray, argArray)) {\n                result = funTarget.apply(context, argArray);\n                funParams.set(property, {\n                    argArray: argArray,\n                    result: result,\n                });\n            }\n            else {\n                result = entry.result;\n            }\n            return result;\n        },\n    });\n}\n/**\n * initValue\n * @param p\n * @param params\n */\nfunction initValue(p, params) {\n    var handler = Dict.handlers[p];\n    // 返回值 - 一般都不是函数\n    var value = handler(params);\n    // 如果value是函数则默认是缓存的\n    if (value instanceof Function) {\n        // 函数单独的缓存开关\n        if ('isUseMemo' in handler) {\n            if (handler.isUseMemo) {\n                value = CreateFunProxy(value, p);\n            }\n        }\n        else {\n            // 总体的缓存开关\n            if ('isUseMemo' in config) {\n                if (config.isUseMemo) {\n                    value = CreateFunProxy(value, p);\n                }\n            }\n        }\n    }\n    return value;\n}\nvar Dict = {\n    /**\n     * handler - 字典的定义对象\n     */\n    handlers: new Proxy(handlerTarget, {\n        set: function (target, property, value, receiver) {\n            var result = Reflect.set(target, property, value, receiver);\n            // @ts-ignore\n            set(property);\n            return result;\n        },\n    }),\n    /**\n     * value - 字典的使用对象\n     */\n    value: new Proxy(target, {\n        get: function (target, property, receiver) {\n            // 如果p属性没在t中\n            if (!(property in target)) {\n                receiver[property] = {\n                    value: initValue(property, null),\n                    refresh: function () {\n                        // receiver[property].value = initValue(property, params);\n                        delete receiver[property];\n                        return this;\n                    },\n                };\n            }\n            return Reflect.get(target, property, receiver);\n        },\n    }),\n    /**\n     * init - 字典的初始化\n     * @param {\n     *   {\n     *    initStatic: () => void;\n     *    initRemote: () => void;\n     *   }[]\n     * } dictArray 字典定义的集合\n     * @param {IConfig} _config 字典的配置\n     * @return {void}\n     */\n    init: function (dictArray, _config) {\n        if (dictArray === void 0) { dictArray = []; }\n        if (_config === void 0) { _config = defaultConfig; }\n        config = _config;\n        (dictArray || []).forEach(function (dict) {\n            var _a, _b;\n            if (dict) {\n                (_a = dict === null || dict === void 0 ? void 0 : dict.initStatic) === null || _a === void 0 ? void 0 : _a.call(dict);\n                (_b = dict === null || dict === void 0 ? void 0 : dict.initRemote) === null || _b === void 0 ? void 0 : _b.call(dict);\n            }\n        });\n    },\n    /**\n     * React - 字典对应的React组件\n     */\n    React: DictReactComponent,\n};\nexport default Dict;\n"],"names":["DictReactComponent","set","target","handlerTarget","funParams","Map","defaultConfig","isUseMemo","config","diffParams","preArgArray","curArgArray","length","flag","i","CreateFunProxy","fun","property","Proxy","apply","funTarget","thisArg","argArray","context","window","result","entry","get","initValue","p","params","handler","Dict","handlers","value","Function","receiver","Reflect","refresh","this","init","dictArray","_config","forEach","dict","_b","_a","initStatic","call","initRemote","React"],"mappings":"OAAOA,oBAAsBC,GAAoB,KAAT,UACxC,IAAIC,OAAS,GACTC,cAAgB,GAChBC,UAAY,IAAIC,IAChBC,cAAgB,CAChBC,UAAW,CAAA,CACf,EACIC,OAASF,cAOb,SAASG,WAAWC,EAAaC,GAC7B,GAAID,EAAYE,SAAWD,EAAYC,OACnC,MAAO,CAAA,EAEX,IADA,IAAIC,EAAO,CAAA,EACFC,EAAI,EAAGA,EAAIJ,EAAYE,OAAQE,CAAC,GACrC,GAAIJ,EAAYI,KAAOH,EAAYG,GAAI,CACnCD,EAAO,CAAA,EACP,KACJ,CAEJ,MAAO,CAACA,CACZ,CAOA,SAASE,eAAeC,EAAKC,GACzB,OAAO,IAAIC,MAAMF,EAAK,CAClBG,MAAO,SAAUC,EAAWC,EAASC,GACjC,IAAIC,EAAUF,GAAWG,OACrBC,EAAS,KACTC,EAAQtB,UAAUuB,IAAIV,CAAQ,EAkBlC,OAjBKS,GAOKjB,WAAWiB,EAAMJ,SAAUA,CAAQ,EAQzCG,EAASC,EAAMD,QAdfA,EAASL,EAAUD,MAAMI,EAASD,CAAQ,EAC1ClB,UAAUH,IAAIgB,EAAU,CACpBK,SAAUA,EACVG,OAAQA,CACZ,CAAC,GAYEA,CACX,CACJ,CAAC,CACL,CAMA,SAASG,UAAUC,EAAGC,GAClB,IAAIC,EAAUC,KAAKC,SAASJ,GAExBK,EAAQH,EAAQD,CAAM,EAkB1B,OAhBII,aAAiBC,WAEb,cAAeJ,EACXA,EAAQxB,YACR2B,EAAQnB,eAAemB,EAAOL,CAAC,GAK/B,cAAerB,QACXA,OAAOD,YACP2B,EAAQnB,eAAemB,EAAOL,CAAC,IAKxCK,CACX,CACA,IAAIF,KAAO,CAIPC,SAAU,IAAIf,MAAMf,cAAe,CAC/BF,IAAK,SAAUC,EAAQe,EAAUiB,EAAOE,GAChCX,EAASY,QAAQpC,IAAIC,EAAQe,EAAUiB,EAAOE,CAAQ,EAG1D,OADAnC,IAAIgB,CAAQ,EACLQ,CACX,CACJ,CAAC,EAIDS,MAAO,IAAIhB,MAAMhB,OAAQ,CACrByB,IAAK,SAAUzB,EAAQe,EAAUmB,GAY7B,OAVMnB,KAAYf,IACdkC,EAASnB,GAAY,CACjBiB,MAAON,UAAUX,EAAU,IAAI,EAC/BqB,QAAS,WAGL,OADA,OAAOF,EAASnB,GACTsB,IACX,CACJ,GAEGF,QAAQV,IAAIzB,EAAQe,EAAUmB,CAAQ,CACjD,CACJ,CAAC,EAYDI,KAAM,SAAUC,EAAWC,GAGvBlC,OAD0BkC,EAAV,KAAA,IAAZA,EAAgCpC,cAC3BoC,IAFmBD,EAAV,KAAA,IAAdA,EAAoC,GAGvCA,IAAa,IAAIE,QAAQ,SAAUC,GAChC,IAAQC,EACJD,IACA,OAACE,EAAKF,MAAAA,EAAmC,KAAA,EAASA,EAAKG,aAAiDD,EAAGE,KAAKJ,CAAI,EACpH,OAACC,EAAKD,MAAAA,EAAmC,KAAA,EAASA,EAAKK,cAAiDJ,EAAGG,KAAKJ,CAAI,CAE5H,CAAC,CACL,EAIAM,MAAOlD,kBACX,iBACegC"}