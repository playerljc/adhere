{"version":3,"file":"util.js","sources":["util.js"],"sourcesContent":["import { __assign } from \"tslib\";\r\n/*\r\n * @Description: 表格列表\r\n * @Author: yumeng.qin\r\n * @Date: 2021-04-27 16:23:26\r\n * @LastEditor: yumeng.qin\r\n * @LastEditTime: 2021-05-21 10:41:27\r\n */\r\nimport { Tooltip } from 'antd';\r\nimport dayjs from 'dayjs';\r\nimport { difference, isEmpty, union } from 'lodash';\r\nimport React from 'react';\r\nimport FormItemCreator from '@baifendian/adhere-ui-formitemcreator';\r\nimport intl from '@baifendian/adhere-util-intl';\r\nvar Util = /** @class */ (function () {\r\n    function Util(ins) {\r\n        var _this = this;\r\n        /**\r\n         * 获取对应mode的属性\r\n         */\r\n        this.getModeProps = function () {\r\n            return __assign({ rowKey: 'id' }, _this.ins.props[_this.ins.props.mode || 'table']);\r\n        };\r\n        /**\r\n         * 获取默认显示的列项\r\n         */\r\n        this.getDefaultSelectedColumnKeys = function (columns) {\r\n            var showNumber = _this.getModeProps().showNumber;\r\n            var result = (columns || [])\r\n                .filter(function (v) { return v.show || !v.hasOwnProperty('show'); })\r\n                .map(function (v) { return v.key; });\r\n            if (showNumber && !result.includes('xuhao')) {\r\n                result.unshift((showNumber === null || showNumber === void 0 ? void 0 : showNumber.key) || 'xuhao');\r\n            }\r\n            return result;\r\n        };\r\n        /**\r\n         * 获取rowSelection 默认支持跨页选中，如果想要跨页取消设置clearOnChange为true\r\n         */\r\n        this.getRowSelection = function () {\r\n            var _a = _this.ins.state, _b = _a.selectedRowKeys, selectedRowKeys = _b === void 0 ? [] : _b, _c = _a.selectedRows, selectedRows = _c === void 0 ? [] : _c, selectAll = _a.selectAll;\r\n            var rowSelection = _this.getModeProps().rowSelection;\r\n            return rowSelection\r\n                ? __assign(__assign({ \r\n                    // 在表格变化的时候是否清空选中\r\n                    clearOnChange: false }, rowSelection), { onChange: _this.onSelectChange, selectedRowKeys: rowSelection.selectedRowKeys || selectedRowKeys, \r\n                    // 一下是自定义的变量\r\n                    selectedRows: selectedRows, \r\n                    // 是否选中全部数据\r\n                    selectAll: selectAll }) : null;\r\n        };\r\n        /**\r\n         * 获取排序后的表格数据\r\n         */\r\n        this.getSortDataSource = function () {\r\n            return _this.ins.SortableTableRef.state.dataSource;\r\n        };\r\n        /**\r\n         * 获取参数\r\n         */\r\n        this.getParams = function () {\r\n            var params = _this.ins.props.params;\r\n            var formParams = {};\r\n            if (_this.ins.searchFormRef && _this.ins.searchFormRef.current) {\r\n                formParams = _this.ins.searchFormRef.current.getFieldsValue();\r\n            }\r\n            return __assign(__assign(__assign({}, formParams), _this.ins.state.params), params);\r\n        };\r\n        /**\r\n         * 获取表单统一配置\r\n         * @param {*} Formcolumns\r\n         */\r\n        this.getFormColumns = function (Formcolumns, size, searchNow) {\r\n            return Formcolumns.map(function (temp) {\r\n                var t = temp;\r\n                t.contentProps = t.contentProps || {};\r\n                t.contentProps.size = size;\r\n                if (t.type === FormItemCreator.RANGEPICKER || t.type === FormItemCreator.SELECT) {\r\n                    t.contentProps = __assign({ getPopupContainer: function () { return _this.ins.TableListRef; } }, t.contentProps);\r\n                }\r\n                if (t.type === FormItemCreator.SELECT) {\r\n                    t.contentProps = __assign({ style: { width: '150px' }, allowClear: true }, t.contentProps);\r\n                }\r\n                if (searchNow) {\r\n                    t.contentProps = __assign({ onSearch: t.type === FormItemCreator.SEARCH ? function (v) {\r\n                            var _a;\r\n                            return _this.onSearch((_a = {}, _a[t.name] = v, _a));\r\n                        } : null, onPressEnter: t.type !== FormItemCreator.SEARCH\r\n                            ? function (e) {\r\n                                var _a;\r\n                                return _this.onSearch((_a = {},\r\n                                    _a[t.name] = [\r\n                                        FormItemCreator.INPUT,\r\n                                        FormItemCreator.TEXTAREA,\r\n                                        FormItemCreator.NUMBER,\r\n                                    ].includes(t.type)\r\n                                        ? e.target.value\r\n                                        : e,\r\n                                    _a));\r\n                            }\r\n                            : null }, t.contentProps);\r\n                }\r\n                return t;\r\n            });\r\n        };\r\n        /**\r\n         * 获取分页\r\n         */\r\n        this.getPagination = function (pagination) {\r\n            var params = _this.ins.state.params;\r\n            return __assign({ size: 'default', defaultPageSize: 10, current: params.page, pageSize: params.limit, showSizeChanger: true, pageSizeOptions: ['10', '20', '50'], showQuickJumper: true, showTotal: function (total, _a) {\r\n                    var page = _a[0], pageSize = _a[1];\r\n                    return \"\\u5F53\\u524D \".concat(page, \"-\").concat(pageSize, \"/\\u5171 \").concat(total, \" \\u6761\");\r\n                }, onChange: _this.onPageChange, onShowSizeChange: _this.onPageChange }, pagination);\r\n        };\r\n        /**\r\n         * 获取表格的配置项\r\n         */\r\n        this.getTableColumns = function () {\r\n            var params = _this.ins.state.params;\r\n            var _a = _this.getModeProps(), columns = _a.columns, showNumber = _a.showNumber;\r\n            var tableColumns = (columns || []).map(function (item) {\r\n                var _a;\r\n                return (__assign(__assign({}, item), { render: function (text, record, index) {\r\n                        var result = '';\r\n                        if (item.render) {\r\n                            // 如果有render根据传入的显示\r\n                            result = item.render(text, record, index);\r\n                        }\r\n                        else if (item.valueType === 'date') {\r\n                            // 日期类型默认显示\r\n                            result = text ? dayjs(text).format('L') : '-';\r\n                        }\r\n                        else if (item.valueType === 'datetime') {\r\n                            // 带时间的日期类型默认显示\r\n                            result = text ? dayjs(text).format('LLL') : '-';\r\n                        }\r\n                        else if (item.valueType === 'map' && item.map) {\r\n                            // 根据数组匹配进行显示\r\n                            var current = text && (item.map || []).find(function (v) { return v.value.toString() === text.toString(); });\r\n                            result = text && current ? current.label : '-';\r\n                        }\r\n                        else {\r\n                            // 默认显示\r\n                            result = text;\r\n                        }\r\n                        // ellipsis 超出...\r\n                        if (item === null || item === void 0 ? void 0 : item.ellipsis) {\r\n                            return (React.createElement(Tooltip, { title: result, placement: \"topLeft\" }, result));\r\n                        }\r\n                        return result;\r\n                    }, filtered: ((_a = item.filters) === null || _a === void 0 ? void 0 : _a.length) && params[item.key] }));\r\n            });\r\n            // 如果showNumber 则添加序号列\r\n            if (showNumber && !tableColumns.find(function (v) { return v.key === 'xuhao'; })) {\r\n                tableColumns.unshift(__assign({ title: intl.v('序号'), dataIndex: 'xuhao', key: 'xuhao', width: 80, render: function (v, r, i) {\r\n                        return (params.page - 1) * params.limit + i + 1;\r\n                    } }, showNumber));\r\n            }\r\n            return tableColumns;\r\n        };\r\n        /*\r\n         * 获取表格或者列表的loading\r\n         */\r\n        this.getLoading = function (loading) {\r\n            if (loading || _this.ins.state.loading) {\r\n                return loading && loading.hasOwnProperty('size') ? loading : { size: 'large' };\r\n            }\r\n            return false;\r\n        };\r\n        /**\r\n         * 发起请求\r\n         * @param {*} params\r\n         */\r\n        this.fetchList = function (params) {\r\n            var fetchParams = __assign(__assign({}, _this.getParams()), params);\r\n            if (_this.ins.props.request) {\r\n                _this.ins.setState({ loading: true });\r\n                _this.ins.props.request(fetchParams).then(function () {\r\n                    _this.ins.setState({ loading: false });\r\n                });\r\n            }\r\n        };\r\n        /**\r\n         * 搜索\r\n         */\r\n        this.onSearch = function (searchParams) {\r\n            var params = _this.ins.state.params;\r\n            // 当rowSelection.clearOnChange为true 搜索的时候会清空\r\n            var rowSelection = _this.getRowSelection();\r\n            if (rowSelection && !rowSelection.selectAll && rowSelection.clearOnChange) {\r\n                rowSelection.onChange([], []);\r\n            }\r\n            _this.ins.setState({\r\n                params: __assign(__assign(__assign({}, params), searchParams), { page: 1 }),\r\n            }, function () {\r\n                _this.fetchList();\r\n            });\r\n        };\r\n        /**\r\n         * 重置\r\n         */\r\n        this.onResetSearch = function () {\r\n            var params = _this.ins.state.params;\r\n            var rowSelection = _this.getRowSelection();\r\n            if (_this.ins.searchFormRef && _this.ins.searchFormRef.current) {\r\n                _this.ins.searchFormRef.current.resetFields();\r\n            }\r\n            params.page = 1;\r\n            // 重置的时候清空\r\n            if (rowSelection) {\r\n                rowSelection.onChange([], []);\r\n            }\r\n            _this.ins.setState({ params: params }, function () {\r\n                _this.fetchList();\r\n            });\r\n        };\r\n        /**\r\n         * 列设置变化\r\n         */\r\n        this.onSettingChange = function (selectedColumnKeys) {\r\n            _this.ins.setState({ selectedColumnKeys: selectedColumnKeys });\r\n        };\r\n        /**\r\n         * 列设置拖拽排序完毕\r\n         */\r\n        this.onSettingSortEnd = function (_a) {\r\n            var oldIndex = _a.oldIndex, newIndex = _a.newIndex;\r\n            var tableColumns = _this.ins.state.tableColumns;\r\n            if (oldIndex !== newIndex) {\r\n                var oldItem = tableColumns[oldIndex];\r\n                var newData = tableColumns.filter(function (_, i) { return i !== oldIndex; });\r\n                newData.splice(newIndex, 0, oldItem);\r\n                _this.ins.setState({ tableColumns: newData });\r\n            }\r\n        };\r\n        /**\r\n         * 表格变化\r\n         * @param {*} _\r\n         * @param {*} filters\r\n         * @param {*} sorter\r\n         */\r\n        this.onTableChange = function (keys, filters, sorter) {\r\n            var _a;\r\n            if (!isEmpty(sorter) || !isEmpty(filters)) {\r\n                var params = __assign(__assign({}, _this.ins.state.params), { order: (_a = sorter === null || sorter === void 0 ? void 0 : sorter.order) === null || _a === void 0 ? void 0 : _a.replace('end', ''), sidx: sorter === null || sorter === void 0 ? void 0 : sorter.field });\r\n                for (var filterKey in filters) {\r\n                    params[filterKey] = filters[filterKey].join(',');\r\n                    params.page = 1;\r\n                }\r\n                // 当rowSelection.clearOnChange为true 表格变化会清空\r\n                var rowSelection = _this.getRowSelection();\r\n                if (rowSelection && !rowSelection.selectAll && rowSelection.clearOnChange) {\r\n                    rowSelection.onChange([], []);\r\n                }\r\n                _this.ins.setState({ params: params }, function () { return _this.fetchList(); });\r\n            }\r\n        };\r\n        /**\r\n         * 选项变化\r\n         */\r\n        this.onSelectChange = function (selectedRowKeys, selectedRows) {\r\n            var _a = _this.getModeProps(), dataSource = _a.dataSource, rowKey = _a.rowKey, rowSelection = _a.rowSelection;\r\n            var selectAll = _this.ins.state.selectAll;\r\n            if (_this.ins.state.selectAll) {\r\n                var allKeys = dataSource.map(function (v) { return v[rowKey]; });\r\n                var exceptKeys = union(selectAll.exceptKeys || [], difference(allKeys, selectedRowKeys));\r\n                _this.ins.setState({ selectAll: exceptKeys.length ? { exceptKeys: exceptKeys } : true });\r\n            }\r\n            if (rowSelection === null || rowSelection === void 0 ? void 0 : rowSelection.onChange) {\r\n                rowSelection.onChange(selectedRowKeys, selectedRows);\r\n            }\r\n            else {\r\n                _this.ins.setState({ selectedRowKeys: selectedRowKeys, selectedRows: selectedRows });\r\n            }\r\n        };\r\n        /**\r\n         * 分页变化\r\n         * @param {*} page\r\n         * @param {*} limit\r\n         */\r\n        this.onPageChange = function (page, limit) {\r\n            var params = _this.ins.state.params;\r\n            // 当rowSelection.clearOnChange为true 切页面会清空\r\n            var rowSelection = _this.getRowSelection();\r\n            if (rowSelection && !rowSelection.selectAll && rowSelection.clearOnChange) {\r\n                rowSelection.onChange([], []);\r\n            }\r\n            _this.ins.setState({\r\n                params: __assign(__assign({}, params), { page: page, limit: limit }),\r\n            }, function () { return _this.fetchList(); });\r\n        };\r\n        /*\r\n         * 表格删除时候操作，刷列表\r\n         */\r\n        this.onDelete = function (deletedKeys) {\r\n            if (deletedKeys === void 0) { deletedKeys = []; }\r\n            var _a = _this.getModeProps(), pagination = _a.pagination, rowKey = _a.rowKey;\r\n            var total = pagination.total;\r\n            var _b = _this.ins.state.params, page = _b.page, limit = _b.limit;\r\n            if (total % limit === 1 && page === Math.ceil(total / limit)) {\r\n                _this.ins.setState({\r\n                    params: __assign(__assign({}, _this.ins.state.params), { page: page - deletedKeys.length || 1 }),\r\n                }, function () { return _this.fetchList(); });\r\n                return;\r\n            }\r\n            var rowSelection = _this.getRowSelection();\r\n            if (rowSelection) {\r\n                var selectedRowKeys = rowSelection.selectedRowKeys.filter(function (v) { return !deletedKeys.includes(v); });\r\n                var selectedRows = rowSelection.selectedRows.filter(function (v) { return !deletedKeys.includes(v[rowKey]); });\r\n                rowSelection.onChange(selectedRowKeys, selectedRows);\r\n            }\r\n            _this.fetchList();\r\n        };\r\n        this.ins = ins;\r\n    }\r\n    return Util;\r\n}());\r\nexport default Util;\r\n//# sourceMappingURL=util.js.map"],"names":["__assign","Tooltip","dayjs","difference","isEmpty","union","React","FormItemCreator","intl","Util","ins","_this","this","getModeProps","rowKey","props","mode","getDefaultSelectedColumnKeys","columns","showNumber","result","filter","v","show","hasOwnProperty","map","key","includes","unshift","getRowSelection","_a","state","_b","selectedRowKeys","_c","selectedRows","selectAll","rowSelection","clearOnChange","onChange","onSelectChange","getSortDataSource","SortableTableRef","dataSource","getParams","params","formParams","searchFormRef","current","getFieldsValue","getFormColumns","Formcolumns","size","searchNow","temp","t","contentProps","type","RANGEPICKER","SELECT","getPopupContainer","TableListRef","style","width","allowClear","onSearch","SEARCH","name","onPressEnter","e","INPUT","TEXTAREA","NUMBER","target","value","getPagination","pagination","defaultPageSize","page","pageSize","limit","showSizeChanger","pageSizeOptions","showQuickJumper","showTotal","total","concat","onPageChange","onShowSizeChange","getTableColumns","tableColumns","item","render","text","record","index","valueType","format","find","toString","label","ellipsis","createElement","title","placement","filtered","filters","length","dataIndex","r","i","getLoading","loading","fetchList","fetchParams","request","setState","then","searchParams","onResetSearch","resetFields","onSettingChange","selectedColumnKeys","onSettingSortEnd","oldItem","oldIndex","newIndex","newData","_","splice","onTableChange","keys","sorter","filterKey","order","replace","sidx","field","join","allKeys","exceptKeys","onDelete","deletedKeys","Math","ceil"],"mappings":"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"}