{"version":3,"file":"util.js","sources":["util.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n/*\r\n * @Description: 表格列表\r\n * @Author: yumeng.qin\r\n * @Date: 2021-04-27 16:23:26\r\n * @LastEditor: yumeng.qin\r\n * @LastEditTime: 2021-05-06 16:40:40\r\n */\r\nimport React from 'react';\r\nimport { Tooltip } from 'antd';\r\nimport { isEmpty, difference, union } from 'lodash';\r\nimport moment from 'moment';\r\nimport intl from '@baifendian/adhere-util-intl';\r\nvar Util = /** @class */ (function () {\r\n    function Util(ins) {\r\n        var _this = this;\r\n        /**\r\n         * 获取对应mode的属性\r\n         */\r\n        this.getModeProps = function () {\r\n            return __assign({ rowKey: 'id' }, _this.ins.props[_this.ins.props.mode || 'table']);\r\n        };\r\n        /**\r\n         * 获取默认显示的列项\r\n         */\r\n        this.getDefaultSelectedColumnKeys = function (columns) {\r\n            var showNumber = _this.ins.props.showNumber;\r\n            var result = (columns || []).filter(function (v) { return v.show || !v.hasOwnProperty('show'); }).map(function (v) { return v.key; });\r\n            if (showNumber && !result.includes('xuhao')) {\r\n                result.unshift((showNumber === null || showNumber === void 0 ? void 0 : showNumber.key) || 'xuhao');\r\n            }\r\n            ;\r\n            return result;\r\n        };\r\n        /**\r\n         * 获取rowSelection 默认支持跨页选中，如果想要跨页取消设置clearOnChange为true\r\n         */\r\n        this.getRowSelection = function () {\r\n            var _a = _this.ins.state, _b = _a.selectedRowKeys, selectedRowKeys = _b === void 0 ? [] : _b, _c = _a.selectedRows, selectedRows = _c === void 0 ? [] : _c, selectAll = _a.selectAll;\r\n            var rowSelection = _this.getModeProps().rowSelection;\r\n            return rowSelection ? __assign(__assign({ \r\n                // 在表格变化的时候是否清空选中\r\n                clearOnChange: false }, rowSelection), { onChange: _this.onSelectChange, selectedRowKeys: rowSelection.selectedRowKeys || selectedRowKeys, \r\n                // 一下是自定义的变量\r\n                selectedRows: selectedRows,\r\n                // 是否选中全部数据\r\n                selectAll: selectAll }) : null;\r\n        };\r\n        /**\r\n         * 获取排序后的表格数据\r\n         */\r\n        this.getSortDatasource = function () { return _this.ins.SortableTableRef.state.dataSource; };\r\n        /**\r\n         * 获取参数\r\n         */\r\n        this.getParams = function () {\r\n            var params = _this.ins.props.params;\r\n            var formParams = {};\r\n            if (_this.ins.searchFormRef && _this.ins.searchFormRef.current) {\r\n                formParams = _this.ins.searchFormRef.current.getFieldsValue();\r\n            }\r\n            return __assign(__assign(__assign({}, formParams), _this.ins.state.params), params);\r\n        };\r\n        /**\r\n         * 获取表单统一配置\r\n         * @param {*} Formcolumns\r\n         */\r\n        this.getFormColumns = function (Formcolumns, size, searchNow) {\r\n            return Formcolumns.map(function (temp) {\r\n                var t = temp;\r\n                t.contentProps = t.contentProps || {};\r\n                t.contentProps.size = size;\r\n                if (t.type === 'rangepicker' || t.type === 'select') {\r\n                    t.contentProps = __assign({ getPopupContainer: function () { return _this.ins.TableListRef; } }, t.contentProps);\r\n                }\r\n                if (t.type === 'select') {\r\n                    t.contentProps = __assign({ style: { width: '150px' }, allowClear: true }, t.contentProps);\r\n                }\r\n                if (searchNow) {\r\n                    t.contentProps = __assign({ onSearch: t.type === 'search' ? function (v) {\r\n                            var _a;\r\n                            return _this.onSearch((_a = {}, _a[t.name] = v, _a));\r\n                        } : null, onChange: t.type !== 'search' ? function (e) {\r\n                            var _a;\r\n                            return _this.onSearch((_a = {},\r\n                                _a[t.name] = ['input', 'textarea', 'number'].includes(t.type) ? e.target.value : e,\r\n                                _a));\r\n                        } : null }, t.contentProps);\r\n                }\r\n                return t;\r\n            });\r\n        };\r\n        /**\r\n         * 获取分页\r\n         */\r\n        this.getPagination = function (pagination) {\r\n            var params = _this.ins.state.params;\r\n            return __assign({ size: 'default', defaultPageSize: 10, current: params.page, pageSize: params.limit, showSizeChanger: true, pageSizeOptions: ['10', '20', '50'], showQuickJumper: true, showTotal: function (total, _a) {\r\n                    var page = _a[0], pageSize = _a[1];\r\n                    return \"\\u5F53\\u524D \" + page + \"-\" + pageSize + \"/\\u5171 \" + total + \" \\u6761\";\r\n                }, onChange: _this.onPageChange, onShowSizeChange: _this.onPageChange }, pagination);\r\n        };\r\n        /**\r\n         * 获取表格的配置项\r\n         */\r\n        this.getTableColumns = function () {\r\n            var params = _this.ins.state.params;\r\n            var showNumber = _this.ins.props.showNumber;\r\n            var columns = _this.getModeProps().columns;\r\n            var tableColumns = (columns || []).map(function (item) {\r\n                var _a;\r\n                return (__assign(__assign({}, item), { render: function (text, record, index) {\r\n                        var result = '';\r\n                        if (item.render) {\r\n                            // 如果有render根据传入的显示\r\n                            result = item.render(text, record, index);\r\n                        }\r\n                        else if (item.valueType === 'date') {\r\n                            // 日期类型默认显示\r\n                            result = text ? moment(text).format('L') : '-';\r\n                        }\r\n                        else if (item.valueType === 'datetime') {\r\n                            // 带时间的日期类型默认显示\r\n                            result = text ? moment(text).format('LLL') : '-';\r\n                        }\r\n                        else if (item.valueType === 'map' && item.map) {\r\n                            // 根据数组匹配进行显示\r\n                            var current = text && (item.map || []).find(function (v) { return v.value.toString() === text.toString(); });\r\n                            result = text && current ? current.label : '-';\r\n                        }\r\n                        else {\r\n                            // 默认显示\r\n                            result = text;\r\n                        }\r\n                        // ellipsis 超出...\r\n                        if (item === null || item === void 0 ? void 0 : item.ellipsis) {\r\n                            return (React.createElement(Tooltip, { title: result, placement: \"topLeft\" }, result));\r\n                        }\r\n                        return result;\r\n                    }, filtered: ((_a = item.filters) === null || _a === void 0 ? void 0 : _a.length) && params[item.key] }));\r\n            });\r\n            // 如果showNumber 则添加序号列\r\n            if (showNumber && !tableColumns.find(function (v) { return v.key === 'xuhao'; })) {\r\n                tableColumns.unshift(__assign({ title: intl.v('序号'), dataIndex: 'xuhao', key: 'xuhao', width: 80, render: function (v, r, i) {\r\n                        return (params.page - 1) * params.limit + i + 1;\r\n                    } }, showNumber));\r\n            }\r\n            return tableColumns;\r\n        };\r\n        /*\r\n        * 获取表格或者列表的loading\r\n        */\r\n        this.getLoading = function (loading) {\r\n            if (loading || _this.ins.state.loading) {\r\n                return loading && loading.hasOwnProperty('size') ? loading : { size: 'large' };\r\n            }\r\n            return false;\r\n        };\r\n        /**\r\n         * 发起请求\r\n         * @param {*} params\r\n         */\r\n        this.fetchList = function (params) {\r\n            var fetchParams = __assign(__assign({}, _this.getParams()), params);\r\n            if (_this.ins.props.request) {\r\n                _this.ins.setState({ loading: true });\r\n                _this.ins.props.request(fetchParams).then(function () {\r\n                    _this.ins.setState({ loading: false });\r\n                });\r\n            }\r\n        };\r\n        /**\r\n         * 搜索\r\n         */\r\n        this.onSearch = function (searchParams) {\r\n            var params = _this.ins.state.params;\r\n            // 当rowSelection.clearOnChange为true 搜索的时候会清空\r\n            var rowSelection = _this.getRowSelection();\r\n            if (rowSelection && !rowSelection.selectAll && rowSelection.clearOnChange) {\r\n                rowSelection.onChange([], []);\r\n            }\r\n            _this.ins.setState({\r\n                params: __assign(__assign(__assign({}, params), searchParams), { page: 1 })\r\n            }, function () {\r\n                _this.fetchList();\r\n            });\r\n        };\r\n        /**\r\n         * 重置\r\n         */\r\n        this.onResetSearch = function () {\r\n            var params = _this.ins.state.params;\r\n            var rowSelection = _this.getRowSelection();\r\n            if (_this.ins.searchFormRef && _this.ins.searchFormRef.current) {\r\n                _this.ins.searchFormRef.current.resetFields();\r\n            }\r\n            params.page = 1;\r\n            // 重置的时候清空\r\n            if (rowSelection) {\r\n                rowSelection.onChange([], []);\r\n            }\r\n            _this.ins.setState({ params: params }, function () {\r\n                _this.fetchList();\r\n            });\r\n        };\r\n        /**\r\n         * 列设置变化\r\n         */\r\n        this.onSettingChange = function (selectedColumnKeys) {\r\n            _this.ins.setState({ selectedColumnKeys: selectedColumnKeys });\r\n        };\r\n        /**\r\n         * 列设置拖拽排序完毕\r\n         */\r\n        this.onSettingSortEnd = function (_a) {\r\n            var oldIndex = _a.oldIndex, newIndex = _a.newIndex;\r\n            var tableColumns = _this.ins.state.tableColumns;\r\n            if (oldIndex !== newIndex) {\r\n                var oldItem = tableColumns[oldIndex];\r\n                var newData = tableColumns.filter(function (_, i) { return i !== oldIndex; });\r\n                newData.splice(newIndex, 0, oldItem);\r\n                _this.ins.setState({ tableColumns: newData });\r\n            }\r\n        };\r\n        /**\r\n         * 表格变化\r\n         * @param {*} _\r\n         * @param {*} filters\r\n         * @param {*} sorter\r\n         */\r\n        this.onTableChange = function (keys, filters, sorter) {\r\n            var _a;\r\n            if (!isEmpty(sorter) || !isEmpty(filters)) {\r\n                var params = __assign(__assign({}, _this.ins.state.params), { order: (_a = sorter === null || sorter === void 0 ? void 0 : sorter.order) === null || _a === void 0 ? void 0 : _a.replace('end', ''), sidx: sorter === null || sorter === void 0 ? void 0 : sorter.field });\r\n                for (var filterKey in filters) {\r\n                    params[filterKey] = filters[filterKey].join(',');\r\n                    params.page = 1;\r\n                }\r\n                // 当rowSelection.clearOnChange为true 表格变化会清空\r\n                var rowSelection = _this.getRowSelection();\r\n                if (rowSelection && !rowSelection.selectAll && rowSelection.clearOnChange) {\r\n                    rowSelection.onChange([], []);\r\n                }\r\n                _this.ins.setState({ params: params }, function () { return _this.fetchList(); });\r\n            }\r\n        };\r\n        /**\r\n         * 选项变化\r\n         */\r\n        this.onSelectChange = function (selectedRowKeys, selectedRows) {\r\n            var _a = _this.getModeProps(), dataSource = _a.dataSource, rowKey = _a.rowKey, rowSelection = _a.rowSelection;\r\n            var selectAll = _this.ins.state.selectAll;\r\n            if (_this.ins.state.selectAll) {\r\n                var allKeys = dataSource.map(function (v) { return v[rowKey]; });\r\n                var exceptKeys = union(selectAll.exceptKeys || [], difference(allKeys, selectedRowKeys));\r\n                _this.ins.setState({ selectAll: exceptKeys.length ? { exceptKeys: exceptKeys } : true });\r\n            }\r\n            if (rowSelection === null || rowSelection === void 0 ? void 0 : rowSelection.onChange) {\r\n                rowSelection.onChange(selectedRowKeys, selectedRows);\r\n            }\r\n            else {\r\n                _this.ins.setState({ selectedRowKeys: selectedRowKeys, selectedRows: selectedRows });\r\n            }\r\n        };\r\n        /**\r\n         * 分页变化\r\n         * @param {*} page\r\n         * @param {*} limit\r\n         */\r\n        this.onPageChange = function (page, limit) {\r\n            var params = _this.ins.state.params;\r\n            // 当rowSelection.clearOnChange为true 切页面会清空\r\n            var rowSelection = _this.getRowSelection();\r\n            if (rowSelection && !rowSelection.selectAll && rowSelection.clearOnChange) {\r\n                rowSelection.onChange([], []);\r\n            }\r\n            _this.ins.setState({\r\n                params: __assign(__assign({}, params), { page: page, limit: limit })\r\n            }, function () { return _this.fetchList(); });\r\n        };\r\n        /*\r\n        * 表格删除时候操作，刷列表\r\n        */\r\n        this.onDelete = function (deletedKeys) {\r\n            if (deletedKeys === void 0) { deletedKeys = []; }\r\n            var _a = _this.getModeProps(), pagination = _a.pagination, rowKey = _a.rowKey;\r\n            var total = pagination.total;\r\n            var _b = _this.ins.state.params, page = _b.page, limit = _b.limit;\r\n            if (total % limit === 1 && page === Math.ceil(total / limit)) {\r\n                _this.ins.setState({\r\n                    params: __assign(__assign({}, _this.ins.state.params), { page: page - (deletedKeys.length) || 1 })\r\n                }, function () { return _this.fetchList(); });\r\n                return;\r\n            }\r\n            var rowSelection = _this.getRowSelection();\r\n            if (rowSelection) {\r\n                var selectedRowKeys = rowSelection.selectedRowKeys.filter(function (v) { return !deletedKeys.includes(v); });\r\n                var selectedRows = rowSelection.selectedRows.filter(function (v) { return !deletedKeys.includes(v[rowKey]); });\r\n                rowSelection.onChange(selectedRowKeys, selectedRows);\r\n            }\r\n            _this.fetchList();\r\n        };\r\n        this.ins = ins;\r\n        console.log('constructor', this.ins.props);\r\n    }\r\n    return Util;\r\n}());\r\nexport default Util;\r\n"],"names":["__assign","this","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","Tooltip","isEmpty","difference","union","moment","intl","Util","ins","_this","getModeProps","rowKey","props","mode","getDefaultSelectedColumnKeys","columns","showNumber","result","filter","v","show","map","key","includes","unshift","getRowSelection","_a","state","_b","selectedRowKeys","_c","selectedRows","selectAll","rowSelection","clearOnChange","onChange","onSelectChange","getSortDatasource","SortableTableRef","dataSource","getParams","params","formParams","searchFormRef","current","getFieldsValue","getFormColumns","Formcolumns","size","searchNow","temp","contentProps","type","getPopupContainer","TableListRef","style","width","allowClear","onSearch","name","e","target","value","getPagination","pagination","defaultPageSize","page","pageSize","limit","showSizeChanger","pageSizeOptions","showQuickJumper","showTotal","total","onPageChange","onShowSizeChange","getTableColumns","tableColumns","item","render","text","record","index","valueType","format","find","toString","label","ellipsis","createElement","title","placement","filtered","filters","dataIndex","r","getLoading","loading","fetchList","fetchParams","request","setState","then","searchParams","onResetSearch","resetFields","onSettingChange","selectedColumnKeys","onSettingSortEnd","oldIndex","newIndex","oldItem","newData","_","splice","onTableChange","keys","sorter","filterKey","order","replace","sidx","field","join","allKeys","exceptKeys","onDelete","deletedKeys","Math","ceil","console","log"],"mappings":"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"}