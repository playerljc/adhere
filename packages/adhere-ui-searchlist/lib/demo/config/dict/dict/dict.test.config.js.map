{"version":3,"file":"dict.test.config.js","sources":["demo/config/dict/dict/dict.test.config.js"],"sourcesContent":["\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar faker_1 = __importDefault(require(\"faker\"));\r\nvar adhere_util_dict_1 = __importDefault(require(\"@baifendian/adhere-util-dict\"));\r\nexports.default = {\r\n    initStatic: function () {\r\n        // Radio\r\n        adhere_util_dict_1.default.handlers.SystemTestRadio = function () { return [\r\n            {\r\n                value: 1,\r\n                label: '通过',\r\n            },\r\n            {\r\n                value: 2,\r\n                label: '不通过',\r\n            },\r\n            {\r\n                value: 3,\r\n                label: '退回',\r\n            },\r\n        ]; };\r\n        adhere_util_dict_1.default.handlers.SystemTestDynamicRadio = function () {\r\n            return Promise.resolve([\r\n                {\r\n                    value: 1,\r\n                    label: '通过',\r\n                },\r\n                {\r\n                    value: 2,\r\n                    label: '不通过',\r\n                },\r\n                {\r\n                    value: 3,\r\n                    label: '退回',\r\n                },\r\n            ]);\r\n        };\r\n        // CheckBox\r\n        adhere_util_dict_1.default.handlers.SystemTestCheckBox = function () { return [\r\n            {\r\n                value: 1,\r\n                label: '通过',\r\n            },\r\n            {\r\n                value: 2,\r\n                label: '不通过',\r\n            },\r\n            {\r\n                value: 3,\r\n                label: '退回',\r\n            },\r\n        ]; };\r\n        adhere_util_dict_1.default.handlers.SystemTestDynamicCheckBox = function () {\r\n            return Promise.resolve([\r\n                {\r\n                    value: 1,\r\n                    label: '通过',\r\n                },\r\n                {\r\n                    value: 2,\r\n                    label: '不通过',\r\n                },\r\n                {\r\n                    value: 3,\r\n                    label: '退回',\r\n                },\r\n            ]);\r\n        };\r\n        //Select\r\n        adhere_util_dict_1.default.handlers.SystemTestSelect = function () { return [\r\n            {\r\n                value: 1,\r\n                label: '通过',\r\n            },\r\n            {\r\n                value: 2,\r\n                label: '不通过',\r\n            },\r\n            {\r\n                value: 3,\r\n                label: '退回',\r\n            },\r\n        ]; };\r\n        adhere_util_dict_1.default.handlers.SystemTestDynamicSelect = function () {\r\n            return Promise.resolve([\r\n                {\r\n                    value: 1,\r\n                    label: '通过',\r\n                },\r\n                {\r\n                    value: 2,\r\n                    label: '不通过',\r\n                },\r\n                {\r\n                    value: 3,\r\n                    label: '退回',\r\n                },\r\n            ]);\r\n        };\r\n        // AutoComplete\r\n        adhere_util_dict_1.default.handlers.SystemTestAutoCompleteSelect = function () { return function (kw) {\r\n            var data = [\r\n                {\r\n                    label: 'java',\r\n                    value: 1,\r\n                },\r\n                {\r\n                    label: 'javaScript',\r\n                    value: 2,\r\n                },\r\n                {\r\n                    label: 'html',\r\n                    value: 3,\r\n                },\r\n                {\r\n                    label: 'css',\r\n                    value: 4,\r\n                },\r\n                {\r\n                    label: 'spring',\r\n                    value: 5,\r\n                },\r\n                {\r\n                    label: 'react',\r\n                    value: 6,\r\n                },\r\n            ];\r\n            return Promise.resolve(data.filter(function (t) { return t.label.includes(kw); }));\r\n        }; };\r\n        adhere_util_dict_1.default.handlers.SystemTestTree = function () { return [\r\n            {\r\n                title: 'Node1',\r\n                value: '0-0',\r\n                leaf: false,\r\n                children: [\r\n                    {\r\n                        title: 'Child Node1',\r\n                        value: '0-0-1',\r\n                        leaf: true,\r\n                    },\r\n                    {\r\n                        title: 'Child Node2',\r\n                        value: '0-0-2',\r\n                        leaf: true,\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                title: 'Node2',\r\n                value: '0-1',\r\n                leaf: true,\r\n            },\r\n        ]; };\r\n        //Transfer\r\n        adhere_util_dict_1.default.handlers.SystemTestTransfer = function () { return [\r\n            {\r\n                value: 1,\r\n                label: '通过',\r\n            },\r\n            {\r\n                value: 2,\r\n                label: '不通过',\r\n            },\r\n            {\r\n                value: 3,\r\n                label: '退回',\r\n            },\r\n        ]; };\r\n        adhere_util_dict_1.default.handlers.SystemTestDynamicTransfer = function () {\r\n            return Promise.resolve([\r\n                {\r\n                    value: 1,\r\n                    label: '通过',\r\n                },\r\n                {\r\n                    value: 2,\r\n                    label: '不通过',\r\n                },\r\n                {\r\n                    value: 3,\r\n                    label: '退回',\r\n                },\r\n            ]);\r\n        };\r\n        // Table\r\n        adhere_util_dict_1.default.handlers.SystemTestTable = function () {\r\n            return Array.from({ length: 10 }).map(function (t, index) { return ({\r\n                id: faker_1.default.random.uuid(),\r\n                isMore: !!Math.floor((Math.random() * 10) % 2),\r\n                name: faker_1.default.internet.userName(),\r\n                sex: \"\".concat((index + 1) % 2),\r\n                birthDay: faker_1.default.time.recent(),\r\n                deptName: faker_1.default.company.companyName(),\r\n                height: faker_1.default.random.number(),\r\n                width: faker_1.default.random.number(),\r\n                hometown: faker_1.default.address.city(),\r\n                address: faker_1.default.address.streetAddress(),\r\n            }); });\r\n        };\r\n        adhere_util_dict_1.default.handlers.SystemTestTablePagination = function () { return function (paging) {\r\n            var current = paging.current, pageSize = paging.pageSize;\r\n            var data = [];\r\n            data.length = 300;\r\n            data.fill(0);\r\n            var res = {\r\n                resCode: 0,\r\n                data: {\r\n                    total: data.length,\r\n                    pages: 30,\r\n                    current: 1,\r\n                    records: data\r\n                        .slice((current - 1) * pageSize, (current - 1) * pageSize + pageSize)\r\n                        .map(function (t, index) { return ({\r\n                        id: (current - 1) * pageSize + (index + 1),\r\n                        isMore: !!Math.floor((Math.random() * 10) % 2),\r\n                        name: faker_1.default.internet.userName(),\r\n                        sex: \"\".concat((index + 1) % 2),\r\n                        birthDay: faker_1.default.time.recent(),\r\n                        deptName: faker_1.default.company.companyName(),\r\n                        height: faker_1.default.random.number(),\r\n                        width: faker_1.default.random.number(),\r\n                        hometown: faker_1.default.address.city(),\r\n                        address: faker_1.default.address.streetAddress(),\r\n                    }); }),\r\n                },\r\n                resMsg: '',\r\n            };\r\n            return Promise.resolve(res.data);\r\n        }; };\r\n        // Cascader\r\n        adhere_util_dict_1.default.handlers.SystemTestCascader = function () { return [\r\n            {\r\n                value: 'zhejiang',\r\n                label: 'Zhejiang',\r\n                children: [\r\n                    {\r\n                        value: 'hangzhou',\r\n                        label: 'Hangzhou',\r\n                        children: [\r\n                            {\r\n                                value: 'xihu',\r\n                                label: 'West Lake',\r\n                            },\r\n                        ],\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                value: 'jiangsu',\r\n                label: 'Jiangsu',\r\n                children: [\r\n                    {\r\n                        value: 'nanjing',\r\n                        label: 'Nanjing',\r\n                        children: [\r\n                            {\r\n                                value: 'zhonghuamen',\r\n                                label: 'Zhong Hua Men',\r\n                            },\r\n                        ],\r\n                    },\r\n                ],\r\n            },\r\n        ]; };\r\n        adhere_util_dict_1.default.handlers.SystemTestDynamicCascader = function () {\r\n            return Promise.resolve([\r\n                {\r\n                    value: 'zhejiang',\r\n                    label: 'Zhejiang',\r\n                    children: [\r\n                        {\r\n                            value: 'hangzhou',\r\n                            label: 'Hangzhou',\r\n                            children: [\r\n                                {\r\n                                    value: 'xihu',\r\n                                    label: 'West Lake',\r\n                                },\r\n                            ],\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    value: 'jiangsu',\r\n                    label: 'Jiangsu',\r\n                    children: [\r\n                        {\r\n                            value: 'nanjing',\r\n                            label: 'Nanjing',\r\n                            children: [\r\n                                {\r\n                                    value: 'zhonghuamen',\r\n                                    label: 'Zhong Hua Men',\r\n                                },\r\n                            ],\r\n                        },\r\n                    ],\r\n                },\r\n            ]);\r\n        };\r\n        // List\r\n        adhere_util_dict_1.default.handlers.SystemTestList = function () {\r\n            return Array.from({ length: 5 }).map(function (t, index) { return ({\r\n                id: faker_1.default.random.uuid(),\r\n                isMore: !!Math.floor((Math.random() * 10) % 2),\r\n                name: faker_1.default.internet.userName(),\r\n                sex: \"\".concat((index + 1) % 2),\r\n                birthDay: faker_1.default.time.recent(),\r\n                deptName: faker_1.default.company.companyName(),\r\n                height: faker_1.default.random.number(),\r\n                width: faker_1.default.random.number(),\r\n                hometown: faker_1.default.address.city(),\r\n                address: faker_1.default.address.streetAddress(),\r\n            }); });\r\n        };\r\n        adhere_util_dict_1.default.handlers.SystemTestListPagination = function () { return function (paging) {\r\n            var current = paging.current, pageSize = paging.pageSize;\r\n            var data = [];\r\n            data.length = 300;\r\n            data.fill(0);\r\n            var res = {\r\n                resCode: 0,\r\n                data: {\r\n                    total: data.length,\r\n                    pages: 30,\r\n                    current: 1,\r\n                    records: data\r\n                        .slice((current - 1) * pageSize, (current - 1) * pageSize + pageSize)\r\n                        .map(function (t, index) { return ({\r\n                        id: (current - 1) * pageSize + (index + 1),\r\n                        isMore: !!Math.floor((Math.random() * 10) % 2),\r\n                        name: faker_1.default.internet.userName(),\r\n                        sex: \"\".concat((index + 1) % 2),\r\n                        birthDay: faker_1.default.time.recent(),\r\n                        deptName: faker_1.default.company.companyName(),\r\n                        height: faker_1.default.random.number(),\r\n                        width: faker_1.default.random.number(),\r\n                        hometown: faker_1.default.address.city(),\r\n                        address: faker_1.default.address.streetAddress(),\r\n                    }); }),\r\n                },\r\n                resMsg: '',\r\n            };\r\n            return Promise.resolve(res.data);\r\n        }; };\r\n        // sex\r\n        adhere_util_dict_1.default.handlers.SystemTestSexSelect = function () { return [\r\n            {\r\n                label: '男',\r\n                value: '1',\r\n            },\r\n            {\r\n                label: '女',\r\n                value: '0',\r\n            },\r\n        ]; };\r\n    },\r\n    initRemote: function () { },\r\n};\r\n"],"names":["__importDefault","this","mod","__esModule","default","faker_1","Object","defineProperty","exports","value","require","adhere_util_dict_1","initStatic","handlers","SystemTestRadio","label","SystemTestDynamicRadio","Promise","resolve","SystemTestCheckBox","SystemTestDynamicCheckBox","SystemTestSelect","SystemTestDynamicSelect","SystemTestAutoCompleteSelect","kw","filter","t","includes","SystemTestTree","title","leaf","children","SystemTestTransfer","SystemTestDynamicTransfer","SystemTestTable","Array","from","length","map","index","id","random","uuid","isMore","Math","floor","name","internet","userName","sex","concat","birthDay","time","recent","deptName","company","companyName","height","number","width","hometown","address","city","streetAddress","SystemTestTablePagination","paging","current","pageSize","data","res","fill","resCode","total","pages","records","slice","resMsg","SystemTestCascader","SystemTestDynamicCascader","SystemTestList","SystemTestListPagination","SystemTestSexSelect","initRemote"],"mappings":"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"}