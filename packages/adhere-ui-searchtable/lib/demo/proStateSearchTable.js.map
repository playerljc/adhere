{"version":3,"file":"proStateSearchTable.js","sources":["demo/proStateSearchTable.js"],"sourcesContent":["\"use strict\";\n\nrequire(\"core-js/modules/es.object.define-property.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each.js\");\n\nrequire(\"core-js/modules/es.array.iterator.js\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar react_1 = tslib_1.__importStar(require(\"react\"));\n\nvar adhere_1 = require(\"@baifendian/adhere\");\n\nvar index_1 = tslib_1.__importDefault(require(\"../index\"));\n\nrequire(\"./serviceRegister\");\n\nvar ProEditorCellSearchStateTable = index_1.default.ProEditorCellSearchStateTable,\n    EditableContext = index_1.default.EditableContext,\n    SearchTableStateImplementFactory = index_1.default.SearchTableStateImplementFactory;\nvar serviceName = 'user';\n\nfunction RowEditorCell(_a) {\n  var record = _a.record,\n      onEditor = _a.onEditor,\n      onSave = _a.onSave,\n      editorRowId = _a.editorRowId;\n  var form = (0, react_1.useContext)(EditableContext);\n  return react_1.default.createElement(\"div\", null, react_1.default.createElement(adhere_1.ConditionalRender, {\n    conditional: editorRowId !== record.id,\n    noMatch: function noMatch() {\n      return react_1.default.createElement(\"a\", {\n        onClick: function onClick() {\n          form.validateFields().then(function (values) {\n            onSave(values);\n          });\n        }\n      }, \"\\u4FDD\\u5B58\");\n    }\n  }, function () {\n    return react_1.default.createElement(\"a\", {\n      onClick: function onClick() {\n        return onEditor(record.id);\n      }\n    }, \"\\u7F16\\u8F91\\u884C\");\n  }));\n}\n/**\n * ProSearchStateTableImpl\n * @class ProSearchStateTableImpl\n * @classdesc ProSearchStateTableImpl\n */\n\n\nvar ProSearchStateTableImpl =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(ProSearchStateTableImpl, _super);\n\n  function ProSearchStateTableImpl() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  } // constructor(props) {\n  //   super(props);\n  //\n  //   this.state = {\n  //     ...this.state,\n  //     editorRowId: '',\n  //   };\n  // }\n\n\n  ProSearchStateTableImpl.prototype.getComponentId = function () {\n    return 'ProSearchStateTableImpl';\n  };\n\n  ProSearchStateTableImpl.prototype.getServiceName = function () {\n    return serviceName;\n  };\n\n  ProSearchStateTableImpl.prototype.getFetchListPropName = function () {\n    return 'fetchList';\n  };\n\n  ProSearchStateTableImpl.prototype.getOrderFieldValue = function () {\n    return 'height';\n  };\n  /**\n   * getDataKey\n   * @description - 获取数据的key\n   * @protected\n   */\n\n\n  ProSearchStateTableImpl.prototype.getDataKey = function () {\n    return 'list';\n  };\n  /**\n   * getTotalKey\n   * @description - 获取total的key\n   * @protected\n   */\n\n\n  ProSearchStateTableImpl.prototype.getTotalKey = function () {\n    return 'totalCount';\n  };\n  /**\n   * Table的列\n   * @override\n   * @return {*[]}\n   */\n\n\n  ProSearchStateTableImpl.prototype.getColumns = function () {\n    return _super.prototype.getColumns.call(this, [{\n      title: '姓名',\n      dataIndex: 'name',\n      key: 'name',\n      width: 150,\n      render: function render(val) {\n        return react_1.default.createElement(\"div\", {\n          style: {\n            color: 'red'\n          }\n        }, val);\n      },\n      $search: {\n        type: 'input',\n        visible: true\n      },\n      $editable: {\n        editable: true,\n        type: 'input',\n        rules: [{\n          required: true,\n          message: '请选择'\n        }],\n        useKeepEdit: true,\n        props: {\n          onBlur: function onBlur(e, _a) {\n            var updateEditorCellData = _a.updateEditorCellData;\n            updateEditorCellData();\n          }\n        } // props: {\n        //   onBlur: (e, { form, rowIndex, dataIndex }) => {\n        //     form.validateFields().then((values) => {\n        //       // 调用修改接口\n        //       // 修改当前数据\n        //     });\n        //   },\n        // },\n        // onSave: (params) => {\n        //   return new Promise((resolve) => {\n        //     this.fetchData();\n        //     resolve();\n        //   });\n        // },\n\n      }\n    }, {\n      title: '性别',\n      dataIndex: 'sex',\n      key: 'sex',\n      align: 'center',\n      width: 150,\n      render: function render(v) {\n        return adhere_1.Resource.Dict.value.ResourceNormalSexMap.value.get(v).label;\n      },\n      $search: {\n        type: 'select',\n        visible: true,\n        dictName: 'SystemTestSexSelect'\n      },\n      $editable: {\n        editable: true,\n        type: 'select',\n        dictName: 'SystemTestSexSelect',\n        rules: [{\n          required: true,\n          message: '请选择'\n        }],\n        // onSave: (params) => {\n        //   return new Promise((resolve) => {\n        //     this.fetchData();\n        //     resolve();\n        //   });\n        // },\n        useKeepEdit: true,\n        props: {\n          onChange: function onChange(e, _a) {\n            var updateEditorCellData = _a.updateEditorCellData;\n            updateEditorCellData();\n          }\n        }\n      }\n    }, {\n      title: '出生年月',\n      dataIndex: 'birthday',\n      key: 'birthday',\n      align: 'center',\n      width: 200,\n      sorter: true,\n      sortOrder: this.sortOrder('birthday'),\n      render: function render(val) {\n        return react_1.default.createElement(adhere_1.DateDisplay.DateDisplay10, {\n          value: val\n        });\n      },\n      $search: {\n        type: 'rangePicker',\n        visible: true,\n        startName: 'birthDayStart',\n        endName: 'birthDayEnd'\n      },\n      $editable: {\n        editable: true,\n        type: 'datePicker',\n        rules: [{\n          required: true,\n          message: '请选择'\n        }],\n        // onSave: (params) => {\n        //   return new Promise((resolve) => {\n        //     this.fetchData();\n        //     resolve();\n        //   });\n        // },\n        useKeepEdit: true,\n        props: {\n          onChange: function onChange(e, _a) {\n            var updateEditorCellData = _a.updateEditorCellData;\n            updateEditorCellData();\n          }\n        }\n      }\n    }, {\n      title: '身高',\n      dataIndex: 'height',\n      key: 'height',\n      align: 'center',\n      width: 150,\n      sorter: true,\n      sortOrder: this.sortOrder('height'),\n      $search: {\n        type: 'inputNumberDecimal2',\n        visible: true\n      },\n      $editable: {\n        editable: true,\n        type: 'inputNumberDecimal2',\n        rules: [{\n          required: true,\n          message: '请选择'\n        }],\n        useKeepEdit: true,\n        props: {\n          onBlur: function onBlur(e, _a) {\n            var updateEditorCellData = _a.updateEditorCellData;\n            updateEditorCellData();\n          }\n        } // onSave: (params) => {\n        //   return new Promise((resolve) => {\n        //     this.fetchData();\n        //     resolve();\n        //   });\n        // },\n\n      }\n    }, {\n      title: '体重',\n      dataIndex: 'width',\n      key: 'width',\n      align: 'center',\n      width: 150,\n      sorter: true,\n      sortOrder: this.sortOrder('width'),\n      $search: {\n        type: 'inputNumberDecimal2',\n        visible: true\n      },\n      $editable: {\n        editable: true,\n        type: 'inputNumberDecimal2',\n        rules: [{\n          required: true,\n          message: '请选择'\n        }],\n        useKeepEdit: true,\n        props: {\n          onBlur: function onBlur(e, _a) {\n            var updateEditorCellData = _a.updateEditorCellData;\n            updateEditorCellData();\n          }\n        } // onSave: (params) => {\n        //   return new Promise((resolve) => {\n        //     this.fetchData();\n        //     resolve();\n        //   });\n        // },\n\n      }\n    }, {\n      title: '籍贯',\n      dataIndex: 'homeTown',\n      key: 'homeTown',\n      ellipsis: true,\n      width: 200,\n      $search: {\n        type: 'input',\n        visible: true\n      },\n      $editable: {\n        editable: true,\n        type: 'input',\n        rules: [{\n          required: true,\n          message: '请选择'\n        }],\n        useKeepEdit: true,\n        props: {\n          onBlur: function onBlur(e, _a) {\n            var updateEditorCellData = _a.updateEditorCellData;\n            updateEditorCellData();\n          }\n        } // onSave: (params) => {\n        //   return new Promise((resolve) => {\n        //     this.fetchData();\n        //     resolve();\n        //   });\n        // },\n\n      }\n    }, {\n      title: '现居住地',\n      dataIndex: 'address',\n      key: 'address',\n      width: 300,\n      $search: {\n        type: 'input',\n        visible: true,\n        valueAttrs: {\n          colSpan: 5\n        }\n      },\n      $editable: {\n        editable: true,\n        type: 'input',\n        rules: [{\n          required: true,\n          message: '请选择'\n        }],\n        useKeepEdit: true,\n        props: {\n          onBlur: function onBlur(e, _a) {\n            var updateEditorCellData = _a.updateEditorCellData;\n            updateEditorCellData();\n          }\n        } // onSave: (params) => {\n        //   return new Promise((resolve) => {\n        //     this.fetchData();\n        //     resolve();\n        //   });\n        // },\n\n      }\n    } // {\n    //   title: '操作',\n    //   dataIndex: this.getOptionsColumnDataIndex(),\n    //   key: this.getOptionsColumnDataIndex(),\n    //   width: 200,\n    //   render: (v, record, rowIndex) => (\n    //     <RowEditorCell\n    //       value={v}\n    //       record={record}\n    //       rowIndex={rowIndex}\n    //       editorRowId={this.state.editorRowId}\n    //       onEditor={(id) => {\n    //         this.setState({\n    //           editorRowId: id,\n    //         });\n    //       }}\n    //       onSave={(values) => {\n    //         this.fetchData().then(() =>\n    //           this.setState({\n    //             editorRowId: '',\n    //           }),\n    //         );\n    //       }}\n    //     />\n    //   ),\n    //   /*(\n    //     <OptionsWrap style={{ justifyContent: 'center' }}>\n    //       {this.renderOptionColumn(\n    //         [\n    //           {\n    //             key: 'edit',\n    //             value: (\n    //               <ConditionalRender\n    //                 conditional={true}\n    //                 noMatch={() => <DisabledOption>编辑</DisabledOption>}\n    //               >\n    //                 {() => (\n    //                   <a\n    //                     onClick={() => {\n    //                       this.setState({\n    //                         editorRowId: rowIndex,\n    //                       });\n    //                     }}\n    //                   >\n    //                     编辑行\n    //                   </a>\n    //                 )}\n    //               </ConditionalRender>\n    //             ),\n    //           },\n    //           {\n    //             key: 'view',\n    //             value: <a>查看</a>,\n    //           },\n    //           {\n    //             key: 'delete',\n    //             value: (\n    //               <DelConfirm\n    //                 success={() =>\n    //                   Promise.resolve().then(() => {\n    //                     this.fetchData();\n    //                   })\n    //                 }\n    //               >\n    //                 <a>删除</a>\n    //               </DelConfirm>\n    //             ),\n    //           },\n    //         ],\n    //         { value: v, record },\n    //       )}\n    //     </OptionsWrap>\n    //   )*/\n    // },\n    ]);\n  };\n\n  return ProSearchStateTableImpl;\n}(ProEditorCellSearchStateTable);\n\nProSearchStateTableImpl.propTypes = {};\nvar models = [];\n\nvar requireComponent = require.context('./model', false, /.*\\.(js)$/);\n\nrequireComponent.keys().forEach(function (fileName) {\n  var model = requireComponent(fileName);\n  models.push(model.default());\n});\nvar Wrap = SearchTableStateImplementFactory({\n  serviceNames: [serviceName],\n  middleWares: [],\n  reducer: null,\n  models: models\n})(ProSearchStateTableImpl);\nexports.default = Wrap;"],"names":["require","Object","defineProperty","exports","value","tslib_1","react_1","__importStar","adhere_1","index_1","__importDefault","ProEditorCellSearchStateTable","default","EditableContext","SearchTableStateImplementFactory","serviceName","RowEditorCell","_a","record","onEditor","onSave","editorRowId","form","useContext","createElement","ConditionalRender","conditional","id","noMatch","onClick","validateFields","then","values","ProSearchStateTableImpl","_super","apply","this","arguments","__extends","prototype","getComponentId","getServiceName","getFetchListPropName","getOrderFieldValue","getDataKey","getTotalKey","getColumns","call","title","dataIndex","key","width","render","val","style","color","$search","type","visible","$editable","editable","rules","required","message","useKeepEdit","props","onBlur","e","updateEditorCellData","align","v","Resource","Dict","ResourceNormalSexMap","get","label","dictName","onChange","sorter","sortOrder","DateDisplay","DateDisplay10","startName","endName","ellipsis","valueAttrs","colSpan","models","propTypes","requireComponent","context","Wrap","keys","forEach","fileName","model","push","serviceNames","middleWares","reducer"],"mappings":"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"}