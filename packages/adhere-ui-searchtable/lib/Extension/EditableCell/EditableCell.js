"use strict";var __assign=function(){return(__assign=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var n in t=arguments[a])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}).apply(this,arguments)},__createBinding=Object.create?function(e,t,a,r){void 0===r&&(r=a);var n=Object.getOwnPropertyDescriptor(t,a);n&&("get"in n?t.__esModule:!n.writable&&!n.configurable)||(n={enumerable:!0,get:function(){return t[a]}}),Object.defineProperty(e,r,n)}:function(e,t,a,r){e[r=void 0===r?a:r]=t[a]},__setModuleDefault=Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t},__importStar=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var a in e)"default"!==a&&Object.prototype.hasOwnProperty.call(e,a)&&__createBinding(t,e,a);return __setModuleDefault(t,e),t},__importDefault=function(e){return e&&e.__esModule?e:{default:e}},react_1=(Object.defineProperty(exports,"__esModule",{value:!0}),__importStar(require("react"))),SearchTable_1=require("../../SearchTable"),EditableCellEdit_1=__importDefault(require("./Edit/EditableCellEdit")),View_1=__importDefault(require("./View")),EditableCell=function(a){var e=a.column,t={editable:!1,defaultStatus:"view",type:"input",props:{},formItemProps:{},useTrigger:!0,require:!0,dataIndex:null==e?void 0:e.dataIndex,useKeepEdit:!1},r=(0,react_1.useMemo)(function(){return __assign(__assign({},t),(null==e?void 0:e.$editable)||{})},[e,null==e?void 0:e.dataIndex]),n=(0,react_1.useState)(r.defaultStatus),i=n[0],l=n[1],n=(0,react_1.useContext)(SearchTable_1.SearchTableContext);return(0,react_1.useEffect)(function(){l(null==r?void 0:r.defaultStatus)},[null==(n=null==n?void 0:n.context)?void 0:n.getData()]),(0,react_1.useEffect)(function(){l(null==r?void 0:r.defaultStatus)},[null==r?void 0:r.defaultStatus]),function(e){var t=e;return r.editable?r.useKeepEdit?t=react_1.default.cloneElement(e,e.props,[react_1.default.createElement(EditableCellEdit_1.default,__assign({},a,{editableConfig:r,onTriggerChange:function(){l("view")}}))]):"view"===i?t=react_1.default.cloneElement(e,e.props,[react_1.default.createElement(View_1.default,__assign({},a,{editableConfig:r,onTriggerChange:function(){l("edit")}}))]):"edit"===i&&(t=react_1.default.cloneElement(e,e.props,[react_1.default.createElement(EditableCellEdit_1.default,__assign({},a,{editableConfig:r,onTriggerChange:function(){l("view")}}))])):t=e,t}};exports.default=EditableCell;
//# sourceMappingURL=EditableCell.js.map
