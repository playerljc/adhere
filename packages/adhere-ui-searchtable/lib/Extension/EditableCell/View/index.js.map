{"version":3,"file":"index.js","sources":["Extension/EditableCell/View/index.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar classnames_1 = tslib_1.__importDefault(require(\"classnames\"));\r\nvar react_1 = tslib_1.__importDefault(require(\"react\"));\r\nvar icons_1 = require(\"@ant-design/icons\");\r\nvar SearchTable_1 = require(\"../../../SearchTable\");\r\n/**\r\n * EditableCellViewProps\r\n * @description 可编辑单元格的查看状态\r\n */\r\nvar EditableCellView = function (props) {\r\n    var record = props.record, column = props.column, rowIndex = props.rowIndex, columns = props.columns, editableConfig = props.editableConfig, onTriggerChange = props.onTriggerChange, restProps = tslib_1.__rest(props, [\"record\", \"column\", \"rowIndex\", \"columns\", \"editableConfig\", \"onTriggerChange\"]);\r\n    var useTrigger = editableConfig.useTrigger, renderToEditTrigger = editableConfig.renderToEditTrigger, dataIndex = editableConfig.dataIndex, onBeforeToEdit = editableConfig.onBeforeToEdit;\r\n    // 不使用句柄则返回原始组件\r\n    if (!useTrigger) {\r\n        // @ts-ignore\r\n        return react_1.default.createElement(react_1.default.Fragment, null, restProps === null || restProps === void 0 ? void 0 : restProps.children);\r\n    }\r\n    /**\r\n     * renderTrigger\r\n     * @description 渲染句柄\r\n     */\r\n    function renderTrigger() {\r\n        return react_1.default.createElement(icons_1.EditOutlined, null);\r\n    }\r\n    /**\r\n     * onTrigger\r\n     * @description 点击了句柄\r\n     */\r\n    function onTrigger() {\r\n        var _a;\r\n        if (onBeforeToEdit) {\r\n            (_a = onBeforeToEdit({\r\n                value: record[dataIndex],\r\n                record: record,\r\n                dataIndex: dataIndex,\r\n                rowIndex: rowIndex,\r\n            })) === null || _a === void 0 ? void 0 : _a.then(function () { return onTriggerChange === null || onTriggerChange === void 0 ? void 0 : onTriggerChange(); });\r\n            return;\r\n        }\r\n        onTriggerChange === null || onTriggerChange === void 0 ? void 0 : onTriggerChange();\r\n    }\r\n    return (react_1.default.createElement(\"div\", { className: \"\".concat(SearchTable_1.selectorPrefix, \"-editablecell-view\") },\r\n        react_1.default.createElement(\"div\", { className: (0, classnames_1.default)(\"\".concat(SearchTable_1.selectorPrefix, \"-editablecell-view-inner\"), 'ellipsis' in column && column.ellipsis\r\n                ? \"\".concat(SearchTable_1.selectorPrefix, \"-editablecell-view-inner-ellipsis\")\r\n                : '') }, \r\n        // @ts-ignore\r\n        restProps === null || restProps === void 0 ? void 0 : restProps.children),\r\n        react_1.default.createElement(\"div\", { className: \"\".concat(SearchTable_1.selectorPrefix, \"-editablecell-view-trigger\") },\r\n            react_1.default.createElement(\"div\", { className: \"\".concat(SearchTable_1.selectorPrefix, \"-editablecell-view-trigger-inner\"), onClick: onTrigger },\r\n                !!renderToEditTrigger &&\r\n                    (renderToEditTrigger === null || renderToEditTrigger === void 0 ? void 0 : renderToEditTrigger({\r\n                        value: record === null || record === void 0 ? void 0 : record[dataIndex],\r\n                        record: record,\r\n                        dataIndex: dataIndex,\r\n                        rowIndex: rowIndex,\r\n                    })),\r\n                !renderToEditTrigger && renderTrigger()))));\r\n};\r\nexports.default = EditableCellView;\r\n//# sourceMappingURL=index.js.map"],"names":["Object","defineProperty","exports","value","tslib_1","require","classnames_1","__importDefault","react_1","icons_1","SearchTable_1","EditableCellView","props","record","column","rowIndex","editableConfig","columns","onTriggerChange","restProps","__rest","useTrigger","renderToEditTrigger","dataIndex","onBeforeToEdit","default","createElement","className","concat","selectorPrefix","ellipsis","children","onClick","_a","then","EditOutlined","Fragment"],"mappings":"AAAA,aACAA,OAAOC,eAAeC,QAAS,aAAc,CAAEC,MAAO,CAAA,CAAK,CAAC,EAC5D,IAAIC,QAAUC,QAAQ,OAAO,EACzBC,aAAeF,QAAQG,gBAAgBF,QAAQ,YAAY,CAAC,EAC5DG,QAAUJ,QAAQG,gBAAgBF,QAAQ,OAAO,CAAC,EAClDI,QAAUJ,QAAQ,mBAAmB,EACrCK,cAAgBL,QAAQ,sBAAsB,EAK9CM,iBAAmB,SAAUC,GAC7B,IAAIC,EAASD,EAAMC,OAAQC,EAASF,EAAME,OAAQC,EAAWH,EAAMG,SAAmCC,GAAfJ,EAAMK,QAA0BL,EAAMI,gBAAgBE,EAAkBN,EAAMM,gBAAiBC,EAAYf,QAAQgB,OAAOR,EAAO,CAAC,SAAU,SAAU,WAAY,UAAW,iBAAkB,kBAAkB,EACpSS,EAAaL,EAAeK,WAAYC,EAAsBN,EAAeM,oBAAqBC,EAAYP,EAAeO,UAAWC,EAAiBR,EAAeQ,eAE5K,OAAKH,EA4BGb,QAAQiB,QAAQC,cAAc,MAAO,CAAEC,UAAW,GAAGC,OAAOlB,cAAcmB,eAAgB,oBAAoB,CAAE,EACpHrB,QAAQiB,QAAQC,cAAc,MAAO,CAAEC,WAAW,EAAIrB,aAAamB,SAAS,GAAGG,OAAOlB,cAAcmB,eAAgB,0BAA0B,EAAG,aAAcf,GAAUA,EAAOgB,SACtK,GAAGF,OAAOlB,cAAcmB,eAAgB,mCAAmC,EAC3E,EAAE,CAAE,EAEdV,MAAAA,EAA6C,KAAA,EAASA,EAAUY,QAAQ,EACxEvB,QAAQiB,QAAQC,cAAc,MAAO,CAAEC,UAAW,GAAGC,OAAOlB,cAAcmB,eAAgB,4BAA4B,CAAE,EACpHrB,QAAQiB,QAAQC,cAAc,MAAO,CAAEC,UAAW,GAAGC,OAAOlB,cAAcmB,eAAgB,kCAAkC,EAAGG,QApBvI,WACI,IAAIC,EACAT,EACA,OAACS,EAAKT,EAAe,CACjBrB,MAAOU,EAAOU,GACdV,OAAQA,EACRU,UAAWA,EACXR,SAAUA,CACd,CAAC,IAAwCkB,EAAGC,KAAK,WAAc,OAAOhB,MAAAA,EAAyD,KAAA,EAASA,EAAgB,CAAG,CAAC,EAGhKA,MAAAA,GAAkEA,EAAgB,CACtF,CAQ0J,EAC9I,CAAC,CAACI,IACGA,MAAAA,EAAiE,KAAA,EAASA,EAAoB,CAC3FnB,MAAOU,MAAAA,EAAuC,KAAA,EAASA,EAAOU,GAC9DV,OAAQA,EACRU,UAAWA,EACXR,SAAUA,CACd,CAAC,GACL,CAACO,GAlCFd,QAAQiB,QAAQC,cAAcjB,QAAQ0B,aAAc,IAAI,CAkChB,CAAC,CAAE,EAzC3C3B,QAAQiB,QAAQC,cAAclB,QAAQiB,QAAQW,SAAU,KAAMjB,MAAAA,EAA6C,KAAA,EAASA,EAAUY,QAAQ,CA0CrJ,EACA7B,QAAQuB,QAAUd"}