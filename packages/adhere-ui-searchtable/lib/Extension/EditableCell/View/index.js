var __rest=this&&this.__rest||function(e,r){var t={};for(n in e)Object.prototype.hasOwnProperty.call(e,n)&&r.indexOf(n)<0&&(t[n]=e[n]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var l=0,n=Object.getOwnPropertySymbols(e);l<n.length;l++)r.indexOf(n[l])<0&&Object.prototype.propertyIsEnumerable.call(e,n[l])&&(t[n[l]]=e[n[l]]);return t};import classNames from"classnames";import React from"react";import{EditOutlined}from"@ant-design/icons";import{selectorPrefix}from"../../../SearchTable";var EditableCellView=function(e){var r=e.record,t=e.column,l=e.rowIndex,n=(e.columns,e.editableConfig),i=e.onTriggerChange,e=__rest(e,["record","column","rowIndex","columns","editableConfig","onTriggerChange"]),a=n.useTrigger,c=n.renderToEditTrigger,o=n.dataIndex,d=n.onBeforeToEdit;return a?React.createElement("div",{className:"".concat(selectorPrefix,"-editablecell-view")},React.createElement("div",{className:classNames("".concat(selectorPrefix,"-editablecell-view-inner"),"ellipsis"in t&&t.ellipsis?"".concat(selectorPrefix,"-editablecell-view-inner-ellipsis"):"")},null==e?void 0:e.children),React.createElement("div",{className:"".concat(selectorPrefix,"-editablecell-view-trigger")},React.createElement("div",{className:"".concat(selectorPrefix,"-editablecell-view-trigger-inner"),onClick:function(){var e;d?null!=(e=d({value:r[o],record:r,dataIndex:o,rowIndex:l}))&&e.then(function(){return null==i?void 0:i()}):null!=i&&i()}},!!c&&(null==c?void 0:c({value:null==r?void 0:r[o],record:r,dataIndex:o,rowIndex:l})),!c&&React.createElement(EditOutlined,null)))):React.createElement(React.Fragment,null,null==e?void 0:e.children)};export default EditableCellView;
//# sourceMappingURL=index.js.map
