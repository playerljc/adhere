{"version":3,"file":"EditableTableCell.js","sources":["Extension/EditableCell/EditableTableCell.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nimport React, { useContext, useEffect, useMemo, useState } from 'react';\r\nimport { SearchTableContext } from '../../SearchTable';\r\nimport EditableTableCellEdit from './Edit/EditableTableCellEdit';\r\nimport EditableCellView from './View';\r\n/**\r\n * EditableTableCell\r\n * @description 单元格编辑\r\n */\r\nvar EditableTableCell = function (props) {\r\n    var _a;\r\n    var column = props.column;\r\n    /**\r\n     * defaultConfig\r\n     * @description 缺省的单元格配置\r\n     */\r\n    var defaultConfig = {\r\n        editable: false,\r\n        defaultStatus: 'view',\r\n        type: 'input',\r\n        props: {},\r\n        formItemProps: {},\r\n        useTrigger: true,\r\n        require: true,\r\n        dataIndex: column === null || column === void 0 ? void 0 : column.dataIndex,\r\n        useKeepEdit: false,\r\n    };\r\n    /**\r\n     * editableConfig\r\n     * @description 实际的单元格配置\r\n     */\r\n    var editableConfig = useMemo(function () { return (__assign(__assign({}, defaultConfig), ((column === null || column === void 0 ? void 0 : column.$editable) || {}))); }, [column, column === null || column === void 0 ? void 0 : column.dataIndex]);\r\n    /**\r\n     * status\r\n     * @description 单元格的状态\r\n     */\r\n    var _b = useState(editableConfig.defaultStatus), status = _b[0], setStatus = _b[1];\r\n    var context = useContext(SearchTableContext);\r\n    /**\r\n     * 数据改变则切换成查看状态\r\n     */\r\n    useEffect(function () {\r\n        setStatus(editableConfig === null || editableConfig === void 0 ? void 0 : editableConfig.defaultStatus);\r\n    }, [(_a = context === null || context === void 0 ? void 0 : context.context) === null || _a === void 0 ? void 0 : _a.getData()]);\r\n    /**\r\n     * 缺省状态改变切换到缺省状态\r\n     */\r\n    useEffect(function () {\r\n        setStatus(editableConfig === null || editableConfig === void 0 ? void 0 : editableConfig.defaultStatus);\r\n    }, [editableConfig === null || editableConfig === void 0 ? void 0 : editableConfig.defaultStatus]);\r\n    return function (tdREL) {\r\n        var res = tdREL;\r\n        // 单元格不是可编辑的单元格\r\n        if (!editableConfig.editable) {\r\n            res = tdREL;\r\n        }\r\n        // 始终保持编辑状态\r\n        else if (editableConfig.useKeepEdit) {\r\n            res = React.cloneElement(tdREL, tdREL.props, [\r\n                React.createElement(EditableTableCellEdit, __assign({}, props, { editableConfig: editableConfig, onTriggerChange: function () { return setStatus('view'); } })),\r\n            ]);\r\n        }\r\n        // 查看状态\r\n        else if (status === 'view') {\r\n            res = React.cloneElement(tdREL, tdREL.props, [\r\n                React.createElement(EditableCellView, __assign({}, props, { editableConfig: editableConfig, onTriggerChange: function () { return setStatus('edit'); } })),\r\n            ]);\r\n        }\r\n        // 编辑状态\r\n        else if (status === 'edit') {\r\n            res = React.cloneElement(tdREL, tdREL.props, [\r\n                React.createElement(EditableTableCellEdit, __assign({}, props, { editableConfig: editableConfig, onTriggerChange: function () { return setStatus('view'); } })),\r\n            ]);\r\n        }\r\n        return res;\r\n    };\r\n};\r\nexport default EditableTableCell;\r\n"],"names":["__assign","this","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","useContext","useEffect","useMemo","useState","SearchTableContext","EditableTableCellEdit","EditableCellView","EditableTableCell","props","column","defaultConfig","editable","defaultStatus","type","formItemProps","useTrigger","require","dataIndex","useKeepEdit","editableConfig","$editable","_b","status","setStatus","context","_a","getData","tdREL","res","cloneElement","createElement","onTriggerChange"],"mappings":"AAAA,IAAIA,SAAYC,MAAQA,KAAKD,UAAa,WAStC,OARAA,SAAWE,OAAOC,QAAU,SAASC,GACjC,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,CAAC,GAE7C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,CAAC,IAC1DN,EAAEM,GAAKL,EAAEK,IAEjB,OAAON,CACX,GACgBU,MAAMb,KAAMO,SAAS,CACzC,SACOO,OAASC,WAAYC,UAAWC,QAASC,QAAuB,KAAP,eACvDC,kBAA6C,KAAnB,2BAC5BC,0BAA2B,sCAC3BC,qBAAsB,SAK7B,IAAIC,kBAAoB,SAAUC,GAC9B,IACIC,EAASD,EAAMC,OAKfC,EAAgB,CAChBC,SAAU,CAAA,EACVC,cAAe,OACfC,KAAM,QACNL,MAAO,GACPM,cAAe,GACfC,WAAY,CAAA,EACZC,QAAS,CAAA,EACTC,UAAWR,MAAAA,EAAuC,KAAA,EAASA,EAAOQ,UAClEC,YAAa,CAAA,CACjB,EAKIC,EAAiBjB,QAAQ,WAAc,OAAQlB,SAASA,SAAS,GAAI0B,CAAa,GAAKD,MAAAA,EAAuC,KAAA,EAASA,EAAOW,YAAc,EAAI,CAAG,EAAG,CAACX,EAAQA,MAAAA,EAAuC,KAAA,EAASA,EAAOQ,UAAU,EAKhPI,EAAKlB,SAASgB,EAAeP,aAAa,EAAGU,EAASD,EAAG,GAAIE,EAAYF,EAAG,GAC5EG,EAAUxB,WAAWI,kBAAkB,EAa3C,OATAH,UAAU,WACNsB,EAAUJ,MAAAA,EAAuD,KAAA,EAASA,EAAeP,aAAa,CAC1G,EAAG,CAAC,OAACa,EAAKD,MAAAA,EAAyC,KAAA,EAASA,EAAQA,SAAqC,KAAA,EAASC,EAAGC,QAAQ,EAAE,EAI/HzB,UAAU,WACNsB,EAAUJ,MAAAA,EAAuD,KAAA,EAASA,EAAeP,aAAa,CAC1G,EAAG,CAACO,MAAAA,EAAuD,KAAA,EAASA,EAAeP,cAAc,EAC1F,SAAUe,GACb,IAAIC,EAAMD,EAuBV,OArBKR,EAAeR,SAIXQ,EAAeD,YACpBU,EAAM7B,MAAM8B,aAAaF,EAAOA,EAAMnB,MAAO,CACzCT,MAAM+B,cAAczB,sBAAuBrB,SAAS,GAAIwB,EAAO,CAAEW,eAAgBA,EAAgBY,gBAAiB,WAAc,OAAOR,EAAU,MAAM,CAAG,CAAE,CAAC,CAAC,EACjK,EAGe,SAAXD,EACLM,EAAM7B,MAAM8B,aAAaF,EAAOA,EAAMnB,MAAO,CACzCT,MAAM+B,cAAcxB,iBAAkBtB,SAAS,GAAIwB,EAAO,CAAEW,eAAgBA,EAAgBY,gBAAiB,WAAc,OAAOR,EAAU,MAAM,CAAG,CAAE,CAAC,CAAC,EAC5J,EAGe,SAAXD,IACLM,EAAM7B,MAAM8B,aAAaF,EAAOA,EAAMnB,MAAO,CACzCT,MAAM+B,cAAczB,sBAAuBrB,SAAS,GAAIwB,EAAO,CAAEW,eAAgBA,EAAgBY,gBAAiB,WAAc,OAAOR,EAAU,MAAM,CAAG,CAAE,CAAC,CAAC,EACjK,GAlBDK,EAAMD,EAoBHC,CACX,CACJ,iBACerB"}