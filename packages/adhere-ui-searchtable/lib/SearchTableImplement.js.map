{"version":3,"file":"SearchTableImplement.js","sources":["SearchTableImplement.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SearchTableImplement = exports.selectorPrefix = void 0;\r\nvar tslib_1 = require(\"tslib\");\r\nvar prop_types_1 = tslib_1.__importDefault(require(\"prop-types\"));\r\nvar react_1 = tslib_1.__importStar(require(\"react\"));\r\nvar serviceregister_1 = tslib_1.__importDefault(require(\"@ctsj/state/lib/middleware/saga/serviceregister\"));\r\nvar SearchTable_1 = tslib_1.__importStar(require(\"./SearchTable\"));\r\nexports.selectorPrefix = 'adhere-ui-searchtableimplement';\r\n/**\r\n * SearchTableImplement\r\n * @class SearchTableImplement\r\n * @classdesc SearchTableImplement - SearchTable的默认实现\r\n */\r\nvar SearchTableImplement = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SearchTableImplement, _super);\r\n    function SearchTableImplement(props) {\r\n        var _a;\r\n        var _this = _super.call(this, props) || this;\r\n        _this.innerWrapRef = (0, react_1.createRef)();\r\n        // ------------ 不需要重写(override)的方法 start ------------------\r\n        /**\r\n         * onSelectChange\r\n         * @description - onSelectChange\r\n         * @param property\r\n         * @param v\r\n         */\r\n        _this.onSelectChange = function (property, v) {\r\n            var _a;\r\n            _this.setState((_a = {},\r\n                _a[property] = v,\r\n                _a));\r\n        };\r\n        /**\r\n         * onInputChange\r\n         * @description - onInputChange\r\n         * @param property\r\n         * @param e\r\n         */\r\n        _this.onInputChange = function (property, e) {\r\n            var _a;\r\n            _this.setState((_a = {},\r\n                _a[property] = e.target.value.trim(),\r\n                _a));\r\n        };\r\n        /**\r\n         * onDateTimeRangeChange\r\n         * @description - onDateTimeRangeChange\r\n         * @param propertys\r\n         * @param dayjs\r\n         */\r\n        _this.onDateTimeRangeChange = function (propertys, dayjs) {\r\n            var _a;\r\n            _this.setState((_a = {},\r\n                _a[propertys[0]] = dayjs && dayjs.length ? dayjs[0] : null,\r\n                _a[propertys[1]] = dayjs && dayjs.length ? dayjs[1] : null,\r\n                _a));\r\n        };\r\n        Object.assign(_this.state, tslib_1.__assign(tslib_1.__assign({}, _this.getParams()), (_a = {}, _a[_this.getOrderFieldProp()] = _this.getOrderFieldValue(), _a[_this.getOrderProp()] = _this.getOrderPropValue() || 'descend', \r\n        // 查询参数\r\n        _a.searchParams = tslib_1.__assign({}, _this.getParams()), _a.selectedRowKeys = [], _a.selectedRows = [], _a)));\r\n        return _this;\r\n    }\r\n    SearchTableImplement.prototype.componentDidMount = function () {\r\n        _super.prototype.componentDidMount.call(this);\r\n        var getTableWrapperInstance = this.props.getTableWrapperInstance;\r\n        if (getTableWrapperInstance) {\r\n            getTableWrapperInstance(this.innerWrapRef);\r\n        }\r\n    };\r\n    /**\r\n     * getFetchListPropName\r\n     * @override\r\n     * @description - 获取调用列表接口的函数名\r\n     */\r\n    SearchTableImplement.prototype.getFetchListPropName = function () {\r\n        return '';\r\n    };\r\n    /**\r\n     * getFetchListPropNameToFirstUpper\r\n     * @override\r\n     * @description - 获取调用列表接口的函数名首字母大写\r\n     * @return string\r\n     */\r\n    SearchTableImplement.prototype.getFetchListPropNameToFirstUpper = function () {\r\n        var fetchListPropName = this.getFetchListPropName();\r\n        if (fetchListPropName.length > 1) {\r\n            return \"\".concat(fetchListPropName.charAt(0).toUpperCase()).concat(fetchListPropName.substring(1));\r\n        }\r\n        return fetchListPropName;\r\n    };\r\n    // ------------ 不需要重写(override)的方法 end ------------------\r\n    /**\r\n     * getParams\r\n     * @override\r\n     * @description - 获取查询参数对象\r\n     */\r\n    SearchTableImplement.prototype.getParams = function () {\r\n        return {};\r\n    };\r\n    /**\r\n     * getServiceName\r\n     * @override\r\n     * @description - 获取接口服务的model名称\r\n     */\r\n    SearchTableImplement.prototype.getServiceName = function () {\r\n        return '';\r\n    };\r\n    /**\r\n     * getFetchDataParams\r\n     * @override\r\n     * @description - 获取调用数据接口的参数\r\n     */\r\n    SearchTableImplement.prototype.getFetchDataParams = function () {\r\n        return {};\r\n    };\r\n    /**\r\n     * isShowNumber\r\n     * @description - 是否线上序号列\r\n     * @override\r\n     * @return {boolean}\r\n     */\r\n    SearchTableImplement.prototype.isShowNumber = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * getNumberGeneratorRule\r\n     * @override\r\n     * @description - 表格序号列的生成规则\r\n     */\r\n    SearchTableImplement.prototype.getNumberGeneratorRule = function () {\r\n        return SearchTable_1.default.NUMBER_GENERATOR_RULE_CONTINUITY;\r\n    };\r\n    /**\r\n     * getNumberGeneratorRule\r\n     * @description 获取符号列的生成规则\r\n     */\r\n    SearchTableImplement.prototype.getRowSelectionMode = function () {\r\n        return SearchTable_1.default.ROW_SELECTION_NORMAL_MODE;\r\n    };\r\n    /**\r\n     * getTableNumberColumnWidth\r\n     * @override\r\n     * @description - 表格序号列的宽度\r\n     */\r\n    SearchTableImplement.prototype.getTableNumberColumnWidth = function () {\r\n        return 80;\r\n    };\r\n    /**\r\n     * getTableNumberColumnProps\r\n     */\r\n    SearchTableImplement.prototype.getTableNumberColumnProps = function () {\r\n        return {};\r\n    };\r\n    /**\r\n     * getRowKey\r\n     * @override\r\n     * @description - 数据的主键\r\n     */\r\n    SearchTableImplement.prototype.getRowKey = function () {\r\n        return 'id';\r\n    };\r\n    /**\r\n     * getDataKey\r\n     * @description - 获取数据的key\r\n     * @protected\r\n     */\r\n    SearchTableImplement.prototype.getDataKey = function () {\r\n        return 'list';\r\n    };\r\n    /**\r\n     * getTotalKey\r\n     * @description - 获取total的key\r\n     * @protected\r\n     */\r\n    SearchTableImplement.prototype.getTotalKey = function () {\r\n        return 'totalCount';\r\n    };\r\n    /**\r\n     * getData\r\n     * @description - Table的数据(Table的dataSource字段)\r\n     * @override\r\n     * @return {Array}\r\n     */\r\n    SearchTableImplement.prototype.getData = function () {\r\n        return this.props[this.getServiceName()][this.getFetchListPropName()][this.getDataKey()];\r\n    };\r\n    /**\r\n     * getTotal\r\n     * @description - Table数据的总条数\r\n     * @override\r\n     */\r\n    SearchTableImplement.prototype.getTotal = function () {\r\n        return this.props[this.getServiceName()][this.getFetchListPropName()][this.getTotalKey()];\r\n    };\r\n    /**\r\n     * getRowSelection\r\n     * @override\r\n     * @description - 获取表格行选择对象\r\n     */\r\n    SearchTableImplement.prototype.getRowSelection = function () {\r\n        var _this = this;\r\n        var filter = function (selected, records) {\r\n            var rowKey = _this.getRowKey();\r\n            if (selected) {\r\n                // add\r\n                _this.setState({\r\n                    selectedRowKeys: tslib_1.__spreadArray(tslib_1.__spreadArray([], (_this.state.selectedRowKeys || []), true), records.map(function (r) { return r[rowKey]; }), true),\r\n                    selectedRows: tslib_1.__spreadArray(tslib_1.__spreadArray([], (_this.state.selectedRows || []), true), records, true),\r\n                });\r\n            }\r\n            else {\r\n                // remove\r\n                _this.setState({\r\n                    selectedRows: (_this.state.selectedRows || []).filter(function (row) { return !records.find(function (r) { return r[rowKey] === row[rowKey]; }); }),\r\n                    selectedRowKeys: (_this.state.selectedRowKeys || []).filter(function (key) { return !records.find(function (r) { return r[rowKey] === key; }); }),\r\n                });\r\n            }\r\n        };\r\n        return {\r\n            selectedRowKeys: this.state.selectedRowKeys,\r\n            onChange: function (selectedRowKeys, selectedRows) {\r\n                if (_this.getRowSelectionMode() === SearchTable_1.default.ROW_SELECTION_CONTINUOUS_MODE)\r\n                    return;\r\n                // 如果是缺省模式(不能跨页选取)\r\n                _this.setState({\r\n                    selectedRowKeys: selectedRowKeys,\r\n                    selectedRows: selectedRows,\r\n                });\r\n            },\r\n            onSelect: function (record, selected) {\r\n                if (_this.getRowSelectionMode() === SearchTable_1.default.ROW_SELECTION_NORMAL_MODE)\r\n                    return;\r\n                filter(selected, [record]);\r\n            },\r\n            onSelectAll: function (selected, selectedRows, changeRows) {\r\n                if (_this.getRowSelectionMode() === SearchTable_1.default.ROW_SELECTION_NORMAL_MODE)\r\n                    return;\r\n                filter(selected, changeRows);\r\n            },\r\n        };\r\n    };\r\n    /**\r\n     * renderSearchForm\r\n     * @override\r\n     * @description - 渲染Table查询的表单\r\n     */\r\n    SearchTableImplement.prototype.renderSearchForm = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * renderInner\r\n     * @override\r\n     * @description - 渲染主体\r\n     */\r\n    SearchTableImplement.prototype.renderInner = function () {\r\n        var innerJSX = _super.prototype.renderInner.call(this);\r\n        return (react_1.default.createElement(\"div\", { ref: this.innerWrapRef, className: \"\".concat(exports.selectorPrefix, \"-tablewrapper\") }, innerJSX));\r\n    };\r\n    /**\r\n     * renderSearchFooterItems\r\n     * @description - 渲染表格的工具栏\r\n     * @override\r\n     */\r\n    SearchTableImplement.prototype.renderSearchFooterItems = function () {\r\n        return [];\r\n    };\r\n    /**\r\n     * getOrderFieldProp\r\n     * @description - 获取排序字段\r\n     * @override\r\n     */\r\n    SearchTableImplement.prototype.getOrderFieldProp = function () {\r\n        return 'orderField';\r\n    };\r\n    /**\r\n     * getOrderFieldValue\r\n     * @description - 获取默认排序字段的值\r\n     * @override\r\n     * @protected\r\n     */\r\n    SearchTableImplement.prototype.getOrderFieldValue = function () {\r\n        return '';\r\n    };\r\n    /**\r\n     * getOrderProp\r\n     * @description - 获取排序方式\r\n     */\r\n    SearchTableImplement.prototype.getOrderProp = function () {\r\n        return 'order';\r\n    };\r\n    /**\r\n     * getOrderPropValue\r\n     * @override\r\n     * @description - 获取默认排序方式\r\n     * @protected\r\n     */\r\n    SearchTableImplement.prototype.getOrderPropValue = function () {\r\n        return 'descend';\r\n    };\r\n    /**\r\n     * clear\r\n     * @description - 清空查询条件\r\n     * @override\r\n     */\r\n    SearchTableImplement.prototype.clear = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            var _a;\r\n            _this.setState(tslib_1.__assign(tslib_1.__assign({}, _this.getParams()), (_a = {}, _a[_this.getOrderFieldProp()] = _this.getOrderFieldValue(), _a[_this.getOrderProp()] = _this.getOrderPropValue() || 'descend', \r\n            // 查询参数\r\n            _a.searchParams = tslib_1.__assign({}, _this.getParams()), _a.selectedRowKeys = [], _a.selectedRows = [], _a)), function () {\r\n                resolve();\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * showLoading\r\n     * @description - 是否显示遮罩\r\n     * @override\r\n     */\r\n    SearchTableImplement.prototype.showLoading = function () {\r\n        return this.props.loading[\"\".concat(this.getServiceName(), \"/\").concat(this.getFetchListPropName())];\r\n    };\r\n    /**\r\n     * getSearchParams\r\n     * @description - 获取查询参数\r\n     * @protected\r\n     */\r\n    SearchTableImplement.prototype.getSearchParams = function () {\r\n        var _a;\r\n        var _b = this.state, page = _b.page, limit = _b.limit, searchParams = _b.searchParams;\r\n        var order = this.state[this.getOrderProp()];\r\n        return tslib_1.__assign({}, tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({ page: page, limit: limit }, searchParams), (_a = {}, _a[this.getOrderProp()] = order === 'descend' ? 'desc' : 'asc', _a[this.getOrderFieldProp()] = this.state[this.getOrderFieldProp()], _a)), this.getFetchDataParams()));\r\n    };\r\n    /**\r\n     * fetchData\r\n     * @description - 加载数据\r\n     * @override\r\n     */\r\n    SearchTableImplement.prototype.fetchData = function () {\r\n        return this.fetchDataExecute(this.getSearchParams());\r\n    };\r\n    /**\r\n     * fetchDataExecute\r\n     * @description - 真正的执行获取列表数据的接口\r\n     * @param searchParams\r\n     * @protected\r\n     */\r\n    SearchTableImplement.prototype.fetchDataExecute = function (searchParams) {\r\n        return this.props[\"\".concat(this.getServiceName()).concat(this.getFetchListPropNameToFirstUpper())](searchParams);\r\n    };\r\n    /**\r\n     * onSearch\r\n     * @description - 点击查询\r\n     * @override\r\n     */\r\n    SearchTableImplement.prototype.onSearch = function () {\r\n        var _this = this;\r\n        var keys = Object.keys(this.getParams());\r\n        var params = {};\r\n        keys.forEach(function (key) {\r\n            params[key] = _this.state[key];\r\n        });\r\n        return new Promise(function (resolve) {\r\n            var _a;\r\n            _this.setState({\r\n                searchParams: tslib_1.__assign(tslib_1.__assign({}, params), (_a = {}, _a[_this.getOrderFieldProp()] = _this.state[_this.getOrderFieldProp()], _a[_this.getOrderProp()] = _this.state[_this.getOrderProp()], _a)),\r\n            }, function () {\r\n                _this.fetchData().then(function () {\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    };\r\n    SearchTableImplement.prototype.getColumns = function () {\r\n        return [];\r\n    };\r\n    SearchTableImplement.prototype.onSubTableChange = function (pagination, filters, sorter, extra) { };\r\n    SearchTableImplement.prototype.renderSearchFormAfter = function () {\r\n        return null;\r\n    };\r\n    SearchTableImplement.prototype.renderSearchFormBefore = function () {\r\n        return null;\r\n    };\r\n    SearchTableImplement.prototype.renderTableFooter = function () {\r\n        return null;\r\n    };\r\n    SearchTableImplement.prototype.renderTableHeader = function () {\r\n        return null;\r\n    };\r\n    SearchTableImplement.prototype.onTableRowComponentReducers = function (columns) {\r\n        return this.tableRowComponentReducers;\r\n    };\r\n    SearchTableImplement.prototype.onTableCellComponentReducers = function (columns) {\r\n        return this.tableCellComponentReducers;\r\n    };\r\n    return SearchTableImplement;\r\n}(SearchTable_1.default));\r\nexports.SearchTableImplement = SearchTableImplement;\r\nSearchTableImplement.defaultProps = tslib_1.__assign({}, SearchTable_1.defaultProps);\r\nSearchTableImplement.propTypes = tslib_1.__assign(tslib_1.__assign({}, SearchTable_1.propTypes), { getTableWrapperInstance: prop_types_1.default.func });\r\n/**\r\n * SearchTableImplementFactory\r\n * @description 创建SearchTableImplementFactory\r\n * @param serviceNames\r\n * @param mapStateToProps\r\n * @param mapDispatchToProps\r\n * @constructor\r\n */\r\nvar SearchTableImplementFactory = function (_a) {\r\n    var _b = _a.serviceNames, serviceNames = _b === void 0 ? [] : _b, mapStateToProps = _a.mapStateToProps, mapDispatchToProps = _a.mapDispatchToProps;\r\n    var _mapStateToProps = function (state) { return (tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, serviceregister_1.default.mapStateToProps({\r\n        namespaces: serviceNames || [],\r\n        state: state,\r\n    })), {\r\n        loading: state.loading,\r\n    }), (mapStateToProps ? mapStateToProps(state) : {}))); };\r\n    var _mapDispatchToProps = function (dispatch) { return (tslib_1.__assign(tslib_1.__assign({}, serviceregister_1.default.mapDispatchToProps({\r\n        namespaces: serviceNames || [],\r\n        dispatch: dispatch,\r\n    })), (mapDispatchToProps ? mapDispatchToProps(dispatch) : {}))); };\r\n    return function (Component) {\r\n        return serviceregister_1.default.connect(serviceNames || [])(_mapStateToProps, _mapDispatchToProps)((0, react_1.forwardRef)(function (props, ref) { return (\r\n        // @ts-ignore\r\n        react_1.default.createElement(Component, tslib_1.__assign({ ref: ref, className: \"\".concat(exports.selectorPrefix, \"-wrap\"), isShowExpandSearch: true, defaultExpandSearchCollapse: false, fixedHeaderAutoTable: true, fixedTableSpaceBetween: true }, props))); }));\r\n    };\r\n};\r\nexports.default = SearchTableImplementFactory;\r\n//# sourceMappingURL=SearchTableImplement.js.map"],"names":["Object","defineProperty","exports","value","SearchTableImplement","selectorPrefix","tslib_1","require","prop_types_1","__importDefault","react_1","__importStar","serviceregister_1","SearchTable_1","_super","props","_this","call","this","innerWrapRef","createRef","onSelectChange","property","v","_a","setState","onInputChange","e","target","trim","onDateTimeRangeChange","propertys","dayjs","length","assign","state","__assign","getParams","getOrderFieldProp","getOrderFieldValue","getOrderProp","getOrderPropValue","searchParams","selectedRowKeys","selectedRows","__extends","prototype","componentDidMount","getTableWrapperInstance","getFetchListPropName","getFetchListPropNameToFirstUpper","fetchListPropName","concat","charAt","toUpperCase","substring","getServiceName","getFetchDataParams","isShowNumber","getNumberGeneratorRule","default","NUMBER_GENERATOR_RULE_CONTINUITY","getRowSelectionMode","ROW_SELECTION_NORMAL_MODE","getTableNumberColumnWidth","getTableNumberColumnProps","getRowKey","getDataKey","getTotalKey","getData","getTotal","getRowSelection","filter","selected","records","rowKey","__spreadArray","map","r","row","find","key","onChange","ROW_SELECTION_CONTINUOUS_MODE","onSelect","record","onSelectAll","changeRows","renderSearchForm","renderInner","innerJSX","createElement","ref","className","renderSearchFooterItems","clear","Promise","resolve","showLoading","loading","getSearchParams","_b","page","limit","order","fetchData","fetchDataExecute","onSearch","keys","params","forEach","then","getColumns","onSubTableChange","pagination","filters","sorter","extra","renderSearchFormAfter","renderSearchFormBefore","renderTableFooter","renderTableHeader","onTableRowComponentReducers","columns","tableRowComponentReducers","onTableCellComponentReducers","tableCellComponentReducers","SearchTableImplementFactory","defaultProps","propTypes","func","_mapStateToProps","mapStateToProps","namespaces","serviceNames","_mapDispatchToProps","dispatch","mapDispatchToProps","Component","connect","forwardRef","isShowExpandSearch","defaultExpandSearchCollapse","fixedHeaderAutoTable","fixedTableSpaceBetween"],"mappings":"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"}