{"version":3,"file":"SearchEditableCellStateTable.js","sources":["Editable/SearchEditableCellStateTable.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar lodash_clonedeep_1 = tslib_1.__importDefault(require(\"lodash.clonedeep\"));\r\nvar SearchTableStateImplement_1 = require(\"../SearchTableStateImplement\");\r\nvar SearchEditableCellFactory_1 = tslib_1.__importDefault(require(\"./SearchEditableCellFactory\"));\r\n/**\r\n * SearchEditableCellStateTable\r\n * @class\r\n * @classdesc 可编辑单元格的表格\r\n */\r\nvar SearchEditableCellStateTable = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SearchEditableCellStateTable, _super);\r\n    function SearchEditableCellStateTable() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * updateEditorCellDate\r\n     * @description 更新可编辑单元格的数据\r\n     * @param record 行数据\r\n     * @param dataIndex 列索引\r\n     * @param value 更新的值\r\n     * @return Promise<void>\r\n     */\r\n    SearchEditableCellStateTable.prototype.updateEditorCellDate = function (_a) {\r\n        var _this = this;\r\n        var record = _a.record, dataIndex = _a.dataIndex, value = _a.value;\r\n        return new Promise(function (resolve) {\r\n            var _a;\r\n            if (record[dataIndex] === value) {\r\n                resolve();\r\n                return;\r\n            }\r\n            var listData = lodash_clonedeep_1.default(_this.state[_this.getServiceName()]);\r\n            var dataSource = listData[_this.getFetchListPropName()][_this.getDataKey()] || [];\r\n            var rowKey = _this.getRowKey();\r\n            var recordItem = dataSource.find(function (t) { return t[rowKey] === record[rowKey]; });\r\n            if (recordItem) {\r\n                recordItem[dataIndex] = value;\r\n                _this.setState((_a = {},\r\n                    _a[_this.getServiceName()] = listData,\r\n                    _a), function () { return resolve(); });\r\n            }\r\n            else\r\n                resolve();\r\n        });\r\n    };\r\n    /**\r\n     * updateEditorCellDateData\r\n     * @description 更新日期类型可编辑单元格的数据\r\n     * @param record\r\n     * @param dataIndex\r\n     * @param value\r\n     * @return Promise<void>\r\n     */\r\n    SearchEditableCellStateTable.prototype.updateEditorCellDateData = function (_a) {\r\n        var _this = this;\r\n        var record = _a.record, dataIndex = _a.dataIndex, value = _a.value;\r\n        return new Promise(function (resolve) {\r\n            var _a;\r\n            if (record[dataIndex] === (value === null || value === void 0 ? void 0 : value.valueOf())) {\r\n                resolve();\r\n                return;\r\n            }\r\n            var listData = lodash_clonedeep_1.default(_this.state[_this.getServiceName()]);\r\n            var dataSource = listData[_this.getFetchListPropName()][_this.getDataKey()] || [];\r\n            var rowKey = _this.getRowKey();\r\n            var recordItem = dataSource.find(function (t) { return t[rowKey] === record[rowKey]; });\r\n            if (recordItem) {\r\n                recordItem[dataIndex] = value === null || value === void 0 ? void 0 : value.valueOf();\r\n                _this.setState((_a = {},\r\n                    _a[_this.getServiceName()] = listData,\r\n                    _a), function () { return resolve(); });\r\n            }\r\n            else\r\n                resolve();\r\n        });\r\n    };\r\n    return SearchEditableCellStateTable;\r\n}(SearchEditableCellFactory_1.default(SearchTableStateImplement_1.SearchTableStateImplement)));\r\nexports.default = SearchEditableCellStateTable;\r\n//# sourceMappingURL=SearchEditableCellStateTable.js.map"],"names":["Object","defineProperty","exports","value","tslib_1","require","lodash_clonedeep_1","__importDefault","SearchTableStateImplement_1","SearchEditableCellFactory_1","SearchEditableCellStateTable","_super","apply","this","arguments","__extends","prototype","updateEditorCellDate","_a","_this","record","dataIndex","Promise","resolve","listData","rowKey","recordItem","dataSource","default","state","getServiceName","getFetchListPropName","getDataKey","getRowKey","find","t","setState","updateEditorCellDateData","valueOf","SearchTableStateImplement"],"mappings":"AAAA,aACAA,OAAOC,eAAeC,QAAS,aAAc,CAAEC,MAAO,CAAA,CAAK,CAAC,EAC5D,IAAIC,QAAUC,QAAQ,OAAO,EACzBC,mBAAqBF,QAAQG,gBAAgBF,QAAQ,kBAAkB,CAAC,EACxEG,4BAA8BH,QAAQ,8BAA8B,EACpEI,4BAA8BL,QAAQG,gBAAgBF,QAAQ,6BAA6B,CAAC,EAM5FK,6BAA8C,SAAUC,GAExD,SAASD,IACL,OAAkB,OAAXC,GAAmBA,EAAOC,MAAMC,KAAMC,SAAS,GAAKD,IAC/D,CA+DA,OAlEAT,QAAQW,UAAUL,EAA8BC,CAAM,EAYtDD,EAA6BM,UAAUC,qBAAuB,SAAUC,GACpE,IAAIC,EAAQN,KACRO,EAASF,EAAGE,OAAQC,EAAYH,EAAGG,UAAWlB,EAAQe,EAAGf,MAC7D,OAAO,IAAImB,QAAQ,SAAUC,GACzB,IAKIC,EAEAC,EACAC,EAPAN,EAAOC,KAAelB,IAKtBwB,GADAH,EAAWlB,mBAAmBsB,QAAQT,EAAMU,MAAMV,EAAMW,eAAe,EAAE,GACnDX,EAAMY,qBAAqB,GAAGZ,EAAMa,WAAW,IAAM,GAC3EP,EAASN,EAAMc,UAAU,EACzBP,EAAaC,EAAWO,KAAK,SAAUC,GAAK,OAAOA,EAAEV,KAAYL,EAAOK,EAAS,CAAC,IAElFC,EAAWL,GAAalB,EACxBgB,EAAMiB,WAAUlB,EAAK,IACdC,EAAMW,eAAe,GAAKN,EAC7BN,GAAK,WAAc,OAAOK,EAAQ,CAAG,CAAC,GAX1CA,EAAQ,CAehB,CAAC,CACL,EASAb,EAA6BM,UAAUqB,yBAA2B,SAAUnB,GACxE,IAAIC,EAAQN,KACRO,EAASF,EAAGE,OAAQC,EAAYH,EAAGG,UAAWlB,EAAQe,EAAGf,MAC7D,OAAO,IAAImB,QAAQ,SAAUC,GACzB,IAKIC,EAEAC,EACAC,EAPAN,EAAOC,MAAgBlB,MAAAA,EAAqC,KAAA,EAASA,EAAMmC,QAAQ,KAKnFX,GADAH,EAAWlB,mBAAmBsB,QAAQT,EAAMU,MAAMV,EAAMW,eAAe,EAAE,GACnDX,EAAMY,qBAAqB,GAAGZ,EAAMa,WAAW,IAAM,GAC3EP,EAASN,EAAMc,UAAU,EACzBP,EAAaC,EAAWO,KAAK,SAAUC,GAAK,OAAOA,EAAEV,KAAYL,EAAOK,EAAS,CAAC,IAElFC,EAAWL,GAAalB,MAAAA,EAAqC,KAAA,EAASA,EAAMmC,QAAQ,EACpFnB,EAAMiB,WAAUlB,EAAK,IACdC,EAAMW,eAAe,GAAKN,EAC7BN,GAAK,WAAc,OAAOK,EAAQ,CAAG,CAAC,GAX1CA,EAAQ,CAehB,CAAC,CACL,EACOb,CACX,EAAED,4BAA4BmB,QAAQpB,4BAA4B+B,yBAAyB,CAAE,EAC7FrC,QAAQ0B,QAAUlB"}