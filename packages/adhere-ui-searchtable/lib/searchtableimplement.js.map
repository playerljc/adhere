{"version":3,"file":"searchtableimplement.js","sources":["searchtableimplement.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nimport React, { createRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SearchTable from './searchtable';\r\nvar selectorPrefix = 'adhere-ui-searchtableimplement';\r\n/**\r\n * SearchTableImplement\r\n * @class SearchTableImplement\r\n * @classdesc SearchTableImplement\r\n */\r\n// @ts-ignore\r\nvar SearchTableImplement = /** @class */ (function (_super) {\r\n    __extends(SearchTableImplement, _super);\r\n    function SearchTableImplement(props) {\r\n        var _a;\r\n        var _this = _super.call(this, props) || this;\r\n        _this.innerWrapRef = createRef();\r\n        // ------------ 不需要重写(override)的方法 start ------------------\r\n        /**\r\n         * onSelectChange\r\n         * @description - onSelectChange\r\n         * @param property\r\n         * @param v\r\n         */\r\n        _this.onSelectChange = function (property, v) {\r\n            var _a;\r\n            // @ts-ignore\r\n            _this.setState((_a = {},\r\n                _a[property] = v,\r\n                _a));\r\n        };\r\n        /**\r\n         * onInputChange\r\n         * @description - onInputChange\r\n         * @param property\r\n         * @param e\r\n         */\r\n        _this.onInputChange = function (property, e) {\r\n            var _a;\r\n            // @ts-ignore\r\n            _this.setState((_a = {},\r\n                _a[property] = e.target.value.trim(),\r\n                _a));\r\n        };\r\n        /**\r\n         * onDateTimeRangeChange\r\n         * @description - onDateTimeRangeChange\r\n         * @param propertys\r\n         * @param moments\r\n         */\r\n        _this.onDateTimeRangeChange = function (propertys, moments) {\r\n            var _a;\r\n            // @ts-ignore\r\n            _this.setState((_a = {},\r\n                _a[propertys[0]] = moments && moments.length ? moments[0] : null,\r\n                _a[propertys[1]] = moments && moments.length ? moments[1] : null,\r\n                _a));\r\n        };\r\n        // @ts-ignore\r\n        Object.assign(_this.state, __assign(__assign({}, _this.getParams()), (_a = {}, _a[_this.getOrderFieldProp()] = _this.getOrderFieldValue(), _a[_this.getOrderProp()] = _this.getOrderPropValue() || 'descend', \r\n        // 查询参数\r\n        _a.searchParams = __assign({}, _this.getParams()), _a)));\r\n        return _this;\r\n    }\r\n    SearchTableImplement.prototype.componentDidMount = function () {\r\n        _super.prototype.componentDidMount.call(this);\r\n        // @ts-ignore\r\n        var getTableWrapperInstance = this.props.getTableWrapperInstance;\r\n        if (getTableWrapperInstance) {\r\n            getTableWrapperInstance(this.innerWrapRef);\r\n        }\r\n    };\r\n    /**\r\n     * getFetchListPropName\r\n     * @override\r\n     * @description - 获取调用列表接口的函数名\r\n     */\r\n    SearchTableImplement.prototype.getFetchListPropName = function () {\r\n        return '';\r\n    };\r\n    /**\r\n     * getFetchListPropNameToFirstUpper\r\n     * @override\r\n     * @description - 获取调用列表接口的函数名首字母大写\r\n     * @return string\r\n     */\r\n    SearchTableImplement.prototype.getFetchListPropNameToFirstUpper = function () {\r\n        return '';\r\n    };\r\n    // ------------ 不需要重写(override)的方法 end ------------------\r\n    /**\r\n     * getParams\r\n     * @override\r\n     * @description - 获取查询参数对象\r\n     */\r\n    SearchTableImplement.prototype.getParams = function () {\r\n        return {};\r\n    };\r\n    /**\r\n     * getServiceName\r\n     * @override\r\n     * @description - 获取接口服务的model名称\r\n     */\r\n    SearchTableImplement.prototype.getServiceName = function () {\r\n        return '';\r\n    };\r\n    /**\r\n     * getFetchDataParams\r\n     * @override\r\n     * @description - 获取调用数据接口的参数\r\n     */\r\n    SearchTableImplement.prototype.getFetchDataParams = function () {\r\n        return {};\r\n    };\r\n    /**\r\n     * isShowNumber\r\n     * @description - 是否线上序号列\r\n     * @override\r\n     * @return {boolean}\r\n     */\r\n    SearchTableImplement.prototype.isShowNumber = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * getNumberGeneratorRule\r\n     * @override\r\n     * @description - 表格序号列的生成规则\r\n     */\r\n    SearchTableImplement.prototype.getNumberGeneratorRule = function () {\r\n        return SearchTable.NUMBER_GENERATOR_RULE_CONTINUITY;\r\n    };\r\n    /**\r\n     * getTableNumberColumnWidth\r\n     * @override\r\n     * @description - 表格序号列的宽度\r\n     */\r\n    SearchTableImplement.prototype.getTableNumberColumnWidth = function () {\r\n        return 80;\r\n    };\r\n    /**\r\n     * getRowKey\r\n     * @override\r\n     * @description - 数据的主键\r\n     */\r\n    SearchTableImplement.prototype.getRowKey = function () {\r\n        return 'id';\r\n    };\r\n    /**\r\n     * getData\r\n     * @description - Table的数据(Table的dataSource字段)\r\n     * @override\r\n     * @return {Array}\r\n     */\r\n    SearchTableImplement.prototype.getData = function () {\r\n        // @ts-ignore\r\n        return this.props[this.getServiceName()][this.getFetchListPropName()].list;\r\n    };\r\n    /**\r\n     * getColumns\r\n     * @description - Table的列\r\n     * @override\r\n     */\r\n    SearchTableImplement.prototype.getColumns = function () {\r\n        // @ts-ignore\r\n        return this.props.getColumns();\r\n    };\r\n    /**\r\n     * getRowSelection\r\n     * @override\r\n     * @description - 获取表格行选择对象\r\n     */\r\n    SearchTableImplement.prototype.getRowSelection = function () {\r\n        var _this = this;\r\n        return {\r\n            // @ts-ignore\r\n            selectedRowKeys: this.state.selectedRowKeys,\r\n            onChange: function (selectedRowKeys) {\r\n                // @ts-ignore\r\n                _this.setState({\r\n                    selectedRowKeys: selectedRowKeys,\r\n                });\r\n            },\r\n        };\r\n    };\r\n    /**\r\n     * renderSearchForm\r\n     * @override\r\n     * @description - 渲染Table查询的表单\r\n     */\r\n    SearchTableImplement.prototype.renderSearchForm = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * renderInner\r\n     * @override\r\n     * @description - 渲染主体\r\n     */\r\n    SearchTableImplement.prototype.renderInner = function () {\r\n        var innerJSX = _super.prototype.renderInner.call(this);\r\n        return (React.createElement(\"div\", { ref: this.innerWrapRef, className: selectorPrefix + \"-tablewrapper\" }, innerJSX));\r\n    };\r\n    /**\r\n     * getTotal\r\n     * @description - Table数据的总条数\r\n     * @override\r\n     */\r\n    SearchTableImplement.prototype.getTotal = function () {\r\n        // @ts-ignore\r\n        return this.props[this.getServiceName()][this.getFetchListPropName()].totalCount;\r\n    };\r\n    /**\r\n     * getOrderFieldProp\r\n     * @description - 获取排序字段\r\n     * @override\r\n     */\r\n    SearchTableImplement.prototype.getOrderFieldProp = function () {\r\n        return 'orderField';\r\n    };\r\n    /**\r\n     * getOrderFieldValue\r\n     * @description - 获取默认排序字段的值\r\n     * @override\r\n     * @protected\r\n     */\r\n    SearchTableImplement.prototype.getOrderFieldValue = function () {\r\n        return '';\r\n    };\r\n    /**\r\n     * getOrderProp\r\n     * @description - 获取排序方式\r\n     */\r\n    SearchTableImplement.prototype.getOrderProp = function () {\r\n        return 'order';\r\n    };\r\n    /**\r\n     * getOrderPropValue\r\n     * @override\r\n     * @description - 获取默认排序方式\r\n     * @protected\r\n     */\r\n    SearchTableImplement.prototype.getOrderPropValue = function () {\r\n        return 'descend';\r\n    };\r\n    /**\r\n     * clear\r\n     * @description - 清空查询条件\r\n     * @override\r\n     */\r\n    SearchTableImplement.prototype.clear = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            var _a;\r\n            // @ts-ignore\r\n            _this.setState(__assign(__assign({}, _this.getParams()), (_a = {}, _a[_this.getOrderFieldProp()] = _this.getOrderFieldValue(), _a[_this.getOrderProp()] = _this.getOrderPropValue() || 'descend', \r\n            // 查询参数\r\n            _a.searchParams = __assign({}, _this.getParams()), _a.selectedRowKeys = [], _a)), function () {\r\n                resolve();\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * renderSearchFooterItems\r\n     * @description - 渲染表格的工具栏\r\n     * @override\r\n     */\r\n    SearchTableImplement.prototype.renderSearchFooterItems = function () {\r\n        return [];\r\n    };\r\n    /**\r\n     * showLoading\r\n     * @description - 是否显示遮罩\r\n     * @override\r\n     */\r\n    SearchTableImplement.prototype.showLoading = function () {\r\n        // @ts-ignore\r\n        return this.props.loading[this.getServiceName() + \"/\" + this.getFetchListPropName()];\r\n    };\r\n    /**\r\n     * fetchData\r\n     * @description - 加载数据\r\n     * @override\r\n     */\r\n    SearchTableImplement.prototype.fetchData = function () {\r\n        var _a;\r\n        // @ts-ignore\r\n        var _b = this.state, page = _b.page, limit = _b.limit, searchParams = _b.searchParams;\r\n        // @ts-ignore\r\n        var order = this.state[this.getOrderProp()];\r\n        // @ts-ignore\r\n        return this.fetchDataExecute(__assign({}, __assign(__assign(__assign(__assign({ page: page,\r\n            limit: limit }, searchParams), (_a = {}, _a[this.getOrderProp()] = order === 'descend' ? 'desc' : 'asc', _a[this.getOrderFieldProp()] = this.state[this.getOrderFieldProp()], _a)), this.getFetchDataParams()), { ins: this, success: function () { } })));\r\n    };\r\n    /**\r\n     * fetchDataExecute\r\n     * @description - 真正的执行获取列表数据的接口\r\n     * @param searchParams\r\n     * @protected\r\n     */\r\n    SearchTableImplement.prototype.fetchDataExecute = function (searchParams) {\r\n        // @ts-ignore\r\n        return this.props[\"\" + this.getServiceName() + this.getFetchListPropNameToFirstUpper()](searchParams);\r\n    };\r\n    /**\r\n     * onSearch\r\n     * @description - 点击查询\r\n     * @override\r\n     */\r\n    SearchTableImplement.prototype.onSearch = function () {\r\n        var _this = this;\r\n        var keys = Object.keys(this.getParams());\r\n        var params = {};\r\n        keys.forEach(function (key) {\r\n            // @ts-ignore\r\n            params[key] = _this.state[key];\r\n        });\r\n        return new Promise(function (resolve) {\r\n            var _a;\r\n            // @ts-ignore\r\n            _this.setState({\r\n                searchParams: __assign(__assign({}, params), (_a = {}, _a[_this.getOrderFieldProp()] = _this.state[_this.getOrderFieldProp()], _a[_this.getOrderProp()] = _this.state[_this.getOrderProp()], _a)),\r\n            }, function () {\r\n                _this.fetchData().then(function () {\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    };\r\n    return SearchTableImplement;\r\n}(SearchTable));\r\nSearchTableImplement.defaultProps = {};\r\nSearchTableImplement.propTypes = {\r\n    getTableWrapperInstance: PropTypes.func,\r\n};\r\n// @ts-ignore\r\nexport default SearchTableImplement;\r\n"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","React","createRef","PropTypes","SearchTable","selectorPrefix","SearchTableImplement","_super","props","_this","innerWrapRef","onSelectChange","property","v","_a","setState","onInputChange","e","target","value","trim","onDateTimeRangeChange","propertys","moments","state","getParams","getOrderFieldProp","getOrderFieldValue","getOrderProp","getOrderPropValue","searchParams","componentDidMount","getTableWrapperInstance","getFetchListPropName","getFetchListPropNameToFirstUpper","getServiceName","getFetchDataParams","isShowNumber","getNumberGeneratorRule","NUMBER_GENERATOR_RULE_CONTINUITY","getTableNumberColumnWidth","getRowKey","getData","list","getColumns","getRowSelection","selectedRowKeys","onChange","renderSearchForm","renderInner","innerJSX","createElement","ref","className","getTotal","totalCount","clear","Promise","resolve","renderSearchFooterItems","showLoading","loading","fetchData","_b","page","limit","order","fetchDataExecute","ins","success","onSearch","keys","params","forEach","key","then","defaultProps","propTypes","func"],"mappings":"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"}