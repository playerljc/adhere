{"version":3,"file":"searchtableimplement.js","sources":["searchtableimplement.js"],"sourcesContent":["\"use strict\";\n\nrequire(\"core-js/modules/es.object.define-property.js\");\n\nrequire(\"core-js/modules/es.string.trim.js\");\n\nrequire(\"core-js/modules/es.object.assign.js\");\n\nrequire(\"core-js/modules/es.array.concat.js\");\n\nrequire(\"core-js/modules/es.array.map.js\");\n\nrequire(\"core-js/modules/es.array.filter.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/es.array.find.js\");\n\nrequire(\"core-js/modules/es.promise.js\");\n\nrequire(\"core-js/modules/es.object.keys.js\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar prop_types_1 = tslib_1.__importDefault(require(\"prop-types\"));\n\nvar react_1 = tslib_1.__importStar(require(\"react\"));\n\nvar searchtable_1 = tslib_1.__importStar(require(\"./searchtable\"));\n\nvar selectorPrefix = 'adhere-ui-searchtableimplement';\n/**\n * SearchTableImplement\n * @class SearchTableImplement\n * @classdesc SearchTableImplement - SearchTable的默认实现\n */\n\nvar SearchTableImplement =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(SearchTableImplement, _super);\n\n  function SearchTableImplement(props) {\n    var _a;\n\n    var _this = _super.call(this, props) || this;\n\n    _this.innerWrapRef = (0, react_1.createRef)(); // ------------ 不需要重写(override)的方法 start ------------------\n\n    /**\n     * onSelectChange\n     * @description - onSelectChange\n     * @param property\n     * @param v\n     */\n\n    _this.onSelectChange = function (property, v) {\n      var _a;\n\n      _this.setState((_a = {}, _a[property] = v, _a));\n    };\n    /**\n     * onInputChange\n     * @description - onInputChange\n     * @param property\n     * @param e\n     */\n\n\n    _this.onInputChange = function (property, e) {\n      var _a;\n\n      _this.setState((_a = {}, _a[property] = e.target.value.trim(), _a));\n    };\n    /**\n     * onDateTimeRangeChange\n     * @description - onDateTimeRangeChange\n     * @param propertys\n     * @param moments\n     */\n\n\n    _this.onDateTimeRangeChange = function (propertys, moments) {\n      var _a;\n\n      _this.setState((_a = {}, _a[propertys[0]] = moments && moments.length ? moments[0] : null, _a[propertys[1]] = moments && moments.length ? moments[1] : null, _a));\n    };\n\n    Object.assign(_this.state, tslib_1.__assign(tslib_1.__assign({}, _this.getParams()), (_a = {}, _a[_this.getOrderFieldProp()] = _this.getOrderFieldValue(), _a[_this.getOrderProp()] = _this.getOrderPropValue() || 'descend', // 查询参数\n    _a.searchParams = tslib_1.__assign({}, _this.getParams()), _a.selectedRowKeys = [], _a.selectedRows = [], _a)));\n    return _this;\n  }\n\n  SearchTableImplement.prototype.componentDidMount = function () {\n    _super.prototype.componentDidMount.call(this);\n\n    var getTableWrapperInstance = this.props.getTableWrapperInstance;\n\n    if (getTableWrapperInstance) {\n      getTableWrapperInstance(this.innerWrapRef);\n    }\n  };\n  /**\n   * getFetchListPropName\n   * @override\n   * @description - 获取调用列表接口的函数名\n   */\n\n\n  SearchTableImplement.prototype.getFetchListPropName = function () {\n    return '';\n  };\n  /**\n   * getFetchListPropNameToFirstUpper\n   * @override\n   * @description - 获取调用列表接口的函数名首字母大写\n   * @return string\n   */\n\n\n  SearchTableImplement.prototype.getFetchListPropNameToFirstUpper = function () {\n    var fetchListPropName = this.getFetchListPropName();\n\n    if (fetchListPropName.length > 1) {\n      return \"\".concat(fetchListPropName.charAt(0).toUpperCase()).concat(fetchListPropName.substring(1));\n    }\n\n    return fetchListPropName;\n  }; // ------------ 不需要重写(override)的方法 end ------------------\n\n  /**\n   * getParams\n   * @override\n   * @description - 获取查询参数对象\n   */\n\n\n  SearchTableImplement.prototype.getParams = function () {\n    return {};\n  };\n  /**\n   * getServiceName\n   * @override\n   * @description - 获取接口服务的model名称\n   */\n\n\n  SearchTableImplement.prototype.getServiceName = function () {\n    return '';\n  };\n  /**\n   * getFetchDataParams\n   * @override\n   * @description - 获取调用数据接口的参数\n   */\n\n\n  SearchTableImplement.prototype.getFetchDataParams = function () {\n    return {};\n  };\n  /**\n   * isShowNumber\n   * @description - 是否线上序号列\n   * @override\n   * @return {boolean}\n   */\n\n\n  SearchTableImplement.prototype.isShowNumber = function () {\n    return true;\n  };\n  /**\n   * getNumberGeneratorRule\n   * @override\n   * @description - 表格序号列的生成规则\n   */\n\n\n  SearchTableImplement.prototype.getNumberGeneratorRule = function () {\n    return searchtable_1.default.NUMBER_GENERATOR_RULE_CONTINUITY;\n  };\n  /**\n   * getNumberGeneratorRule\n   * @description 获取符号列的生成规则\n   */\n\n\n  SearchTableImplement.prototype.getRowSelectionMode = function () {\n    return searchtable_1.default.ROW_SELECTION_NORMAL_MODE;\n  };\n  /**\n   * getTableNumberColumnWidth\n   * @override\n   * @description - 表格序号列的宽度\n   */\n\n\n  SearchTableImplement.prototype.getTableNumberColumnWidth = function () {\n    return 80;\n  };\n  /**\n   * getRowKey\n   * @override\n   * @description - 数据的主键\n   */\n\n\n  SearchTableImplement.prototype.getRowKey = function () {\n    return 'id';\n  };\n  /**\n   * getDataKey\n   * @description - 获取数据的key\n   * @protected\n   */\n\n\n  SearchTableImplement.prototype.getDataKey = function () {\n    return 'list';\n  };\n  /**\n   * getTotalKey\n   * @description - 获取total的key\n   * @protected\n   */\n\n\n  SearchTableImplement.prototype.getTotalKey = function () {\n    return 'totalCount';\n  };\n  /**\n   * getData\n   * @description - Table的数据(Table的dataSource字段)\n   * @override\n   * @return {Array}\n   */\n\n\n  SearchTableImplement.prototype.getData = function () {\n    return this.props[this.getServiceName()][this.getFetchListPropName()][this.getDataKey()];\n  };\n  /**\n   * getTotal\n   * @description - Table数据的总条数\n   * @override\n   */\n\n\n  SearchTableImplement.prototype.getTotal = function () {\n    return this.props[this.getServiceName()][this.getFetchListPropName()][this.getTotalKey()];\n  };\n  /**\n   * getRowSelection\n   * @override\n   * @description - 获取表格行选择对象\n   */\n\n\n  SearchTableImplement.prototype.getRowSelection = function () {\n    var _this = this;\n\n    var filter = function filter(selected, records) {\n      var rowKey = _this.getRowKey();\n\n      if (selected) {\n        // add\n        _this.setState({\n          selectedRowKeys: tslib_1.__spreadArray(tslib_1.__spreadArray([], _this.state.selectedRowKeys || [], true), records.map(function (r) {\n            return r[rowKey];\n          }), true),\n          selectedRows: tslib_1.__spreadArray(tslib_1.__spreadArray([], _this.state.selectedRowKeys || [], true), records, true)\n        });\n      } else {\n        // remove\n        _this.setState({\n          selectedRows: (_this.state.selectedRows || []).filter(function (row) {\n            return !records.find(function (r) {\n              return r[rowKey] === row[rowKey];\n            });\n          }),\n          selectedRowKeys: (_this.state.selectedRowKeys || []).filter(function (key) {\n            return !records.find(function (r) {\n              return r[rowKey] === key;\n            });\n          })\n        });\n      }\n    };\n\n    return {\n      selectedRowKeys: this.state.selectedRowKeys,\n      onChange: function onChange(selectedRowKeys, selectedRows) {\n        if (_this.getRowSelectionMode() === searchtable_1.default.ROW_SELECTION_CONTINUOUS_MODE) return; // 如果是缺省模式(不能跨页选取)\n\n        _this.setState({\n          selectedRowKeys: selectedRowKeys,\n          selectedRows: selectedRows\n        });\n      },\n      onSelect: function onSelect(record, selected) {\n        if (_this.getRowSelectionMode() === searchtable_1.default.ROW_SELECTION_NORMAL_MODE) return;\n        filter(selected, [record]);\n      },\n      onSelectAll: function onSelectAll(selected, selectedRows, changeRows) {\n        if (_this.getRowSelectionMode() === searchtable_1.default.ROW_SELECTION_NORMAL_MODE) return;\n        filter(selected, changeRows);\n      }\n    };\n  };\n  /**\n   * renderSearchForm\n   * @override\n   * @description - 渲染Table查询的表单\n   */\n\n\n  SearchTableImplement.prototype.renderSearchForm = function () {\n    return null;\n  };\n  /**\n   * renderInner\n   * @override\n   * @description - 渲染主体\n   */\n\n\n  SearchTableImplement.prototype.renderInner = function () {\n    var innerJSX = _super.prototype.renderInner.call(this);\n\n    return react_1.default.createElement(\"div\", {\n      ref: this.innerWrapRef,\n      className: \"\".concat(selectorPrefix, \"-tablewrapper\")\n    }, innerJSX);\n  };\n  /**\n   * getOrderFieldProp\n   * @description - 获取排序字段\n   * @override\n   */\n\n\n  SearchTableImplement.prototype.getOrderFieldProp = function () {\n    return 'orderField';\n  };\n  /**\n   * getOrderFieldValue\n   * @description - 获取默认排序字段的值\n   * @override\n   * @protected\n   */\n\n\n  SearchTableImplement.prototype.getOrderFieldValue = function () {\n    return '';\n  };\n  /**\n   * getOrderProp\n   * @description - 获取排序方式\n   */\n\n\n  SearchTableImplement.prototype.getOrderProp = function () {\n    return 'order';\n  };\n  /**\n   * getOrderPropValue\n   * @override\n   * @description - 获取默认排序方式\n   * @protected\n   */\n\n\n  SearchTableImplement.prototype.getOrderPropValue = function () {\n    return 'descend';\n  };\n  /**\n   * clear\n   * @description - 清空查询条件\n   * @override\n   */\n\n\n  SearchTableImplement.prototype.clear = function () {\n    var _this = this;\n\n    return new Promise(function (resolve) {\n      var _a;\n\n      _this.setState(tslib_1.__assign(tslib_1.__assign({}, _this.getParams()), (_a = {}, _a[_this.getOrderFieldProp()] = _this.getOrderFieldValue(), _a[_this.getOrderProp()] = _this.getOrderPropValue() || 'descend', // 查询参数\n      _a.searchParams = tslib_1.__assign({}, _this.getParams()), _a.selectedRowKeys = [], _a.selectedRows = [], _a)), function () {\n        resolve();\n      });\n    });\n  };\n  /**\n   * renderSearchFooterItems\n   * @description - 渲染表格的工具栏\n   * @override\n   */\n\n\n  SearchTableImplement.prototype.renderSearchFooterItems = function () {\n    return [];\n  };\n  /**\n   * showLoading\n   * @description - 是否显示遮罩\n   * @override\n   */\n\n\n  SearchTableImplement.prototype.showLoading = function () {\n    return this.props.loading[\"\".concat(this.getServiceName(), \"/\").concat(this.getFetchListPropName())];\n  };\n  /**\n   * getSearchParams\n   * @description - 获取查询参数\n   * @protected\n   */\n\n\n  SearchTableImplement.prototype.getSearchParams = function () {\n    var _a;\n\n    var _b = this.state,\n        page = _b.page,\n        limit = _b.limit,\n        searchParams = _b.searchParams;\n    var order = this.state[this.getOrderProp()];\n    return tslib_1.__assign({}, tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({\n      page: page,\n      limit: limit\n    }, searchParams), (_a = {}, _a[this.getOrderProp()] = order === 'descend' ? 'desc' : 'asc', _a[this.getOrderFieldProp()] = this.state[this.getOrderFieldProp()], _a)), this.getFetchDataParams()));\n  };\n  /**\n   * fetchData\n   * @description - 加载数据\n   * @override\n   */\n\n\n  SearchTableImplement.prototype.fetchData = function () {\n    return this.fetchDataExecute(this.getSearchParams());\n  };\n  /**\n   * fetchDataExecute\n   * @description - 真正的执行获取列表数据的接口\n   * @param searchParams\n   * @protected\n   */\n\n\n  SearchTableImplement.prototype.fetchDataExecute = function (searchParams) {\n    return this.props[\"\".concat(this.getServiceName()).concat(this.getFetchListPropNameToFirstUpper())](searchParams);\n  };\n  /**\n   * onSearch\n   * @description - 点击查询\n   * @override\n   */\n\n\n  SearchTableImplement.prototype.onSearch = function () {\n    var _this = this;\n\n    var keys = Object.keys(this.getParams());\n    var params = {};\n    keys.forEach(function (key) {\n      params[key] = _this.state[key];\n    });\n    return new Promise(function (resolve) {\n      var _a;\n\n      _this.setState({\n        searchParams: tslib_1.__assign(tslib_1.__assign({}, params), (_a = {}, _a[_this.getOrderFieldProp()] = _this.state[_this.getOrderFieldProp()], _a[_this.getOrderProp()] = _this.state[_this.getOrderProp()], _a))\n      }, function () {\n        _this.fetchData().then(function () {\n          resolve();\n        });\n      });\n    });\n  };\n\n  SearchTableImplement.prototype.getColumns = function () {\n    return [];\n  };\n\n  SearchTableImplement.prototype.onSubTableChange = function (pagination, filters, sorter, extra) {};\n\n  SearchTableImplement.prototype.renderSearchFormAfter = function () {\n    return null;\n  };\n\n  SearchTableImplement.prototype.renderSearchFormBefore = function () {\n    return null;\n  };\n\n  SearchTableImplement.prototype.renderTableFooter = function () {\n    return null;\n  };\n\n  SearchTableImplement.prototype.renderTableHeader = function () {\n    return null;\n  };\n\n  return SearchTableImplement;\n}(searchtable_1.default);\n\nSearchTableImplement.defaultProps = tslib_1.__assign({}, searchtable_1.defaultProps);\nSearchTableImplement.propTypes = tslib_1.__assign(tslib_1.__assign({}, searchtable_1.propTypes), {\n  getTableWrapperInstance: prop_types_1.default.func\n});\nexports.default = SearchTableImplement;"],"names":["require","Object","defineProperty","exports","value","tslib_1","prop_types_1","__importDefault","react_1","__importStar","searchtable_1","selectorPrefix","SearchTableImplement","_super","props","_this","call","this","innerWrapRef","createRef","onSelectChange","property","v","_a","setState","onInputChange","e","target","trim","onDateTimeRangeChange","propertys","moments","length","assign","state","__assign","getParams","getOrderFieldProp","getOrderFieldValue","getOrderProp","getOrderPropValue","searchParams","selectedRowKeys","selectedRows","__extends","prototype","componentDidMount","getTableWrapperInstance","getFetchListPropName","getFetchListPropNameToFirstUpper","fetchListPropName","concat","charAt","toUpperCase","substring","getServiceName","getFetchDataParams","isShowNumber","getNumberGeneratorRule","default","NUMBER_GENERATOR_RULE_CONTINUITY","getRowSelectionMode","ROW_SELECTION_NORMAL_MODE","getTableNumberColumnWidth","getRowKey","getDataKey","getTotalKey","getData","getTotal","getRowSelection","filter","selected","records","rowKey","__spreadArray","map","r","row","find","key","onChange","ROW_SELECTION_CONTINUOUS_MODE","onSelect","record","onSelectAll","changeRows","renderSearchForm","renderInner","innerJSX","createElement","ref","className","clear","Promise","resolve","renderSearchFooterItems","showLoading","loading","getSearchParams","_b","page","limit","order","fetchData","fetchDataExecute","onSearch","keys","params","forEach","then","getColumns","onSubTableChange","pagination","filters","sorter","extra","renderSearchFormAfter","renderSearchFormBefore","renderTableFooter","renderTableHeader","defaultProps","propTypes","func"],"mappings":"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"}