{"version":3,"file":"searchtableimplement.js","sources":["searchtableimplement.js"],"sourcesContent":["\"use strict\";\n\nrequire(\"core-js/modules/es.object.define-property.js\");\n\nrequire(\"core-js/modules/es.string.trim.js\");\n\nrequire(\"core-js/modules/es.object.assign.js\");\n\nrequire(\"core-js/modules/es.array.concat.js\");\n\nrequire(\"core-js/modules/es.array.map.js\");\n\nrequire(\"core-js/modules/es.array.filter.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/es.array.find.js\");\n\nrequire(\"core-js/modules/es.promise.js\");\n\nrequire(\"core-js/modules/es.object.keys.js\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar react_1 = tslib_1.__importStar(require(\"react\"));\n\nvar prop_types_1 = tslib_1.__importDefault(require(\"prop-types\"));\n\nvar searchtable_1 = tslib_1.__importStar(require(\"./searchtable\"));\n\nvar selectorPrefix = 'adhere-ui-searchtableimplement';\n/**\n * SearchTableImplement\n * @class SearchTableImplement\n * @classdesc SearchTableImplement - SearchTable的默认实现\n */\n// @ts-ignore\n\nvar SearchTableImplement =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(SearchTableImplement, _super);\n\n  function SearchTableImplement(props) {\n    var _a;\n\n    var _this = _super.call(this, props) || this;\n\n    _this.innerWrapRef = (0, react_1.createRef)(); // ------------ 不需要重写(override)的方法 start ------------------\n\n    /**\n     * onSelectChange\n     * @description - onSelectChange\n     * @param property\n     * @param v\n     */\n\n    _this.onSelectChange = function (property, v) {\n      var _a; // @ts-ignore\n\n\n      _this.setState((_a = {}, _a[property] = v, _a));\n    };\n    /**\n     * onInputChange\n     * @description - onInputChange\n     * @param property\n     * @param e\n     */\n\n\n    _this.onInputChange = function (property, e) {\n      var _a; // @ts-ignore\n\n\n      _this.setState((_a = {}, _a[property] = e.target.value.trim(), _a));\n    };\n    /**\n     * onDateTimeRangeChange\n     * @description - onDateTimeRangeChange\n     * @param propertys\n     * @param moments\n     */\n\n\n    _this.onDateTimeRangeChange = function (propertys, moments) {\n      var _a; // @ts-ignore\n\n\n      _this.setState((_a = {}, _a[propertys[0]] = moments && moments.length ? moments[0] : null, _a[propertys[1]] = moments && moments.length ? moments[1] : null, _a));\n    }; // @ts-ignore\n\n\n    Object.assign(_this.state, tslib_1.__assign(tslib_1.__assign({}, _this.getParams()), (_a = {}, _a[_this.getOrderFieldProp()] = _this.getOrderFieldValue(), _a[_this.getOrderProp()] = _this.getOrderPropValue() || 'descend', // 查询参数\n    _a.searchParams = tslib_1.__assign({}, _this.getParams()), _a.selectedRowKeys = [], _a.selectedRows = [], _a)));\n    return _this;\n  }\n\n  SearchTableImplement.prototype.componentDidMount = function () {\n    _super.prototype.componentDidMount.call(this); // @ts-ignore\n\n\n    var getTableWrapperInstance = this.props.getTableWrapperInstance;\n\n    if (getTableWrapperInstance) {\n      getTableWrapperInstance(this.innerWrapRef);\n    }\n  };\n  /**\n   * getFetchListPropName\n   * @override\n   * @description - 获取调用列表接口的函数名\n   */\n\n\n  SearchTableImplement.prototype.getFetchListPropName = function () {\n    return '';\n  };\n  /**\n   * getFetchListPropNameToFirstUpper\n   * @override\n   * @description - 获取调用列表接口的函数名首字母大写\n   * @return string\n   */\n\n\n  SearchTableImplement.prototype.getFetchListPropNameToFirstUpper = function () {\n    var fetchListPropName = this.getFetchListPropName();\n\n    if (fetchListPropName.length > 1) {\n      return \"\".concat(fetchListPropName.charAt(0).toUpperCase()).concat(fetchListPropName.substring(1));\n    }\n\n    return fetchListPropName;\n  }; // ------------ 不需要重写(override)的方法 end ------------------\n\n  /**\n   * getParams\n   * @override\n   * @description - 获取查询参数对象\n   */\n\n\n  SearchTableImplement.prototype.getParams = function () {\n    return {};\n  };\n  /**\n   * getServiceName\n   * @override\n   * @description - 获取接口服务的model名称\n   */\n\n\n  SearchTableImplement.prototype.getServiceName = function () {\n    return '';\n  };\n  /**\n   * getFetchDataParams\n   * @override\n   * @description - 获取调用数据接口的参数\n   */\n\n\n  SearchTableImplement.prototype.getFetchDataParams = function () {\n    return {};\n  };\n  /**\n   * isShowNumber\n   * @description - 是否线上序号列\n   * @override\n   * @return {boolean}\n   */\n\n\n  SearchTableImplement.prototype.isShowNumber = function () {\n    return true;\n  };\n  /**\n   * getNumberGeneratorRule\n   * @override\n   * @description - 表格序号列的生成规则\n   */\n\n\n  SearchTableImplement.prototype.getNumberGeneratorRule = function () {\n    return searchtable_1.default.NUMBER_GENERATOR_RULE_CONTINUITY;\n  };\n  /**\n   * getNumberGeneratorRule\n   * @description 获取符号列的生成规则\n   */\n\n\n  SearchTableImplement.prototype.getRowSelectionMode = function () {\n    return searchtable_1.default.ROW_SELECTION_NORMAL_MODE;\n  };\n  /**\n   * getTableNumberColumnWidth\n   * @override\n   * @description - 表格序号列的宽度\n   */\n\n\n  SearchTableImplement.prototype.getTableNumberColumnWidth = function () {\n    return 80;\n  };\n  /**\n   * getRowKey\n   * @override\n   * @description - 数据的主键\n   */\n\n\n  SearchTableImplement.prototype.getRowKey = function () {\n    return 'id';\n  };\n  /**\n   * getDataKey\n   * @description - 获取数据的key\n   * @protected\n   */\n\n\n  SearchTableImplement.prototype.getDataKey = function () {\n    return 'list';\n  };\n  /**\n   * getTotalKey\n   * @description - 获取total的key\n   * @protected\n   */\n\n\n  SearchTableImplement.prototype.getTotalKey = function () {\n    return 'totalCount';\n  };\n  /**\n   * getData\n   * @description - Table的数据(Table的dataSource字段)\n   * @override\n   * @return {Array}\n   */\n\n\n  SearchTableImplement.prototype.getData = function () {\n    // @ts-ignore\n    return this.props[this.getServiceName()][this.getFetchListPropName()][this.getDataKey()];\n  };\n  /**\n   * getTotal\n   * @description - Table数据的总条数\n   * @override\n   */\n\n\n  SearchTableImplement.prototype.getTotal = function () {\n    // @ts-ignore\n    return this.props[this.getServiceName()][this.getFetchListPropName()][this.getTotalKey()];\n  };\n  /**\n   * getRowSelection\n   * @override\n   * @description - 获取表格行选择对象\n   */\n\n\n  SearchTableImplement.prototype.getRowSelection = function () {\n    var _this = this;\n\n    var self = this;\n\n    function filter(selected, records) {\n      var rowKey = self.getRowKey();\n\n      if (selected) {\n        // add\n        // @ts-ignore\n        self.setState({\n          // @ts-ignore\n          selectedRowKeys: tslib_1.__spreadArray(tslib_1.__spreadArray([], self.state.selectedRowKeys, true), records.map(function (r) {\n            return r[rowKey];\n          }), true),\n          // @ts-ignore\n          selectedRows: tslib_1.__spreadArray(tslib_1.__spreadArray([], self.state.selectedRows, true), records, true)\n        });\n      } else {\n        // remove\n        // @ts-ignore\n        self.setState({\n          // @ts-ignore\n          selectedRows: self.state.selectedRows.filter(function (row) {\n            return !records.find(function (r) {\n              return r[rowKey] === row[rowKey];\n            });\n          }),\n          // @ts-ignore\n          selectedRowKeys: self.state.selectedRowKeys.filter(function (key) {\n            return !records.find(function (r) {\n              return r[rowKey] === key;\n            });\n          })\n        });\n      }\n    }\n\n    return {\n      // @ts-ignore\n      selectedRowKeys: this.state.selectedRowKeys,\n      onChange: function onChange(selectedRowKeys, selectedRows) {\n        if (_this.getRowSelectionMode() === searchtable_1.default.ROW_SELECTION_CONTINUOUS_MODE) return; // 如果是缺省模式(不能跨页选取)\n        // @ts-ignore\n\n        _this.setState({\n          selectedRowKeys: selectedRowKeys,\n          selectedRows: selectedRows\n        });\n      },\n      onSelect: function onSelect(record, selected) {\n        if (_this.getRowSelectionMode() === searchtable_1.default.ROW_SELECTION_NORMAL_MODE) return;\n        filter(selected, [record]);\n      },\n      onSelectAll: function onSelectAll(selected, selectedRows, changeRows) {\n        if (_this.getRowSelectionMode() === searchtable_1.default.ROW_SELECTION_NORMAL_MODE) return;\n        filter(selected, changeRows);\n      }\n    };\n  };\n  /**\n   * renderSearchForm\n   * @override\n   * @description - 渲染Table查询的表单\n   */\n\n\n  SearchTableImplement.prototype.renderSearchForm = function () {\n    return null;\n  };\n  /**\n   * renderInner\n   * @override\n   * @description - 渲染主体\n   */\n\n\n  SearchTableImplement.prototype.renderInner = function () {\n    var innerJSX = _super.prototype.renderInner.call(this);\n\n    return react_1.default.createElement(\"div\", {\n      ref: this.innerWrapRef,\n      className: \"\".concat(selectorPrefix, \"-tablewrapper\")\n    }, innerJSX);\n  };\n  /**\n   * getOrderFieldProp\n   * @description - 获取排序字段\n   * @override\n   */\n\n\n  SearchTableImplement.prototype.getOrderFieldProp = function () {\n    return 'orderField';\n  };\n  /**\n   * getOrderFieldValue\n   * @description - 获取默认排序字段的值\n   * @override\n   * @protected\n   */\n\n\n  SearchTableImplement.prototype.getOrderFieldValue = function () {\n    return '';\n  };\n  /**\n   * getOrderProp\n   * @description - 获取排序方式\n   */\n\n\n  SearchTableImplement.prototype.getOrderProp = function () {\n    return 'order';\n  };\n  /**\n   * getOrderPropValue\n   * @override\n   * @description - 获取默认排序方式\n   * @protected\n   */\n\n\n  SearchTableImplement.prototype.getOrderPropValue = function () {\n    return 'descend';\n  };\n  /**\n   * clear\n   * @description - 清空查询条件\n   * @override\n   */\n\n\n  SearchTableImplement.prototype.clear = function () {\n    var _this = this;\n\n    return new Promise(function (resolve) {\n      var _a; // @ts-ignore\n\n\n      _this.setState(tslib_1.__assign(tslib_1.__assign({}, _this.getParams()), (_a = {}, _a[_this.getOrderFieldProp()] = _this.getOrderFieldValue(), _a[_this.getOrderProp()] = _this.getOrderPropValue() || 'descend', // 查询参数\n      _a.searchParams = tslib_1.__assign({}, _this.getParams()), _a.selectedRowKeys = [], _a.selectedRows = [], _a)), function () {\n        resolve();\n      });\n    });\n  };\n  /**\n   * renderSearchFooterItems\n   * @description - 渲染表格的工具栏\n   * @override\n   */\n\n\n  SearchTableImplement.prototype.renderSearchFooterItems = function () {\n    return [];\n  };\n  /**\n   * showLoading\n   * @description - 是否显示遮罩\n   * @override\n   */\n\n\n  SearchTableImplement.prototype.showLoading = function () {\n    // @ts-ignore\n    return this.props.loading[\"\".concat(this.getServiceName(), \"/\").concat(this.getFetchListPropName())];\n  };\n  /**\n   * getSearchParams\n   * @description - 获取查询参数\n   * @protected\n   */\n\n\n  SearchTableImplement.prototype.getSearchParams = function () {\n    var _a; // @ts-ignore\n\n\n    var _b = this.state,\n        page = _b.page,\n        limit = _b.limit,\n        searchParams = _b.searchParams; // @ts-ignore\n\n    var order = this.state[this.getOrderProp()];\n    return tslib_1.__assign({}, tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({\n      page: page,\n      limit: limit\n    }, searchParams), (_a = {}, _a[this.getOrderProp()] = order === 'descend' ? 'desc' : 'asc', _a[this.getOrderFieldProp()] = this.state[this.getOrderFieldProp()], _a)), this.getFetchDataParams()));\n  };\n  /**\n   * fetchData\n   * @description - 加载数据\n   * @override\n   */\n\n\n  SearchTableImplement.prototype.fetchData = function () {\n    return this.fetchDataExecute(this.getSearchParams());\n  };\n  /**\n   * fetchDataExecute\n   * @description - 真正的执行获取列表数据的接口\n   * @param searchParams\n   * @protected\n   */\n\n\n  SearchTableImplement.prototype.fetchDataExecute = function (searchParams) {\n    // @ts-ignore\n    return this.props[\"\".concat(this.getServiceName()).concat(this.getFetchListPropNameToFirstUpper())](searchParams);\n  };\n  /**\n   * onSearch\n   * @description - 点击查询\n   * @override\n   */\n\n\n  SearchTableImplement.prototype.onSearch = function () {\n    var _this = this;\n\n    var keys = Object.keys(this.getParams());\n    var params = {};\n    keys.forEach(function (key) {\n      // @ts-ignore\n      params[key] = _this.state[key];\n    });\n    return new Promise(function (resolve) {\n      var _a; // @ts-ignore\n\n\n      _this.setState({\n        searchParams: tslib_1.__assign(tslib_1.__assign({}, params), (_a = {}, _a[_this.getOrderFieldProp()] = _this.state[_this.getOrderFieldProp()], _a[_this.getOrderProp()] = _this.state[_this.getOrderProp()], _a))\n      }, function () {\n        _this.fetchData().then(function () {\n          resolve();\n        });\n      });\n    });\n  };\n\n  return SearchTableImplement;\n}(searchtable_1.default);\n\nSearchTableImplement.defaultProps = tslib_1.__assign({}, searchtable_1.defaultProps);\nSearchTableImplement.propTypes = tslib_1.__assign(tslib_1.__assign({}, searchtable_1.propTypes), {\n  getTableWrapperInstance: prop_types_1.default.func\n}); // @ts-ignore\n\nexports.default = SearchTableImplement;"],"names":["require","Object","defineProperty","exports","value","tslib_1","react_1","__importStar","prop_types_1","__importDefault","searchtable_1","selectorPrefix","SearchTableImplement","_super","props","_this","call","this","innerWrapRef","createRef","onSelectChange","property","v","_a","setState","onInputChange","e","target","trim","onDateTimeRangeChange","propertys","moments","length","assign","state","__assign","getParams","getOrderFieldProp","getOrderFieldValue","getOrderProp","getOrderPropValue","searchParams","selectedRowKeys","selectedRows","__extends","prototype","componentDidMount","getTableWrapperInstance","getFetchListPropName","getFetchListPropNameToFirstUpper","fetchListPropName","concat","charAt","toUpperCase","substring","getServiceName","getFetchDataParams","isShowNumber","getNumberGeneratorRule","default","NUMBER_GENERATOR_RULE_CONTINUITY","getRowSelectionMode","ROW_SELECTION_NORMAL_MODE","getTableNumberColumnWidth","getRowKey","getDataKey","getTotalKey","getData","getTotal","getRowSelection","self","filter","selected","records","rowKey","__spreadArray","map","r","row","find","key","onChange","ROW_SELECTION_CONTINUOUS_MODE","onSelect","record","onSelectAll","changeRows","renderSearchForm","renderInner","innerJSX","createElement","ref","className","clear","Promise","resolve","renderSearchFooterItems","showLoading","loading","getSearchParams","_b","page","limit","order","fetchData","fetchDataExecute","onSearch","keys","params","forEach","then","defaultProps","propTypes","func"],"mappings":"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"}