import"core-js/modules/es.object.to-string.js";import"core-js/modules/es.promise.js";import"core-js/modules/web.dom-collections.for-each.js";import"core-js/modules/es.object.keys.js";import"core-js/modules/es.array.find.js";import{__extends}from"tslib";import cloneDeep from"lodash.clonedeep";import moment from"moment";import SearchEditorCellTable from"./SearchEditorCellTable";import SearchEditorFactory from"./SearchEditorFactory";var SearchEditorTable=function(e){function o(){return null!==e&&e.apply(this,arguments)||this}return __extends(o,e),o.prototype.updateEditorData=function(t){var a=this;return new Promise(function(e){var o,r=cloneDeep(a.props[a.getServiceName()]),c=r[a.getFetchListPropName()][a.getDataKey()]||[],i=a.getRowKey();t.forEach(function(t){Object.keys(t).forEach(function(e){var o=t[e],r=(o instanceof moment&&(o=o.valueOf()),c.find(function(e){return e[i]===t[i]}));r&&(r[e]=o)})}),a.props.dispatch(((o={type:"".concat(a.getServiceName(),"/receive")})[a.getServiceName()]=r,o)).then(function(){return e()})})},o}(SearchEditorFactory(SearchEditorCellTable));export default SearchEditorTable;
//# sourceMappingURL=SearchEditorTable.js.map
