import"core-js/modules/es.array.iterator.js";import"core-js/modules/es.object.to-string.js";import"core-js/modules/web.dom-collections.iterator.js";import"core-js/modules/es.promise.js";import"core-js/modules/es.object.keys.js";import"core-js/modules/web.dom-collections.for-each.js";import"core-js/modules/es.array.find.js";import{__extends}from"tslib";import cloneDeep from"lodash.clonedeep";import moment from"moment";import SearchEditorCellTable from"./SearchEditorCellTable";import SearchEditorRowFactory from"./SearchEditorRowFactory";var SearchEditorRowTable=function(e){function o(){return null!==e&&e.apply(this,arguments)||this}return __extends(o,e),o.prototype.updateEditorCellRowData=function(e){var c=this,s=e.values,a=e.record;return new Promise(function(e){var o,r=cloneDeep(c.props[c.getServiceName()]),t=r[c.getFetchListPropName()][c.getDataKey()]||[],i=c.getRowKey();Object.keys(s).forEach(function(e){var o=s[e],r=(o instanceof moment&&(o=o.valueOf()),t.find(function(e){return e[i]===a[i]}));r&&(r[e]=o)}),c.props.dispatch(((o={type:"".concat(c.getServiceName(),"/receive")})[c.getServiceName()]=r,o)).then(function(){return e()})})},o}(SearchEditorRowFactory(SearchEditorCellTable));export default SearchEditorRowTable;
//# sourceMappingURL=SearchEditorRowTable.js.map
