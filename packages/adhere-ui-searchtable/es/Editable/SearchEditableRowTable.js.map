{"version":3,"file":"SearchEditableRowTable.js","sources":["Editable/SearchEditableRowTable.js"],"sourcesContent":["import \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport { __extends } from \"tslib\";\nimport cloneDeep from 'lodash.clonedeep';\nimport moment from 'moment';\nimport SearchEditableCellTable from './SearchEditableCellTable';\nimport SearchEditableRowFactory from './SearchEditableRowFactory';\n/**\n * SearchEditableRowTable\n * @class\n * @classdesc 行可编辑的表格\n */\n\nvar SearchEditableRowTable =\n/** @class */\nfunction (_super) {\n  __extends(SearchEditableRowTable, _super);\n\n  function SearchEditableRowTable() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * updateEditorCellRowData\n   * @description 更新可编辑单元格一行的数据\n   * @param values 一行的数据\n   * @param record\n   * @return Promise<void>\n   */\n\n\n  SearchEditableRowTable.prototype.updateEditorCellRowData = function (_a) {\n    var _this = this;\n\n    var values = _a.values,\n        record = _a.record;\n    return new Promise(function (resolve) {\n      var _a;\n\n      var listData = cloneDeep(_this.props[_this.getServiceName()]);\n      var dataSource = listData[_this.getFetchListPropName()][_this.getDataKey()] || [];\n\n      var rowKey = _this.getRowKey();\n\n      var keys = Object.keys(values);\n      keys.forEach(function (dataIndex) {\n        var value = values[dataIndex];\n\n        if (value instanceof moment) {\n          value = value.valueOf();\n        }\n\n        var recordItem = dataSource.find(function (t) {\n          return t[rowKey] === record[rowKey];\n        });\n\n        if (recordItem) {\n          recordItem[dataIndex] = value;\n        }\n      });\n\n      _this.props.dispatch((_a = {\n        type: \"\".concat(_this.getServiceName(), \"/receive\")\n      }, _a[_this.getServiceName()] = listData, _a)).then(function () {\n        return resolve();\n      });\n    });\n  };\n\n  return SearchEditableRowTable;\n}(SearchEditableRowFactory(SearchEditableCellTable));\n\nexport default SearchEditableRowTable;"],"names":["__extends","cloneDeep","moment","SearchEditableCellTable","SearchEditableRowFactory","SearchEditableRowTable","_super","apply","this","arguments","prototype","updateEditorCellRowData","_a","_this","values","record","Promise","resolve","listData","props","getServiceName","dataSource","getFetchListPropName","getDataKey","rowKey","getRowKey","Object","keys","forEach","dataIndex","value","recordItem","valueOf","find","t","dispatch","type","concat","then"],"mappings":"MAAO,6CACA,+CACA,wDACA,sCACA,0CACA,wDACA,0CACEA,SAAwB,KAAP,eACnBC,cAAe,0BACfC,WAAY,gBACZC,4BAA6B,mCAC7BC,6BAA8B,6BAOrC,IAAIC,uBAEJ,SAAUC,GAGR,SAASD,IACP,OAAkB,OAAXC,GAAmBA,EAAOC,MAAMC,KAAMC,SAAS,GAAKD,IAC7D,CAgDA,OApDAR,UAAUK,EAAwBC,CAAM,EAcxCD,EAAuBK,UAAUC,wBAA0B,SAAUC,GACnE,IAAIC,EAAQL,KAERM,EAASF,EAAGE,OACZC,EAASH,EAAGG,OAChB,OAAO,IAAIC,QAAQ,SAAUC,GAC3B,IAAIL,EAEAM,EAAWjB,UAAUY,EAAMM,MAAMN,EAAMO,eAAe,EAAE,EACxDC,EAAaH,EAASL,EAAMS,qBAAqB,GAAGT,EAAMU,WAAW,IAAM,GAE3EC,EAASX,EAAMY,UAAU,EAElBC,OAAOC,KAAKb,CAAM,EACxBc,QAAQ,SAAUC,GACrB,IAAIC,EAAQhB,EAAOe,GAMfE,GAJAD,aAAiB5B,SACnB4B,EAAQA,EAAME,QAAQ,GAGPX,EAAWY,KAAK,SAAUC,GACzC,OAAOA,EAAEV,KAAYT,EAAOS,EAC9B,CAAC,GAEGO,IACFA,EAAWF,GAAaC,EAE5B,CAAC,EAEDjB,EAAMM,MAAMgB,WAAUvB,EAAK,CACzBwB,KAAM,GAAGC,OAAOxB,EAAMO,eAAe,EAAG,UAAU,CACpD,GAAMP,EAAMO,eAAe,GAAKF,EAAUN,EAAG,EAAE0B,KAAK,WAClD,OAAOrB,EAAQ,CACjB,CAAC,CACH,CAAC,CACH,EAEOZ,CACT,EAAED,yBAAyBD,uBAAuB,CAAC,iBAEpCE"}