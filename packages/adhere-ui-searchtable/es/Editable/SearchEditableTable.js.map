{"version":3,"file":"SearchEditableTable.js","sources":["Editable/SearchEditableTable.js"],"sourcesContent":["import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport { __extends } from \"tslib\";\nimport cloneDeep from 'lodash.clonedeep';\nimport moment from 'moment';\nimport SearchEditableCellTable from './SearchEditableCellTable';\nimport SearchEditableFactory from './SearchEditableFactory';\n/**\n * SearchEditableTable\n * @class\n * @classdesc 可编辑的表格(表格进行整体编辑)\n */\n\nvar SearchEditableTable =\n/** @class */\nfunction (_super) {\n  __extends(SearchEditableTable, _super);\n\n  function SearchEditableTable() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * updateEditorData\n   * @description 更新可编辑的所有单元格\n   * @return Promise<void>\n   */\n\n\n  SearchEditableTable.prototype.updateEditorData = function (changeData) {\n    var _this = this;\n\n    return new Promise(function (resolve) {\n      var _a;\n\n      var listData = cloneDeep(_this.props[_this.getServiceName()]);\n      var dataSource = listData[_this.getFetchListPropName()][_this.getDataKey()] || [];\n\n      var rowKey = _this.getRowKey();\n\n      changeData.forEach(function (record) {\n        var keys = Object.keys(record);\n        keys.forEach(function (dataIndex) {\n          var value = record[dataIndex];\n\n          if (value instanceof moment) {\n            value = value.valueOf();\n          }\n\n          var recordItem = dataSource.find(function (t) {\n            return t[rowKey] === record[rowKey];\n          });\n\n          if (recordItem) {\n            recordItem[dataIndex] = value;\n          }\n        });\n      });\n\n      _this.props.dispatch((_a = {\n        type: \"\".concat(_this.getServiceName(), \"/receive\")\n      }, _a[_this.getServiceName()] = listData, _a)).then(function () {\n        return resolve();\n      });\n    });\n  };\n\n  return SearchEditableTable;\n}(SearchEditableFactory(SearchEditableCellTable));\n\nexport default SearchEditableTable;"],"names":["__extends","cloneDeep","moment","SearchEditableCellTable","SearchEditableFactory","SearchEditableTable","_super","apply","this","arguments","prototype","updateEditorData","changeData","_this","Promise","resolve","_a","listData","props","getServiceName","dataSource","getFetchListPropName","getDataKey","rowKey","getRowKey","forEach","record","Object","keys","dataIndex","value","recordItem","valueOf","find","t","dispatch","type","concat","then"],"mappings":"MAAO,+CACA,sCACA,wDACA,0CACA,0CACEA,SAAwB,KAAP,eACnBC,cAAe,0BACfC,WAAY,gBACZC,4BAA6B,mCAC7BC,0BAA2B,0BAOlC,IAAIC,oBAEJ,SAAUC,GAGR,SAASD,IACP,OAAkB,OAAXC,GAAmBA,EAAOC,MAAMC,KAAMC,SAAS,GAAKD,IAC7D,CA8CA,OAlDAR,UAAUK,EAAqBC,CAAM,EAYrCD,EAAoBK,UAAUC,iBAAmB,SAAUC,GACzD,IAAIC,EAAQL,KAEZ,OAAO,IAAIM,QAAQ,SAAUC,GAC3B,IAAIC,EAEAC,EAAWhB,UAAUY,EAAMK,MAAML,EAAMM,eAAe,EAAE,EACxDC,EAAaH,EAASJ,EAAMQ,qBAAqB,GAAGR,EAAMS,WAAW,IAAM,GAE3EC,EAASV,EAAMW,UAAU,EAE7BZ,EAAWa,QAAQ,SAAUC,GAChBC,OAAOC,KAAKF,CAAM,EACxBD,QAAQ,SAAUI,GACrB,IAAIC,EAAQJ,EAAOG,GAMfE,GAJAD,aAAiB5B,SACnB4B,EAAQA,EAAME,QAAQ,GAGPZ,EAAWa,KAAK,SAAUC,GACzC,OAAOA,EAAEX,KAAYG,EAAOH,EAC9B,CAAC,GAEGQ,IACFA,EAAWF,GAAaC,EAE5B,CAAC,CACH,CAAC,EAEDjB,EAAMK,MAAMiB,WAAUnB,EAAK,CACzBoB,KAAM,GAAGC,OAAOxB,EAAMM,eAAe,EAAG,UAAU,CACpD,GAAMN,EAAMM,eAAe,GAAKF,EAAUD,EAAG,EAAEsB,KAAK,WAClD,OAAOvB,EAAQ,CACjB,CAAC,CACH,CAAC,CACH,EAEOV,CACT,EAAED,sBAAsBD,uBAAuB,CAAC,iBAEjCE"}