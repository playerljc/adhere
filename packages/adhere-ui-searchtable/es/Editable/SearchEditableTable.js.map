{"version":3,"file":"SearchEditableTable.js","sources":["Editable/SearchEditableTable.js"],"sourcesContent":["import { __extends } from \"tslib\";\r\nimport dayjs from 'dayjs';\r\nimport cloneDeep from 'lodash.clonedeep';\r\nimport SearchEditableCellTable from './SearchEditableCellTable';\r\nimport SearchEditableFactory from './SearchEditableFactory';\r\n/**\r\n * SearchEditableTable\r\n * @class\r\n * @classdesc 可编辑的表格(表格进行整体编辑)\r\n */\r\nvar SearchEditableTable = /** @class */ (function (_super) {\r\n    __extends(SearchEditableTable, _super);\r\n    function SearchEditableTable() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * updateEditorData\r\n     * @description 更新可编辑的所有单元格\r\n     * @return Promise<void>\r\n     */\r\n    SearchEditableTable.prototype.updateEditorData = function (changeData) {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            var _a;\r\n            var listData = cloneDeep(_this.props[_this.getServiceName()]);\r\n            var dataSource = listData[_this.getFetchListPropName()][_this.getDataKey()] || [];\r\n            var rowKey = _this.getRowKey();\r\n            changeData.forEach(function (record) {\r\n                var keys = Object.keys(record);\r\n                keys.forEach(function (dataIndex) {\r\n                    var value = record[dataIndex];\r\n                    if (value instanceof dayjs) {\r\n                        value = value.valueOf();\r\n                    }\r\n                    var recordItem = dataSource.find(function (t) { return t[rowKey] === record[rowKey]; });\r\n                    if (recordItem) {\r\n                        recordItem[dataIndex] = value;\r\n                    }\r\n                });\r\n            });\r\n            _this.props\r\n                .dispatch((_a = {\r\n                    type: \"\".concat(_this.getServiceName(), \"/receive\")\r\n                },\r\n                _a[_this.getServiceName()] = listData,\r\n                _a))\r\n                .then(function () { return resolve(); });\r\n        });\r\n    };\r\n    return SearchEditableTable;\r\n}(SearchEditableFactory(SearchEditableCellTable)));\r\nexport default SearchEditableTable;\r\n//# sourceMappingURL=SearchEditableTable.js.map"],"names":["__extends","dayjs","cloneDeep","SearchEditableCellTable","SearchEditableFactory","SearchEditableTable","_super","apply","this","arguments","prototype","updateEditorData","changeData","_this","Promise","resolve","_a","listData","props","getServiceName","dataSource","getFetchListPropName","getDataKey","rowKey","getRowKey","forEach","record","Object","keys","dataIndex","value","recordItem","valueOf","find","t","dispatch","type","concat","then"],"mappings":"OAASA,SAAwB,KAAP,eACnBC,UAAW,eACXC,cAAe,0BACfC,4BAA6B,mCAC7BC,0BAA2B,0BAMlC,IAAIC,oBAAqC,SAAUC,GAE/C,SAASD,IACL,OAAkB,OAAXC,GAAmBA,EAAOC,MAAMC,KAAMC,SAAS,GAAKD,IAC/D,CAmCA,OAtCAR,UAAUK,EAAqBC,CAAM,EASrCD,EAAoBK,UAAUC,iBAAmB,SAAUC,GACvD,IAAIC,EAAQL,KACZ,OAAO,IAAIM,QAAQ,SAAUC,GACzB,IAAIC,EACAC,EAAWf,UAAUW,EAAMK,MAAML,EAAMM,eAAe,EAAE,EACxDC,EAAaH,EAASJ,EAAMQ,qBAAqB,GAAGR,EAAMS,WAAW,IAAM,GAC3EC,EAASV,EAAMW,UAAU,EAC7BZ,EAAWa,QAAQ,SAAUC,GACdC,OAAOC,KAAKF,CAAM,EACxBD,QAAQ,SAAUI,GACnB,IAAIC,EAAQJ,EAAOG,GAIfE,GAHAD,aAAiB7B,QACjB6B,EAAQA,EAAME,QAAQ,GAETZ,EAAWa,KAAK,SAAUC,GAAK,OAAOA,EAAEX,KAAYG,EAAOH,EAAS,CAAC,GAClFQ,IACAA,EAAWF,GAAaC,EAEhC,CAAC,CACL,CAAC,EACDjB,EAAMK,MACDiB,WAAUnB,EAAK,CACZoB,KAAM,GAAGC,OAAOxB,EAAMM,eAAe,EAAG,UAAU,CACtD,GACGN,EAAMM,eAAe,GAAKF,EAC7BD,EAAG,EACFsB,KAAK,WAAc,OAAOvB,EAAQ,CAAG,CAAC,CAC/C,CAAC,CACL,EACOV,CACX,EAAED,sBAAsBD,uBAAuB,CAAE,iBAClCE"}