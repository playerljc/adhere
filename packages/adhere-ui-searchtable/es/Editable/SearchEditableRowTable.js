import"core-js/modules/es.array.iterator.js";import"core-js/modules/es.object.to-string.js";import"core-js/modules/web.dom-collections.iterator.js";import"core-js/modules/es.promise.js";import"core-js/modules/es.object.keys.js";import"core-js/modules/web.dom-collections.for-each.js";import"core-js/modules/es.array.find.js";import{__extends}from"tslib";import cloneDeep from"lodash.clonedeep";import moment from"moment";import SearchEditableCellTable from"./SearchEditableCellTable";import SearchEditableRowFactory from"./SearchEditableRowFactory";var SearchEditableRowTable=function(e){function o(){return null!==e&&e.apply(this,arguments)||this}return __extends(o,e),o.prototype.updateEditorCellRowData=function(e){var i=this,c=e.values,s=e.record;return new Promise(function(e){var o,t=cloneDeep(i.props[i.getServiceName()]),r=t[i.getFetchListPropName()][i.getDataKey()]||[],a=i.getRowKey();Object.keys(c).forEach(function(e){var o=c[e],t=(o instanceof moment&&(o=o.valueOf()),r.find(function(e){return e[a]===s[a]}));t&&(t[e]=o)}),i.props.dispatch(((o={type:"".concat(i.getServiceName(),"/receive")})[i.getServiceName()]=t,o)).then(function(){return e()})})},o}(SearchEditableRowFactory(SearchEditableCellTable));export default SearchEditableRowTable;
//# sourceMappingURL=SearchEditableRowTable.js.map
