import"core-js/modules/es.array.iterator.js";import"core-js/modules/es.object.to-string.js";import"core-js/modules/web.dom-collections.iterator.js";import"core-js/modules/es.promise.js";import"core-js/modules/es.object.keys.js";import"core-js/modules/web.dom-collections.for-each.js";import"core-js/modules/es.array.find.js";import{__extends}from"tslib";import cloneDeep from"lodash.clonedeep";import moment from"moment";import SearchEditableCellStateTable from"./SearchEditableCellStateTable";import SearchEditableRowFactory from"./SearchEditableRowFactory";var SearchEditableRowStateTable=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype.updateEditorCellRowData=function(e){var i=this,s=e.values,l=e.record;return new Promise(function(e){var t,o=cloneDeep(i.state[i.getServiceName()]),r=o[i.getFetchListPropName()][i.getDataKey()]||[],a=i.getRowKey();Object.keys(s).forEach(function(e){var t=s[e],o=(t instanceof moment&&(t=t.valueOf()),r.find(function(e){return e[a]===l[a]}));o&&(o[e]=t)}),i.setState(((t={})[i.getServiceName()]=o,t),function(){return e()})})},t}(SearchEditableRowFactory(SearchEditableCellStateTable));export default SearchEditableRowStateTable;
//# sourceMappingURL=SearchEditableRowStateTable.js.map
