{"version":3,"file":"SearchEditableStateTable.js","sources":["Editable/SearchEditableStateTable.js"],"sourcesContent":["import { __extends } from \"tslib\";\r\nimport dayjs from 'dayjs';\r\nimport cloneDeep from 'lodash.clonedeep';\r\nimport SearchEditableCellStateTable from './SearchEditableCellStateTable';\r\nimport SearchEditableFactory from './SearchEditableFactory';\r\n/**\r\n * SearchEditableStateTable\r\n * @class\r\n * @classdesc 可编辑的表格(表格进行整体编辑)\r\n */\r\nvar SearchEditableStateTable = /** @class */ (function (_super) {\r\n    __extends(SearchEditableStateTable, _super);\r\n    function SearchEditableStateTable() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * updateEditorData\r\n     * @description 更新可编辑的所有单元格\r\n     * @return Promise<void>\r\n     */\r\n    SearchEditableStateTable.prototype.updateEditorData = function (changeData) {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            var _a;\r\n            var listData = cloneDeep(_this.state[_this.getServiceName()]);\r\n            // 所有的数据\r\n            var dataSource = listData[_this.getFetchListPropName()][_this.getDataKey()] || [];\r\n            var rowKey = _this.getRowKey();\r\n            changeData.forEach(function (record) {\r\n                var keys = Object.keys(record);\r\n                keys.forEach(function (dataIndex) {\r\n                    var value = record[dataIndex];\r\n                    if (value instanceof dayjs) {\r\n                        value = value.valueOf();\r\n                    }\r\n                    var recordItem = dataSource.find(function (t) { return t[rowKey] === record[rowKey]; });\r\n                    if (recordItem) {\r\n                        recordItem[dataIndex] = value;\r\n                    }\r\n                });\r\n            });\r\n            _this.setState((_a = {},\r\n                _a[_this.getServiceName()] = listData,\r\n                _a), function () { return resolve(); });\r\n        });\r\n    };\r\n    return SearchEditableStateTable;\r\n}(SearchEditableFactory(SearchEditableCellStateTable)));\r\nexport default SearchEditableStateTable;\r\n//# sourceMappingURL=SearchEditableStateTable.js.map"],"names":["__extends","dayjs","cloneDeep","SearchEditableCellStateTable","SearchEditableFactory","SearchEditableStateTable","_super","apply","this","arguments","prototype","updateEditorData","changeData","_this","Promise","resolve","_a","listData","state","getServiceName","dataSource","getFetchListPropName","getDataKey","rowKey","getRowKey","forEach","record","Object","keys","dataIndex","value","recordItem","valueOf","find","t","setState"],"mappings":"OAASA,SAAwB,KAAP,eACnBC,UAAW,eACXC,cAAe,0BACfC,iCAAkC,wCAClCC,0BAA2B,0BAMlC,IAAIC,yBAA0C,SAAUC,GAEpD,SAASD,IACL,OAAkB,OAAXC,GAAmBA,EAAOC,MAAMC,KAAMC,SAAS,GAAKD,IAC/D,CAgCA,OAnCAR,UAAUK,EAA0BC,CAAM,EAS1CD,EAAyBK,UAAUC,iBAAmB,SAAUC,GAC5D,IAAIC,EAAQL,KACZ,OAAO,IAAIM,QAAQ,SAAUC,GACzB,IAAIC,EACAC,EAAWf,UAAUW,EAAMK,MAAML,EAAMM,eAAe,EAAE,EAExDC,EAAaH,EAASJ,EAAMQ,qBAAqB,GAAGR,EAAMS,WAAW,IAAM,GAC3EC,EAASV,EAAMW,UAAU,EAC7BZ,EAAWa,QAAQ,SAAUC,GACdC,OAAOC,KAAKF,CAAM,EACxBD,QAAQ,SAAUI,GACnB,IAAIC,EAAQJ,EAAOG,GAIfE,GAHAD,aAAiB7B,QACjB6B,EAAQA,EAAME,QAAQ,GAETZ,EAAWa,KAAK,SAAUC,GAAK,OAAOA,EAAEX,KAAYG,EAAOH,EAAS,CAAC,GAClFQ,IACAA,EAAWF,GAAaC,EAEhC,CAAC,CACL,CAAC,EACDjB,EAAMsB,WAAUnB,EAAK,IACdH,EAAMM,eAAe,GAAKF,EAC7BD,GAAK,WAAc,OAAOD,EAAQ,CAAG,CAAC,CAC9C,CAAC,CACL,EACOV,CACX,EAAED,sBAAsBD,4BAA4B,CAAE,iBACvCE"}