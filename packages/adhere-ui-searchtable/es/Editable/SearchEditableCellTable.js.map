{"version":3,"file":"SearchEditableCellTable.js","sources":["Editable/SearchEditableCellTable.js"],"sourcesContent":["import { __extends } from \"tslib\";\r\nimport cloneDeep from 'lodash.clonedeep';\r\nimport { SearchTableImplement } from '../SearchTableImplement';\r\nimport SearchEditableCellFactory from './SearchEditableCellFactory';\r\n/**\r\n * SearchEditableCellTable\r\n * @class\r\n * @classdesc 可编辑单元格的表格\r\n */\r\nvar SearchEditableCellTable = /** @class */ (function (_super) {\r\n    __extends(SearchEditableCellTable, _super);\r\n    function SearchEditableCellTable() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * updateEditorCellDate\r\n     * @description 更新可编辑单元格的数据\r\n     * @param record 行数据\r\n     * @param dataIndex 列索引\r\n     * @param value 更新的值\r\n     * @return Promise<void>\r\n     */\r\n    SearchEditableCellTable.prototype.updateEditorCellDate = function (_a) {\r\n        var _this = this;\r\n        var record = _a.record, dataIndex = _a.dataIndex, value = _a.value;\r\n        return new Promise(function (resolve) {\r\n            var _a;\r\n            if (record[dataIndex] === value) {\r\n                resolve();\r\n                return;\r\n            }\r\n            var listData = cloneDeep(_this.props[_this.getServiceName()]);\r\n            var dataSource = listData[_this.getFetchListPropName()][_this.getDataKey()] || [];\r\n            var rowKey = _this.getRowKey();\r\n            var recordItem = dataSource.find(function (t) { return t[rowKey] === record[rowKey]; });\r\n            if (recordItem) {\r\n                recordItem[dataIndex] = value;\r\n                _this.props\r\n                    .dispatch((_a = {\r\n                        type: _this.getServiceName() + \"/receive\"\r\n                    },\r\n                    _a[_this.getServiceName()] = listData,\r\n                    _a))\r\n                    .then(function () { return resolve(); });\r\n            }\r\n            else\r\n                resolve();\r\n        });\r\n    };\r\n    /**\r\n     * updateEditorCellDateData\r\n     * @description 更新日期类型可编辑单元格的数据\r\n     * @param record\r\n     * @param dataIndex\r\n     * @param value\r\n     * @return Promise<void>\r\n     */\r\n    SearchEditableCellTable.prototype.updateEditorCellDateData = function (_a) {\r\n        var _this = this;\r\n        var record = _a.record, dataIndex = _a.dataIndex, value = _a.value;\r\n        return new Promise(function (resolve) {\r\n            var _a;\r\n            if (record[dataIndex] === (value === null || value === void 0 ? void 0 : value.valueOf())) {\r\n                resolve();\r\n                return;\r\n            }\r\n            var listData = cloneDeep(_this.props[_this.getServiceName()]);\r\n            var dataSource = listData[_this.getFetchListPropName()][_this.getDataKey()] || [];\r\n            var rowKey = _this.getRowKey();\r\n            var recordItem = dataSource.find(function (t) { return t[rowKey] === record[rowKey]; });\r\n            if (recordItem) {\r\n                recordItem[dataIndex] = value === null || value === void 0 ? void 0 : value.valueOf();\r\n                _this.props\r\n                    .dispatch((_a = {\r\n                        type: _this.getServiceName() + \"/receive\"\r\n                    },\r\n                    _a[_this.getServiceName()] = listData,\r\n                    _a))\r\n                    .then(function () { return resolve(); });\r\n            }\r\n            else\r\n                resolve();\r\n        });\r\n    };\r\n    return SearchEditableCellTable;\r\n}(SearchEditableCellFactory(SearchTableImplement)));\r\nexport default SearchEditableCellTable;\r\n//# sourceMappingURL=SearchEditableCellTable.js.map"],"names":["__extends","cloneDeep","SearchTableImplement","SearchEditableCellFactory","SearchEditableCellTable","_super","apply","this","arguments","prototype","updateEditorCellDate","_a","_this","record","dataIndex","value","Promise","resolve","listData","rowKey","recordItem","dataSource","props","getServiceName","getFetchListPropName","getDataKey","getRowKey","find","t","dispatch","type","then","updateEditorCellDateData","valueOf"],"mappings":"OAASA,SAAwB,KAAP,eACnBC,cAAe,0BACbC,oBAAqD,KAAzB,iCAC9BC,8BAA+B,8BAMtC,IAAIC,wBAAyC,SAAUC,GAEnD,SAASD,IACL,OAAkB,OAAXC,GAAmBA,EAAOC,MAAMC,KAAMC,SAAS,GAAKD,IAC/D,CAuEA,OA1EAP,UAAUI,EAAyBC,CAAM,EAYzCD,EAAwBK,UAAUC,qBAAuB,SAAUC,GAC/D,IAAIC,EAAQL,KACRM,EAASF,EAAGE,OAAQC,EAAYH,EAAGG,UAAWC,EAAQJ,EAAGI,MAC7D,OAAO,IAAIC,QAAQ,SAAUC,GACzB,IAKIC,EAEAC,EACAC,EAPAP,EAAOC,KAAeC,IAKtBM,GADAH,EAAWjB,UAAUW,EAAMU,MAAMV,EAAMW,eAAe,EAAE,GAClCX,EAAMY,qBAAqB,GAAGZ,EAAMa,WAAW,IAAM,GAC3EN,EAASP,EAAMc,UAAU,EACzBN,EAAaC,EAAWM,KAAK,SAAUC,GAAK,OAAOA,EAAET,KAAYN,EAAOM,EAAS,CAAC,IAElFC,EAAWN,GAAaC,EACxBH,EAAMU,MACDO,WAAUlB,EAAK,CACZmB,KAAMlB,EAAMW,eAAe,EAAI,UACnC,GACGX,EAAMW,eAAe,GAAKL,EAC7BP,EAAG,EACFoB,KAAK,WAAc,OAAOd,EAAQ,CAAG,CAAC,GAf3CA,EAAQ,CAmBhB,CAAC,CACL,EASAb,EAAwBK,UAAUuB,yBAA2B,SAAUrB,GACnE,IAAIC,EAAQL,KACRM,EAASF,EAAGE,OAAQC,EAAYH,EAAGG,UAAWC,EAAQJ,EAAGI,MAC7D,OAAO,IAAIC,QAAQ,SAAUC,GACzB,IAKIC,EAEAC,EACAC,EAPAP,EAAOC,MAAgBC,MAAAA,EAAqC,KAAA,EAASA,EAAMkB,QAAQ,KAKnFZ,GADAH,EAAWjB,UAAUW,EAAMU,MAAMV,EAAMW,eAAe,EAAE,GAClCX,EAAMY,qBAAqB,GAAGZ,EAAMa,WAAW,IAAM,GAC3EN,EAASP,EAAMc,UAAU,EACzBN,EAAaC,EAAWM,KAAK,SAAUC,GAAK,OAAOA,EAAET,KAAYN,EAAOM,EAAS,CAAC,IAElFC,EAAWN,GAAaC,MAAAA,EAAqC,KAAA,EAASA,EAAMkB,QAAQ,EACpFrB,EAAMU,MACDO,WAAUlB,EAAK,CACZmB,KAAMlB,EAAMW,eAAe,EAAI,UACnC,GACGX,EAAMW,eAAe,GAAKL,EAC7BP,EAAG,EACFoB,KAAK,WAAc,OAAOd,EAAQ,CAAG,CAAC,GAf3CA,EAAQ,CAmBhB,CAAC,CACL,EACOb,CACX,EAAED,0BAA0BD,oBAAoB,CAAE,iBACnCE"}