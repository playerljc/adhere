{"version":3,"file":"SearchTableImplement.js","sources":["SearchTableImplement.js"],"sourcesContent":["import { __assign, __extends, __spreadArray } from \"tslib\";\r\nimport PropTypes from 'prop-types';\r\nimport React, { createRef, forwardRef } from 'react';\r\nimport ServiceRegister from '@ctsj/state/lib/middleware/saga/serviceregister';\r\nimport SearchTable, { defaultProps, propTypes } from './SearchTable';\r\nexport var selectorPrefix = 'adhere-ui-searchtableimplement';\r\n/**\r\n * SearchTableImplement\r\n * @class SearchTableImplement\r\n * @classdesc SearchTableImplement - SearchTable的默认实现\r\n */\r\nvar SearchTableImplement = /** @class */ (function (_super) {\r\n    __extends(SearchTableImplement, _super);\r\n    function SearchTableImplement(props) {\r\n        var _a;\r\n        var _this = _super.call(this, props) || this;\r\n        _this.innerWrapRef = createRef();\r\n        // ------------ 不需要重写(override)的方法 start ------------------\r\n        /**\r\n         * onSelectChange\r\n         * @description - onSelectChange\r\n         * @param property\r\n         * @param v\r\n         */\r\n        _this.onSelectChange = function (property, v) {\r\n            var _a;\r\n            _this.setState((_a = {},\r\n                _a[property] = v,\r\n                _a));\r\n        };\r\n        /**\r\n         * onInputChange\r\n         * @description - onInputChange\r\n         * @param property\r\n         * @param e\r\n         */\r\n        _this.onInputChange = function (property, e) {\r\n            var _a;\r\n            _this.setState((_a = {},\r\n                _a[property] = e.target.value.trim(),\r\n                _a));\r\n        };\r\n        /**\r\n         * onDateTimeRangeChange\r\n         * @description - onDateTimeRangeChange\r\n         * @param propertys\r\n         * @param dayjs\r\n         */\r\n        _this.onDateTimeRangeChange = function (propertys, dayjs) {\r\n            var _a;\r\n            _this.setState((_a = {},\r\n                _a[propertys[0]] = dayjs && dayjs.length ? dayjs[0] : null,\r\n                _a[propertys[1]] = dayjs && dayjs.length ? dayjs[1] : null,\r\n                _a));\r\n        };\r\n        Object.assign(_this.state, __assign(__assign({}, _this.getParams()), (_a = {}, _a[_this.getOrderFieldProp()] = _this.getOrderFieldValue(), _a[_this.getOrderProp()] = _this.getOrderPropValue() || 'descend', \r\n        // 查询参数\r\n        _a.searchParams = __assign({}, _this.getParams()), _a.selectedRowKeys = [], _a.selectedRows = [], _a)));\r\n        return _this;\r\n    }\r\n    SearchTableImplement.prototype.componentDidMount = function () {\r\n        _super.prototype.componentDidMount.call(this);\r\n        var getTableWrapperInstance = this.props.getTableWrapperInstance;\r\n        if (getTableWrapperInstance) {\r\n            getTableWrapperInstance(this.innerWrapRef);\r\n        }\r\n    };\r\n    /**\r\n     * getFetchListPropName\r\n     * @override\r\n     * @description - 获取调用列表接口的函数名\r\n     */\r\n    SearchTableImplement.prototype.getFetchListPropName = function () {\r\n        return '';\r\n    };\r\n    /**\r\n     * getFetchListPropNameToFirstUpper\r\n     * @override\r\n     * @description - 获取调用列表接口的函数名首字母大写\r\n     * @return string\r\n     */\r\n    SearchTableImplement.prototype.getFetchListPropNameToFirstUpper = function () {\r\n        var fetchListPropName = this.getFetchListPropName();\r\n        if (fetchListPropName.length > 1) {\r\n            return \"\".concat(fetchListPropName.charAt(0).toUpperCase()).concat(fetchListPropName.substring(1));\r\n        }\r\n        return fetchListPropName;\r\n    };\r\n    // ------------ 不需要重写(override)的方法 end ------------------\r\n    /**\r\n     * getParams\r\n     * @override\r\n     * @description - 获取查询参数对象\r\n     */\r\n    SearchTableImplement.prototype.getParams = function () {\r\n        return {};\r\n    };\r\n    /**\r\n     * getServiceName\r\n     * @override\r\n     * @description - 获取接口服务的model名称\r\n     */\r\n    SearchTableImplement.prototype.getServiceName = function () {\r\n        return '';\r\n    };\r\n    /**\r\n     * getFetchDataParams\r\n     * @override\r\n     * @description - 获取调用数据接口的参数\r\n     */\r\n    SearchTableImplement.prototype.getFetchDataParams = function () {\r\n        return {};\r\n    };\r\n    /**\r\n     * isShowNumber\r\n     * @description - 是否线上序号列\r\n     * @override\r\n     * @return {boolean}\r\n     */\r\n    SearchTableImplement.prototype.isShowNumber = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * getNumberGeneratorRule\r\n     * @override\r\n     * @description - 表格序号列的生成规则\r\n     */\r\n    SearchTableImplement.prototype.getNumberGeneratorRule = function () {\r\n        return SearchTable.NUMBER_GENERATOR_RULE_CONTINUITY;\r\n    };\r\n    /**\r\n     * getNumberGeneratorRule\r\n     * @description 获取符号列的生成规则\r\n     */\r\n    SearchTableImplement.prototype.getRowSelectionMode = function () {\r\n        return SearchTable.ROW_SELECTION_NORMAL_MODE;\r\n    };\r\n    /**\r\n     * getTableNumberColumnWidth\r\n     * @override\r\n     * @description - 表格序号列的宽度\r\n     */\r\n    SearchTableImplement.prototype.getTableNumberColumnWidth = function () {\r\n        return 80;\r\n    };\r\n    /**\r\n     * getTableNumberColumnProps\r\n     */\r\n    SearchTableImplement.prototype.getTableNumberColumnProps = function () {\r\n        return {};\r\n    };\r\n    /**\r\n     * getRowKey\r\n     * @override\r\n     * @description - 数据的主键\r\n     */\r\n    SearchTableImplement.prototype.getRowKey = function () {\r\n        return 'id';\r\n    };\r\n    /**\r\n     * getDataKey\r\n     * @description - 获取数据的key\r\n     * @protected\r\n     */\r\n    SearchTableImplement.prototype.getDataKey = function () {\r\n        return 'list';\r\n    };\r\n    /**\r\n     * getTotalKey\r\n     * @description - 获取total的key\r\n     * @protected\r\n     */\r\n    SearchTableImplement.prototype.getTotalKey = function () {\r\n        return 'totalCount';\r\n    };\r\n    /**\r\n     * getData\r\n     * @description - Table的数据(Table的dataSource字段)\r\n     * @override\r\n     * @return {Array}\r\n     */\r\n    SearchTableImplement.prototype.getData = function () {\r\n        return this.props[this.getServiceName()][this.getFetchListPropName()][this.getDataKey()];\r\n    };\r\n    /**\r\n     * getTotal\r\n     * @description - Table数据的总条数\r\n     * @override\r\n     */\r\n    SearchTableImplement.prototype.getTotal = function () {\r\n        return this.props[this.getServiceName()][this.getFetchListPropName()][this.getTotalKey()];\r\n    };\r\n    /**\r\n     * getRowSelection\r\n     * @override\r\n     * @description - 获取表格行选择对象\r\n     */\r\n    SearchTableImplement.prototype.getRowSelection = function () {\r\n        var _this = this;\r\n        var filter = function (selected, records) {\r\n            var rowKey = _this.getRowKey();\r\n            if (selected) {\r\n                // add\r\n                _this.setState({\r\n                    selectedRowKeys: __spreadArray(__spreadArray([], (_this.state.selectedRowKeys || []), true), records.map(function (r) { return r[rowKey]; }), true),\r\n                    selectedRows: __spreadArray(__spreadArray([], (_this.state.selectedRows || []), true), records, true),\r\n                });\r\n            }\r\n            else {\r\n                // remove\r\n                _this.setState({\r\n                    selectedRows: (_this.state.selectedRows || []).filter(function (row) { return !records.find(function (r) { return r[rowKey] === row[rowKey]; }); }),\r\n                    selectedRowKeys: (_this.state.selectedRowKeys || []).filter(function (key) { return !records.find(function (r) { return r[rowKey] === key; }); }),\r\n                });\r\n            }\r\n        };\r\n        return {\r\n            selectedRowKeys: this.state.selectedRowKeys,\r\n            onChange: function (selectedRowKeys, selectedRows) {\r\n                if (_this.getRowSelectionMode() === SearchTable.ROW_SELECTION_CONTINUOUS_MODE)\r\n                    return;\r\n                // 如果是缺省模式(不能跨页选取)\r\n                _this.setState({\r\n                    selectedRowKeys: selectedRowKeys,\r\n                    selectedRows: selectedRows,\r\n                });\r\n            },\r\n            onSelect: function (record, selected) {\r\n                if (_this.getRowSelectionMode() === SearchTable.ROW_SELECTION_NORMAL_MODE)\r\n                    return;\r\n                filter(selected, [record]);\r\n            },\r\n            onSelectAll: function (selected, selectedRows, changeRows) {\r\n                if (_this.getRowSelectionMode() === SearchTable.ROW_SELECTION_NORMAL_MODE)\r\n                    return;\r\n                filter(selected, changeRows);\r\n            },\r\n        };\r\n    };\r\n    /**\r\n     * renderSearchForm\r\n     * @override\r\n     * @description - 渲染Table查询的表单\r\n     */\r\n    SearchTableImplement.prototype.renderSearchForm = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * renderInner\r\n     * @override\r\n     * @description - 渲染主体\r\n     */\r\n    SearchTableImplement.prototype.renderInner = function () {\r\n        var innerJSX = _super.prototype.renderInner.call(this);\r\n        return (React.createElement(\"div\", { ref: this.innerWrapRef, className: \"\".concat(selectorPrefix, \"-tablewrapper\") }, innerJSX));\r\n    };\r\n    /**\r\n     * renderSearchFooterItems\r\n     * @description - 渲染表格的工具栏\r\n     * @override\r\n     */\r\n    SearchTableImplement.prototype.renderSearchFooterItems = function () {\r\n        return [];\r\n    };\r\n    /**\r\n     * getOrderFieldProp\r\n     * @description - 获取排序字段\r\n     * @override\r\n     */\r\n    SearchTableImplement.prototype.getOrderFieldProp = function () {\r\n        return 'orderField';\r\n    };\r\n    /**\r\n     * getOrderFieldValue\r\n     * @description - 获取默认排序字段的值\r\n     * @override\r\n     * @protected\r\n     */\r\n    SearchTableImplement.prototype.getOrderFieldValue = function () {\r\n        return '';\r\n    };\r\n    /**\r\n     * getOrderProp\r\n     * @description - 获取排序方式\r\n     */\r\n    SearchTableImplement.prototype.getOrderProp = function () {\r\n        return 'order';\r\n    };\r\n    /**\r\n     * getOrderPropValue\r\n     * @override\r\n     * @description - 获取默认排序方式\r\n     * @protected\r\n     */\r\n    SearchTableImplement.prototype.getOrderPropValue = function () {\r\n        return 'descend';\r\n    };\r\n    /**\r\n     * clear\r\n     * @description - 清空查询条件\r\n     * @override\r\n     */\r\n    SearchTableImplement.prototype.clear = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            var _a;\r\n            _this.setState(__assign(__assign({}, _this.getParams()), (_a = {}, _a[_this.getOrderFieldProp()] = _this.getOrderFieldValue(), _a[_this.getOrderProp()] = _this.getOrderPropValue() || 'descend', \r\n            // 查询参数\r\n            _a.searchParams = __assign({}, _this.getParams()), _a.selectedRowKeys = [], _a.selectedRows = [], _a)), function () {\r\n                resolve();\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * showLoading\r\n     * @description - 是否显示遮罩\r\n     * @override\r\n     */\r\n    SearchTableImplement.prototype.showLoading = function () {\r\n        return this.props.loading[\"\".concat(this.getServiceName(), \"/\").concat(this.getFetchListPropName())];\r\n    };\r\n    /**\r\n     * getSearchParams\r\n     * @description - 获取查询参数\r\n     * @protected\r\n     */\r\n    SearchTableImplement.prototype.getSearchParams = function () {\r\n        var _a;\r\n        var _b = this.state, page = _b.page, limit = _b.limit, searchParams = _b.searchParams;\r\n        var order = this.state[this.getOrderProp()];\r\n        return __assign({}, __assign(__assign(__assign({ page: page, limit: limit }, searchParams), (_a = {}, _a[this.getOrderProp()] = order === 'descend' ? 'desc' : 'asc', _a[this.getOrderFieldProp()] = this.state[this.getOrderFieldProp()], _a)), this.getFetchDataParams()));\r\n    };\r\n    /**\r\n     * fetchData\r\n     * @description - 加载数据\r\n     * @override\r\n     */\r\n    SearchTableImplement.prototype.fetchData = function () {\r\n        return this.fetchDataExecute(this.getSearchParams());\r\n    };\r\n    /**\r\n     * fetchDataExecute\r\n     * @description - 真正的执行获取列表数据的接口\r\n     * @param searchParams\r\n     * @protected\r\n     */\r\n    SearchTableImplement.prototype.fetchDataExecute = function (searchParams) {\r\n        return this.props[\"\".concat(this.getServiceName()).concat(this.getFetchListPropNameToFirstUpper())](searchParams);\r\n    };\r\n    /**\r\n     * onSearch\r\n     * @description - 点击查询\r\n     * @override\r\n     */\r\n    SearchTableImplement.prototype.onSearch = function () {\r\n        var _this = this;\r\n        var keys = Object.keys(this.getParams());\r\n        var params = {};\r\n        keys.forEach(function (key) {\r\n            params[key] = _this.state[key];\r\n        });\r\n        return new Promise(function (resolve) {\r\n            var _a;\r\n            _this.setState({\r\n                searchParams: __assign(__assign({}, params), (_a = {}, _a[_this.getOrderFieldProp()] = _this.state[_this.getOrderFieldProp()], _a[_this.getOrderProp()] = _this.state[_this.getOrderProp()], _a)),\r\n            }, function () {\r\n                _this.fetchData().then(function () {\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    };\r\n    SearchTableImplement.prototype.getColumns = function () {\r\n        return [];\r\n    };\r\n    SearchTableImplement.prototype.onSubTableChange = function (pagination, filters, sorter, extra) { };\r\n    SearchTableImplement.prototype.renderSearchFormAfter = function () {\r\n        return null;\r\n    };\r\n    SearchTableImplement.prototype.renderSearchFormBefore = function () {\r\n        return null;\r\n    };\r\n    SearchTableImplement.prototype.renderTableFooter = function () {\r\n        return null;\r\n    };\r\n    SearchTableImplement.prototype.renderTableHeader = function () {\r\n        return null;\r\n    };\r\n    SearchTableImplement.prototype.onTableRowComponentReducers = function (columns) {\r\n        return this.tableRowComponentReducers;\r\n    };\r\n    SearchTableImplement.prototype.onTableCellComponentReducers = function (columns) {\r\n        return this.tableCellComponentReducers;\r\n    };\r\n    return SearchTableImplement;\r\n}(SearchTable));\r\nexport { SearchTableImplement };\r\nSearchTableImplement.defaultProps = __assign({}, defaultProps);\r\nSearchTableImplement.propTypes = __assign(__assign({}, propTypes), { getTableWrapperInstance: PropTypes.func });\r\n/**\r\n * SearchTableImplementFactory\r\n * @description 创建SearchTableImplementFactory\r\n * @param serviceNames\r\n * @param mapStateToProps\r\n * @param mapDispatchToProps\r\n * @constructor\r\n */\r\nvar SearchTableImplementFactory = function (_a) {\r\n    var _b = _a.serviceNames, serviceNames = _b === void 0 ? [] : _b, mapStateToProps = _a.mapStateToProps, mapDispatchToProps = _a.mapDispatchToProps;\r\n    var _mapStateToProps = function (state) { return (__assign(__assign(__assign({}, ServiceRegister.mapStateToProps({\r\n        namespaces: serviceNames || [],\r\n        state: state,\r\n    })), {\r\n        loading: state.loading,\r\n    }), (mapStateToProps ? mapStateToProps(state) : {}))); };\r\n    var _mapDispatchToProps = function (dispatch) { return (__assign(__assign({}, ServiceRegister.mapDispatchToProps({\r\n        namespaces: serviceNames || [],\r\n        dispatch: dispatch,\r\n    })), (mapDispatchToProps ? mapDispatchToProps(dispatch) : {}))); };\r\n    return function (Component) {\r\n        return ServiceRegister.connect(serviceNames || [])(_mapStateToProps, _mapDispatchToProps)(forwardRef(function (props, ref) { return (\r\n        // @ts-ignore\r\n        React.createElement(Component, __assign({ ref: ref, className: \"\".concat(selectorPrefix, \"-wrap\"), isShowExpandSearch: true, defaultExpandSearchCollapse: false, fixedHeaderAutoTable: true, fixedTableSpaceBetween: true }, props))); }));\r\n    };\r\n};\r\nexport default SearchTableImplementFactory;\r\n//# sourceMappingURL=SearchTableImplement.js.map"],"names":["__assign","__extends","__spreadArray","PropTypes","React","createRef","forwardRef","ServiceRegister","SearchTable","defaultProps","propTypes","selectorPrefix","SearchTableImplement","_super","props","_this","call","this","innerWrapRef","onSelectChange","property","v","_a","setState","onInputChange","e","target","value","trim","onDateTimeRangeChange","propertys","dayjs","length","Object","assign","state","getParams","getOrderFieldProp","getOrderFieldValue","getOrderProp","getOrderPropValue","searchParams","selectedRowKeys","selectedRows","prototype","componentDidMount","getTableWrapperInstance","getFetchListPropName","getFetchListPropNameToFirstUpper","fetchListPropName","concat","charAt","toUpperCase","substring","getServiceName","getFetchDataParams","isShowNumber","getNumberGeneratorRule","NUMBER_GENERATOR_RULE_CONTINUITY","getRowSelectionMode","ROW_SELECTION_NORMAL_MODE","getTableNumberColumnWidth","getTableNumberColumnProps","getRowKey","getDataKey","getTotalKey","getData","getTotal","getRowSelection","filter","selected","records","rowKey","map","r","row","find","key","onChange","ROW_SELECTION_CONTINUOUS_MODE","onSelect","record","onSelectAll","changeRows","renderSearchForm","renderInner","innerJSX","createElement","ref","className","renderSearchFooterItems","clear","Promise","resolve","showLoading","loading","getSearchParams","_b","page","limit","order","fetchData","fetchDataExecute","onSearch","keys","params","forEach","then","getColumns","onSubTableChange","pagination","filters","sorter","extra","renderSearchFormAfter","renderSearchFormBefore","renderTableFooter","renderTableHeader","onTableRowComponentReducers","columns","tableRowComponentReducers","onTableCellComponentReducers","tableCellComponentReducers","SearchTableImplementFactory","func","_mapStateToProps","mapStateToProps","namespaces","serviceNames","_mapDispatchToProps","dispatch","mapDispatchToProps","Component","connect","isShowExpandSearch","defaultExpandSearchCollapse","fixedHeaderAutoTable","fixedTableSpaceBetween"],"mappings":"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"}