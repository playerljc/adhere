{"version":3,"file":"dict.test.config.js","sources":["demo/config/dict/dict/dict.test.config.js"],"sourcesContent":["import faker from 'faker';\r\nimport Dict from '@baifendian/adhere-util-dict';\r\nexport default {\r\n    initStatic: function () {\r\n        // Radio\r\n        Dict.handlers.SystemTestRadio = function () { return [\r\n            {\r\n                value: 1,\r\n                label: '通过',\r\n            },\r\n            {\r\n                value: 2,\r\n                label: '不通过',\r\n            },\r\n            {\r\n                value: 3,\r\n                label: '退回',\r\n            },\r\n        ]; };\r\n        Dict.handlers.SystemTestDynamicRadio = function () {\r\n            return Promise.resolve([\r\n                {\r\n                    value: 1,\r\n                    label: '通过',\r\n                },\r\n                {\r\n                    value: 2,\r\n                    label: '不通过',\r\n                },\r\n                {\r\n                    value: 3,\r\n                    label: '退回',\r\n                },\r\n            ]);\r\n        };\r\n        // CheckBox\r\n        Dict.handlers.SystemTestCheckBox = function () { return [\r\n            {\r\n                value: 1,\r\n                label: '通过',\r\n            },\r\n            {\r\n                value: 2,\r\n                label: '不通过',\r\n            },\r\n            {\r\n                value: 3,\r\n                label: '退回',\r\n            },\r\n        ]; };\r\n        Dict.handlers.SystemTestDynamicCheckBox = function () {\r\n            return Promise.resolve([\r\n                {\r\n                    value: 1,\r\n                    label: '通过',\r\n                },\r\n                {\r\n                    value: 2,\r\n                    label: '不通过',\r\n                },\r\n                {\r\n                    value: 3,\r\n                    label: '退回',\r\n                },\r\n            ]);\r\n        };\r\n        //Select\r\n        Dict.handlers.SystemTestSelect = function () { return [\r\n            {\r\n                value: 1,\r\n                label: '通过',\r\n            },\r\n            {\r\n                value: 2,\r\n                label: '不通过',\r\n            },\r\n            {\r\n                value: 3,\r\n                label: '退回',\r\n            },\r\n        ]; };\r\n        Dict.handlers.SystemTestDynamicSelect = function () {\r\n            return Promise.resolve([\r\n                {\r\n                    value: 1,\r\n                    label: '通过',\r\n                },\r\n                {\r\n                    value: 2,\r\n                    label: '不通过',\r\n                },\r\n                {\r\n                    value: 3,\r\n                    label: '退回',\r\n                },\r\n            ]);\r\n        };\r\n        // AutoComplete\r\n        Dict.handlers.SystemTestAutoCompleteSelect = function () { return function (kw) {\r\n            var data = [\r\n                {\r\n                    label: 'java',\r\n                    value: 1,\r\n                },\r\n                {\r\n                    label: 'javaScript',\r\n                    value: 2,\r\n                },\r\n                {\r\n                    label: 'html',\r\n                    value: 3,\r\n                },\r\n                {\r\n                    label: 'css',\r\n                    value: 4,\r\n                },\r\n                {\r\n                    label: 'spring',\r\n                    value: 5,\r\n                },\r\n                {\r\n                    label: 'react',\r\n                    value: 6,\r\n                },\r\n            ];\r\n            return Promise.resolve(data.filter(function (t) { return t.label.includes(kw); }));\r\n        }; };\r\n        Dict.handlers.SystemTestTree = function () { return [\r\n            {\r\n                title: 'Node1',\r\n                value: '0-0',\r\n                leaf: false,\r\n                children: [\r\n                    {\r\n                        title: 'Child Node1',\r\n                        value: '0-0-1',\r\n                        leaf: true,\r\n                    },\r\n                    {\r\n                        title: 'Child Node2',\r\n                        value: '0-0-2',\r\n                        leaf: true,\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                title: 'Node2',\r\n                value: '0-1',\r\n                leaf: true,\r\n            },\r\n        ]; };\r\n        //Transfer\r\n        Dict.handlers.SystemTestTransfer = function () { return [\r\n            {\r\n                value: 1,\r\n                label: '通过',\r\n            },\r\n            {\r\n                value: 2,\r\n                label: '不通过',\r\n            },\r\n            {\r\n                value: 3,\r\n                label: '退回',\r\n            },\r\n        ]; };\r\n        Dict.handlers.SystemTestDynamicTransfer = function () {\r\n            return Promise.resolve([\r\n                {\r\n                    value: 1,\r\n                    label: '通过',\r\n                },\r\n                {\r\n                    value: 2,\r\n                    label: '不通过',\r\n                },\r\n                {\r\n                    value: 3,\r\n                    label: '退回',\r\n                },\r\n            ]);\r\n        };\r\n        // Table\r\n        Dict.handlers.SystemTestTable = function () {\r\n            return Array.from({ length: 10 }).map(function (t, index) { return ({\r\n                id: faker.random.uuid(),\r\n                isMore: !!Math.floor((Math.random() * 10) % 2),\r\n                name: faker.internet.userName(),\r\n                sex: \"\".concat((index + 1) % 2),\r\n                birthDay: faker.time.recent(),\r\n                deptName: faker.company.companyName(),\r\n                height: faker.random.number(),\r\n                width: faker.random.number(),\r\n                hometown: faker.address.city(),\r\n                address: faker.address.streetAddress(),\r\n            }); });\r\n        };\r\n        Dict.handlers.SystemTestTablePagination = function () { return function (paging) {\r\n            var current = paging.current, pageSize = paging.pageSize;\r\n            var data = [];\r\n            data.length = 300;\r\n            data.fill(0);\r\n            var res = {\r\n                resCode: 0,\r\n                data: {\r\n                    total: data.length,\r\n                    pages: 30,\r\n                    current: 1,\r\n                    records: data\r\n                        .slice((current - 1) * pageSize, (current - 1) * pageSize + pageSize)\r\n                        .map(function (t, index) { return ({\r\n                        id: (current - 1) * pageSize + (index + 1),\r\n                        isMore: !!Math.floor((Math.random() * 10) % 2),\r\n                        name: faker.internet.userName(),\r\n                        sex: \"\".concat((index + 1) % 2),\r\n                        birthDay: faker.time.recent(),\r\n                        deptName: faker.company.companyName(),\r\n                        height: faker.random.number(),\r\n                        width: faker.random.number(),\r\n                        hometown: faker.address.city(),\r\n                        address: faker.address.streetAddress(),\r\n                    }); }),\r\n                },\r\n                resMsg: '',\r\n            };\r\n            return Promise.resolve(res.data);\r\n        }; };\r\n        // Cascader\r\n        Dict.handlers.SystemTestCascader = function () { return [\r\n            {\r\n                value: 'zhejiang',\r\n                label: 'Zhejiang',\r\n                children: [\r\n                    {\r\n                        value: 'hangzhou',\r\n                        label: 'Hangzhou',\r\n                        children: [\r\n                            {\r\n                                value: 'xihu',\r\n                                label: 'West Lake',\r\n                            },\r\n                        ],\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                value: 'jiangsu',\r\n                label: 'Jiangsu',\r\n                children: [\r\n                    {\r\n                        value: 'nanjing',\r\n                        label: 'Nanjing',\r\n                        children: [\r\n                            {\r\n                                value: 'zhonghuamen',\r\n                                label: 'Zhong Hua Men',\r\n                            },\r\n                        ],\r\n                    },\r\n                ],\r\n            },\r\n        ]; };\r\n        Dict.handlers.SystemTestDynamicCascader = function () {\r\n            return Promise.resolve([\r\n                {\r\n                    value: 'zhejiang',\r\n                    label: 'Zhejiang',\r\n                    children: [\r\n                        {\r\n                            value: 'hangzhou',\r\n                            label: 'Hangzhou',\r\n                            children: [\r\n                                {\r\n                                    value: 'xihu',\r\n                                    label: 'West Lake',\r\n                                },\r\n                            ],\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    value: 'jiangsu',\r\n                    label: 'Jiangsu',\r\n                    children: [\r\n                        {\r\n                            value: 'nanjing',\r\n                            label: 'Nanjing',\r\n                            children: [\r\n                                {\r\n                                    value: 'zhonghuamen',\r\n                                    label: 'Zhong Hua Men',\r\n                                },\r\n                            ],\r\n                        },\r\n                    ],\r\n                },\r\n            ]);\r\n        };\r\n        // List\r\n        Dict.handlers.SystemTestList = function () {\r\n            return Array.from({ length: 5 }).map(function (t, index) { return ({\r\n                id: faker.random.uuid(),\r\n                isMore: !!Math.floor((Math.random() * 10) % 2),\r\n                name: faker.internet.userName(),\r\n                sex: \"\".concat((index + 1) % 2),\r\n                birthDay: faker.time.recent(),\r\n                deptName: faker.company.companyName(),\r\n                height: faker.random.number(),\r\n                width: faker.random.number(),\r\n                hometown: faker.address.city(),\r\n                address: faker.address.streetAddress(),\r\n            }); });\r\n        };\r\n        Dict.handlers.SystemTestListPagination = function () { return function (paging) {\r\n            var current = paging.current, pageSize = paging.pageSize;\r\n            var data = [];\r\n            data.length = 300;\r\n            data.fill(0);\r\n            var res = {\r\n                resCode: 0,\r\n                data: {\r\n                    total: data.length,\r\n                    pages: 30,\r\n                    current: 1,\r\n                    records: data\r\n                        .slice((current - 1) * pageSize, (current - 1) * pageSize + pageSize)\r\n                        .map(function (t, index) { return ({\r\n                        id: (current - 1) * pageSize + (index + 1),\r\n                        isMore: !!Math.floor((Math.random() * 10) % 2),\r\n                        name: faker.internet.userName(),\r\n                        sex: \"\".concat((index + 1) % 2),\r\n                        birthDay: faker.time.recent(),\r\n                        deptName: faker.company.companyName(),\r\n                        height: faker.random.number(),\r\n                        width: faker.random.number(),\r\n                        hometown: faker.address.city(),\r\n                        address: faker.address.streetAddress(),\r\n                    }); }),\r\n                },\r\n                resMsg: '',\r\n            };\r\n            return Promise.resolve(res.data);\r\n        }; };\r\n        // sex\r\n        Dict.handlers.SystemTestSexSelect = function () { return [\r\n            {\r\n                label: '男',\r\n                value: '1',\r\n            },\r\n            {\r\n                label: '女',\r\n                value: '0',\r\n            },\r\n        ]; };\r\n    },\r\n    initRemote: function () { },\r\n};\r\n"],"names":["faker","Dict","initStatic","handlers","SystemTestRadio","value","label","SystemTestDynamicRadio","Promise","resolve","SystemTestCheckBox","SystemTestDynamicCheckBox","SystemTestSelect","SystemTestDynamicSelect","SystemTestAutoCompleteSelect","kw","filter","t","includes","SystemTestTree","title","leaf","children","SystemTestTransfer","SystemTestDynamicTransfer","SystemTestTable","Array","from","length","map","index","id","random","uuid","isMore","Math","floor","name","internet","userName","sex","concat","birthDay","time","recent","deptName","company","companyName","height","number","width","hometown","address","city","streetAddress","SystemTestTablePagination","paging","current","pageSize","data","res","fill","resCode","total","pages","records","slice","resMsg","SystemTestCascader","SystemTestDynamicCascader","SystemTestList","SystemTestListPagination","SystemTestSexSelect","initRemote"],"mappings":"OAAOA,UAAW,eACXC,SAAU,6CACF,CACXC,WAAY,WAERD,KAAKE,SAASC,gBAAkB,WAAc,MAAO,CACjD,CACIC,MAAO,EACPC,MAAO,IACX,EACA,CACID,MAAO,EACPC,MAAO,KACX,EACA,CACID,MAAO,EACPC,MAAO,IACX,EACD,EACHL,KAAKE,SAASI,uBAAyB,WACnC,OAAOC,QAAQC,QAAQ,CACnB,CACIJ,MAAO,EACPC,MAAO,IACX,EACA,CACID,MAAO,EACPC,MAAO,KACX,EACA,CACID,MAAO,EACPC,MAAO,IACX,EACH,CACL,EAEAL,KAAKE,SAASO,mBAAqB,WAAc,MAAO,CACpD,CACIL,MAAO,EACPC,MAAO,IACX,EACA,CACID,MAAO,EACPC,MAAO,KACX,EACA,CACID,MAAO,EACPC,MAAO,IACX,EACD,EACHL,KAAKE,SAASQ,0BAA4B,WACtC,OAAOH,QAAQC,QAAQ,CACnB,CACIJ,MAAO,EACPC,MAAO,IACX,EACA,CACID,MAAO,EACPC,MAAO,KACX,EACA,CACID,MAAO,EACPC,MAAO,IACX,EACH,CACL,EAEAL,KAAKE,SAASS,iBAAmB,WAAc,MAAO,CAClD,CACIP,MAAO,EACPC,MAAO,IACX,EACA,CACID,MAAO,EACPC,MAAO,KACX,EACA,CACID,MAAO,EACPC,MAAO,IACX,EACD,EACHL,KAAKE,SAASU,wBAA0B,WACpC,OAAOL,QAAQC,QAAQ,CACnB,CACIJ,MAAO,EACPC,MAAO,IACX,EACA,CACID,MAAO,EACPC,MAAO,KACX,EACA,CACID,MAAO,EACPC,MAAO,IACX,EACH,CACL,EAEAL,KAAKE,SAASW,6BAA+B,WAAc,OAAO,SAAUC,GA2BxE,OAAOP,QAAQC,QA1BJ,CACP,CACIH,MAAO,OACPD,MAAO,CACX,EACA,CACIC,MAAO,aACPD,MAAO,CACX,EACA,CACIC,MAAO,OACPD,MAAO,CACX,EACA,CACIC,MAAO,MACPD,MAAO,CACX,EACA,CACIC,MAAO,SACPD,MAAO,CACX,EACA,CACIC,MAAO,QACPD,MAAO,CACX,GAEwBW,OAAO,SAAUC,GAAK,OAAO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"}