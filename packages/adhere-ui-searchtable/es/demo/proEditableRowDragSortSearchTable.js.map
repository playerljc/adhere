{"version":3,"file":"proEditableRowDragSortSearchTable.js","sources":["demo/proEditableRowDragSortSearchTable.js"],"sourcesContent":["import { __extends } from \"tslib\";\r\nimport React from 'react';\r\nimport { DateDisplay, Resource } from '@baifendian/adhere';\r\nimport SearchTable from '../index';\r\nimport './serviceRegister';\r\nvar ProSearchEditableRowDragSortStateTable = SearchTable.ProSearchEditableRowDragSortStateTable, EditableRowControl = SearchTable.EditableRowControl, SearchTableStateImplementFactory = SearchTable.SearchTableStateImplementFactory;\r\nvar serviceName = 'user';\r\n/**\r\n * RowDragSort\r\n * @class RowDragSort\r\n * @classdesc RowDragSort\r\n */\r\nvar RowDragSort = /** @class */ (function (_super) {\r\n    __extends(RowDragSort, _super);\r\n    function RowDragSort() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RowDragSort.prototype.getComponentId = function () {\r\n        return 'RowDragSort';\r\n    };\r\n    RowDragSort.prototype.getServiceName = function () {\r\n        return serviceName;\r\n    };\r\n    RowDragSort.prototype.getFetchListPropName = function () {\r\n        return 'fetchList';\r\n    };\r\n    RowDragSort.prototype.getOrderFieldValue = function () {\r\n        return 'height';\r\n    };\r\n    /**\r\n     * getDataKey\r\n     * @description - 获取数据的key\r\n     * @protected\r\n     */\r\n    RowDragSort.prototype.getDataKey = function () {\r\n        return 'list';\r\n    };\r\n    /**\r\n     * getTotalKey\r\n     * @description - 获取total的key\r\n     * @protected\r\n     */\r\n    RowDragSort.prototype.getTotalKey = function () {\r\n        return 'totalCount';\r\n    };\r\n    /**\r\n     * Table的列\r\n     * @override\r\n     * @return {*[]}\r\n     */\r\n    RowDragSort.prototype.getColumns = function () {\r\n        var _this = this;\r\n        return _super.prototype.getColumns.call(this, [\r\n            {\r\n                title: '姓名',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n                width: 150,\r\n                render: function (val) { return React.createElement(\"div\", { style: { color: 'red' } }, val); },\r\n                $search: {\r\n                    type: 'input',\r\n                    visible: true,\r\n                },\r\n                $editable: {\r\n                    editable: true,\r\n                    type: 'input',\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: '请输入姓名',\r\n                        },\r\n                    ],\r\n                    onSave: function (_a) {\r\n                        var value = _a.value, record = _a.record, dataIndex = _a.dataIndex;\r\n                        return new Promise(function (resolve) {\r\n                            _this.updateEditorCellDate({\r\n                                record: record,\r\n                                dataIndex: dataIndex,\r\n                                value: value,\r\n                            }).then(function () { return resolve(); });\r\n                        });\r\n                    },\r\n                },\r\n                // $resizable: true,\r\n            },\r\n            {\r\n                title: '性别',\r\n                dataIndex: 'sex',\r\n                key: 'sex',\r\n                align: 'center',\r\n                width: 150,\r\n                render: function (v) { return Resource.Dict.value.ResourceNormalSexMap.value.get(v).label; },\r\n                $search: {\r\n                    type: 'select',\r\n                    visible: true,\r\n                    dictName: 'SystemTestSexSelect',\r\n                },\r\n                $editable: {\r\n                    editable: true,\r\n                    type: 'select',\r\n                    dictName: 'SystemTestSexSelect',\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: '请选择',\r\n                        },\r\n                    ],\r\n                    onSave: function (_a) {\r\n                        var record = _a.record, dataIndex = _a.dataIndex, value = _a.value;\r\n                        return new Promise(function (resolve) {\r\n                            _this.updateEditorCellDate({\r\n                                record: record,\r\n                                dataIndex: dataIndex,\r\n                                value: value,\r\n                            }).then(function () { return resolve(); });\r\n                        });\r\n                    },\r\n                },\r\n            },\r\n            {\r\n                title: '出生年月',\r\n                dataIndex: 'birthday',\r\n                key: 'birthday',\r\n                align: 'center',\r\n                width: 200,\r\n                sorter: true,\r\n                sortOrder: this.sortOrder('birthday'),\r\n                render: function (val) { return React.createElement(DateDisplay.DateDisplay10, { value: val }); },\r\n                $search: {\r\n                    type: 'rangePicker',\r\n                    visible: true,\r\n                    startName: 'birthDayStart',\r\n                    endName: 'birthDayEnd',\r\n                },\r\n                $editable: {\r\n                    editable: true,\r\n                    type: 'datePicker',\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: '请选择',\r\n                        },\r\n                    ],\r\n                    onSave: function (_a) {\r\n                        var record = _a.record, dataIndex = _a.dataIndex, value = _a.value;\r\n                        return new Promise(function (resolve) {\r\n                            _this.updateEditorCellDateData({\r\n                                record: record,\r\n                                dataIndex: dataIndex,\r\n                                value: value,\r\n                            }).then(function () { return resolve(); });\r\n                        });\r\n                    },\r\n                },\r\n            },\r\n            {\r\n                title: '身高',\r\n                dataIndex: 'height',\r\n                key: 'height',\r\n                align: 'center',\r\n                width: 150,\r\n                sorter: true,\r\n                sortOrder: this.sortOrder('height'),\r\n                $search: {\r\n                    type: 'inputNumberDecimal2',\r\n                    visible: true,\r\n                },\r\n                $editable: {\r\n                    editable: true,\r\n                    type: 'inputNumberDecimal2',\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: '请选择',\r\n                        },\r\n                    ],\r\n                    onSave: function (_a) {\r\n                        var record = _a.record, dataIndex = _a.dataIndex, value = _a.value;\r\n                        return new Promise(function (resolve) {\r\n                            _this.updateEditorCellDate({\r\n                                record: record,\r\n                                dataIndex: dataIndex,\r\n                                value: value,\r\n                            }).then(function () { return resolve(); });\r\n                        });\r\n                    },\r\n                },\r\n            },\r\n            {\r\n                title: '体重',\r\n                dataIndex: 'width',\r\n                key: 'width',\r\n                align: 'center',\r\n                width: 150,\r\n                sorter: true,\r\n                sortOrder: this.sortOrder('width'),\r\n                $search: {\r\n                    type: 'inputNumberDecimal2',\r\n                    visible: true,\r\n                },\r\n                $editable: {\r\n                    editable: true,\r\n                    type: 'inputNumberDecimal2',\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: '请选择',\r\n                        },\r\n                    ],\r\n                    onSave: function (_a) {\r\n                        var record = _a.record, dataIndex = _a.dataIndex, value = _a.value;\r\n                        return new Promise(function (resolve) {\r\n                            _this.updateEditorCellDate({\r\n                                record: record,\r\n                                dataIndex: dataIndex,\r\n                                value: value,\r\n                            }).then(function () { return resolve(); });\r\n                        });\r\n                    },\r\n                },\r\n            },\r\n            {\r\n                title: '籍贯',\r\n                dataIndex: 'homeTown',\r\n                key: 'homeTown',\r\n                ellipsis: true,\r\n                width: 200,\r\n                $search: {\r\n                    type: 'input',\r\n                    visible: true,\r\n                },\r\n                $editable: {\r\n                    editable: true,\r\n                    type: 'input',\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: '请选择',\r\n                        },\r\n                    ],\r\n                    onSave: function (_a) {\r\n                        var record = _a.record, dataIndex = _a.dataIndex, value = _a.value;\r\n                        return new Promise(function (resolve) {\r\n                            _this.updateEditorCellDate({\r\n                                record: record,\r\n                                dataIndex: dataIndex,\r\n                                value: value,\r\n                            }).then(function () { return resolve(); });\r\n                        });\r\n                    },\r\n                },\r\n            },\r\n            {\r\n                title: '现居住地',\r\n                dataIndex: 'address',\r\n                key: 'address',\r\n                width: 300,\r\n                $search: {\r\n                    type: 'input',\r\n                    visible: true,\r\n                    valueAttrs: {\r\n                        colSpan: 5,\r\n                    },\r\n                },\r\n                $editable: {\r\n                    editable: true,\r\n                    type: 'input',\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: '请选择',\r\n                        },\r\n                    ],\r\n                    onSave: function (_a) {\r\n                        var record = _a.record, dataIndex = _a.dataIndex, value = _a.value;\r\n                        return new Promise(function (resolve) {\r\n                            _this.updateEditorCellDate({\r\n                                record: record,\r\n                                dataIndex: dataIndex,\r\n                                value: value,\r\n                            }).then(function () { return resolve(); });\r\n                        });\r\n                    },\r\n                },\r\n            },\r\n            {\r\n                title: '操作',\r\n                dataIndex: this.getOptionsColumnDataIndex(),\r\n                key: this.getOptionsColumnDataIndex(),\r\n                width: 100,\r\n                render: function (v, record) { return (React.createElement(EditableRowControl, { record: record, rowKey: _this.getRowKey(), editorRowId: _this.state.editorRowId })); },\r\n            },\r\n        ]);\r\n    };\r\n    return RowDragSort;\r\n}(ProSearchEditableRowDragSortStateTable));\r\nRowDragSort.propTypes = {};\r\nvar models = [];\r\nvar requireComponent = require.context('./model', false, /.*\\.(js)$/);\r\nrequireComponent.keys().forEach(function (fileName) {\r\n    var model = requireComponent(fileName);\r\n    models.push(model.default());\r\n});\r\nvar Wrap = SearchTableStateImplementFactory({\r\n    serviceNames: [serviceName],\r\n    middleWares: [],\r\n    reducer: null,\r\n    models: models,\r\n})(RowDragSort);\r\nexport default Wrap;\r\n//# sourceMappingURL=proEditableRowDragSortSearchTable.js.map"],"names":["__extends","React","DateDisplay","Resource","SearchTable","ProSearchEditableRowDragSortStateTable","EditableRowControl","SearchTableStateImplementFactory","serviceName","RowDragSort","_super","apply","this","arguments","prototype","getComponentId","getServiceName","getFetchListPropName","getOrderFieldValue","getDataKey","getTotalKey","getColumns","_this","call","title","dataIndex","key","width","render","val","createElement","style","color","$search","type","visible","$editable","editable","rules","required","message","onSave","_a","value","record","Promise","resolve","updateEditorCellDate","then","align","v","Dict","ResourceNormalSexMap","get","label","dictName","sorter","sortOrder","DateDisplay10","startName","endName","updateEditorCellDateData","ellipsis","valueAttrs","colSpan","getOptionsColumnDataIndex","rowKey","getRowKey","editorRowId","state","models","propTypes","requireComponent","require","context","Wrap","keys","forEach","fileName","model","push","default","serviceNames","middleWares","reducer"],"mappings":"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"}