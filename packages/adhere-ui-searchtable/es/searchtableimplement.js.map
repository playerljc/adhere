{"version":3,"file":"searchtableimplement.js","sources":["searchtableimplement.js"],"sourcesContent":["import \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { __assign, __extends, __spreadArray } from \"tslib\";\nimport React, { createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport SearchTable, { defaultProps, propTypes } from './searchtable';\nvar selectorPrefix = 'adhere-ui-searchtableimplement';\n/**\n * SearchTableImplement\n * @class SearchTableImplement\n * @classdesc SearchTableImplement - SearchTable的默认实现\n */\n\nvar SearchTableImplement =\n/** @class */\nfunction (_super) {\n  __extends(SearchTableImplement, _super);\n\n  function SearchTableImplement(props) {\n    var _a;\n\n    var _this = _super.call(this, props) || this;\n\n    _this.innerWrapRef = /*#__PURE__*/createRef(); // ------------ 不需要重写(override)的方法 start ------------------\n\n    /**\n     * onSelectChange\n     * @description - onSelectChange\n     * @param property\n     * @param v\n     */\n\n    _this.onSelectChange = function (property, v) {\n      var _a;\n\n      _this.setState((_a = {}, _a[property] = v, _a));\n    };\n    /**\n     * onInputChange\n     * @description - onInputChange\n     * @param property\n     * @param e\n     */\n\n\n    _this.onInputChange = function (property, e) {\n      var _a;\n\n      _this.setState((_a = {}, _a[property] = e.target.value.trim(), _a));\n    };\n    /**\n     * onDateTimeRangeChange\n     * @description - onDateTimeRangeChange\n     * @param propertys\n     * @param moments\n     */\n\n\n    _this.onDateTimeRangeChange = function (propertys, moments) {\n      var _a;\n\n      _this.setState((_a = {}, _a[propertys[0]] = moments && moments.length ? moments[0] : null, _a[propertys[1]] = moments && moments.length ? moments[1] : null, _a));\n    };\n\n    Object.assign(_this.state, __assign(__assign({}, _this.getParams()), (_a = {}, _a[_this.getOrderFieldProp()] = _this.getOrderFieldValue(), _a[_this.getOrderProp()] = _this.getOrderPropValue() || 'descend', // 查询参数\n    _a.searchParams = __assign({}, _this.getParams()), _a.selectedRowKeys = [], _a.selectedRows = [], _a)));\n    return _this;\n  }\n\n  SearchTableImplement.prototype.componentDidMount = function () {\n    _super.prototype.componentDidMount.call(this);\n\n    var getTableWrapperInstance = this.props.getTableWrapperInstance;\n\n    if (getTableWrapperInstance) {\n      getTableWrapperInstance(this.innerWrapRef);\n    }\n  };\n  /**\n   * getFetchListPropName\n   * @override\n   * @description - 获取调用列表接口的函数名\n   */\n\n\n  SearchTableImplement.prototype.getFetchListPropName = function () {\n    return '';\n  };\n  /**\n   * getFetchListPropNameToFirstUpper\n   * @override\n   * @description - 获取调用列表接口的函数名首字母大写\n   * @return string\n   */\n\n\n  SearchTableImplement.prototype.getFetchListPropNameToFirstUpper = function () {\n    var fetchListPropName = this.getFetchListPropName();\n\n    if (fetchListPropName.length > 1) {\n      return \"\".concat(fetchListPropName.charAt(0).toUpperCase()).concat(fetchListPropName.substring(1));\n    }\n\n    return fetchListPropName;\n  }; // ------------ 不需要重写(override)的方法 end ------------------\n\n  /**\n   * getParams\n   * @override\n   * @description - 获取查询参数对象\n   */\n\n\n  SearchTableImplement.prototype.getParams = function () {\n    return {};\n  };\n  /**\n   * getServiceName\n   * @override\n   * @description - 获取接口服务的model名称\n   */\n\n\n  SearchTableImplement.prototype.getServiceName = function () {\n    return '';\n  };\n  /**\n   * getFetchDataParams\n   * @override\n   * @description - 获取调用数据接口的参数\n   */\n\n\n  SearchTableImplement.prototype.getFetchDataParams = function () {\n    return {};\n  };\n  /**\n   * isShowNumber\n   * @description - 是否线上序号列\n   * @override\n   * @return {boolean}\n   */\n\n\n  SearchTableImplement.prototype.isShowNumber = function () {\n    return true;\n  };\n  /**\n   * getNumberGeneratorRule\n   * @override\n   * @description - 表格序号列的生成规则\n   */\n\n\n  SearchTableImplement.prototype.getNumberGeneratorRule = function () {\n    return SearchTable.NUMBER_GENERATOR_RULE_CONTINUITY;\n  };\n  /**\n   * getNumberGeneratorRule\n   * @description 获取符号列的生成规则\n   */\n\n\n  SearchTableImplement.prototype.getRowSelectionMode = function () {\n    return SearchTable.ROW_SELECTION_NORMAL_MODE;\n  };\n  /**\n   * getTableNumberColumnWidth\n   * @override\n   * @description - 表格序号列的宽度\n   */\n\n\n  SearchTableImplement.prototype.getTableNumberColumnWidth = function () {\n    return 80;\n  };\n  /**\n   * getRowKey\n   * @override\n   * @description - 数据的主键\n   */\n\n\n  SearchTableImplement.prototype.getRowKey = function () {\n    return 'id';\n  };\n  /**\n   * getDataKey\n   * @description - 获取数据的key\n   * @protected\n   */\n\n\n  SearchTableImplement.prototype.getDataKey = function () {\n    return 'list';\n  };\n  /**\n   * getTotalKey\n   * @description - 获取total的key\n   * @protected\n   */\n\n\n  SearchTableImplement.prototype.getTotalKey = function () {\n    return 'totalCount';\n  };\n  /**\n   * getData\n   * @description - Table的数据(Table的dataSource字段)\n   * @override\n   * @return {Array}\n   */\n\n\n  SearchTableImplement.prototype.getData = function () {\n    return this.props[this.getServiceName()][this.getFetchListPropName()][this.getDataKey()];\n  };\n  /**\n   * getTotal\n   * @description - Table数据的总条数\n   * @override\n   */\n\n\n  SearchTableImplement.prototype.getTotal = function () {\n    return this.props[this.getServiceName()][this.getFetchListPropName()][this.getTotalKey()];\n  };\n  /**\n   * getRowSelection\n   * @override\n   * @description - 获取表格行选择对象\n   */\n\n\n  SearchTableImplement.prototype.getRowSelection = function () {\n    var _this = this;\n\n    var filter = function filter(selected, records) {\n      var rowKey = _this.getRowKey();\n\n      if (selected) {\n        // add\n        _this.setState({\n          selectedRowKeys: __spreadArray(__spreadArray([], _this.state.selectedRowKeys || [], true), records.map(function (r) {\n            return r[rowKey];\n          }), true),\n          selectedRows: __spreadArray(__spreadArray([], _this.state.selectedRowKeys || [], true), records, true)\n        });\n      } else {\n        // remove\n        _this.setState({\n          selectedRows: (_this.state.selectedRows || []).filter(function (row) {\n            return !records.find(function (r) {\n              return r[rowKey] === row[rowKey];\n            });\n          }),\n          selectedRowKeys: (_this.state.selectedRowKeys || []).filter(function (key) {\n            return !records.find(function (r) {\n              return r[rowKey] === key;\n            });\n          })\n        });\n      }\n    };\n\n    return {\n      selectedRowKeys: this.state.selectedRowKeys,\n      onChange: function onChange(selectedRowKeys, selectedRows) {\n        if (_this.getRowSelectionMode() === SearchTable.ROW_SELECTION_CONTINUOUS_MODE) return; // 如果是缺省模式(不能跨页选取)\n\n        _this.setState({\n          selectedRowKeys: selectedRowKeys,\n          selectedRows: selectedRows\n        });\n      },\n      onSelect: function onSelect(record, selected) {\n        if (_this.getRowSelectionMode() === SearchTable.ROW_SELECTION_NORMAL_MODE) return;\n        filter(selected, [record]);\n      },\n      onSelectAll: function onSelectAll(selected, selectedRows, changeRows) {\n        if (_this.getRowSelectionMode() === SearchTable.ROW_SELECTION_NORMAL_MODE) return;\n        filter(selected, changeRows);\n      }\n    };\n  };\n  /**\n   * renderSearchForm\n   * @override\n   * @description - 渲染Table查询的表单\n   */\n\n\n  SearchTableImplement.prototype.renderSearchForm = function () {\n    return null;\n  };\n  /**\n   * renderInner\n   * @override\n   * @description - 渲染主体\n   */\n\n\n  SearchTableImplement.prototype.renderInner = function () {\n    var innerJSX = _super.prototype.renderInner.call(this);\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.innerWrapRef,\n      className: \"\".concat(selectorPrefix, \"-tablewrapper\")\n    }, innerJSX);\n  };\n  /**\n   * getOrderFieldProp\n   * @description - 获取排序字段\n   * @override\n   */\n\n\n  SearchTableImplement.prototype.getOrderFieldProp = function () {\n    return 'orderField';\n  };\n  /**\n   * getOrderFieldValue\n   * @description - 获取默认排序字段的值\n   * @override\n   * @protected\n   */\n\n\n  SearchTableImplement.prototype.getOrderFieldValue = function () {\n    return '';\n  };\n  /**\n   * getOrderProp\n   * @description - 获取排序方式\n   */\n\n\n  SearchTableImplement.prototype.getOrderProp = function () {\n    return 'order';\n  };\n  /**\n   * getOrderPropValue\n   * @override\n   * @description - 获取默认排序方式\n   * @protected\n   */\n\n\n  SearchTableImplement.prototype.getOrderPropValue = function () {\n    return 'descend';\n  };\n  /**\n   * clear\n   * @description - 清空查询条件\n   * @override\n   */\n\n\n  SearchTableImplement.prototype.clear = function () {\n    var _this = this;\n\n    return new Promise(function (resolve) {\n      var _a;\n\n      _this.setState(__assign(__assign({}, _this.getParams()), (_a = {}, _a[_this.getOrderFieldProp()] = _this.getOrderFieldValue(), _a[_this.getOrderProp()] = _this.getOrderPropValue() || 'descend', // 查询参数\n      _a.searchParams = __assign({}, _this.getParams()), _a.selectedRowKeys = [], _a.selectedRows = [], _a)), function () {\n        resolve();\n      });\n    });\n  };\n  /**\n   * renderSearchFooterItems\n   * @description - 渲染表格的工具栏\n   * @override\n   */\n\n\n  SearchTableImplement.prototype.renderSearchFooterItems = function () {\n    return [];\n  };\n  /**\n   * showLoading\n   * @description - 是否显示遮罩\n   * @override\n   */\n\n\n  SearchTableImplement.prototype.showLoading = function () {\n    return this.props.loading[\"\".concat(this.getServiceName(), \"/\").concat(this.getFetchListPropName())];\n  };\n  /**\n   * getSearchParams\n   * @description - 获取查询参数\n   * @protected\n   */\n\n\n  SearchTableImplement.prototype.getSearchParams = function () {\n    var _a;\n\n    var _b = this.state,\n        page = _b.page,\n        limit = _b.limit,\n        searchParams = _b.searchParams;\n    var order = this.state[this.getOrderProp()];\n    return __assign({}, __assign(__assign(__assign({\n      page: page,\n      limit: limit\n    }, searchParams), (_a = {}, _a[this.getOrderProp()] = order === 'descend' ? 'desc' : 'asc', _a[this.getOrderFieldProp()] = this.state[this.getOrderFieldProp()], _a)), this.getFetchDataParams()));\n  };\n  /**\n   * fetchData\n   * @description - 加载数据\n   * @override\n   */\n\n\n  SearchTableImplement.prototype.fetchData = function () {\n    return this.fetchDataExecute(this.getSearchParams());\n  };\n  /**\n   * fetchDataExecute\n   * @description - 真正的执行获取列表数据的接口\n   * @param searchParams\n   * @protected\n   */\n\n\n  SearchTableImplement.prototype.fetchDataExecute = function (searchParams) {\n    return this.props[\"\".concat(this.getServiceName()).concat(this.getFetchListPropNameToFirstUpper())](searchParams);\n  };\n  /**\n   * onSearch\n   * @description - 点击查询\n   * @override\n   */\n\n\n  SearchTableImplement.prototype.onSearch = function () {\n    var _this = this;\n\n    var keys = Object.keys(this.getParams());\n    var params = {};\n    keys.forEach(function (key) {\n      params[key] = _this.state[key];\n    });\n    return new Promise(function (resolve) {\n      var _a;\n\n      _this.setState({\n        searchParams: __assign(__assign({}, params), (_a = {}, _a[_this.getOrderFieldProp()] = _this.state[_this.getOrderFieldProp()], _a[_this.getOrderProp()] = _this.state[_this.getOrderProp()], _a))\n      }, function () {\n        _this.fetchData().then(function () {\n          resolve();\n        });\n      });\n    });\n  };\n\n  SearchTableImplement.prototype.getColumns = function () {\n    return [];\n  };\n\n  SearchTableImplement.prototype.onSubTableChange = function (pagination, filters, sorter, extra) {};\n\n  SearchTableImplement.prototype.renderSearchFormAfter = function () {\n    return null;\n  };\n\n  SearchTableImplement.prototype.renderSearchFormBefore = function () {\n    return null;\n  };\n\n  SearchTableImplement.prototype.renderTableFooter = function () {\n    return null;\n  };\n\n  SearchTableImplement.prototype.renderTableHeader = function () {\n    return null;\n  };\n\n  return SearchTableImplement;\n}(SearchTable);\n\nSearchTableImplement.defaultProps = __assign({}, defaultProps);\nSearchTableImplement.propTypes = __assign(__assign({}, propTypes), {\n  getTableWrapperInstance: PropTypes.func\n});\nexport default SearchTableImplement;"],"names":["__assign","__extends","__spreadArray","React","createRef","PropTypes","SearchTable","defaultProps","propTypes","selectorPrefix","SearchTableImplement","_super","props","_this","call","this","innerWrapRef","onSelectChange","property","v","_a","setState","onInputChange","e","target","value","trim","onDateTimeRangeChange","propertys","moments","length","Object","assign","state","getParams","getOrderFieldProp","getOrderFieldValue","getOrderProp","getOrderPropValue","searchParams","selectedRowKeys","selectedRows","prototype","componentDidMount","getTableWrapperInstance","getFetchListPropName","getFetchListPropNameToFirstUpper","fetchListPropName","concat","charAt","toUpperCase","substring","getServiceName","getFetchDataParams","isShowNumber","getNumberGeneratorRule","NUMBER_GENERATOR_RULE_CONTINUITY","getRowSelectionMode","ROW_SELECTION_NORMAL_MODE","getTableNumberColumnWidth","getRowKey","getDataKey","getTotalKey","getData","getTotal","getRowSelection","filter","selected","records","rowKey","map","r","row","find","key","onChange","ROW_SELECTION_CONTINUOUS_MODE","onSelect","record","onSelectAll","changeRows","renderSearchForm","renderInner","innerJSX","createElement","ref","className","clear","Promise","resolve","renderSearchFooterItems","showLoading","loading","getSearchParams","_b","page","limit","order","fetchData","fetchDataExecute","onSearch","keys","params","forEach","then","getColumns","onSubTableChange","pagination","filters","sorter","extra","renderSearchFormAfter","renderSearchFormBefore","renderTableFooter","renderTableHeader","func"],"mappings":"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"}