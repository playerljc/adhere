{"version":3,"file":"searchtableimplement.js","sources":["searchtableimplement.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\nimport React, { createRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SearchTable, { defaultProps, propTypes } from './searchtable';\r\nvar selectorPrefix = 'adhere-ui-searchtableimplement';\r\n/**\r\n * SearchTableImplement\r\n * @class SearchTableImplement\r\n * @classdesc SearchTableImplement - SearchTable的默认实现\r\n */\r\n// @ts-ignore\r\nvar SearchTableImplement = /** @class */ (function (_super) {\r\n    __extends(SearchTableImplement, _super);\r\n    function SearchTableImplement(props) {\r\n        var _a;\r\n        var _this = _super.call(this, props) || this;\r\n        _this.innerWrapRef = createRef();\r\n        // ------------ 不需要重写(override)的方法 start ------------------\r\n        /**\r\n         * onSelectChange\r\n         * @description - onSelectChange\r\n         * @param property\r\n         * @param v\r\n         */\r\n        _this.onSelectChange = function (property, v) {\r\n            var _a;\r\n            // @ts-ignore\r\n            _this.setState((_a = {},\r\n                _a[property] = v,\r\n                _a));\r\n        };\r\n        /**\r\n         * onInputChange\r\n         * @description - onInputChange\r\n         * @param property\r\n         * @param e\r\n         */\r\n        _this.onInputChange = function (property, e) {\r\n            var _a;\r\n            // @ts-ignore\r\n            _this.setState((_a = {},\r\n                _a[property] = e.target.value.trim(),\r\n                _a));\r\n        };\r\n        /**\r\n         * onDateTimeRangeChange\r\n         * @description - onDateTimeRangeChange\r\n         * @param propertys\r\n         * @param moments\r\n         */\r\n        _this.onDateTimeRangeChange = function (propertys, moments) {\r\n            var _a;\r\n            // @ts-ignore\r\n            _this.setState((_a = {},\r\n                _a[propertys[0]] = moments && moments.length ? moments[0] : null,\r\n                _a[propertys[1]] = moments && moments.length ? moments[1] : null,\r\n                _a));\r\n        };\r\n        // @ts-ignore\r\n        Object.assign(_this.state, __assign(__assign({}, _this.getParams()), (_a = {}, _a[_this.getOrderFieldProp()] = _this.getOrderFieldValue(), _a[_this.getOrderProp()] = _this.getOrderPropValue() || 'descend', \r\n        // 查询参数\r\n        _a.searchParams = __assign({}, _this.getParams()), _a.selectedRowKeys = [], _a.selectedRows = [], _a)));\r\n        return _this;\r\n    }\r\n    SearchTableImplement.prototype.componentDidMount = function () {\r\n        _super.prototype.componentDidMount.call(this);\r\n        // @ts-ignore\r\n        var getTableWrapperInstance = this.props.getTableWrapperInstance;\r\n        if (getTableWrapperInstance) {\r\n            getTableWrapperInstance(this.innerWrapRef);\r\n        }\r\n    };\r\n    /**\r\n     * getFetchListPropName\r\n     * @override\r\n     * @description - 获取调用列表接口的函数名\r\n     */\r\n    SearchTableImplement.prototype.getFetchListPropName = function () {\r\n        return '';\r\n    };\r\n    /**\r\n     * getFetchListPropNameToFirstUpper\r\n     * @override\r\n     * @description - 获取调用列表接口的函数名首字母大写\r\n     * @return string\r\n     */\r\n    SearchTableImplement.prototype.getFetchListPropNameToFirstUpper = function () {\r\n        var fetchListPropName = this.getFetchListPropName();\r\n        if (fetchListPropName.length > 1) {\r\n            return \"\" + fetchListPropName.charAt(0).toUpperCase() + fetchListPropName.substring(1);\r\n        }\r\n        return fetchListPropName;\r\n    };\r\n    // ------------ 不需要重写(override)的方法 end ------------------\r\n    /**\r\n     * getParams\r\n     * @override\r\n     * @description - 获取查询参数对象\r\n     */\r\n    SearchTableImplement.prototype.getParams = function () {\r\n        return {};\r\n    };\r\n    /**\r\n     * getServiceName\r\n     * @override\r\n     * @description - 获取接口服务的model名称\r\n     */\r\n    SearchTableImplement.prototype.getServiceName = function () {\r\n        return '';\r\n    };\r\n    /**\r\n     * getFetchDataParams\r\n     * @override\r\n     * @description - 获取调用数据接口的参数\r\n     */\r\n    SearchTableImplement.prototype.getFetchDataParams = function () {\r\n        return {};\r\n    };\r\n    /**\r\n     * isShowNumber\r\n     * @description - 是否线上序号列\r\n     * @override\r\n     * @return {boolean}\r\n     */\r\n    SearchTableImplement.prototype.isShowNumber = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * getNumberGeneratorRule\r\n     * @override\r\n     * @description - 表格序号列的生成规则\r\n     */\r\n    SearchTableImplement.prototype.getNumberGeneratorRule = function () {\r\n        return SearchTable.NUMBER_GENERATOR_RULE_CONTINUITY;\r\n    };\r\n    /**\r\n     * getNumberGeneratorRule - 获取符号列的生成规则\r\n     */\r\n    SearchTableImplement.prototype.getRowSelectionMode = function () {\r\n        return SearchTable.ROW_SELECTION_NORMAL_MODE;\r\n    };\r\n    /**\r\n     * getTableNumberColumnWidth\r\n     * @override\r\n     * @description - 表格序号列的宽度\r\n     */\r\n    SearchTableImplement.prototype.getTableNumberColumnWidth = function () {\r\n        return 80;\r\n    };\r\n    /**\r\n     * getRowKey\r\n     * @override\r\n     * @description - 数据的主键\r\n     */\r\n    SearchTableImplement.prototype.getRowKey = function () {\r\n        return 'id';\r\n    };\r\n    /**\r\n     * getDataKey\r\n     * @description - 获取数据的key\r\n     * @protected\r\n     */\r\n    SearchTableImplement.prototype.getDataKey = function () {\r\n        return 'list';\r\n    };\r\n    /**\r\n     * getTotalKey\r\n     * @description - 获取total的key\r\n     * @protected\r\n     */\r\n    SearchTableImplement.prototype.getTotalKey = function () {\r\n        return 'totalCount';\r\n    };\r\n    /**\r\n     * getData\r\n     * @description - Table的数据(Table的dataSource字段)\r\n     * @override\r\n     * @return {Array}\r\n     */\r\n    SearchTableImplement.prototype.getData = function () {\r\n        // @ts-ignore\r\n        return this.props[this.getServiceName()][this.getFetchListPropName()][this.getDataKey()];\r\n    };\r\n    /**\r\n     * getTotal\r\n     * @description - Table数据的总条数\r\n     * @override\r\n     */\r\n    SearchTableImplement.prototype.getTotal = function () {\r\n        // @ts-ignore\r\n        return this.props[this.getServiceName()][this.getFetchListPropName()][this.getTotalKey()];\r\n    };\r\n    /**\r\n     * getRowSelection\r\n     * @override\r\n     * @description - 获取表格行选择对象\r\n     */\r\n    SearchTableImplement.prototype.getRowSelection = function () {\r\n        var _this = this;\r\n        var self = this;\r\n        function filter(selected, records) {\r\n            var rowKey = self.getRowKey();\r\n            if (selected) {\r\n                // add\r\n                // @ts-ignore\r\n                self.setState({\r\n                    // @ts-ignore\r\n                    selectedRowKeys: __spreadArrays(self.state.selectedRowKeys, records.map(function (r) { return r[rowKey]; })),\r\n                    // @ts-ignore\r\n                    selectedRows: __spreadArrays(self.state.selectedRows, records),\r\n                });\r\n            }\r\n            else {\r\n                // remove\r\n                // @ts-ignore\r\n                self.setState({\r\n                    // @ts-ignore\r\n                    selectedRows: self.state.selectedRows.filter(function (row) { return !records.find(function (r) { return r[rowKey] === row[rowKey]; }); }),\r\n                    // @ts-ignore\r\n                    selectedRowKeys: self.state.selectedRowKeys.filter(function (key) { return !records.find(function (r) { return r[rowKey] === key; }); }),\r\n                });\r\n            }\r\n        }\r\n        return {\r\n            // @ts-ignore\r\n            selectedRowKeys: this.state.selectedRowKeys,\r\n            onChange: function (selectedRowKeys, selectedRows) {\r\n                if (_this.getRowSelectionMode() === SearchTable.ROW_SELECTION_CONTINUOUS_MODE)\r\n                    return;\r\n                // 如果是缺省模式(不能跨页选取)\r\n                // @ts-ignore\r\n                _this.setState({\r\n                    selectedRowKeys: selectedRowKeys,\r\n                    selectedRows: selectedRows,\r\n                });\r\n            },\r\n            onSelect: function (record, selected) {\r\n                if (_this.getRowSelectionMode() === SearchTable.ROW_SELECTION_NORMAL_MODE)\r\n                    return;\r\n                filter(selected, [record]);\r\n            },\r\n            onSelectAll: function (selected, selectedRows, changeRows) {\r\n                if (_this.getRowSelectionMode() === SearchTable.ROW_SELECTION_NORMAL_MODE)\r\n                    return;\r\n                filter(selected, changeRows);\r\n            },\r\n        };\r\n    };\r\n    /**\r\n     * renderSearchForm\r\n     * @override\r\n     * @description - 渲染Table查询的表单\r\n     */\r\n    SearchTableImplement.prototype.renderSearchForm = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * renderInner\r\n     * @override\r\n     * @description - 渲染主体\r\n     */\r\n    SearchTableImplement.prototype.renderInner = function () {\r\n        var innerJSX = _super.prototype.renderInner.call(this);\r\n        return (React.createElement(\"div\", { ref: this.innerWrapRef, className: selectorPrefix + \"-tablewrapper\" }, innerJSX));\r\n    };\r\n    /**\r\n     * getOrderFieldProp\r\n     * @description - 获取排序字段\r\n     * @override\r\n     */\r\n    SearchTableImplement.prototype.getOrderFieldProp = function () {\r\n        return 'orderField';\r\n    };\r\n    /**\r\n     * getOrderFieldValue\r\n     * @description - 获取默认排序字段的值\r\n     * @override\r\n     * @protected\r\n     */\r\n    SearchTableImplement.prototype.getOrderFieldValue = function () {\r\n        return '';\r\n    };\r\n    /**\r\n     * getOrderProp\r\n     * @description - 获取排序方式\r\n     */\r\n    SearchTableImplement.prototype.getOrderProp = function () {\r\n        return 'order';\r\n    };\r\n    /**\r\n     * getOrderPropValue\r\n     * @override\r\n     * @description - 获取默认排序方式\r\n     * @protected\r\n     */\r\n    SearchTableImplement.prototype.getOrderPropValue = function () {\r\n        return 'descend';\r\n    };\r\n    /**\r\n     * clear\r\n     * @description - 清空查询条件\r\n     * @override\r\n     */\r\n    SearchTableImplement.prototype.clear = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            var _a;\r\n            // @ts-ignore\r\n            _this.setState(__assign(__assign({}, _this.getParams()), (_a = {}, _a[_this.getOrderFieldProp()] = _this.getOrderFieldValue(), _a[_this.getOrderProp()] = _this.getOrderPropValue() || 'descend', \r\n            // 查询参数\r\n            _a.searchParams = __assign({}, _this.getParams()), _a.selectedRowKeys = [], _a.selectedRows = [], _a)), function () {\r\n                resolve();\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * renderSearchFooterItems\r\n     * @description - 渲染表格的工具栏\r\n     * @override\r\n     */\r\n    SearchTableImplement.prototype.renderSearchFooterItems = function () {\r\n        return [];\r\n    };\r\n    /**\r\n     * showLoading\r\n     * @description - 是否显示遮罩\r\n     * @override\r\n     */\r\n    SearchTableImplement.prototype.showLoading = function () {\r\n        // @ts-ignore\r\n        return this.props.loading[this.getServiceName() + \"/\" + this.getFetchListPropName()];\r\n    };\r\n    /**\r\n     * getSearchParams\r\n     * @description - 获取查询参数\r\n     * @protected\r\n     */\r\n    SearchTableImplement.prototype.getSearchParams = function () {\r\n        var _a;\r\n        // @ts-ignore\r\n        var _b = this.state, page = _b.page, limit = _b.limit, searchParams = _b.searchParams;\r\n        // @ts-ignore\r\n        var order = this.state[this.getOrderProp()];\r\n        return __assign({}, __assign(__assign(__assign({ page: page,\r\n            limit: limit }, searchParams), (_a = {}, _a[this.getOrderProp()] = order === 'descend' ? 'desc' : 'asc', _a[this.getOrderFieldProp()] = this.state[this.getOrderFieldProp()], _a)), this.getFetchDataParams()));\r\n    };\r\n    /**\r\n     * fetchData\r\n     * @description - 加载数据\r\n     * @override\r\n     */\r\n    SearchTableImplement.prototype.fetchData = function () {\r\n        return this.fetchDataExecute(this.getSearchParams());\r\n    };\r\n    /**\r\n     * fetchDataExecute\r\n     * @description - 真正的执行获取列表数据的接口\r\n     * @param searchParams\r\n     * @protected\r\n     */\r\n    SearchTableImplement.prototype.fetchDataExecute = function (searchParams) {\r\n        // @ts-ignore\r\n        return this.props[\"\" + this.getServiceName() + this.getFetchListPropNameToFirstUpper()](searchParams);\r\n    };\r\n    /**\r\n     * onSearch\r\n     * @description - 点击查询\r\n     * @override\r\n     */\r\n    SearchTableImplement.prototype.onSearch = function () {\r\n        var _this = this;\r\n        var keys = Object.keys(this.getParams());\r\n        var params = {};\r\n        keys.forEach(function (key) {\r\n            // @ts-ignore\r\n            params[key] = _this.state[key];\r\n        });\r\n        return new Promise(function (resolve) {\r\n            var _a;\r\n            // @ts-ignore\r\n            _this.setState({\r\n                searchParams: __assign(__assign({}, params), (_a = {}, _a[_this.getOrderFieldProp()] = _this.state[_this.getOrderFieldProp()], _a[_this.getOrderProp()] = _this.state[_this.getOrderProp()], _a)),\r\n            }, function () {\r\n                _this.fetchData().then(function () {\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    };\r\n    return SearchTableImplement;\r\n}(SearchTable));\r\nSearchTableImplement.defaultProps = __assign({}, defaultProps);\r\nSearchTableImplement.propTypes = __assign(__assign({}, propTypes), { getTableWrapperInstance: PropTypes.func });\r\n// @ts-ignore\r\nexport default SearchTableImplement;\r\n"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__spreadArrays","il","r","k","a","j","jl","React","createRef","PropTypes","SearchTable","defaultProps","propTypes","selectorPrefix","SearchTableImplement","_super","props","_this","innerWrapRef","onSelectChange","property","v","_a","setState","onInputChange","e","target","value","trim","onDateTimeRangeChange","propertys","moments","state","getParams","getOrderFieldProp","getOrderFieldValue","getOrderProp","getOrderPropValue","searchParams","selectedRowKeys","selectedRows","componentDidMount","getTableWrapperInstance","getFetchListPropName","getFetchListPropNameToFirstUpper","fetchListPropName","charAt","toUpperCase","substring","getServiceName","getFetchDataParams","isShowNumber","getNumberGeneratorRule","NUMBER_GENERATOR_RULE_CONTINUITY","getRowSelectionMode","ROW_SELECTION_NORMAL_MODE","getTableNumberColumnWidth","getRowKey","getDataKey","getTotalKey","getData","getTotal","getRowSelection","self","filter","selected","records","rowKey","map","row","find","key","onChange","ROW_SELECTION_CONTINUOUS_MODE","onSelect","record","onSelectAll","changeRows","renderSearchForm","renderInner","innerJSX","createElement","ref","className","clear","Promise","resolve","renderSearchFooterItems","showLoading","loading","getSearchParams","_b","page","limit","order","fetchData","fetchDataExecute","onSearch","keys","params","forEach","then","func"],"mappings":"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"}