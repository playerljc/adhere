{"version":3,"file":"EditableTableCell.js","sources":["Extension/EditableCell/EditableTableCell.js"],"sourcesContent":["var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport React, { useContext, useEffect, useMemo, useState } from 'react';\nimport { SearchTableContext } from '../../SearchTable';\nimport { createChildren } from '../../Util';\nimport EditableTableCellEdit from './Edit/EditableTableCellEdit';\nimport EditableCellView from './View';\n/**\n * EditableTableCell\n * @description 单元格编辑\n */\nvar EditableTableCell = function EditableTableCell(props) {\n  var _a;\n  var column = props.column;\n  /**\n   * defaultConfig\n   * @description 缺省的单元格配置\n   */\n  var defaultConfig = {\n    editable: false,\n    defaultStatus: 'view',\n    type: 'input',\n    props: {},\n    formItemProps: {},\n    useTrigger: true,\n    require: true,\n    dataIndex: column === null || column === void 0 ? void 0 : column.dataIndex,\n    useKeepEdit: false\n  };\n  /**\n   * editableConfig\n   * @description 实际的单元格配置\n   */\n  var editableConfig = useMemo(function () {\n    var _a;\n    return __assign(__assign({}, defaultConfig), (_a = column === null || column === void 0 ? void 0 : column.$editable) !== null && _a !== void 0 ? _a : {});\n  }, [column, column === null || column === void 0 ? void 0 : column.dataIndex]);\n  /**\n   * status\n   * @description 单元格的状态\n   */\n  var _b = useState(editableConfig.defaultStatus),\n    status = _b[0],\n    setStatus = _b[1];\n  var context = useContext(SearchTableContext);\n  /**\n   * 数据改变则切换成查看状态\n   */\n  useEffect(function () {\n    setStatus(editableConfig === null || editableConfig === void 0 ? void 0 : editableConfig.defaultStatus);\n  }, [(_a = context === null || context === void 0 ? void 0 : context.context) === null || _a === void 0 ? void 0 : _a.getData()]);\n  /**\n   * 缺省状态改变切换到缺省状态\n   */\n  useEffect(function () {\n    setStatus(editableConfig === null || editableConfig === void 0 ? void 0 : editableConfig.defaultStatus);\n  }, [editableConfig === null || editableConfig === void 0 ? void 0 : editableConfig.defaultStatus]);\n  return function (tdREL) {\n    var res = tdREL;\n    // 单元格不是可编辑的单元格\n    if (!editableConfig.editable) {\n      res = tdREL;\n    }\n    // 始终保持编辑状态\n    else if (editableConfig.useKeepEdit) {\n      res = /*#__PURE__*/React.cloneElement(tdREL, tdREL.props, createChildren(tdREL, /*#__PURE__*/React.createElement(EditableTableCellEdit, __assign({}, props, {\n        editableConfig: editableConfig,\n        onTriggerChange: function onTriggerChange() {\n          return setStatus('view');\n        }\n      }))));\n    }\n    // 查看状态\n    else if (status === 'view') {\n      res = /*#__PURE__*/React.cloneElement(tdREL, tdREL.props, /*#__PURE__*/React.createElement(EditableCellView, __assign({}, props, {\n        editableConfig: editableConfig,\n        onTriggerChange: function onTriggerChange() {\n          return setStatus('edit');\n        }\n      })));\n    }\n    // 编辑状态\n    else if (status === 'edit') {\n      res = /*#__PURE__*/React.cloneElement(tdREL, tdREL.props, createChildren(tdREL, /*#__PURE__*/React.createElement(EditableTableCellEdit, __assign({}, props, {\n        editableConfig: editableConfig,\n        onTriggerChange: function onTriggerChange() {\n          return setStatus('view');\n        }\n      }))));\n    }\n    return res;\n  };\n};\nexport default EditableTableCell;"],"names":["__assign","this","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","useContext","useEffect","useMemo","useState","SearchTableContext","createChildren","EditableTableCellEdit","EditableCellView","EditableTableCell","props","column","defaultConfig","editable","defaultStatus","type","formItemProps","useTrigger","require","dataIndex","useKeepEdit","editableConfig","_a","$editable","_b","status","setStatus","context","getData","tdREL","res","cloneElement","createElement","onTriggerChange"],"mappings":"AAAA,IAAIA,SAAWC,MAAQA,KAAKD,UAAY,WAQtC,OAPAA,SAAWE,OAAOC,QAAU,SAAUC,GACpC,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,CAAC,GAE/C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,CAAC,IAAGN,EAAEM,GAAKL,EAAEK,IAE5E,OAAON,CACT,GACgBU,MAAMb,KAAMO,SAAS,CACvC,SACOO,OAASC,WAAYC,UAAWC,QAASC,QAAuB,KAAP,eACvDC,kBAA6C,KAAnB,2BAC1BC,cAAkC,KAAZ,oBACxBC,0BAA2B,sCAC3BC,qBAAsB,SAK7B,IAAIC,kBAAoB,SAA2BC,GACjD,IACIC,EAASD,EAAMC,OAKfC,EAAgB,CAClBC,SAAU,CAAA,EACVC,cAAe,OACfC,KAAM,QACNL,MAAO,GACPM,cAAe,GACfC,WAAY,CAAA,EACZC,QAAS,CAAA,EACTC,UAAWR,MAAAA,EAAuC,KAAA,EAASA,EAAOQ,UAClEC,YAAa,CAAA,CACf,EAKIC,EAAiBlB,QAAQ,WAC3B,IAAImB,EACJ,OAAOrC,SAASA,SAAS,GAAI2B,CAAa,EAAG,OAACU,EAAKX,MAAAA,EAAuC,KAAA,EAASA,EAAOY,WAAuCD,EAAK,EAAE,CAC1J,EAAG,CAACX,EAAQA,MAAAA,EAAuC,KAAA,EAASA,EAAOQ,UAAU,EAKzEK,EAAKpB,SAASiB,EAAeP,aAAa,EAC5CW,EAASD,EAAG,GACZE,EAAYF,EAAG,GACbG,EAAU1B,WAAWI,kBAAkB,EAa3C,OATAH,UAAU,WACRwB,EAAUL,MAAAA,EAAuD,KAAA,EAASA,EAAeP,aAAa,CACxG,EAAG,CAAC,OAACQ,EAAKK,MAAAA,EAAyC,KAAA,EAASA,EAAQA,SAAqC,KAAA,EAASL,EAAGM,QAAQ,EAAE,EAI/H1B,UAAU,WACRwB,EAAUL,MAAAA,EAAuD,KAAA,EAASA,EAAeP,aAAa,CACxG,EAAG,CAACO,MAAAA,EAAuD,KAAA,EAASA,EAAeP,cAAc,EAC1F,SAAUe,GACf,IAAIC,EAAMD,EAgCV,OA9BKR,EAAeR,SAIXQ,EAAeD,YACtBU,EAAmB9B,MAAM+B,aAAaF,EAAOA,EAAMnB,MAAOJ,eAAeuB,EAAoB7B,MAAMgC,cAAczB,sBAAuBtB,SAAS,GAAIyB,EAAO,CAC1JW,eAAgBA,EAChBY,gBAAiB,WACf,OAAOP,EAAU,MAAM,CACzB,CACF,CAAC,CAAC,CAAC,CAAC,EAGc,SAAXD,EACPK,EAAmB9B,MAAM+B,aAAaF,EAAOA,EAAMnB,MAAoBV,MAAMgC,cAAcxB,iBAAkBvB,SAAS,GAAIyB,EAAO,CAC/HW,eAAgBA,EAChBY,gBAAiB,WACf,OAAOP,EAAU,MAAM,CACzB,CACF,CAAC,CAAC,CAAC,EAGe,SAAXD,IACPK,EAAmB9B,MAAM+B,aAAaF,EAAOA,EAAMnB,MAAOJ,eAAeuB,EAAoB7B,MAAMgC,cAAczB,sBAAuBtB,SAAS,GAAIyB,EAAO,CAC1JW,eAAgBA,EAChBY,gBAAiB,WACf,OAAOP,EAAU,MAAM,CACzB,CACF,CAAC,CAAC,CAAC,CAAC,GA3BJI,EAAMD,EA6BDC,CACT,CACF,iBACerB"}