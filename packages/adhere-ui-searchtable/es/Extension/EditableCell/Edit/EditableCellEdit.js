import _Form from"antd/es/form";import"core-js/modules/es.array.reduce.js";import"core-js/modules/es.object.to-string.js";import{__assign}from"tslib";import moment from"moment";import React,{useContext,useEffect}from"react";import{CheckOutlined,CloseOutlined}from"@ant-design/icons";import ConditionalRender from"@baifendian/adhere-ui-conditionalrender";import{SearchTableContext,selectorPrefix}from"../../../SearchTable";import{EditableContext}from"../EditableRow";import EventTypes from"../EventTypes";import FormItemGenerator from"./FormItemGenerator";var EditableCellEdit=function(r){var e=r.editableConfig,t=e.useTrigger,n=e.useKeepEdit,l=e.renderSaveTrigger,o=e.renderCancelTrigger,a=e.onSave,d=e.onBeforeCancel,i=e.dataIndex,c=e.type,u=e.render,m=e.rules,e=e.formItemProps,s=r.record,f=r.rowIndex,v=r.onTriggerChange,x=useContext(EditableContext),p=useContext(SearchTableContext),C=_Form.useWatch(i,x);function g(){null!=x&&x.validateFields().then(function(e){a?null!=(e=a({value:C,values:e,record:s,dataIndex:i,rowIndex:f}))&&e.then(function(){return null==v?void 0:v()}):null!=v&&v()})}function E(){var e;d?null!=(e=d({value:C,record:s,dataIndex:i,rowIndex:f}))&&e.then(function(){return null==v?void 0:v()}):null!=v&&v()}function I(){var e;return C instanceof moment?null==(e=null==p?void 0:p.context)?void 0:e.updateEditorCellDateData({record:s,dataIndex:i,value:C}):null==(e=null==p?void 0:p.context)?void 0:e.updateEditorCellDate({record:s,dataIndex:i,value:C})}return useEffect(function(){var e;null!=x&&x.setFieldValue(i,null==(e=null==p?void 0:p.context)?void 0:e.valueToFormItemValue({type:c,record:s,dataIndex:i}))},[null==s?void 0:s[i]]),React.createElement("div",{className:"".concat(selectorPrefix,"-editablecell-edit")},React.createElement("div",{className:"".concat(selectorPrefix,"-editablecell-edit-inner")},React.createElement(_Form.Item,__assign({name:i,rules:m},e||{}),"custom"!==c?(m=__assign(__assign({autoFocus:!n},r.editableConfig.props),EventTypes.reduce(function(e,t){return e[t]=function(e){r.editableConfig.props[t]&&r.editableConfig.props[t](e,{form:x,dataIndex:i,rowIndex:f,updateEditorCellData:I})},e},{})),m=FormItemGenerator.render({type:c,props:m,dictName:r.editableConfig.dictName,renderChildren:r.editableConfig.renderChildren,form:x,dataIndex:i,rowIndex:f}),u?u({value:null==s?void 0:s[i],record:s,dataIndex:i,rowIndex:f,form:x,updateEditorCellData:I,children:m}):m):null==u?void 0:u({value:null==s?void 0:s[i],record:s,dataIndex:i,rowIndex:f,form:x,updateEditorCellData:I}))),React.createElement(ConditionalRender,{conditional:!!t&&!n},function(){return React.createElement("div",{className:"".concat(selectorPrefix,"-editablecell-edit-trigger")},React.createElement("div",{className:"".concat(selectorPrefix,"-editablecell-edit-trigger-inner")},React.createElement("div",{className:"".concat(selectorPrefix,"-editablecell-edit-trigger-save"),onClick:g},!!l&&(null==l?void 0:l({value:null==s?void 0:s[i],record:s,dataIndex:i,rowIndex:f})),!l&&React.createElement(CheckOutlined,null)),React.createElement("div",{className:"".concat(selectorPrefix,"-editablecell-edit-trigger-cancel"),onClick:E},!!o&&(null==o?void 0:o({value:null==s?void 0:s[i],record:s,dataIndex:i,rowIndex:f})),!o&&React.createElement(CloseOutlined,null))))}))};export default EditableCellEdit;
//# sourceMappingURL=EditableCellEdit.js.map
