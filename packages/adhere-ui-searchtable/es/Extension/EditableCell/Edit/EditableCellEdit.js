import _Form from"antd/es/form";import{__assign}from"tslib";import React,{useContext,useEffect}from"react";import{CheckOutlined,CloseOutlined}from"@ant-design/icons";import ConditionalRender from"@baifendian/adhere-ui-conditionalrender";import{SearchTableContext,selectorPrefix}from"../../../SearchTable";import{EditableContext}from"../EditableRow";import FormItemGenerator from"./FormItemGenerator";var EditableCellEdit=function(e){var t=e.editableConfig,r=t.useTrigger,n=t.useKeepEdit,l=t.renderSaveTrigger,a=t.renderCancelTrigger,o=t.onSave,i=t.onBeforeCancel,d=t.dataIndex,c=t.type,u=t.render,m=t.rules,t=t.formItemProps,s=e.record,f=e.rowIndex,v=e.onTriggerChange,x=useContext(EditableContext),C=useContext(SearchTableContext),g=_Form.useWatch(d,x);function I(){null!=x&&x.validateFields().then(function(e){o?null!=(e=o({value:g,values:e,record:s,dataIndex:d,rowIndex:f}))&&e.then(function(){return null==v?void 0:v()}):null!=v&&v()})}function b(){var e;i?null!=(e=i({value:g,record:s,dataIndex:d,rowIndex:f}))&&e.then(function(){return null==v?void 0:v()}):null!=v&&v()}return useEffect(function(){var e;null!=x&&x.setFieldValue(d,null==(e=null==C?void 0:C.context)?void 0:e.valueToFormItemValue({type:c,record:s,dataIndex:d}))},[null==s?void 0:s[d]]),React.createElement("div",{className:"".concat(selectorPrefix,"-editablecell-edit")},React.createElement("div",{className:"".concat(selectorPrefix,"-editablecell-edit-inner")},React.createElement(_Form.Item,__assign({name:d,rules:m},t||{}),"custom"!==c?(m=FormItemGenerator.render({type:c,props:__assign({autoFocus:!n},e.editableConfig.props),dictName:e.editableConfig.dictName,renderChildren:e.editableConfig.renderChildren,form:x,dataIndex:d,rowIndex:f}),u?u({value:null==s?void 0:s[d],record:s,dataIndex:d,rowIndex:f,form:x,children:m}):m):null==u?void 0:u({value:null==s?void 0:s[d],record:s,dataIndex:d,rowIndex:f,form:x}))),React.createElement(ConditionalRender,{conditional:!!r&&!n},function(){return React.createElement("div",{className:"".concat(selectorPrefix,"-editablecell-edit-trigger")},React.createElement("div",{className:"".concat(selectorPrefix,"-editablecell-edit-trigger-inner")},React.createElement("div",{className:"".concat(selectorPrefix,"-editablecell-edit-trigger-save"),onClick:I},!!l&&(null==l?void 0:l({value:null==s?void 0:s[d],record:s,dataIndex:d,rowIndex:f})),!l&&React.createElement(CheckOutlined,null)),React.createElement("div",{className:"".concat(selectorPrefix,"-editablecell-edit-trigger-cancel"),onClick:b},!!a&&(null==a?void 0:a({value:null==s?void 0:s[d],record:s,dataIndex:d,rowIndex:f})),!a&&React.createElement(CloseOutlined,null))))}))};export default EditableCellEdit;
//# sourceMappingURL=EditableCellEdit.js.map
