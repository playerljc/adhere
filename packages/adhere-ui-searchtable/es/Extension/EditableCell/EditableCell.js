import{__assign}from"tslib";import React,{useContext,useEffect,useMemo,useState}from"react";import{SearchTableContext}from"../../SearchTable";import EditableCellEdit from"./Edit/EditableCellEdit";import EditableCellView from"./View";var EditableCell=function(e,t){var i=e.column,n={editable:!1,defaultStatus:"view",type:"input",props:{},formItemProps:{},useTrigger:!0,require:!0,dataIndex:null==i?void 0:i.dataIndex,useKeepEdit:!1},l=useMemo(function(){return __assign(__assign({},n),(null==i?void 0:i.$editable)||{})},[i,null==i?void 0:i.dataIndex]),a=useState(l.defaultStatus),r=a[0],o=a[1],a=useContext(SearchTableContext),u=(useEffect(function(){return o("view")},[null==(a=null==a?void 0:a.context)?void 0:a.getData()]),useEffect(function(){o(null==l?void 0:l.defaultStatus)},[null==l?void 0:l.defaultStatus]),t);return l.editable?l.useKeepEdit?u=React.cloneElement(t,t.props,[React.createElement(EditableCellEdit,__assign({},e,{editableConfig:l,onTriggerChange:function(){return o("view")}}))]):"view"===r?u=React.cloneElement(t,t.props,[React.createElement(EditableCellView,__assign({},e,{editableConfig:l,onTriggerChange:function(){return o("edit")}}))]):"edit"===r&&(u=React.cloneElement(t,t.props,[React.createElement(EditableCellEdit,__assign({},e,{editableConfig:l,onTriggerChange:function(){return o("view")}}))])):u=t,function(){return u}};export default EditableCell;
//# sourceMappingURL=EditableCell.js.map
