var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(e){for(var t,i=1,a=arguments.length;i<a;i++)for(var n in t=arguments[i])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}).apply(this,arguments)};import React,{useContext,useEffect,useMemo,useState}from"react";import{SearchTableContext}from"../../SearchTable";import EditableCellEdit from"./Edit/EditableCellEdit";import EditableCellView from"./View";var EditableCell=function(i){var e=i.column,t={editable:!1,defaultStatus:"view",type:"input",props:{},formItemProps:{},useTrigger:!0,require:!0,dataIndex:null==e?void 0:e.dataIndex,useKeepEdit:!1},a=useMemo(function(){return __assign(__assign({},t),(null==e?void 0:e.$editable)||{})},[e,null==e?void 0:e.dataIndex]),n=useState(a.defaultStatus),l=n[0],o=n[1],n=useContext(SearchTableContext);return useEffect(function(){o(null==a?void 0:a.defaultStatus)},[null==(n=null==n?void 0:n.context)?void 0:n.getData()]),useEffect(function(){o(null==a?void 0:a.defaultStatus)},[null==a?void 0:a.defaultStatus]),function(e){var t=e;return a.editable?a.useKeepEdit?t=React.cloneElement(e,e.props,[React.createElement(EditableCellEdit,__assign({},i,{editableConfig:a,onTriggerChange:function(){o("view")}}))]):"view"===l?t=React.cloneElement(e,e.props,[React.createElement(EditableCellView,__assign({},i,{editableConfig:a,onTriggerChange:function(){o("edit")}}))]):"edit"===l&&(t=React.cloneElement(e,e.props,[React.createElement(EditableCellEdit,__assign({},i,{editableConfig:a,onTriggerChange:function(){o("view")}}))])):t=e,t}};export default EditableCell;
//# sourceMappingURL=EditableCell.js.map
