import{__assign}from"tslib";import React,{useContext,useEffect,useMemo,useState}from"react";import{SearchTableContext}from"../../SearchTable";import EditableCellEdit from"./Edit/EditableCellEdit";import EditableCellView from"./View";var EditableCell=function(i){var e=i.column,t={editable:!1,defaultStatus:"view",type:"input",props:{},formItemProps:{},useTrigger:!0,require:!0,dataIndex:null==e?void 0:e.dataIndex,useKeepEdit:!1},l=useMemo(function(){return __assign(__assign({},t),(null==e?void 0:e.$editable)||{})},[e,null==e?void 0:e.dataIndex]),a=useState(l.defaultStatus),n=a[0],o=a[1],a=useContext(SearchTableContext);return useEffect(function(){o(null==l?void 0:l.defaultStatus)},[null==(a=null==a?void 0:a.context)?void 0:a.getData()]),useEffect(function(){o(null==l?void 0:l.defaultStatus)},[null==l?void 0:l.defaultStatus]),function(e){var t=e;return l.editable?l.useKeepEdit?t=React.cloneElement(e,e.props,[React.createElement(EditableCellEdit,__assign({},i,{editableConfig:l,onTriggerChange:function(){return o("view")}}))]):"view"===n?t=React.cloneElement(e,e.props,[React.createElement(EditableCellView,__assign({},i,{editableConfig:l,onTriggerChange:function(){return o("edit")}}))]):"edit"===n&&(t=React.cloneElement(e,e.props,[React.createElement(EditableCellEdit,__assign({},i,{editableConfig:l,onTriggerChange:function(){return o("view")}}))])):t=e,t}};export default EditableCell;
//# sourceMappingURL=EditableCell.js.map
