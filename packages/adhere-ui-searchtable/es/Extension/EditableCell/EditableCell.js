var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(e){for(var t,n=1,a=arguments.length;n<a;n++)for(var i in t=arguments[n])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e}).apply(this,arguments)};import React,{useContext,useEffect,useMemo,useState}from"react";import{SearchTableContext}from"../../SearchTable";import EditableCellEdit from"./Edit/EditableCellEdit";import EditableCellView from"./View";var EditableCell=function(n){var e=n.column,t={editable:!1,defaultStatus:"view",type:"input",props:{},formItemProps:{},useTrigger:!0,require:!0,dataIndex:null==e?void 0:e.dataIndex,useKeepEdit:!1},a=useMemo(function(){return __assign(__assign({},t),(null==e?void 0:e.$editable)||{})},[e,null==e?void 0:e.dataIndex]),i=useState(a.defaultStatus),l=i[0],o=i[1],i=useContext(SearchTableContext);return useEffect(function(){o(null==a?void 0:a.defaultStatus)},[null==(i=null==i?void 0:i.context)?void 0:i.getData()]),useEffect(function(){o(null==a?void 0:a.defaultStatus)},[null==a?void 0:a.defaultStatus]),function(e){console.log("status",l);var t=e;return a.editable?a.useKeepEdit?t=React.cloneElement(e,e.props,[React.createElement(EditableCellEdit,__assign({},n,{editableConfig:a,onTriggerChange:function(){o("view")}}))]):"view"===l?t=React.cloneElement(e,e.props,[React.createElement(EditableCellView,__assign({},n,{editableConfig:a,onTriggerChange:function(){console.log("onTriggerChange"),o("edit")}}))]):"edit"===l&&(t=React.cloneElement(e,e.props,[React.createElement(EditableCellEdit,__assign({},n,{editableConfig:a,onTriggerChange:function(){o("view")}}))])):t=e,t}};export default EditableCell;
//# sourceMappingURL=EditableCell.js.map
