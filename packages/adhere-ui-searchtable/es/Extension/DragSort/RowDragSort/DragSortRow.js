import"core-js/modules/es.object.assign.js";import{__assign}from"tslib";import classNames from"classnames";import React,{useContext,useRef}from"react";import{useDrag,useDrop}from"react-dnd";import{SearchTableContext,selectorPrefix}from"../../../SearchTable";var type="DraggableBodyRow",DragSortRow=function(r){var e=r.rowIndex,r=r.rowConfig,a=useContext(SearchTableContext),o={type:type,dropOverDownwardClassName:"".concat(selectorPrefix,"-row-drag-sort-drop-over-downward"),dropOverUpwardClasName:"".concat(selectorPrefix,"-row-drag-sort-drop-over-upward"),dropConfig:function(){return{accept:n.type,collect:function(r){var o=(r.getItem()||{}).index;return o===e?{}:{isOver:r.isOver(),dropClassName:o<e?n.dropOverDownwardClassName:n.dropOverUpwardClasName}},drop:function(r){var o;null!=(o=null==a?void 0:a.context)&&o.moveRow(r.index,e)}}},dragConfig:function(){return{type:n.type,item:{index:e},collect:function(r){return{isDragging:r.isDragging()}}}}},n=__assign(__assign({},o),(null==r?void 0:r.$rowDragSort)||{}),s=(null!=(t=null==r?void 0:r.$rowDragSort)&&t.dropConfig&&(n.dropConfig=Object.assign(o.dropConfig(),r.$rowDragSort.dropConfig||{})),null!=(t=null==r?void 0:r.$rowDragSort)&&t.dragConfig&&(n.dragConfig=Object.assign(o.dragConfig(),r.$rowDragSort.dragConfig||{})),useRef(null)),t=useDrag(n.dragConfig)[1],o=useDrop(n.dropConfig),r=o[0],i=r.isOver,g=r.dropClassName;return(0,o[1])(t(s)),function(r){return React.cloneElement(r,__assign(__assign({},r.props),{ref:s,style:__assign({cursor:"move"},r.props.style||{}),className:classNames(r.props.className,i?g:"")}))}};export default DragSortRow;
//# sourceMappingURL=DragSortRow.js.map
