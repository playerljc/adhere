import"core-js/modules/es.object.assign.js";import{__assign}from"tslib";import classNames from"classnames";import React,{useContext,useRef}from"react";import{useDrag,useDrop}from"react-dnd";import{SearchTableContext,selectorPrefix}from"../../../SearchTable";var type="DraggableBodyRow",DragSortRow=function(r){r.record,r.columns;var o,e=r.rowIndex,a=r.rowConfig,n=(r.rowKey,useContext(SearchTableContext)),r={dropOverDownwardClassName:"".concat(selectorPrefix,"-row-drag-sort-drop-over-downward"),dropOverUpwardClasName:"".concat(selectorPrefix,"-row-drag-sort-drop-over-upward"),type:type,dropConfig:function(){return{accept:t.type,collect:function(r){var o=(r.getItem()||{}).index;return o===e?{}:{isOver:r.isOver(),dropClassName:o<e?t.dropOverDownwardClassName:t.dropOverUpwardClasName}},drop:function(r){var o;null!=(o=null==n?void 0:n.context)&&o.moveRow(r.index,e)}}},dragConfig:function(){return{type:t.type,item:{index:e},collect:function(r){return{isDragging:r.isDragging()}}}}},t=__assign(__assign({},r),(null==a?void 0:a.$rowDragSort)||{}),i=(null!=(o=null==a?void 0:a.$rowDragSort)&&o.dropConfig&&(t.dropConfig=Object.assign(r.dropConfig(),a.$rowDragSort.dropConfig||{})),null!=(o=null==a?void 0:a.$rowDragSort)&&o.dragConfig&&(t.dragConfig=Object.assign(r.dragConfig(),a.$rowDragSort.dragConfig||{})),useRef(null));return function(r){var o=r;try{var e=useDrop(t.dropConfig),a=e[0],n=a.isOver,s=a.dropClassName;(0,e[1])((0,useDrag(t.dragConfig)[1])(i)),o=React.cloneElement(r,__assign(__assign({},r.props),{ref:i,style:__assign({cursor:"move"},r.props.style||{}),className:classNames(r.props.className,n?s:"")}))}catch(r){console.log("e",r)}return o}};export default DragSortRow;
//# sourceMappingURL=DragSortRow.js.map
