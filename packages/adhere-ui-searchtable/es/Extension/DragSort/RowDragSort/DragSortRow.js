import"core-js/modules/es.object.assign.js";import{__assign}from"tslib";import classNames from"classnames";import React,{useContext,useRef}from"react";import{useDrag,useDrop}from"react-dnd";import{SearchTableContext,selectorPrefix}from"../../../SearchTable";var type="DraggableBodyRow",DragSortRow=function(r){var e=r.rowIndex,r=r.rowConfig,a=useContext(SearchTableContext),o={type:type,dropOverDownwardClassName:"".concat(selectorPrefix,"-row-drag-sort-drop-over-downward"),dropOverUpwardClasName:"".concat(selectorPrefix,"-row-drag-sort-drop-over-upward"),dragConfig:function(){return{type:n.type,item:{index:e},collect:function(r){return{isDragging:r.isDragging()}}}},dropConfig:function(){return{accept:n.type,collect:function(r){var o=(r.getItem()||{}).index;return o===e?{}:{isOver:r.isOver(),dropClassName:o<e?n.dropOverDownwardClassName:n.dropOverUpwardClasName}},drop:function(r){var o;null!=(o=null==a?void 0:a.context)&&o.moveRow(r.index,e)}}}},n=__assign(__assign({},o),(null==r?void 0:r.$rowDragSort)||{}),s=(null!=(t=null==r?void 0:r.$rowDragSort)&&t.dropConfig?n.dropConfig=Object.assign(o.dropConfig(),r.$rowDragSort.dropConfig||{}):n.dropConfig=o.dropConfig(),null!=(t=null==r?void 0:r.$rowDragSort)&&t.dragConfig?n.dragConfig=Object.assign(o.dragConfig(),r.$rowDragSort.dragConfig||{}):n.dragConfig=o.dragConfig(),useRef(null)),t=useDrag(n.dragConfig)[1],r=useDrop(n.dropConfig),o=r[0],i=o.isOver,g=o.dropClassName;return(0,r[1])(t(s)),function(r){var o={cursor:"canDrag"in n.dragConfig&&!n.dragConfig.canDrag()?"no-drop":"move"};return React.cloneElement(r,__assign(__assign({},r.props),{ref:s,style:__assign(__assign({},o),r.props.style||{}),className:classNames(r.props.className,i?g:"")}))}};export default DragSortRow;
//# sourceMappingURL=DragSortRow.js.map
