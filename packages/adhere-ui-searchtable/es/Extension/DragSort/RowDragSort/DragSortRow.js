var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(r){for(var o,e=1,a=arguments.length;e<a;e++)for(var n in o=arguments[e])Object.prototype.hasOwnProperty.call(o,n)&&(r[n]=o[n]);return r}).apply(this,arguments)};import classNames from"classnames";import React,{useContext,useRef}from"react";import{useDrag,useDrop}from"react-dnd";import{SearchTableContext,selectorPrefix}from"../../../SearchTable";var type="DraggableBodyRow",DragSortRow=function(r){var o,e=r.rowIndex,r=r.rowConfig,a=useContext(SearchTableContext),n={type:type,dropOverDownwardClassName:"".concat(selectorPrefix,"-row-drag-sort-drop-over-downward"),dropOverUpwardClasName:"".concat(selectorPrefix,"-row-drag-sort-drop-over-upward"),dragConfig:function(){return{type:t.type,item:{index:e},collect:function(r){return{isDragging:r.isDragging()}}}},dropConfig:function(){return{accept:t.type,collect:function(r){var o=(r.getItem()||{}).index;return o===e?{}:{isOver:r.isOver(),dropClassName:o<e?t.dropOverDownwardClassName:t.dropOverUpwardClasName}},drop:function(r){var o;null!=(o=null==a?void 0:a.context)&&o.moveRow(r.index,e)}}}},t=__assign(__assign({},n),(null==r?void 0:r.$rowDragSort)||{}),s=(null!=(o=null==r?void 0:r.$rowDragSort)&&o.dropConfig?t.dropConfig=Object.assign(n.dropConfig(),r.$rowDragSort.dropConfig||{}):t.dropConfig=n.dropConfig(),null!=(o=null==r?void 0:r.$rowDragSort)&&o.dragConfig?t.dragConfig=Object.assign(n.dragConfig(),r.$rowDragSort.dragConfig||{}):t.dragConfig=n.dragConfig(),useRef(null));try{var i=useDrag(t.dragConfig)[1],g=useDrop(t.dropConfig),d=g[0].isOver,l=g[0].dropClassName;(0,g[1])(i(s))}catch(r){console.log(r)}return function(r){var o={cursor:"canDrag"in t.dragConfig&&!t.dragConfig.canDrag()?"no-drop":"move"};return React.cloneElement(r,__assign(__assign({},r.props),{ref:s,style:__assign(__assign({},o),r.props.style||{}),className:classNames(r.props.className,d?l:"")}))}};export default DragSortRow;
//# sourceMappingURL=DragSortRow.js.map
