{"version":3,"file":"DragSortRow.js","sources":["Extension/DragSort/RowDragSort/DragSortRow.js"],"sourcesContent":["import \"core-js/modules/es.object.assign.js\";\nimport { __assign } from \"tslib\";\nimport classNames from 'classnames';\nimport React, { useContext, useRef } from 'react';\nimport { useDrag, useDrop } from 'react-dnd';\nimport { SearchTableContext, selectorPrefix } from '../../../SearchTable';\nvar type = 'DraggableBodyRow';\n/**\n * DragSortRow\n * @description 行编辑\n *\n * record: any;\n * rowIndex: number;\n * columns: any[];\n */\n\nvar DragSortRow = function DragSortRow(_a) {\n  var _b, _c;\n\n  var rowIndex = _a.rowIndex,\n      rowConfig = _a.rowConfig;\n  var context = useContext(SearchTableContext);\n  var defaultRowDragSortConfig = {\n    type: type,\n    dropOverDownwardClassName: \"\".concat(selectorPrefix, \"-row-drag-sort-drop-over-downward\"),\n    dropOverUpwardClasName: \"\".concat(selectorPrefix, \"-row-drag-sort-drop-over-upward\"),\n    dropConfig: function dropConfig() {\n      return {\n        accept: rowDragSortConfig.type,\n        collect: function collect(monitor) {\n          var dragIndex = (monitor.getItem() || {}).index;\n\n          if (dragIndex === rowIndex) {\n            return {};\n          }\n\n          return {\n            isOver: monitor.isOver(),\n            dropClassName: dragIndex < rowIndex ? rowDragSortConfig.dropOverDownwardClassName : rowDragSortConfig.dropOverUpwardClasName\n          };\n        },\n        drop: function drop(item) {\n          var _a; // @ts-ignore\n\n\n          (_a = context === null || context === void 0 ? void 0 : context.context) === null || _a === void 0 ? void 0 : _a.moveRow(item.index, rowIndex);\n        }\n      };\n    },\n    dragConfig: function dragConfig() {\n      return {\n        type: rowDragSortConfig.type,\n        item: {\n          index: rowIndex\n        },\n        collect: function collect(monitor) {\n          return {\n            isDragging: monitor.isDragging()\n          };\n        }\n      };\n    }\n  };\n\n  var rowDragSortConfig = __assign(__assign({}, defaultRowDragSortConfig), (rowConfig === null || rowConfig === void 0 ? void 0 : rowConfig.$rowDragSort) || {});\n\n  if ((_b = rowConfig === null || rowConfig === void 0 ? void 0 : rowConfig.$rowDragSort) === null || _b === void 0 ? void 0 : _b.dropConfig) {\n    rowDragSortConfig.dropConfig = Object.assign(defaultRowDragSortConfig.dropConfig(), rowConfig.$rowDragSort.dropConfig || {});\n  }\n\n  if ((_c = rowConfig === null || rowConfig === void 0 ? void 0 : rowConfig.$rowDragSort) === null || _c === void 0 ? void 0 : _c.dragConfig) {\n    rowDragSortConfig.dragConfig = Object.assign(defaultRowDragSortConfig.dragConfig(), rowConfig.$rowDragSort.dragConfig || {});\n  }\n\n  var ref = useRef(null);\n  return function (trREL) {\n    var res = trREL;\n\n    try {\n      var _a = useDrop(rowDragSortConfig.dropConfig),\n          _b = _a[0],\n          isOver = _b.isOver,\n          dropClassName = _b.dropClassName,\n          drop = _a[1];\n\n      var _c = useDrag(rowDragSortConfig.dragConfig),\n          drag = _c[1];\n\n      drop(drag(ref));\n      res = /*#__PURE__*/React.cloneElement(trREL, __assign(__assign({}, trREL.props), {\n        ref: ref,\n        style: __assign({\n          cursor: 'move'\n        }, trREL.props.style || {}),\n        className: classNames(trREL.props.className, isOver ? dropClassName : '')\n      }));\n    } catch (e) {\n      console.log('e', e);\n    }\n\n    return res;\n  };\n};\n\nexport default DragSortRow;"],"names":["__assign","classNames","React","useContext","useRef","useDrag","useDrop","SearchTableContext","selectorPrefix","type","DragSortRow","_a","_c","rowIndex","rowConfig","context","defaultRowDragSortConfig","dropOverDownwardClassName","concat","dropOverUpwardClasName","dropConfig","accept","rowDragSortConfig","collect","monitor","dragIndex","getItem","index","isOver","dropClassName","drop","item","moveRow","dragConfig","isDragging","$rowDragSort","ref","_b","Object","assign","trREL","res","drag","cloneElement","props","style","cursor","className","e","console","log"],"mappings":"MAAO,6CACEA,QAAuB,KAAP,eAClBC,eAAgB,oBAChBC,OAASC,WAAYC,MAAqB,KAAP,eACjCC,QAASC,OAA0B,KAAX,mBACxBC,mBAAoBC,cAA4C,KAAtB,uBACnD,IAAIC,KAAO,mBAUPC,YAAc,SAAqBC,GACrC,IAAQC,EAEJC,EAAWF,EAAGE,SACdC,EAAYH,EAAGG,UACfC,EAAUZ,WAAWI,kBAAkB,EACvCS,EAA2B,CAC7BP,KAAMA,KACNQ,0BAA2B,GAAGC,OAAOV,eAAgB,mCAAmC,EACxFW,uBAAwB,GAAGD,OAAOV,eAAgB,iCAAiC,EACnFY,WAAY,WACV,MAAO,CACLC,OAAQC,EAAkBb,KAC1Bc,QAAS,SAAiBC,GACxB,IAAIC,GAAaD,EAAQE,QAAQ,GAAK,IAAIC,MAE1C,OAAIF,IAAcZ,EACT,GAGF,CACLe,OAAQJ,EAAQI,OAAO,EACvBC,cAAeJ,EAAYZ,EAAWS,EAAkBL,0BAA4BK,EAAkBH,sBACxG,CACF,EACAW,KAAM,SAAcC,GAClB,IAAIpB,EAGJ,OAACA,EAAKI,MAAAA,EAAyC,KAAA,EAASA,EAAQA,UAA8CJ,EAAGqB,QAAQD,EAAKJ,MAAOd,CAAQ,CAC/I,CACF,CACF,EACAoB,WAAY,WACV,MAAO,CACLxB,KAAMa,EAAkBb,KACxBsB,KAAM,CACJJ,MAAOd,CACT,EACAU,QAAS,SAAiBC,GACxB,MAAO,CACLU,WAAYV,EAAQU,WAAW,CACjC,CACF,CACF,CACF,CACF,EAEIZ,EAAoBtB,SAASA,SAAS,GAAIgB,CAAwB,GAAIF,MAAAA,EAA6C,KAAA,EAASA,EAAUqB,eAAiB,EAAE,EAUzJC,GARA,OAACC,EAAKvB,MAAAA,EAA6C,KAAA,EAASA,EAAUqB,eAAmDE,EAAGjB,aAC9HE,EAAkBF,WAAakB,OAAOC,OAAOvB,EAAyBI,WAAW,EAAGN,EAAUqB,aAAaf,YAAc,EAAE,GAGzH,OAACR,EAAKE,MAAAA,EAA6C,KAAA,EAASA,EAAUqB,eAAmDvB,EAAGqB,aAC9HX,EAAkBW,WAAaK,OAAOC,OAAOvB,EAAyBiB,WAAW,EAAGnB,EAAUqB,aAAaF,YAAc,EAAE,GAGnH7B,OAAO,IAAI,GACrB,OAAO,SAAUoC,GACf,IAAIC,EAAMD,EAEV,IACE,IAAI7B,EAAKL,QAAQgB,EAAkBF,UAAU,EACzCiB,EAAK1B,EAAG,GACRiB,EAASS,EAAGT,OACZC,EAAgBQ,EAAGR,eAMvBC,EALWnB,EAAG,KAKT+B,EAHIrC,QAAQiB,EAAkBW,UAAU,EAC/B,IAEJG,CAAG,CAAC,EACdK,EAAmBvC,MAAMyC,aAAaH,EAAOxC,SAASA,SAAS,GAAIwC,EAAMI,KAAK,EAAG,CAC/ER,IAAKA,EACLS,MAAO7C,SAAS,CACd8C,OAAQ,MACV,EAAGN,EAAMI,MAAMC,OAAS,EAAE,EAC1BE,UAAW9C,WAAWuC,EAAMI,MAAMG,UAAWnB,EAASC,EAAgB,EAAE,CAC1E,CAAC,CAAC,CAGJ,CAFE,MAAOmB,GACPC,QAAQC,IAAI,IAAKF,CAAC,CACpB,CAEA,OAAOP,CACT,CACF,iBAEe/B"}