var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(e){for(var r,t=1,n=arguments.length;t<n;t++)for(var o in r=arguments[t])Object.prototype.hasOwnProperty.call(r,o)&&(e[o]=r[o]);return e}).apply(this,arguments)},__rest=this&&this.__rest||function(e,r){var t={};for(o in e)Object.prototype.hasOwnProperty.call(e,o)&&r.indexOf(o)<0&&(t[o]=e[o]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var n=0,o=Object.getOwnPropertySymbols(e);n<o.length;n++)r.indexOf(o[n])<0&&Object.prototype.propertyIsEnumerable.call(e,o[n])&&(t[o[n]]=e[o[n]]);return t};import{CascaderView}from"antd-mobile";import React,{useMemo}from"react";import Util from"@baifendian/adhere-util";import{treeTransformConfig}from"../TreeFilter";var InternalCascaderView=function(e){var r=e.treeDataSimpleMode,t=e.options,e=__rest(e,["treeDataSimpleMode","options"]),n=useMemo(function(){return r?Util.arrayToAntdTree(t,treeTransformConfig):t},[t,r]);return React.createElement(CascaderView,__assign({options:n},e))};export default InternalCascaderView;
//# sourceMappingURL=InternalCascaderView.js.map
