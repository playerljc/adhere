{"version":3,"file":"InternalCascaderView.js","sources":["cascader-view/InternalCascaderView.js"],"sourcesContent":["var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { CascaderView } from 'antd-mobile';\nimport React, { useMemo } from 'react';\nimport Util from '@baifendian/adhere-util';\nimport { treeTransformConfig } from '../TreeFilter';\n/**\n * InternalCascaderView\n * @param treeDataSimpleMode\n * @param options\n * @param cascaderViewProps\n * @constructor\n */\nvar InternalCascaderView = function InternalCascaderView(_a) {\n  var treeDataSimpleMode = _a.treeDataSimpleMode,\n    options = _a.options,\n    cascaderViewProps = __rest(_a, [\"treeDataSimpleMode\", \"options\"]);\n  var targetOptions = useMemo(function () {\n    if (treeDataSimpleMode) {\n      return Util.arrayToAntdTree(options, treeTransformConfig);\n    }\n    return options;\n  }, [options, treeDataSimpleMode]);\n  return /*#__PURE__*/React.createElement(CascaderView, __assign({\n    options: targetOptions\n  }, cascaderViewProps));\n};\nexport default InternalCascaderView;"],"names":["__assign","this","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","CascaderView","React","useMemo","Util","treeTransformConfig","InternalCascaderView","_a","treeDataSimpleMode","options","cascaderViewProps","targetOptions","arrayToAntdTree","createElement"],"mappings":"AAAA,IAAIA,SAAWC,MAAQA,KAAKD,UAAY,WAQtC,OAPAA,SAAWE,OAAOC,QAAU,SAAUC,GACpC,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,CAAC,GAE/C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,CAAC,IAAGN,EAAEM,GAAKL,EAAEK,IAE5E,OAAON,CACT,GACgBU,MAAMb,KAAMO,SAAS,CACvC,EACIO,OAASd,MAAQA,KAAKc,QAAU,SAAUV,EAAGW,GAC/C,IAAIZ,EAAI,GACR,IAASM,KAAKL,EAAOH,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,CAAC,GAAKM,EAAEC,QAAQP,CAAC,EAAI,IAAGN,EAAEM,GAAKL,EAAEK,IAC9F,GAAS,MAALL,GAAqD,YAAxC,OAAOH,OAAOgB,sBAAsC,IAAK,IAAIZ,EAAI,EAAGI,EAAIR,OAAOgB,sBAAsBb,CAAC,EAAGC,EAAII,EAAED,OAAQH,CAAC,GACnIU,EAAEC,QAAQP,EAAEJ,EAAE,EAAI,GAAKJ,OAAOS,UAAUQ,qBAAqBN,KAAKR,EAAGK,EAAEJ,EAAE,IAAGF,EAAEM,EAAEJ,IAAMD,EAAEK,EAAEJ,KAEhG,OAAOF,CACT,SACSgB,YAAiC,KAAb,qBACtBC,OAASC,OAAsB,KAAP,eACxBC,SAAU,iCACRC,mBAA0C,KAAf,gBAQpC,IAAIC,qBAAuB,SAA8BC,GACvD,IAAIC,EAAqBD,EAAGC,mBAC1BC,EAAUF,EAAGE,QACbC,EAAoBd,OAAOW,EAAI,CAAC,qBAAsB,UAAU,EAC9DI,EAAgBR,QAAQ,WAC1B,OAAIK,EACKJ,KAAKQ,gBAAgBH,EAASJ,mBAAmB,EAEnDI,CACT,EAAG,CAACA,EAASD,EAAmB,EAChC,OAAoBN,MAAMW,cAAcZ,aAAcpB,SAAS,CAC7D4B,QAASE,CACX,EAAGD,CAAiB,CAAC,CACvB,iBACeJ"}