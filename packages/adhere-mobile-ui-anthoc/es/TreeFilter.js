var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(e){for(var r,t=1,l=arguments.length;t<l;t++)for(var n in r=arguments[t])Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n]);return e}).apply(this,arguments)};import{ErrorBlock,SearchBar}from"antd-mobile";import classNames from"classnames";import React,{useCallback,useMemo,useState}from"react";import Util from"@baifendian/adhere-util";var selectorPrefix="adhere-mobile-ui-ant-hoc-tree-filter",treeTransformConfig={keyAttr:"value",titleAttr:"label",parentIdAttr:"pId",rootParentId:0};function TreeFilter(e){var r=e.treeData,t=e.treeDataSimpleMode,l=void 0!==t&&t,n=e.filterProps,t=e.wrapperClassName,a=e.wrapperStyle,o=e.filterWrapperClassName,i=e.filterWrapperStyle,s=e.bodyWrapperClassName,c=e.bodyWrapperStyle,u=e.renderEmpty,e=e.children,f=useState(""),p=f[0],m=f[1];function d(e,r){return r[null!=(r=null==n?void 0:n.optionFilterProp)?r:"label"].includes(e)}var v=useMemo(function(){return l?r:Util.treeToArray(r,{parentIdAttr:treeTransformConfig.parentIdAttr,rootParentId:treeTransformConfig.rootParentId},treeTransformConfig.keyAttr)},[r,l]),y=useMemo(function(){var e=p?"boolean"==typeof(null==n?void 0:n.filterOption)&&n.filterOption?(null!=v?v:[]).filter(function(e){return d(p,e)}):Util.isFunction(null==n?void 0:n.filterOption)?(null!=v?v:[]).filter(function(e){return(null==n?void 0:n.filterOption)(p,e)}):(null!=v?v:[]).filter(function(e){return d(p,e)}):null!=v?v:[],e=Util.completionIncompleteFlatArr(null!=v?v:[],e,treeTransformConfig);return l?Util.treeToArray(e,treeTransformConfig,treeTransformConfig.keyAttr):e},[p,null==n?void 0:n.filterOption,null==n?void 0:n.optionFilterProp,v]),f=useCallback(function(){return!y.length},[y]);return React.createElement("div",{className:classNames(selectorPrefix,null!=t?t:""),style:null!=a?a:{}},React.createElement("div",{className:classNames("".concat(selectorPrefix,"-search"),null!=o?o:""),style:null!=i?i:{}},React.createElement(SearchBar,__assign({onSearch:function(e){m(e)},onClear:function(){m("")}},n))),React.createElement("div",{className:classNames("".concat(selectorPrefix,"-tree"),null!=s?s:""),style:null!=c?c:{}},f()&&(null!=(t=null==u?void 0:u())?t:React.createElement(ErrorBlock,{status:"empty"})),null==e?void 0:e(y,p)))}export default TreeFilter;export{treeTransformConfig};
//# sourceMappingURL=TreeFilter.js.map
