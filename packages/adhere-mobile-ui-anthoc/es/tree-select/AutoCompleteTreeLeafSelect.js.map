{"version":3,"file":"AutoCompleteTreeLeafSelect.js","sources":["tree-select/AutoCompleteTreeLeafSelect.js"],"sourcesContent":["var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport React, { memo, useMemo } from 'react';\nimport AutoCompleteTreeSelect from './AutoCompleteTreeSelect';\nimport useTreeSelectLeaf from './useTreeSelectLeaf';\n/**\n * AutoCompleteTreeLeafSelect\n * @param treeSelectProps\n * @param autoCompleteTreeSelect\n * @constructor\n */\nvar InternalAutoCompleteTreeLeafSelect = /*#__PURE__*/memo(function (_a) {\n  var treeSelectProps = _a.treeSelectProps,\n    autoCompleteTreeSelectProps = __rest(_a, [\"treeSelectProps\"]);\n  var _b = (treeSelectProps !== null && treeSelectProps !== void 0 ? treeSelectProps : {}).treeData,\n    treeData = _b === void 0 ? [] : _b;\n  var targetTreeData = useTreeSelectLeaf(treeData);\n  var targetTreeSelectProps = useMemo(function () {\n    return __assign(__assign({}, treeSelectProps !== null && treeSelectProps !== void 0 ? treeSelectProps : {}), {\n      treeData: targetTreeData\n    });\n  }, [targetTreeData, treeSelectProps]);\n  return /*#__PURE__*/React.createElement(AutoCompleteTreeSelect, __assign({}, autoCompleteTreeSelectProps !== null && autoCompleteTreeSelectProps !== void 0 ? autoCompleteTreeSelectProps : {}, {\n    treeSelectProps: targetTreeSelectProps\n  }));\n});\nvar AutoCompleteTreeLeafSelect = InternalAutoCompleteTreeLeafSelect;\nAutoCompleteTreeLeafSelect.displayName = 'AutoCompleteTreeLeafSelect';\nexport default AutoCompleteTreeLeafSelect;"],"names":["__assign","this","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","memo","useMemo","AutoCompleteTreeSelect","useTreeSelectLeaf","InternalAutoCompleteTreeLeafSelect","_a","treeSelectProps","autoCompleteTreeSelectProps","_b","treeData","targetTreeData","targetTreeSelectProps","createElement","AutoCompleteTreeLeafSelect","displayName"],"mappings":"AAAA,IAAIA,SAAWC,MAAQA,KAAKD,UAAY,WAQtC,OAPAA,SAAWE,OAAOC,QAAU,SAAUC,GACpC,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,CAAC,GAE/C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,CAAC,IAAGN,EAAEM,GAAKL,EAAEK,IAE5E,OAAON,CACT,GACgBU,MAAMb,KAAMO,SAAS,CACvC,EACIO,OAASd,MAAQA,KAAKc,QAAU,SAAUV,EAAGW,GAC/C,IAAIZ,EAAI,GACR,IAASM,KAAKL,EAAOH,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,CAAC,GAAKM,EAAEC,QAAQP,CAAC,EAAI,IAAGN,EAAEM,GAAKL,EAAEK,IAC9F,GAAS,MAALL,GAAqD,YAAxC,OAAOH,OAAOgB,sBAAsC,IAAK,IAAIZ,EAAI,EAAGI,EAAIR,OAAOgB,sBAAsBb,CAAC,EAAGC,EAAII,EAAED,OAAQH,CAAC,GACnIU,EAAEC,QAAQP,EAAEJ,EAAE,EAAI,GAAKJ,OAAOS,UAAUQ,qBAAqBN,KAAKR,EAAGK,EAAEJ,EAAE,IAAGF,EAAEM,EAAEJ,IAAMD,EAAEK,EAAEJ,KAEhG,OAAOF,CACT,SACOgB,OAASC,KAAMC,OAAsB,KAAP,eAC9BC,2BAA4B,kCAC5BC,sBAAuB,sBAO9B,IAAIC,mCAAkDJ,KAAK,SAAUK,GACnE,IAAIC,EAAkBD,EAAGC,gBACvBC,EAA8Bb,OAAOW,EAAI,CAAC,kBAAkB,EAC1DG,GAAMF,MAAAA,EAAyDA,EAAkB,IAAIG,SAErFC,EAAiBP,kBADD,KAAA,IAAPK,EAAgB,GAAKA,CACa,EAC3CG,EAAwBV,QAAQ,WAClC,OAAOtB,SAASA,SAAS,GAAI2B,MAAAA,EAAyDA,EAAkB,EAAE,EAAG,CAC3GG,SAAUC,CACZ,CAAC,CACH,EAAG,CAACA,EAAgBJ,EAAgB,EACpC,OAAoBP,MAAMa,cAAcV,uBAAwBvB,SAAS,GAAI4B,MAAAA,EAAiFA,EAA8B,GAAI,CAC9LD,gBAAiBK,CACnB,CAAC,CAAC,CACJ,CAAC,EACGE,2BAA6BT,mCACjCS,2BAA2BC,YAAc,4CAC1BD"}