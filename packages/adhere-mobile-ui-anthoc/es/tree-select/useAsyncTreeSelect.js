var __spreadArray=this&&this.__spreadArray||function(n,e,r){if(r||2===arguments.length)for(var t,u=0,a=e.length;u<a;u++)!t&&u in e||((t=t||Array.prototype.slice.call(e,0,u))[u]=e[u]);return n.concat(t||Array.prototype.slice.call(e))};import{useMount,useUpdateEffect}from"ahooks";import{useRef,useState}from"react";var useAsyncTreeSelect=function(n){function a(n,u){return function n(e){for(var r,t=0;t<e.length;t++){if(Object.is(e[t].key,u)){r=e[t];break}if(r=n(e[t].children||[]))break}return r}(n)}function e(){o(null!=l?l:"",u).then(function(n){d(n)})}function r(){c&&Promise.all([t(l),null==c?void 0:c(f,u)]).then(function(n){var e=n[0],e=void 0===e?[]:e,n=n[1],r=void 0===n?[]:n;d(__spreadArray(__spreadArray([],null!=r?r:[],!0),(null!=e?e:[]).filter(function(n){return!(null!=r?r:[]).map(function(n){return n.key}).includes(n.key)}),!0))})}function t(n){return o(n,u).then(function(n){return n})}var u=n.cascadeParams,i=n.onDataSourceChange,c=n.fetchBranch,o=n.fetchData,l=n.defaultId,f=n.value,n=useState([]),s=n[0],d=n[1],h=useRef();return useMount(function(){(f&&(!Array.isArray(f)||f.length)?r:e)()}),useUpdateEffect(function(){h.current||r()},[f]),useUpdateEffect(function(){(f?r:e)()},[JSON.stringify(u)]),useUpdateEffect(function(){null!=i&&i(s)},[s]),{treeData:s,onLoadData:function(n){var u=n.key;return new Promise(function(n){setTimeout(function(){t(u).then(function(t){d(function(n){var e,r=a(n,u);return r.children&&Array.isArray(r.children)&&r.children.length?r.children=__spreadArray(__spreadArray([],r.children,!0),null!=(e=null==(e=null==t?void 0:t.filter)?void 0:e.call(t,function(e){return r.children.find(function(n){return n.key!==e.key})}))?e:[],!0):r.children=t,__spreadArray([],null!=n?n:[],!0)})}),n(void 0)},300)})},onChange:function(n,e){h.current=e,n.apply(void 0,e)}}};export default useAsyncTreeSelect;
//# sourceMappingURL=useAsyncTreeSelect.js.map
