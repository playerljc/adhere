var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(e){for(var t,r=1,o=arguments.length;r<o;r++)for(var l in t=arguments[r])Object.prototype.hasOwnProperty.call(t,l)&&(e[l]=t[l]);return e}).apply(this,arguments)},__rest=this&&this.__rest||function(e,t){var r={};for(l in e)Object.prototype.hasOwnProperty.call(e,l)&&t.indexOf(l)<0&&(r[l]=e[l]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var o=0,l=Object.getOwnPropertySymbols(e);o<l.length;o++)t.indexOf(l[o])<0&&Object.prototype.propertyIsEnumerable.call(e,l[o])&&(r[l[o]]=e[l[o]]);return r};import React,{memo,useMemo}from"react";import AutoCompleteTreeSelect from"./AutoCompleteTreeSelect";import useTreeSelectLeaf from"./useTreeSelectLeaf";var InternalAutoCompleteTreeLeafSelect=memo(function(e){var t=e.treeSelectProps,e=__rest(e,["treeSelectProps"]),r=(null!=t?t:{}).treeData,o=useTreeSelectLeaf(void 0===r?[]:r),r=useMemo(function(){return __assign(__assign({},null!=t?t:{}),{treeData:o})},[o,t]);return React.createElement(AutoCompleteTreeSelect,__assign({},null!=e?e:{},{treeSelectProps:r}))}),AutoCompleteTreeLeafSelect=InternalAutoCompleteTreeLeafSelect;AutoCompleteTreeLeafSelect.displayName="AutoCompleteTreeLeafSelect";export default AutoCompleteTreeLeafSelect;
//# sourceMappingURL=AutoCompleteTreeLeafSelect.js.map
