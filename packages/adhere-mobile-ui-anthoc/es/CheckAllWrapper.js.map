{"version":3,"file":"CheckAllWrapper.js","sources":["CheckAllWrapper.js"],"sourcesContent":["var __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport React, { useMemo } from 'react';\nimport Checkbox from './checkbox';\n/**\n * CheckAllWrapper\n * @param value\n * @param onChange\n * @param options\n * @constructor\n */\nvar CheckAllWrapper = function (_a) {\n  var value = _a.value,\n    onCheckAllChange = _a.onCheckAllChange,\n    options = _a.options,\n    children = _a.children;\n  var checkAll = useMemo(function () {\n    if (!(options === null || options === void 0 ? void 0 : options.length)) return false;\n    return options.every(function (_value) {\n      return value === null || value === void 0 ? void 0 : value.includes(_value);\n    });\n  }, [value, options]);\n  var indeterminate = useMemo(function () {\n    return (value !== null && value !== void 0 ? value : []).length > 0 && (value !== null && value !== void 0 ? value : []).length < (options !== null && options !== void 0 ? options : []).length;\n  }, [value, options]);\n  return /*#__PURE__*/React.createElement(Checkbox, {\n    indeterminate: indeterminate,\n    checked: checkAll,\n    onChange: function (checked) {\n      var _a;\n      if (checked) {\n        var values = Array.from(new Set(__spreadArray(__spreadArray([], options !== null && options !== void 0 ? options : [], true), value !== null && value !== void 0 ? value : [], true)));\n        onCheckAllChange === null || onCheckAllChange === void 0 ? void 0 : onCheckAllChange(values, true, values);\n      } else {\n        var values_1 = options !== null && options !== void 0 ? options : [];\n        var changeValues = (_a = value === null || value === void 0 ? void 0 : value.filter(function (_value) {\n          return !values_1.includes(_value);\n        })) !== null && _a !== void 0 ? _a : [];\n        onCheckAllChange === null || onCheckAllChange === void 0 ? void 0 : onCheckAllChange(changeValues, false, changeValues);\n      }\n    }\n  }, children);\n};\nexport default CheckAllWrapper;"],"names":["__spreadArray","this","to","from","pack","arguments","length","ar","i","l","Array","prototype","slice","call","concat","React","useMemo","Checkbox","CheckAllWrapper","_a","value","onCheckAllChange","options","children","checkAll","every","_value","includes","indeterminate","createElement","checked","onChange","values_1","values","Set","changeValues","filter"],"mappings":"AAAA,IAAIA,cAAgBC,MAAQA,KAAKD,eAAiB,SAAUE,EAAIC,EAAMC,GACpE,GAAIA,GAA6B,IAArBC,UAAUC,OAAc,IAAK,IAA4BC,EAAxBC,EAAI,EAAGC,EAAIN,EAAKG,OAAYE,EAAIC,EAAGD,CAAC,GAC3ED,CAAAA,GAAQC,KAAKL,KACVI,EAAAA,GAASG,MAAMC,UAAUC,MAAMC,KAAKV,EAAM,EAAGK,CAAC,GAChDA,GAAKL,EAAKK,IAGjB,OAAON,EAAGY,OAAOP,GAAMG,MAAMC,UAAUC,MAAMC,KAAKV,CAAI,CAAC,CACzD,SACOY,OAASC,OAAsB,KAAP,eACxBC,aAAc,aAQrB,IAAIC,gBAAkB,SAAUC,GAC9B,IAAIC,EAAQD,EAAGC,MACbC,EAAmBF,EAAGE,iBACtBC,EAAUH,EAAGG,QACbC,EAAWJ,EAAGI,SACZC,EAAWR,QAAQ,WACrB,MAAK,EAACM,MAAAA,GAAkDA,CAAAA,EAAQhB,SACzDgB,EAAQG,MAAM,SAAUC,GAC7B,OAAON,MAAAA,EAAqC,KAAA,EAASA,EAAMO,SAASD,CAAM,CAC5E,CAAC,CACH,EAAG,CAACN,EAAOE,EAAQ,EACfM,EAAgBZ,QAAQ,WAC1B,OAAkE,GAA1DI,MAAAA,EAAqCA,EAAQ,IAAId,SAAec,MAAAA,EAAqCA,EAAQ,IAAId,QAAUgB,MAAAA,EAAyCA,EAAU,IAAIhB,MAC5L,EAAG,CAACc,EAAOE,EAAQ,EACnB,OAAoBP,MAAMc,cAAcZ,SAAU,CAChDW,cAAeA,EACfE,QAASN,EACTO,SAAU,SAAUD,GAClB,IAKME,EAJFF,GACEG,EAASvB,MAAMP,KAAK,IAAI+B,IAAIlC,cAAcA,cAAc,GAAIsB,MAAAA,EAAyCA,EAAU,GAAI,CAAA,CAAI,EAAGF,MAAAA,EAAqCA,EAAQ,GAAI,CAAA,CAAI,CAAC,CAAC,EACrLC,MAAAA,GAAoEA,EAAiBY,EAAQ,CAAA,EAAMA,CAAM,IAErGD,EAAWV,MAAAA,EAAyCA,EAAU,GAC9Da,EAAe,OAAChB,EAAKC,MAAAA,EAAqC,KAAA,EAASA,EAAMgB,OAAO,SAAUV,GAC5F,MAAO,CAACM,EAASL,SAASD,CAAM,CAClC,CAAC,GAA+BP,EAAK,GACrCE,MAAAA,GAAoEA,EAAiBc,EAAc,CAAA,EAAOA,CAAY,EAE1H,CACF,EAAGZ,CAAQ,CACb,iBACeL"}