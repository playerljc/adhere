var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(e){for(var o,n=1,r=arguments.length;n<r;n++)for(var t in o=arguments[n])Object.prototype.hasOwnProperty.call(o,t)&&(e[t]=o[t]);return e}).apply(this,arguments)},__rest=this&&this.__rest||function(e,o){var n={};for(t in e)Object.prototype.hasOwnProperty.call(e,t)&&o.indexOf(t)<0&&(n[t]=e[t]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var r=0,t=Object.getOwnPropertySymbols(e);r<t.length;r++)o.indexOf(t[r])<0&&Object.prototype.propertyIsEnumerable.call(e,t[r])&&(n[t[r]]=e[t[r]]);return n};import{useUpdateEffect}from"ahooks";import{Dialog}from"antd-mobile";import classNames from"classnames";import React,{cloneElement,memo,useCallback,useMemo,useRef}from"react";import Intl from"@baifendian/adhere-util-intl";import PopoverTrigger from"../PopoverTrigger";var selectorPrefix="adhere-mobile-ui-ant-hoc-dialog-trigger",InternalDialogTrigger=memo(function(e){var o,n=e.showCloseButton,r=void 0===n||n,t=e.closeActionText,l=e.closeActionKey,i=e.value,a=e.onChange,s=e.actions,c=e.children,n=e.popoverTriggerProps,u=__rest(e,["showCloseButton","closeActionText","closeActionKey","value","onChange","actions","children","popoverTriggerProps"]),g=useRef(null);var f=useMemo(function(){var e=(null!=s?s:[]).map(function(r){return __assign(__assign({},r),{onClick:function(){var e,o,n;o=r.onClick,n=null==(e=g.current)?void 0:e.close,null!=(o=null==o?void 0:o())&&o.then(function(e){null!=a&&a(e),setTimeout(function(){n()},300)})}})});return r&&e.push({key:null!=l?l:"close",text:null!=t?t:Intl.v("关闭"),onClick:function(){}}),e},[s,r]),p=useMemo(function(){return __assign(__assign({closeOnMaskClick:!0,closeOnAction:r},u),{actions:f,content:c&&cloneElement(c,__assign({defaultValue:i},c.props),c.props.children),afterClose:function(){var e;(g.current=null)!=(e=null==u?void 0:u.afterClose)&&e.call(u)}})},[u,f,c,i]),e=useCallback(function(){g.current=Dialog.show(p)},[p]);return useUpdateEffect(function(){g.current&&g.current.replace(React.createElement(Dialog,__assign({},p)))},[u]),React.createElement(PopoverTrigger,__assign({className:classNames(selectorPrefix,null!=(o=null==n?void 0:n.className)?o:""),renderPopover:e},null!=n?n:{}))}),DialogTrigger=InternalDialogTrigger;DialogTrigger.displayName="DialogTrigger";export default DialogTrigger;
//# sourceMappingURL=Trigger.js.map
