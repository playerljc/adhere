{"version":3,"file":"Menu.js","sources":["Menu.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nimport React, { useCallback, useContext, useRef, useImperativeHandle, forwardRef, } from 'react';\r\nimport classNames from 'classnames';\r\nimport MenuItem from './MenuItem';\r\nimport { ProviderContext } from './ContextMenuContext';\r\nvar selectorPrefix = 'adhere-ui-contextmenu-submenu';\r\nvar Menu = function (props, ref) {\r\n    var _a = props.className, className = _a === void 0 ? '' : _a, _b = props.style, style = _b === void 0 ? {} : _b, _c = props.data, data = _c === void 0 ? [] : _c;\r\n    var el = useRef(null);\r\n    var config = useContext(ProviderContext).config;\r\n    var getStyle = useCallback(function () {\r\n        var width = config.width;\r\n        return {\r\n            width: width + \"px\",\r\n            zIndex: 99999 * 2 + 1,\r\n        };\r\n    }, [config]);\r\n    function mount() {\r\n        var _a, _b;\r\n        var x = config.x, y = config.y;\r\n        var menuWidth = (_a = el.current) === null || _a === void 0 ? void 0 : _a.offsetWidth;\r\n        var menuHeight = (_b = el.current) === null || _b === void 0 ? void 0 : _b.offsetHeight;\r\n        var clientWidth = document.body.clientWidth || document.documentElement.clientWidth;\r\n        var clientHeight = document.body.clientHeight || document.documentElement.clientHeight;\r\n        if (clientWidth - x < menuWidth) {\r\n            x = clientWidth - menuWidth;\r\n        }\r\n        if (clientHeight - y < menuHeight) {\r\n            y = clientHeight - menuHeight;\r\n        }\r\n        el.current.style.left = x + \"px\";\r\n        el.current.style.top = y + \"px\";\r\n    }\r\n    useImperativeHandle(ref, function () { return ({\r\n        mount: mount,\r\n    }); });\r\n    return (React.createElement(\"ul\", { className: classNames(selectorPrefix, className || ''), style: __assign(__assign({}, (style || {})), getStyle()), ref: el }, (data || []).map(function (item) { return (React.createElement(MenuItem, { key: item.id, data: item })); })));\r\n};\r\n// /**\r\n//  * Menu\r\n//  * @class Menu\r\n//  * @classdesc Menu\r\n//  */\r\n// class Menu extends React.PureComponent<MenuProps, any> {\r\n//   static propTypes: any;\r\n//   static defaultProps: any;\r\n//\r\n//   private config: Config | undefined;\r\n//   private el: HTMLElement | null | undefined;\r\n//\r\n//   constructor(props) {\r\n//     super(props);\r\n//\r\n//     this.renderInner = this.renderInner.bind(this);\r\n//   }\r\n//\r\n//   mount() {\r\n//     // @ts-ignore\r\n//     let { x, y } = this.config;\r\n//\r\n//     const menuWidth = this.el?.offsetWidth;\r\n//     const menuHeight = this.el?.offsetHeight;\r\n//\r\n//     const clientWidth = document.body.clientWidth || document.documentElement.clientWidth;\r\n//     const clientHeight = document.body.clientHeight || document.documentElement.clientHeight;\r\n//\r\n//     // console.log(\r\n//     //   'x',\r\n//     //   x,\r\n//     //   'y',\r\n//     //   y,\r\n//     //   'menuWidth',\r\n//     //   menuWidth,\r\n//     //   'menuHeight',\r\n//     //   menuHeight,\r\n//     //   'clientWidth',\r\n//     //   clientWidth,\r\n//     //   'clientHeight',\r\n//     //   clientHeight,\r\n//     // );\r\n//\r\n//     // @ts-ignore\r\n//     if (clientWidth - x < menuWidth) {\r\n//       // @ts-ignore\r\n//       x = clientWidth - menuWidth;\r\n//     }\r\n//\r\n//     // @ts-ignore\r\n//     if (clientHeight - y < menuHeight) {\r\n//       // @ts-ignore\r\n//       y = clientHeight - menuHeight;\r\n//     }\r\n//\r\n//     // @ts-ignore\r\n//     this.el?.style.left = `${x}px`;\r\n//\r\n//     // @ts-ignore\r\n//     this.el?.style.top = `${y}px`;\r\n//   }\r\n//\r\n//   private getStyle() {\r\n//     // @ts-ignore\r\n//     const { /*x, y, */ width } = this.config;\r\n//\r\n//     return {\r\n//       width: `${width}px`,\r\n//       // left: `${x}px`,\r\n//       // top: `${y}px`,\r\n//       zIndex: 99999 * 2 + 1,\r\n//     };\r\n//   }\r\n//\r\n//   private renderItems(): Array<React.ReactElement> {\r\n//     const { data = [] } = this.props;\r\n//\r\n//     return data.map((item) => (\r\n//       // @ts-ignore\r\n//       <MenuItem\r\n//         key={item.id}\r\n//         // @ts-ignore\r\n//         data={item}\r\n//       />\r\n//     ));\r\n//   }\r\n//\r\n//   private renderInner({ config }) {\r\n//     const { className, style } = this.props;\r\n//\r\n//     // @ts-ignore\r\n//     this.config = config;\r\n//\r\n//     return (\r\n//       <ul\r\n//         className={classNames(\r\n//           selectorPrefix,\r\n//           // @ts-ignore\r\n//           (className || '').split(/\\s+/),\r\n//         )}\r\n//         style={{ ...(style || {}), ...this.getStyle() }}\r\n//         ref={(el) => (this.el = el)}\r\n//       >\r\n//         {this.renderItems()}\r\n//       </ul>\r\n//     );\r\n//   }\r\n//\r\n//   render() {\r\n//     return <ProviderContext.Consumer>{this.renderInner}</ProviderContext.Consumer>;\r\n//   }\r\n// }\r\n//\r\n// Menu.defaultProps = {\r\n//   data: [],\r\n//   className: '',\r\n//   style: {},\r\n// };\r\n//\r\n// Menu.propTypes = {\r\n//   data: PropTypes.arrayOf(\r\n//     PropTypes.shape({\r\n//       name: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\r\n//       icon: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\r\n//       disabled: PropTypes.bool,\r\n//       separation: PropTypes.bool,\r\n//       attribute: PropTypes.object,\r\n//       children: PropTypes.array,\r\n//       className: PropTypes.string,\r\n//       style: PropTypes.object,\r\n//       subMenuClassName: PropTypes.string,\r\n//       subMenuStyle: PropTypes.object,\r\n//     }),\r\n//   ),\r\n//   className: PropTypes.string,\r\n//   style: PropTypes.object,\r\n// };\r\nexport default forwardRef(Menu);\r\n"],"names":["__assign","this","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","useCallback","useContext","useRef","useImperativeHandle","forwardRef","classNames","MenuItem","ProviderContext","selectorPrefix","Menu","props","ref","_a","className","_b","style","_c","data","el","config","getStyle","width","zIndex","mount","x","y","menuWidth","current","offsetWidth","menuHeight","offsetHeight","clientWidth","document","body","documentElement","clientHeight","left","top","createElement","map","item","key","id"],"mappings":"AAAA,IAAIA,SAAYC,MAAQA,KAAKD,UAAa,WAStC,OARAA,SAAWE,OAAOC,QAAU,SAASC,GACjC,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,KACzDN,EAAEM,GAAKL,EAAEK,IAEjB,OAAON,IAEKU,MAAMb,KAAMO,mBAEzBO,OAASC,YAAaC,WAAYC,OAAQC,oBAAqBC,8BAC/DC,mCACAC,iCACEC,2CACT,IAAIC,eAAiB,gCACjBC,KAAO,SAAUC,EAAOC,GACxB,IAAIC,EAAKF,EAAMG,UAAWA,OAAmB,IAAPD,EAAgB,GAAKA,EAAIE,EAAKJ,EAAMK,MAAOA,OAAe,IAAPD,EAAgB,GAAKA,EAAIE,EAAKN,EAAMO,KAAMA,OAAc,IAAPD,EAAgB,GAAKA,EAC3JE,EAAKhB,OAAO,MACZiB,EAASlB,WAAWM,iBAAiBY,OACrCC,EAAWpB,YAAY,WAEvB,MAAO,CACHqB,MAFQF,EAAOE,MAEA,KACfC,OAAQ,SAEb,CAACH,IACJ,SAASI,IACL,IACIC,EAAIL,EAAOK,EAAGC,EAAIN,EAAOM,EACzBC,EAAkC,QAArBd,EAAKM,EAAGS,eAA4B,IAAPf,OAAgB,EAASA,EAAGgB,YACtEC,EAAmC,QAArBf,EAAKI,EAAGS,eAA4B,IAAPb,OAAgB,EAASA,EAAGgB,aACvEC,EAAcC,SAASC,KAAKF,aAAeC,SAASE,gBAAgBH,YACpEI,EAAeH,SAASC,KAAKE,cAAgBH,SAASE,gBAAgBC,aAItEA,EAAeV,EAAII,IACnBJ,EAAIU,EAAeN,GAEvBX,EAAGS,QAAQZ,MAAMqB,MALbZ,EADAO,EAAcP,EAAIE,EACdK,EAAcL,EAKEF,GAAI,KAC5BN,EAAGS,QAAQZ,MAAMsB,IAAMZ,EAAI,KAK/B,OAHAtB,oBAAoBQ,EAAK,WAAc,MAAO,CAC1CY,MAAOA,KAEHxB,MAAMuC,cAAc,KAAM,CAAEzB,UAAWR,WAAWG,eAAgBK,GAAa,IAAKE,MAAO/B,SAASA,SAAS,GAAK+B,GAAS,IAAMK,KAAaT,IAAKO,IAAOD,GAAQ,IAAIsB,IAAI,SAAUC,GAAQ,OAAQzC,MAAMuC,cAAchC,SAAU,CAAEmC,IAAKD,EAAKE,GAAIzB,KAAMuB,uBA2IrPpC,WAAWK"}