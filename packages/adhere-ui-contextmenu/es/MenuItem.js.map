{"version":3,"file":"MenuItem.js","sources":["MenuItem.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nimport React, { useContext } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport classNames from 'classnames';\r\nimport ConditionalRender from '@baifendian/adhere-ui-conditionalrender';\r\nimport SubMenu from './SubMenu';\r\nimport { ProviderContext } from './ContextMenuContext';\r\nvar selectorPrefix = 'adhere-ui-contextmenu-menuitem';\r\nvar MenuItem = function (props) {\r\n    var _a = props.data, separation = _a.separation, _b = _a.disabled, disabled = _b === void 0 ? false : _b, _c = _a.className, className = _c === void 0 ? '' : _c, _d = _a.style, style = _d === void 0 ? {} : _d, _e = _a.subMenuClassName, subMenuClassName = _e === void 0 ? '' : _e, _f = _a.subMenuStyle, subMenuStyle = _f === void 0 ? {} : _f, id = _a.id, attribute = _a.attribute, _g = _a.children, children = _g === void 0 ? [] : _g, name = _a.name, icon = _a.icon;\r\n    var _h = useContext(ProviderContext), config = _h.config, el = _h.el;\r\n    function onClick(e) {\r\n        e.stopPropagation();\r\n        var handler = config.handler;\r\n        if (disabled || (children || []).length > 0)\r\n            return false;\r\n        if (handler) {\r\n            handler(id, attribute);\r\n            ReactDOM.unmountComponentAtNode(el);\r\n        }\r\n    }\r\n    function renderIcon() {\r\n        return (React.createElement(ConditionalRender, { conditional: typeof icon === 'string', noMatch: function () { return React.createElement(\"span\", { className: classNames(selectorPrefix + \"-icon\") }, icon); } }, function () { return React.createElement(\"span\", { className: classNames(selectorPrefix + \"-icon\", icon) }); }));\r\n    }\r\n    function renderName() {\r\n        return React.createElement(\"span\", { className: selectorPrefix + \"-name\" }, name);\r\n    }\r\n    function renderMore() {\r\n        return (React.createElement(ConditionalRender, { conditional: (children || []).length !== 0 }, function () { return React.createElement(\"span\", { className: selectorPrefix + \"-more fa fa-caret-right\" }); }));\r\n    }\r\n    function renderSubMenu() {\r\n        return (React.createElement(ConditionalRender, { conditional: (children || []).length !== 0 }, function () { return React.createElement(SubMenu, { data: children, className: subMenuClassName, style: subMenuStyle }); }));\r\n    }\r\n    return (React.createElement(ConditionalRender, { conditional: !separation, noMatch: function () { return React.createElement(\"li\", { className: selectorPrefix + \"-separation\" }); } }, function () { return (React.createElement(\"li\", { className: classNames(selectorPrefix, disabled ? 'disabled' : '', className || ''), style: __assign({}, (style || {})), onClick: onClick },\r\n        renderIcon(),\r\n        renderName(),\r\n        renderMore(),\r\n        renderSubMenu())); }));\r\n};\r\n// /**\r\n//  * MenuItem\r\n//  * @class MenuItem\r\n//  * @classdesc MenuItem\r\n//  */\r\n// class MenuItem extends React.PureComponent<IMenuItemProps, any> {\r\n//   static propTypes: any;\r\n//\r\n//   private config: { handler: any } | undefined;\r\n//\r\n//   private el: HTMLElement | undefined;\r\n//\r\n//   constructor(props) {\r\n//     super(props);\r\n//\r\n//     this.renderInner = this.renderInner.bind(this);\r\n//   }\r\n//\r\n//   private onClick = (e) => {\r\n//     e.stopPropagation();\r\n//\r\n//     const {\r\n//       // @ts-ignore\r\n//       data: { id, attribute, children, disabled },\r\n//     } = this.props;\r\n//\r\n//     // @ts-ignore\r\n//     const { handler } = this.config;\r\n//\r\n//     if (disabled || children.length > 0) return false;\r\n//\r\n//     if (handler) {\r\n//       handler(id, attribute);\r\n//       // @ts-ignore\r\n//       ReactDOM.unmountComponentAtNode(this.el);\r\n//     }\r\n//   };\r\n//\r\n//   private renderIcon(): React.ReactElement {\r\n//     const {\r\n//       data: { icon },\r\n//     } = this.props;\r\n//\r\n//     return (\r\n//       <ConditionalRender\r\n//         conditional={typeof icon === 'string'}\r\n//         // @ts-ignore\r\n//         noMatch={() => <span className={classNames(`${selectorPrefix}-icon`)}>{icon}</span>}\r\n//       >\r\n//         {() => <span className={classNames(`${selectorPrefix}-icon`, icon)} />}\r\n//       </ConditionalRender>\r\n//     );\r\n//   }\r\n//\r\n//   private renderName(): React.ReactElement {\r\n//     const {\r\n//       // @ts-ignore\r\n//       data: { name },\r\n//     } = this.props;\r\n//\r\n//     return <span className={`${selectorPrefix}-name`}>{name}</span>;\r\n//   }\r\n//\r\n//   private renderMore(): React.ReactElement | null {\r\n//     const {\r\n//       // @ts-ignore\r\n//       data: { children },\r\n//     } = this.props;\r\n//\r\n//     return (\r\n//       <ConditionalRender conditional={children.length !== 0}>\r\n//         {() => <span className={`${selectorPrefix}-more fa fa-caret-right`} />}\r\n//       </ConditionalRender>\r\n//     );\r\n//   }\r\n//\r\n//   private renderSubMenu(): React.ReactElement | null {\r\n//     const {\r\n//       // @ts-ignore\r\n//       data: { children, subMenuClassName, subMenuStyle },\r\n//     } = this.props;\r\n//\r\n//     return (\r\n//       <ConditionalRender conditional={children.length !== 0}>\r\n//         {() => (\r\n//           <SubMenu\r\n//             // @ts-ignore\r\n//             data={children}\r\n//             className={subMenuClassName}\r\n//             style={subMenuStyle}\r\n//           />\r\n//         )}\r\n//       </ConditionalRender>\r\n//     );\r\n//   }\r\n//\r\n//   private renderInner({ config, el }) {\r\n//     const {\r\n//       // @ts-ignore\r\n//       data: { separation, disabled = false, className, style },\r\n//     } = this.props;\r\n//\r\n//     // @ts-ignore\r\n//     this.config = config;\r\n//\r\n//     // @ts-ignore\r\n//     this.el = el;\r\n//\r\n//     return (\r\n//       <ConditionalRender\r\n//         conditional={!separation}\r\n//         // @ts-ignore\r\n//         noMatch={() => <li className={`${selectorPrefix}-separation`} />}\r\n//       >\r\n//         {() => (\r\n//           <li\r\n//             className={classNames(\r\n//               selectorPrefix,\r\n//               disabled ? 'disabled' : '',\r\n//               // @ts-ignore\r\n//               (className || '').split(/\\s+/),\r\n//             )}\r\n//             style={{ ...(style || {}) }}\r\n//             onClick={this.onClick}\r\n//           >\r\n//             {this.renderIcon()}\r\n//             {this.renderName()}\r\n//             {this.renderMore()}\r\n//             {this.renderSubMenu()}\r\n//           </li>\r\n//         )}\r\n//       </ConditionalRender>\r\n//     );\r\n//   }\r\n//\r\n//   render() {\r\n//     return <ProviderContext.Consumer>{this.renderInner}</ProviderContext.Consumer>;\r\n//   }\r\n// }\r\n//\r\n// MenuItem.propTypes = {\r\n//   data: PropTypes.shape({\r\n//     name: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\r\n//     icon: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\r\n//     disabled: PropTypes.bool,\r\n//     separation: PropTypes.bool,\r\n//     attribute: PropTypes.object,\r\n//     children: PropTypes.array,\r\n//     className: PropTypes.string,\r\n//     style: PropTypes.object,\r\n//     subMenuClassName: PropTypes.string,\r\n//     subMenuStyle: PropTypes.object,\r\n//   }),\r\n// };\r\nexport default MenuItem;\r\n"],"names":["__assign","this","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","useContext","ReactDOM","classNames","ConditionalRender","SubMenu","ProviderContext","selectorPrefix","MenuItem","props","_a","data","separation","_b","disabled","_c","className","_d","style","_e","subMenuClassName","_f","subMenuStyle","id","attribute","_g","children","name","icon","_h","config","el","onClick","e","stopPropagation","handler","unmountComponentAtNode","createElement","conditional","noMatch"],"mappings":"AAAA,IAAIA,SAAYC,MAAQA,KAAKD,UAAa,WAStC,OARAA,SAAWE,OAAOC,QAAU,SAASC,GACjC,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,KACzDN,EAAEM,GAAKL,EAAEK,IAEjB,OAAON,IAEKU,MAAMb,KAAMO,mBAEzBO,OAASC,8BACTC,gCACAC,mCACAC,uEACAC,+BACEC,2CACT,IAAIC,eAAiB,iCACjBC,SAAW,SAAUC,GACrB,IAAIC,EAAKD,EAAME,KAAMC,EAAaF,EAAGE,WAAYC,EAAKH,EAAGI,SAAUA,OAAkB,IAAPD,GAAwBA,EAAIE,EAAKL,EAAGM,UAAWA,OAAmB,IAAPD,EAAgB,GAAKA,EAAIE,EAAKP,EAAGQ,MAAOA,OAAe,IAAPD,EAAgB,GAAKA,EAAIE,EAAKT,EAAGU,iBAAkBA,OAA0B,IAAPD,EAAgB,GAAKA,EAAIE,EAAKX,EAAGY,aAAcA,OAAsB,IAAPD,EAAgB,GAAKA,EAAIE,EAAKb,EAAGa,GAAIC,EAAYd,EAAGc,UAAWC,EAAKf,EAAGgB,SAAUA,OAAkB,IAAPD,EAAgB,GAAKA,EAAIE,EAAOjB,EAAGiB,KAAMC,EAAOlB,EAAGkB,KACxcC,EAAK5B,WAAWK,iBAAkBwB,EAASD,EAAGC,OAAQC,EAAKF,EAAGE,GAClE,SAASC,EAAQC,GACbA,EAAEC,kBACEC,EAAUL,EAAOK,QACrB,GAAIrB,GAAsC,GAAzBY,GAAY,IAAIhC,OAC7B,OAAO,EACPyC,IACAA,EAAQZ,EAAIC,GACZtB,SAASkC,uBAAuBL,IAexC,OAAQ/B,MAAMqC,cAAcjC,kBAAmB,CAAEkC,aAAc1B,EAAY2B,QAAS,WAAc,OAAOvC,MAAMqC,cAAc,KAAM,CAAErB,UAAWT,eAAiB,kBAAuB,WAAc,OAAQP,MAAMqC,cAAc,KAAM,CAAErB,UAAWb,WAAWI,eAAgBO,EAAW,WAAa,GAAIE,GAAa,IAAKE,MAAOjC,SAAS,GAAKiC,GAAS,IAAMc,QAASA,GAX/VhC,MAAMqC,cAAcjC,kBAAmB,CAAEkC,YAA6B,iBAATV,EAAmBW,QAAS,WAAc,OAAOvC,MAAMqC,cAAc,OAAQ,CAAErB,UAAWb,WAAWI,eAAiB,UAAYqB,KAAY,WAAc,OAAO5B,MAAMqC,cAAc,OAAQ,CAAErB,UAAWb,WAAWI,eAAiB,QAASqB,OAG/S5B,MAAMqC,cAAc,OAAQ,CAAErB,UAAWT,eAAiB,SAAWoB,GAGpE3B,MAAMqC,cAAcjC,kBAAmB,CAAEkC,YAAyC,KAA3BZ,GAAY,IAAIhC,QAAgB,WAAc,OAAOM,MAAMqC,cAAc,OAAQ,CAAErB,UAAWT,eAAiB,8BAGtKP,MAAMqC,cAAcjC,kBAAmB,CAAEkC,YAAyC,KAA3BZ,GAAY,IAAIhC,QAAgB,WAAc,OAAOM,MAAMqC,cAAchC,QAAS,CAAEM,KAAMe,EAAUV,UAAWI,EAAkBF,MAAOI,yBAkKhMd"}