var __spreadArray=this&&this.__spreadArray||function(r,e,t){if(t||2===arguments.length)for(var a,o=0,n=e.length;o<n;o++)!a&&o in e||((a=a||Array.prototype.slice.call(e,0,o))[o]=e[o]);return r.concat(a||Array.prototype.slice.call(e))};import{useUpdateEffect}from"ahooks";import{arrayMoveImmutable}from"array-move";import{useMemo,useState}from"react";export default function UseDND(r){var e=r.mode,a=r.dataSource,t=r.reset,o=r.rowKey,r=r.total,n=useState(__spreadArray([],null!=a?a:[],!0)),u=n[0],c=n[1],n=useMemo(function(){return"dnd"===e},[e]);return useUpdateEffect(function(){c(__spreadArray([],null!=a?a:[],!0))},[a]),{optionDataSource:{data:u,total:r},isUseDNDMode:n,finish:function(){return u.reduce(function(r,e,t){t=a[t][o],e=e[o];return t!==e&&r.push({preValue:t,currentValue:e}),r},[])},cancel:function(){c(__spreadArray([],null!=a?a:[],!0)),t()},move:function(r){var e=r.oldIndex,t=r.newIndex;c(function(r){return arrayMoveImmutable(r,e,t)})}}}
//# sourceMappingURL=useDND.js.map
