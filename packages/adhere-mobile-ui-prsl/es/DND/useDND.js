var __spreadArray=this&&this.__spreadArray||function(e,r,t){if(t||2===arguments.length)for(var a,n=0,o=r.length;n<o;n++)!a&&n in r||((a=a||Array.prototype.slice.call(r,0,n))[n]=r[n]);return e.concat(a||Array.prototype.slice.call(r))};import{useLatest,useUpdateEffect}from"ahooks";import{arrayMoveImmutable}from"array-move";import{useMemo,useState}from"react";export default function UseDND(e){var r=e.mode,t=e.dataSource,a=e.reset,n=e.rowKey,e=e.total,o=useState(__spreadArray([],null!=t?t:[],!0)),u=o[0],s=o[1],c=useLatest(u),l=useLatest(t),o=useMemo(function(){return"dnd"===r},[r]);return useUpdateEffect(function(){s(__spreadArray([],null!=t?t:[],!0))},[t]),{optionDataSource:{data:u,total:e},isUseDNDMode:o,finish:function(){return c.current.reduce(function(e,r,t){t=l.current[t][n],r=r[n];return t!==r&&e.push({preValue:t,currentValue:r}),e},[])},cancel:function(){var e;s(__spreadArray([],null!=(e=l.current)?e:[],!0)),a()},move:function(e){var r=e.oldIndex,t=e.newIndex;s(function(e){return arrayMoveImmutable(e,r,t)})}}}
//# sourceMappingURL=useDND.js.map
