var __spreadArray=this&&this.__spreadArray||function(e,r,t){if(t||2===arguments.length)for(var a,n=0,o=r.length;n<o;n++)!a&&n in r||((a=a||Array.prototype.slice.call(r,0,n))[n]=r[n]);return e.concat(a||Array.prototype.slice.call(r))};import{useUpdateEffect}from"ahooks";import{arrayMoveImmutable}from"array-move";import{useMemo,useState}from"react";export default function UseDND(e){var r=e.mode,a=e.dataSource,t=e.reset,n=e.rowKey,e=useState(__spreadArray([],null!=a?a:[],!0)),o=e[0],u=e[1],e=useMemo(function(){return"dnd"===r},[r]);return useUpdateEffect(function(){u(__spreadArray([],null!=a?a:[],!0))},[a]),{optionDataSource:{data:o,total:o.length},isUseDNDMode:e,finish:function(){return o.reduce(function(e,r,t){t=a[t][n],r=r[n];return t!==r&&e.push({preValue:t,currentValue:r}),e},[])},cancel:function(){u(__spreadArray([],null!=a?a:[],!0)),t()},move:function(e){var r=e.oldIndex,t=e.newIndex;u(function(e){return arrayMoveImmutable(e,r,t)})}}}
//# sourceMappingURL=useDND.js.map
