{"version":3,"file":"index.js","sources":["fetch/index.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nimport Response from '../Response';\r\nimport Request from '../Request';\r\nimport { ERROR_MESSAGE } from '../Constent';\r\n/**\r\n * Fetch\r\n * @class Fetch\r\n * @classdesc 客户端发送消息\r\n */\r\nvar Fetch = /** @class */ (function () {\r\n    function Fetch(source, origin) {\r\n        this.source = source;\r\n        this.origin = origin;\r\n    }\r\n    /**\r\n     * send\r\n     * @description 发送一个请求\r\n     * @param targetWindow 目标window\r\n     * @param targetOrigin 目标origin\r\n     * @param pathname 路径\r\n     * @param options 配置\r\n     * @return Promise<Response>\r\n     */\r\n    Fetch.prototype.send = function (targetWindow, targetOrigin, pathname, options) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var request = new Request({\r\n                pathname: pathname,\r\n                headers: __assign(__assign({}, ((options === null || options === void 0 ? void 0 : options.headers) || {})), { origin: _this.origin, referer: _this.source instanceof Window ? _this.source.location.href : '' }),\r\n                statusCode: 0,\r\n                stateMessage: ERROR_MESSAGE,\r\n                body: options === null || options === void 0 ? void 0 : options.data,\r\n            });\r\n            var onMessage = function (evt) {\r\n                var response = new Response(evt.data);\r\n                response.setRequestId(evt.data.requestId);\r\n                if (evt.origin !== targetOrigin ||\r\n                    evt.source !== targetWindow ||\r\n                    request.getRequestId() !== response.getRequestId()) {\r\n                    return;\r\n                }\r\n                // @ts-ignore\r\n                _this.source.removeEventListener('message', onMessage);\r\n                if (response.getStatusCode() === 500) {\r\n                    reject(response);\r\n                    return;\r\n                }\r\n                resolve(response);\r\n            };\r\n            // @ts-ignore\r\n            _this.source.addEventListener('message', onMessage);\r\n            // @ts-ignore\r\n            targetWindow.postMessage(request, targetOrigin);\r\n        });\r\n    };\r\n    /**\r\n     * get\r\n     * @param params\r\n     */\r\n    Fetch.prototype.get = function () {\r\n        var params = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            params[_i] = arguments[_i];\r\n        }\r\n        // @ts-ignore\r\n        return this.send.apply(this, params);\r\n    };\r\n    /**\r\n     * put\r\n     * @param params\r\n     */\r\n    Fetch.prototype.put = function () {\r\n        var params = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            params[_i] = arguments[_i];\r\n        }\r\n        // @ts-ignore\r\n        return this.send.apply(this, params);\r\n    };\r\n    /**\r\n     * delete\r\n     * @param params\r\n     */\r\n    Fetch.prototype.delete = function () {\r\n        var params = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            params[_i] = arguments[_i];\r\n        }\r\n        // @ts-ignore\r\n        return this.send.apply(this, params);\r\n    };\r\n    return Fetch;\r\n}());\r\nexport default Fetch;\r\n"],"names":["__assign","this","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","Response","Request","ERROR_MESSAGE","Fetch","source","origin","send","targetWindow","targetOrigin","pathname","options","_this","Promise","resolve","reject","onMessage","evt","response","data","setRequestId","requestId","request","getRequestId","removeEventListener","getStatusCode","headers","referer","Window","location","href","statusCode","stateMessage","body","addEventListener","postMessage","get","params","_i","put","delete"],"mappings":"AAAA,IAAIA,SAAYC,MAAQA,KAAKD,UAAa,WAStC,OARAA,SAAWE,OAAOC,QAAU,SAASC,GACjC,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,KACzDN,EAAEM,GAAKL,EAAEK,IAEjB,OAAON,IAEKU,MAAMb,KAAMO,mBAEzBO,kCACAC,gCACEC,gCAMT,IAAIC,MAAuB,WACvB,SAASA,EAAMC,EAAQC,GACnBnB,KAAKkB,OAASA,EACdlB,KAAKmB,OAASA,EA+ElB,OApEAF,EAAMP,UAAUU,KAAO,SAAUC,EAAcC,EAAcC,EAAUC,GACnE,IAAIC,EAAQzB,KACZ,OAAO,IAAI0B,QAAQ,SAAUC,EAASC,GAQlB,SAAZC,EAAsBC,GACtB,IAAIC,EAAW,IAAIjB,SAASgB,EAAIE,MAChCD,EAASE,aAAaH,EAAIE,KAAKE,WAC3BJ,EAAIX,SAAWG,GACfQ,EAAIZ,SAAWG,GACfc,EAAQC,iBAAmBL,EAASK,iBAIxCX,EAAMP,OAAOmB,oBAAoB,UAAWR,IACX,MAA7BE,EAASO,gBAIbX,EAHIC,GAGIG,IArBZ,IAAII,EAAU,IAAIpB,QAAQ,CACtBQ,SAAUA,EACVgB,QAASxC,SAASA,SAAS,IAAMyB,MAAAA,OAAyC,EAASA,EAAQe,UAAY,IAAM,CAAEpB,OAAQM,EAAMN,OAAQqB,QAASf,EAAMP,kBAAkBuB,OAAShB,EAAMP,OAAOwB,SAASC,KAAO,KAC5MC,WAAY,EACZC,aAAc7B,cACd8B,KAAMtB,MAAAA,OAAyC,EAASA,EAAQQ,OAmBpEP,EAAMP,OAAO6B,iBAAiB,UAAWlB,GAEzCR,EAAa2B,YAAYb,EAASb,MAO1CL,EAAMP,UAAUuC,IAAM,WAElB,IADA,IAAIC,EAAS,GACJC,EAAK,EAAGA,EAAK5C,UAAUC,OAAQ2C,IACpCD,EAAOC,GAAM5C,UAAU4C,GAG3B,OAAOnD,KAAKoB,KAAKP,MAAMb,KAAMkD,IAMjCjC,EAAMP,UAAU0C,IAAM,WAElB,IADA,IAAIF,EAAS,GACJC,EAAK,EAAGA,EAAK5C,UAAUC,OAAQ2C,IACpCD,EAAOC,GAAM5C,UAAU4C,GAG3B,OAAOnD,KAAKoB,KAAKP,MAAMb,KAAMkD,IAMjCjC,EAAMP,UAAU2C,OAAS,WAErB,IADA,IAAIH,EAAS,GACJC,EAAK,EAAGA,EAAK5C,UAAUC,OAAQ2C,IACpCD,EAAOC,GAAM5C,UAAU4C,GAG3B,OAAOnD,KAAKoB,KAAKP,MAAMb,KAAMkD,IAE1BjC,EAlFe,kBAoFXA"}