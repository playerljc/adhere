{"version":3,"file":"index.js","sources":["server/index.js"],"sourcesContent":["import Util from '@baifendian/adhere-util';\r\nimport { ERROR_MESSAGE, OK_MESSAGE } from '../Constent';\r\nimport Context from '../Context';\r\nimport Request from '../Request';\r\nimport Response from '../Response';\r\nimport Compose from './compose';\r\n/**\r\n * Server\r\n * @class Server\r\n * @classdesc iframe postMessage 服务端\r\n */\r\nvar Server = /** @class */ (function () {\r\n    function Server(whitelist, source, sourceOrigin) {\r\n        if (whitelist === void 0) { whitelist = []; }\r\n        // 白名单\r\n        this.whitelist = [];\r\n        // 中间件队列\r\n        this.middleWareQueue = [];\r\n        this.whitelist = whitelist;\r\n        this.source = source;\r\n        this.sourceOrigin = sourceOrigin;\r\n        this.onMessage = this.onMessage.bind(this);\r\n    }\r\n    /**\r\n     * onMessage\r\n     * @description 接收到消息\r\n     * @param evt\r\n     */\r\n    Server.prototype.onMessage = function (evt) {\r\n        try {\r\n            var data = JSON.parse(evt.data);\r\n            // 略掉不是白名单中的请求，或没有request的请求\r\n            if (!this.whitelist.includes(evt.origin) ||\r\n                !evt.source ||\r\n                Util.isEmpty(data) ||\r\n                !Util.isObject(data) ||\r\n                !('requestId' in data) ||\r\n                Util.isEmpty(data.requestId)) {\r\n                return;\r\n            }\r\n            this.service(evt, data);\r\n        }\r\n        catch (e) {\r\n            console.warn(e);\r\n        }\r\n    };\r\n    /**\r\n     * middleWareQueueReduce\r\n     * @description 对中间件进行迭代\r\n     * @private\r\n     * @param ctx 上下文对象\r\n     */\r\n    Server.prototype.middleWareQueueReduce = function (ctx) {\r\n        var middleWareCompose = Compose(this.middleWareQueue);\r\n        return middleWareCompose(ctx);\r\n    };\r\n    /**\r\n     * service\r\n     * @description 具体的请求处理\r\n     * @param {MessageEvent} evt\r\n     * @param {any} data\r\n     * @private\r\n     */\r\n    Server.prototype.service = function (evt, data) {\r\n        // 设置request的statusCode和statusMessage\r\n        var request = new Request(data);\r\n        request.setRequestId(data.requestId);\r\n        request.setStatusCode(200);\r\n        request.setStatusMessage(OK_MESSAGE);\r\n        // 如果中间件为空\r\n        if (!this.middleWareQueue.length) {\r\n            return;\r\n        }\r\n        // 迭代middleWareQueue\r\n        // 如果中间件队列不为空则创建上下文对象\r\n        var context = new Context({\r\n            request: request,\r\n            response: new Response({\r\n                requestId: request.getRequestId(),\r\n                statusCode: 0,\r\n                stateMessage: ERROR_MESSAGE,\r\n                headers: {\r\n                    pathname: request.getPathname(),\r\n                    date: new Date().toString(),\r\n                    origin: this.sourceOrigin,\r\n                    referer: this.source instanceof Window ? this.source.location.href : '',\r\n                },\r\n                body: null,\r\n            }),\r\n        });\r\n        this.middleWareQueueReduce(context).then(function () {\r\n            var _a, _b;\r\n            // 返回响应\r\n            try {\r\n                // @ts-ignore\r\n                (_b = (_a = evt === null || evt === void 0 ? void 0 : evt.source) === null || _a === void 0 ? void 0 : _a.postMessage) === null || _b === void 0 ? void 0 : _b.call(_a, JSON.stringify(context.response), evt.origin);\r\n            }\r\n            catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * start\r\n     * @description 启动服务\r\n     */\r\n    Server.prototype.start = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            _this.source.addEventListener('message', _this.onMessage);\r\n            resolve();\r\n        });\r\n    };\r\n    /**\r\n     * close\r\n     * @description 关闭服务\r\n     */\r\n    Server.prototype.close = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            _this.source.removeEventListener('message', _this.onMessage);\r\n            resolve();\r\n        });\r\n    };\r\n    /**\r\n     * use\r\n     * @description 添加中间件\r\n     * @param middleWare\r\n     */\r\n    Server.prototype.use = function (middleWare) {\r\n        var _a;\r\n        if (Array.isArray(middleWare)) {\r\n            (_a = this.middleWareQueue).push.apply(_a, middleWare);\r\n        }\r\n        else {\r\n            this.middleWareQueue.push(middleWare);\r\n        }\r\n        return this;\r\n    };\r\n    return Server;\r\n}());\r\nexport default Server;\r\n"],"names":["Util","ERROR_MESSAGE","OK_MESSAGE","Context","Request","Response","Compose","Server","whitelist","source","sourceOrigin","this","middleWareQueue","onMessage","bind","prototype","evt","data","JSON","parse","includes","origin","isEmpty","isObject","requestId","service","e","console","warn","middleWareQueueReduce","ctx","context","request","setRequestId","setStatusCode","setStatusMessage","length","response","getRequestId","statusCode","stateMessage","headers","pathname","getPathname","date","Date","toString","referer","Window","location","href","body","then","_a","_b","postMessage","call","stringify","log","start","_this","Promise","resolve","addEventListener","close","removeEventListener","use","middleWare","Array","isArray","push","apply"],"mappings":"OAAOA,SAAU,iCACRC,cAAeC,UAA+B,KAAb,qBACnCC,YAAa,oBACbC,YAAa,oBACbC,aAAc,qBACdC,YAAa,YAMpB,IAAIC,OAAwB,WACxB,SAASA,EAAOC,EAAWC,EAAQC,GACb,KAAA,IAAdF,IAAwBA,EAAY,IAExCG,KAAKH,UAAY,GAEjBG,KAAKC,gBAAkB,GACvBD,KAAKH,UAAYA,EACjBG,KAAKF,OAASA,EACdE,KAAKD,aAAeA,EACpBC,KAAKE,UAAYF,KAAKE,UAAUC,KAAKH,IAAI,CAC7C,CAqHA,OA/GAJ,EAAOQ,UAAUF,UAAY,SAAUG,GACnC,IACI,IAAIC,EAAOC,KAAKC,MAAMH,EAAIC,IAAI,EAEzBN,KAAKH,UAAUY,SAASJ,EAAIK,MAAM,GAClCL,EAAIP,QACLT,CAAAA,KAAKsB,QAAQL,CAAI,GAChBjB,KAAKuB,SAASN,CAAI,GACjB,cAAeA,GACjBjB,CAAAA,KAAKsB,QAAQL,EAAKO,SAAS,GAG/Bb,KAAKc,QAAQT,EAAKC,CAAI,CAI1B,CAFA,MAAOS,GACHC,QAAQC,KAAKF,CAAC,CAClB,CACJ,EAOAnB,EAAOQ,UAAUc,sBAAwB,SAAUC,GAE/C,OADwBxB,QAAQK,KAAKC,eAAe,EAC3BkB,CAAG,CAChC,EAQAvB,EAAOQ,UAAUU,QAAU,SAAUT,EAAKC,GAEtC,IAUIc,EAVAC,EAAU,IAAI5B,QAAQa,CAAI,EAC9Be,EAAQC,aAAahB,EAAKO,SAAS,EACnCQ,EAAQE,cAAc,GAAG,EACzBF,EAAQG,iBAAiBjC,UAAU,EAE9BS,KAAKC,gBAAgBwB,SAKtBL,EAAU,IAAI5B,QAAQ,CACtB6B,QAASA,EACTK,SAAU,IAAIhC,SAAS,CACnBmB,UAAWQ,EAAQM,aAAa,EAChCC,WAAY,EACZC,aAAcvC,cACdwC,QAAS,CACLC,SAAUV,EAAQW,YAAY,EAC9BC,MAAM,IAAIC,MAAOC,SAAS,EAC1BzB,OAAQV,KAAKD,aACbqC,QAASpC,KAAKF,kBAAkBuC,OAASrC,KAAKF,OAAOwC,SAASC,KAAO,EACzE,EACAC,KAAM,IACV,CAAC,CACL,CAAC,EACDxC,KAAKkB,sBAAsBE,CAAO,EAAEqB,KAAK,WACrC,IAAIC,EAAIC,EAER,IAEI,OAACA,EAAK,OAACD,EAAKrC,MAAAA,EAAiC,KAAA,EAASA,EAAIP,QAAoC,KAAA,EAAS4C,EAAGE,cAAkDD,EAAGE,KAAKH,EAAInC,KAAKuC,UAAU1B,EAAQM,QAAQ,EAAGrB,EAAIK,MAAM,CAIxN,CAFA,MAAOK,GACHC,QAAQ+B,IAAIhC,CAAC,CACjB,CACJ,CAAC,EACL,EAKAnB,EAAOQ,UAAU4C,MAAQ,WACrB,IAAIC,EAAQjD,KACZ,OAAO,IAAIkD,QAAQ,SAAUC,GACzBF,EAAMnD,OAAOsD,iBAAiB,UAAWH,EAAM/C,SAAS,EACxDiD,EAAQ,CACZ,CAAC,CACL,EAKAvD,EAAOQ,UAAUiD,MAAQ,WACrB,IAAIJ,EAAQjD,KACZ,OAAO,IAAIkD,QAAQ,SAAUC,GACzBF,EAAMnD,OAAOwD,oBAAoB,UAAWL,EAAM/C,SAAS,EAC3DiD,EAAQ,CACZ,CAAC,CACL,EAMAvD,EAAOQ,UAAUmD,IAAM,SAAUC,GAC7B,IAAId,EAOJ,OANIe,MAAMC,QAAQF,CAAU,GACvBd,EAAK1C,KAAKC,iBAAiB0D,KAAKC,MAAMlB,EAAIc,CAAU,EAGrDxD,KAAKC,gBAAgB0D,KAAKH,CAAU,EAEjCxD,IACX,EACOJ,CACX,EAAG,iBACYA"}