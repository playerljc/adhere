{"version":3,"file":"backLayout.js","sources":["backLayout.js"],"sourcesContent":["import { __assign, __rest, __spreadArray } from \"tslib\";\r\nimport { Button } from 'antd';\r\nimport React, { memo, useMemo } from 'react';\r\nimport ConditionalRender from '@baifendian/adhere-ui-conditionalrender';\r\nimport HistoryBack from '@baifendian/adhere-ui-historyback';\r\nimport Intl from '@baifendian/adhere-util-intl';\r\nimport ToolBarLayout from './toolBarLayout';\r\n/**\r\n * BackLayout\r\n * @class BackLayout\r\n * @classdesc BackLayout\r\n */\r\nvar BackLayout = function (props) {\r\n    var _a = props.topToolBarItems, topToolBarItems = _a === void 0 ? [] : _a, _b = props.isShowBack, isShowBack = _b === void 0 ? true : _b, _c = props.backPath, backPath = _c === void 0 ? '/' : _c, _d = props.enforceBackPath, enforceBackPath = _d === void 0 ? '' : _d, history = props.history, backTitle = props.backTitle, children = props.children, otherProps = __rest(props, [\"topToolBarItems\", \"isShowBack\", \"backPath\", \"enforceBackPath\", \"history\", \"backTitle\", \"children\"]);\r\n    var toolbar = useMemo(function () {\r\n        return __spreadArray(__spreadArray([], (topToolBarItems || []), true), [\r\n            React.createElement(ConditionalRender, { key: \"backBtn\", conditional: isShowBack }, function () { return (React.createElement(Button, { onClick: function () {\r\n                    if (enforceBackPath) {\r\n                        history.replace(enforceBackPath);\r\n                    }\r\n                    else {\r\n                        HistoryBack(history, backPath);\r\n                    }\r\n                } }, backTitle || Intl.v('返回'))); }),\r\n        ], false).filter(function (t) {\r\n            if ('props' in t && 'conditional' in t.props)\r\n                return t.props.conditional;\r\n            return true;\r\n        });\r\n    }, [topToolBarItems, isShowBack, enforceBackPath, backPath, backTitle]);\r\n    return (React.createElement(ToolBarLayout, __assign({}, otherProps, { topToolBarItems: toolbar }), children));\r\n};\r\nexport default memo(BackLayout);\r\n//# sourceMappingURL=backLayout.js.map"],"names":["__assign","__rest","__spreadArray","Button","React","memo","useMemo","ConditionalRender","HistoryBack","Intl","ToolBarLayout","BackLayout","props","_a","topToolBarItems","_b","isShowBack","_c","backPath","_d","enforceBackPath","history","backTitle","children","otherProps","toolbar","createElement","key","conditional","onClick","replace","v","filter","t"],"mappings":"OAASA,SAAUC,OAAQC,aAA4B,KAAP,eACvCC,MAAoB,KAAN,cAChBC,OAASC,KAAMC,OAAsB,KAAP,eAC9BC,sBAAuB,iDACvBC,gBAAiB,2CACjBC,SAAU,sCACVC,kBAAmB,kBAM1B,IAAIC,WAAa,SAAUC,GACvB,IAAIC,EAAKD,EAAME,gBAAiBA,EAAyB,KAAA,IAAPD,EAAgB,GAAKA,EAAIE,EAAKH,EAAMI,WAAYA,EAAoB,KAAA,IAAPD,GAAuBA,EAAIE,EAAKL,EAAMM,SAAUA,EAAkB,KAAA,IAAPD,EAAgB,IAAMA,EAAIE,EAAKP,EAAMQ,gBAAiBA,EAAyB,KAAA,IAAPD,EAAgB,GAAKA,EAAIE,EAAUT,EAAMS,QAASC,EAAYV,EAAMU,UAAWC,EAAWX,EAAMW,SAAUC,EAAavB,OAAOW,EAAO,CAAC,kBAAmB,aAAc,WAAY,kBAAmB,UAAW,YAAa,WAAW,EACvda,EAAUnB,QAAQ,WAClB,OAAOJ,cAAcA,cAAc,GAAKY,GAAmB,GAAK,CAAA,CAAI,EAAG,CACnEV,MAAMsB,cAAcnB,kBAAmB,CAAEoB,IAAK,UAAWC,YAAaZ,CAAW,EAAG,WAAc,OAAQZ,MAAMsB,cAAcvB,OAAQ,CAAE0B,QAAS,WACrIT,EACAC,EAAQS,QAAQV,CAAe,EAG/BZ,YAAYa,EAASH,CAAQ,CAErC,CAAE,EAAGI,GAAab,KAAKsB,EAAE,IAAI,CAAE,CAAG,CAAC,GACxC,CAAA,CAAK,EAAEC,OAAO,SAAUC,GACvB,MAAI,EAAA,UAAWA,GAAK,gBAAiBA,EAAErB,QAC5BqB,EAAErB,MAAMgB,WAEvB,CAAC,CACL,EAAG,CAACd,EAAiBE,EAAYI,EAAiBF,EAAUI,EAAU,EACtE,OAAQlB,MAAMsB,cAAchB,cAAeV,SAAS,GAAIwB,EAAY,CAAEV,gBAAiBW,CAAQ,CAAC,EAAGF,CAAS,CAChH,iBACelB,KAAKM,UAAU"}