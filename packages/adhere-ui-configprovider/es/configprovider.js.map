{"version":3,"file":"configprovider.js","sources":["configprovider.js"],"sourcesContent":["import React, { createContext, memo, useEffect, useState } from 'react';\r\nimport ConditionalRender from '@baifendian/adhere-ui-conditionalrender';\r\nimport Hooks from '@baifendian/adhere-ui-hooks';\r\nimport Intl from '@baifendian/adhere-util-intl';\r\nimport Resource from '@baifendian/adhere-util-resource';\r\nvar Context = createContext({});\r\nvar useForceUpdate = Hooks.useForceUpdate;\r\n/**\r\n * ConfigProvider\r\n * @constructor\r\n * @classdesc 全局配置 国际化、字典配置\r\n */\r\nvar ConfigProvider = function (props) {\r\n    var _a = props.intl, lang = _a.lang, locales = _a.locales, prefix = _a.prefix, mainLanguage = _a.mainLanguage, children = props.children;\r\n    var _b = useState(false), isIntlInit = _b[0], setIntlInit = _b[1];\r\n    var forceUpdate = useForceUpdate();\r\n    useEffect(function () {\r\n        Intl.init({\r\n            prefix: prefix || 'local',\r\n            currentLocale: lang,\r\n            locales: locales || {},\r\n            mainLanguage: mainLanguage || 'zh_CN',\r\n        }, Intl.isInit()).then(function () {\r\n            Resource.Dict.value.LocalsMoment.value[lang]();\r\n            if (!isIntlInit) {\r\n                setIntlInit(true);\r\n            }\r\n            else {\r\n                forceUpdate();\r\n            }\r\n        });\r\n    }, [lang, locales, prefix]);\r\n    return (React.createElement(ConditionalRender, { conditional: isIntlInit }, function () { return (React.createElement(Context.Provider, { value: {\r\n            intl: {\r\n                lang: lang,\r\n                prefix: prefix,\r\n                locales: locales || {},\r\n            },\r\n        } }, children())); }));\r\n};\r\n/**\r\n * ConfigProviderHOC\r\n */\r\nvar ConfigProviderHOC = memo(ConfigProvider);\r\n// @ts-ignore\r\nConfigProviderHOC.Context = Context;\r\nexport default ConfigProviderHOC;\r\n"],"names":["React","createContext","memo","useEffect","useState","ConditionalRender","Hooks","Intl","Resource","Context","useForceUpdate","ConfigProvider","props","_a","intl","lang","locales","prefix","mainLanguage","children","_b","isIntlInit","setIntlInit","forceUpdate","init","currentLocale","isInit","then","Dict","value","LocalsMoment","createElement","conditional","Provider","ConfigProviderHOC"],"mappings":"OAAOA,OAASC,cAAeC,KAAMC,UAAWC,QAAuB,KAAP,eACzDC,sBAAuB,iDACvBC,UAAW,qCACXC,SAAU,sCACVC,aAAc,mCACrB,IAAIC,QAAUR,cAAc,EAAE,EAC1BS,eAAiBJ,MAAMI,eAMvBC,eAAiB,SAAUC,GAC3B,IAAIC,EAAKD,EAAME,KAAMC,EAAOF,EAAGE,KAAMC,EAAUH,EAAGG,QAASC,EAASJ,EAAGI,OAAQC,EAAeL,EAAGK,aAAcC,EAAWP,EAAMO,SAC5HC,EAAKhB,SAAS,CAAA,CAAK,EAAGiB,EAAaD,EAAG,GAAIE,EAAcF,EAAG,GAC3DG,EAAcb,eAAe,EAiBjC,OAhBAP,UAAU,WACNI,KAAKiB,KAAK,CACNP,OAAQA,GAAU,QAClBQ,cAAeV,EACfC,QAASA,GAAW,GACpBE,aAAcA,GAAgB,OAClC,EAAGX,KAAKmB,OAAO,CAAC,EAAEC,KAAK,WACnBnB,SAASoB,KAAKC,MAAMC,aAAaD,MAAMd,GAAM,EACxCM,EAIDE,EAAY,EAHZD,EAAY,CAAA,CAAI,CAKxB,CAAC,CACL,EAAG,CAACP,EAAMC,EAASC,EAAO,EAClBjB,MAAM+B,cAAc1B,kBAAmB,CAAE2B,YAAaX,CAAW,EAAG,WAAc,OAAQrB,MAAM+B,cAActB,QAAQwB,SAAU,CAAEJ,MAAO,CACzIf,KAAM,CACFC,KAAMA,EACNE,OAAQA,EACRD,QAASA,GAAW,EACxB,CACJ,CAAE,EAAGG,EAAS,CAAE,CAAG,CAAE,CAC7B,EAIIe,kBAAoBhC,KAAKS,cAAc,EAE3CuB,kBAAkBzB,QAAUA,uBACbyB"}