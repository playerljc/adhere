import React,{createContext,memo,useEffect,useState}from"react";import ConditionalRender from"@baifendian/adhere-ui-conditionalrender";import Hooks from"@baifendian/adhere-ui-hooks";import Intl from"@baifendian/adhere-util-intl";import Resource from"@baifendian/adhere-util-resource";var Context=createContext({}),useForceUpdate=Hooks.useForceUpdate,ConfigProvider=function(e){var t=e.intl,o=t.lang,n=t.locales,r=t.prefix,i=t.mainLanguage,a=e.children,t=useState(!1),c=t[0],l=t[1],u=useForceUpdate();return useEffect(function(){Intl.init({prefix:r||"local",currentLocale:o,locales:n||{},mainLanguage:i||"zh_CN"},Intl.isInit()).then(function(){Resource.Dict.value.LocalsMoment.value[o](),c?u():l(!0)})},[o,n,r]),React.createElement(ConditionalRender,{conditional:c},function(){return React.createElement(Context.Provider,{value:{intl:{lang:o,prefix:r,locales:n||{}}}},a())})},ConfigProviderHOC=memo(ConfigProvider);ConfigProviderHOC.Context=Context;export default ConfigProviderHOC;
//# sourceMappingURL=configprovider.js.map
