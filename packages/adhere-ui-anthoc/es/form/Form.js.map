{"version":3,"file":"Form.js","sources":["form/Form.js"],"sourcesContent":["import _Form from \"antd/es/form\";\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport Validator from '@baifendian/adhere-util-validator';\nimport { createFactory } from '../util';\n// Form对象\nvar FormHOC = createFactory(_Form, {});\n// entityInValue\n// dataSourceProp 数据源属性\nvar ValidatorRules;\n(function () {\n  var excludes = ['default', 'version', 'toDate', 'toFloat', 'toInt', 'toBoolean', 'equals', 'contains', 'matches', 'ltrim', 'rtrim', 'trim', 'escape', 'unescape', 'stripLow', 'whitelist', 'blacklist', 'isWhitelisted', 'normalizeEmail', 'toString'];\n  /**\n   * 设置Rules\n   * Rules根据@baifendian/adhere-util-validator库来生成\n   */\n  ValidatorRules = Array.from(Object.keys(Validator)).filter(function (_key) {\n    return !excludes.includes(_key);\n  }).reduce(function (result, _key) {\n    result[_key] = function (argv) {\n      return {\n        /**\n         * validator\n         * @description 主要是实现validator方法\n         * @param _\n         * @param value\n         */\n        validator: function (_, value) {\n          var _a;\n          if (!value) {\n            return Promise.reject();\n          }\n          // 调用Validator的指定方法进行校验\n          if (!Validator[_key].apply(this, __spreadArray([value], (argv === null || argv === void 0 ? void 0 : argv.params) || [], true))) {\n            return Promise.reject((_a = argv === null || argv === void 0 ? void 0 : argv.invalidMessage) !== null && _a !== void 0 ? _a : '');\n          }\n          return Promise.resolve();\n        }\n      };\n    };\n    return result;\n  }, {});\n})();\nFormHOC.ValidatorRules = ValidatorRules;\nFormHOC.displayName = 'Form';\nexport default FormHOC;"],"names":["_Form","__spreadArray","this","to","from","pack","arguments","length","ar","i","l","Array","prototype","slice","call","concat","Validator","createFactory","ValidatorRules","FormHOC","excludes","Object","keys","filter","_key","includes","reduce","result","argv","validator","_","value","apply","params","Promise","resolve","reject","_a","invalidMessage","displayName"],"mappings":"OAAOA,UAAW,eAClB,IAAIC,cAAgBC,MAAQA,KAAKD,eAAiB,SAAUE,EAAIC,EAAMC,GACpE,GAAIA,GAA6B,IAArBC,UAAUC,OAAc,IAAK,IAA4BC,EAAxBC,EAAI,EAAGC,EAAIN,EAAKG,OAAYE,EAAIC,EAAGD,CAAC,GAC3ED,CAAAA,GAAQC,KAAKL,KACVI,EAAAA,GAASG,MAAMC,UAAUC,MAAMC,KAAKV,EAAM,EAAGK,CAAC,GAChDA,GAAKL,EAAKK,IAGjB,OAAON,EAAGY,OAAOP,GAAMG,MAAMC,UAAUC,MAAMC,KAAKV,CAAI,CAAC,CACzD,SACOY,cAAe,2CACbC,aAA8B,KAAT,UAE9B,IAGIC,eAHAC,QAAUF,cAAcjB,MAAO,EAAE,EAIrC,CAAA,WACE,IAAIoB,EAAW,CAAC,UAAW,UAAW,SAAU,UAAW,QAAS,YAAa,SAAU,WAAY,UAAW,QAAS,QAAS,OAAQ,SAAU,WAAY,WAAY,YAAa,YAAa,gBAAiB,iBAAkB,YAK3OF,eAAiBP,MAAMP,KAAKiB,OAAOC,KAAKN,SAAS,CAAC,EAAEO,OAAO,SAAUC,GACnE,MAAO,CAACJ,EAASK,SAASD,CAAI,CAChC,CAAC,EAAEE,OAAO,SAAUC,EAAQH,GAsB1B,OArBAG,EAAOH,GAAQ,SAAUI,GACvB,MAAO,CAOLC,UAAW,SAAUC,EAAGC,GAEtB,OAAKA,EAIAf,UAAUQ,GAAMQ,MAAM9B,KAAMD,cAAc,CAAC8B,IAASH,MAAAA,EAAmC,KAAA,EAASA,EAAKK,SAAW,GAAI,CAAA,CAAI,CAAC,EAGvHC,QAAQC,QAAQ,EAFdD,QAAQE,OAAO,OAACC,EAAKT,MAAAA,EAAmC,KAAA,EAASA,EAAKU,gBAA4CD,EAAK,EAAE,EAJzHH,QAAQE,OAAO,CAO1B,CACF,CACF,EACOT,CACT,EAAG,EAAE,CACN,EAAE,EACHR,QAAQD,eAAiBA,eACzBC,QAAQoB,YAAc,sBACPpB"}