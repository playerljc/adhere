{"version":3,"file":"useTreeEntityValueHOC.js","sources":["useTreeEntityValueHOC.js"],"sourcesContent":["var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport omit from 'omit.js';\nimport React, { useMemo } from 'react';\nimport Util from '@baifendian/adhere-util';\nvar optionKeys = ['value', 'key', 'id'];\nvar DEFAULT_VALUE_PROP = 'value';\nexport default (function (props) {\n  var value = props.value,\n    _onChange = props.onChange,\n    children = props.children,\n    treeData = props.treeData;\n  var _isUsePrimaryValue = useMemo(function () {\n    if ('isUsePrimaryValue' in props) {\n      return props.isUsePrimaryValue;\n    }\n    return true;\n  }, [props.isUsePrimaryValue]);\n  function getEntityValue(entity) {\n    var _a, _b;\n    if ((_a = props.valueProp) !== null && _a !== void 0 ? _a : DEFAULT_VALUE_PROP in entity) {\n      return entity[(_b = props.valueProp) !== null && _b !== void 0 ? _b : DEFAULT_VALUE_PROP];\n    }\n    var value = entity[DEFAULT_VALUE_PROP];\n    for (var i = 0; i < optionKeys.length; i++) {\n      if (optionKeys[i] in entity) {\n        value = entity[optionKeys[i]];\n        break;\n      }\n    }\n    return value;\n  }\n  function isPrimitive(_value) {\n    var _a;\n    return _value !== null && _value !== undefined && ((_a = _value === null || _value === void 0 ? void 0 : _value.trim) === null || _a === void 0 ? void 0 : _a.call(_value)) !== '' && Util.isPrimitive(_value);\n  }\n  function isRef(_value) {\n    var _a;\n    return _value !== null && _value !== undefined && ((_a = _value === null || _value === void 0 ? void 0 : _value.trim) === null || _a === void 0 ? void 0 : _a.call(_value)) !== '' && !Util.isArray(_value) && Util.isRef(_value);\n  }\n  function isMultiplePrimitive(_value) {\n    var _a;\n    return _value !== null && _value !== undefined && ((_a = _value === null || _value === void 0 ? void 0 : _value.trim) === null || _a === void 0 ? void 0 : _a.call(_value)) !== '' && Util.isArray(_value) && !!_value.length && _value.flat().some(function (t) {\n      return Util.isPrimitive(t);\n    });\n  }\n  function isMultipleRef(_value) {\n    var _a;\n    return _value !== null && _value !== undefined && ((_a = _value === null || _value === void 0 ? void 0 : _value.trim) === null || _a === void 0 ? void 0 : _a.call(_value)) !== '' && Util.isArray(_value) && !!_value.length && _value.flat().every(function (t) {\n      return Util.isRef(t);\n    });\n  }\n  function valuesToEntities(_values) {\n    return _values.map(function (t) {\n      if (isPrimitive(t)) {\n        return valueToEntity(t);\n      }\n      return Util.isArray(t) ? valuesToEntities(t) : t;\n    });\n  }\n  function isSimpleMode() {\n    return 'treeDataSimpleMode' in children.props && !!children.props.treeDataSimpleMode;\n  }\n  /**\n   * 需要改\n   * @param _value\n   */\n  function valueToEntity(_value) {\n    var _a, _b;\n    function loop(nodes) {\n      var _a, _b, _c;\n      var entity;\n      for (var i = 0; i < nodes.length; i++) {\n        var value_1 = getEntityValue(nodes[i]);\n        if (Object.is(value_1, _value)) {\n          entity = nodes[i];\n          break;\n        }\n        entity = loop((_c = (_a = nodes[i]) === null || _a === void 0 ? void 0 : _a[(_b = props.childrenProp) !== null && _b !== void 0 ? _b : 'children']) !== null && _c !== void 0 ? _c : []);\n        if (entity) {\n          break;\n        }\n      }\n      return entity;\n    }\n    var targetTreeData = __spreadArray([], treeData !== null && treeData !== void 0 ? treeData : [], true);\n    if (Array.isArray(props.value)) {\n      props.value.forEach(function (_value) {\n        if (Util.isObject(_value)) {\n          targetTreeData.push(_value);\n        }\n      });\n    } else {\n      if (Util.isObject(props.value)) {\n        targetTreeData.push(props.value);\n      }\n    }\n    if (isSimpleMode()) {\n      return (_a = (targetTreeData !== null && targetTreeData !== void 0 ? targetTreeData : []).find(function (t) {\n        return Object.is(getEntityValue(t), _value);\n      })) !== null && _a !== void 0 ? _a : _value;\n    } else {\n      return (_b = loop(targetTreeData !== null && targetTreeData !== void 0 ? targetTreeData : [])) !== null && _b !== void 0 ? _b : _value;\n    }\n  }\n  function valuesToPrimitive(_values) {\n    return _values.map(function (t) {\n      if (Util.isArray(t)) {\n        return valuesToPrimitive(t);\n      }\n      return valueToPrimitive(t);\n    });\n  }\n  function valueToPrimitive(_value) {\n    var res = _value[DEFAULT_VALUE_PROP];\n    for (var i = 0; i < optionKeys.length; i++) {\n      if (optionKeys[i] in _value) {\n        res = _value[optionKeys[i]];\n        break;\n      }\n    }\n    return res;\n  }\n  function getInternalValue() {\n    if (isRef(value)) {\n      return valueToPrimitive(value);\n    } else if (isMultipleRef(value)) {\n      return valuesToPrimitive(value);\n    }\n    return value;\n  }\n  if (isPrimitive(value)) {\n    _onChange === null || _onChange === void 0 ? void 0 : _onChange(valueToEntity(value));\n  } else if (isMultiplePrimitive(value)) {\n    _onChange === null || _onChange === void 0 ? void 0 : _onChange(valuesToEntities(value));\n  }\n  return /*#__PURE__*/React.cloneElement(children, __assign(__assign(__assign({}, omit(props, ['children'])), children.props), {\n    value: _isUsePrimaryValue ? getInternalValue() : value,\n    realValue: value,\n    onChange: function onChange(val) {\n      var _a, _b;\n      var rest = [];\n      for (var _i = 1; _i < arguments.length; _i++) {\n        rest[_i - 1] = arguments[_i];\n      }\n      if (isPrimitive(val)) {\n        _onChange === null || _onChange === void 0 ? void 0 : _onChange.apply(void 0, __spreadArray([valueToEntity(val)], rest, false));\n      } else if (isMultiplePrimitive(val)) {\n        _onChange === null || _onChange === void 0 ? void 0 : _onChange.apply(void 0, __spreadArray([valuesToEntities(val)], rest, false));\n      } else {\n        _onChange === null || _onChange === void 0 ? void 0 : _onChange.apply(void 0, __spreadArray([val], rest, false));\n      }\n      (_b = (_a = children.props) === null || _a === void 0 ? void 0 : _a.onChange) === null || _b === void 0 ? void 0 : _b.call.apply(_b, __spreadArray([_a, val], rest, false));\n    }\n  }));\n});"],"names":["__assign","this","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__spreadArray","to","from","pack","ar","l","Array","slice","concat","omit","React","useMemo","Util","optionKeys","DEFAULT_VALUE_PROP","props","_a","value","_onChange","onChange","children","treeData","_isUsePrimaryValue","isUsePrimaryValue","getEntityValue","entity","_b","valueProp","isPrimitive","_value","trim","isMultiplePrimitive","isArray","flat","some","valuesToEntities","_values","map","valueToEntity","targetTreeData","forEach","isObject","push","treeDataSimpleMode","find","is","loop","nodes","value_1","_c","childrenProp","valueToPrimitive","res","cloneElement","isRef","every","valuesToPrimitive","realValue","val","rest","_i"],"mappings":"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"}