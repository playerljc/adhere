var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(e){for(var r,t=1,n=arguments.length;t<n;t++)for(var a in r=arguments[t])Object.prototype.hasOwnProperty.call(r,a)&&(e[a]=r[a]);return e}).apply(this,arguments)},__rest=this&&this.__rest||function(e,r){var t={};for(a in e)Object.prototype.hasOwnProperty.call(e,a)&&r.indexOf(a)<0&&(t[a]=e[a]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var n=0,a=Object.getOwnPropertySymbols(e);n<a.length;n++)r.indexOf(a[n])<0&&Object.prototype.propertyIsEnumerable.call(e,a[n])&&(t[a[n]]=e[a[n]]);return t},__spreadArray=this&&this.__spreadArray||function(e,r,t){if(t||2===arguments.length)for(var n,a=0,o=r.length;a<o;a++)!n&&a in r||((n=n||Array.prototype.slice.call(r,0,a))[a]=r[a]);return e.concat(n||Array.prototype.slice.call(r))};import React,{memo}from"react";import Table from"./Table";var InternalCheckboxTable=memo(function(e){var a=e.value,o=e.onChange,r=e.options,e=__rest(e,["value","onChange","options"]);return React.createElement(Table,__assign({dataSource:r,rowKey:"id",rowSelection:{type:"checkbox",selectedRowKeys:a,onSelect:function(r,e,t){e?(e=t.filter(function(e){return!!e}).map(function(e){return e.value}),null!=o&&o(Array.from(new Set(__spreadArray(__spreadArray([],a,!0),e,!0))),[])):null!=o&&o(a.filter(function(e){return e!==r.id}),[])},onSelectAll:function(e,r,t){var n;e?(e=r.filter(function(e){return!!e}).map(function(e){return e.value}),null!=o&&o(Array.from(new Set(__spreadArray(__spreadArray([],a,!0),e,!0))),[])):(n=t.filter(function(e){return!!e}).map(function(e){return e.value}),null!=o&&o(a.filter(function(e){return!n.includes(e)}),[]))}}},e))}),CheckboxTable=InternalCheckboxTable;CheckboxTable.displayName="CheckboxTable";export default CheckboxTable;
//# sourceMappingURL=CheckboxTable.js.map
