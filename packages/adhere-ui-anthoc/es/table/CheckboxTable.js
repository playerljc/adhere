var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(r){for(var e,t=1,n=arguments.length;t<n;t++)for(var o in e=arguments[t])Object.prototype.hasOwnProperty.call(e,o)&&(r[o]=e[o]);return r}).apply(this,arguments)},__rest=this&&this.__rest||function(r,e){var t={};for(o in r)Object.prototype.hasOwnProperty.call(r,o)&&e.indexOf(o)<0&&(t[o]=r[o]);if(null!=r&&"function"==typeof Object.getOwnPropertySymbols)for(var n=0,o=Object.getOwnPropertySymbols(r);n<o.length;n++)e.indexOf(o[n])<0&&Object.prototype.propertyIsEnumerable.call(r,o[n])&&(t[o[n]]=r[o[n]]);return t},__spreadArray=this&&this.__spreadArray||function(r,e,t){if(t||2===arguments.length)for(var n,o=0,a=e.length;o<a;o++)!n&&o in e||((n=n||Array.prototype.slice.call(e,0,o))[o]=e[o]);return r.concat(n||Array.prototype.slice.call(e))};import React,{memo}from"react";import Table from"./Table";var CheckboxTable=function(r){var o=r.value,a=r.onChange,e=r.options,r=__rest(r,["value","onChange","options"]);return React.createElement(Table,__assign({dataSource:e,rowKey:"id",rowSelection:{type:"checkbox",selectedRowKeys:o,onSelect:function(e,r,t){r?(r=t.filter(function(r){return!!r}).map(function(r){return r.value}),null!=a&&a(Array.from(new Set(__spreadArray(__spreadArray([],o,!0),r,!0))),[])):null!=a&&a(o.filter(function(r){return r!==e.id}),[])},onSelectAll:function(r,e,t){var n;r?(r=e.filter(function(r){return!!r}).map(function(r){return r.value}),null!=a&&a(Array.from(new Set(__spreadArray(__spreadArray([],o,!0),r,!0))),[])):(n=t.filter(function(r){return!!r}).map(function(r){return r.value}),null!=a&&a(o.filter(function(r){return!n.includes(r)}),[]))}}},r))};export default memo(CheckboxTable);
//# sourceMappingURL=CheckboxTable.js.map
