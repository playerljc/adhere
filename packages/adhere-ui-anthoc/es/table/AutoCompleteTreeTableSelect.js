var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(e){for(var t,r=1,o=arguments.length;r<o;r++)for(var l in t=arguments[r])Object.prototype.hasOwnProperty.call(t,l)&&(e[l]=t[l]);return e}).apply(this,arguments)},__rest=this&&this.__rest||function(e,t){var r={};for(l in e)Object.prototype.hasOwnProperty.call(e,l)&&t.indexOf(l)<0&&(r[l]=e[l]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var o=0,l=Object.getOwnPropertySymbols(e);o<l.length;o++)t.indexOf(l[o])<0&&Object.prototype.propertyIsEnumerable.call(e,l[o])&&(r[l[o]]=e[l[o]]);return r};import React,{memo,useMemo}from"react";import Util from"@baifendian/adhere-util";import AutoCompleteTreeMultiSelect from"../tree-select/AutoCompleteTreeMultiSelect";import AutoCompleteTreeSelect from"../tree-select/AutoCompleteTreeSelect";import useAutoCompleteFetchLoading from"../useAutoCompleteFetchLoading";import CheckboxTreeTable from"./CheckboxTreeTable";import RadioTreeTable from"./RadioTreeTable";import useTreeRender from"./useTreeRenderProps";var InternalAutoCompleteTreeTableSelect=memo(function(e){var t=e.tableProps,l=e.treeDataSimpleModeConfig,r=__rest(e,["tableProps","treeDataSimpleModeConfig"]),n=useMemo(function(){return"multiple"in r&&r.multiple},[r.multiple]),a=useMemo(function(){return!!r.treeDataSimpleMode},[r.treeDataSimpleMode]),i=useTreeRender(t),u=useAutoCompleteFetchLoading(r.renderLoading),e=useMemo(function(){return n?AutoCompleteTreeMultiSelect:AutoCompleteTreeSelect},[n]);return React.createElement(e,__assign({},r),function(e){e.originNode;var t=e.loading,e=__rest(e,["originNode","loading"]),r=e.treeData,e=__rest(e,["treeData"]),o=a?Util.arrayToAntdTreeSelect(null!=r?r:[],{keyAttr:null!=(o=null==l?void 0:l.keyAttr)?o:"value",titleAttr:null!=(o=null==l?void 0:l.titleAttr)?o:"title",rootParentId:null!=(o=null==l?void 0:l.rootParentId)?o:0,parentIdAttr:null!=(o=null==l?void 0:l.parentIdAttr)?o:"pId"}):r,r=i(__assign({options:o},e));return React.createElement(React.Fragment,null,t&&u,!t&&n&&React.createElement(CheckboxTreeTable,__assign({},r)),!t&&!n&&React.createElement(RadioTreeTable,__assign({},r)))})}),AutoCompleteTreeTableSelect=InternalAutoCompleteTreeTableSelect;AutoCompleteTreeTableSelect.displayName="AutoCompleteTreeTableSelect";export default AutoCompleteTreeTableSelect;
//# sourceMappingURL=AutoCompleteTreeTableSelect.js.map
