{"version":3,"file":"AutoCompleteTreeTablePagingSelect.js","sources":["table/AutoCompleteTreeTablePagingSelect.js"],"sourcesContent":["var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport React, { memo, useMemo } from 'react';\nimport Util from '@baifendian/adhere-util';\nimport AutoCompleteTreeMultiSelect from '../tree-select/AutoCompleteTreeMultiSelect';\nimport AutoCompleteTreeSelect from '../tree-select/AutoCompleteTreeSelect';\nimport useAutoCompleteFetchLoading from '../useAutoCompleteFetchLoading';\nimport CheckboxPagingTreeTable from './CheckboxPagingTreeTable';\nimport RadioPagingTreeTable from './RadioPagingTreeTable';\nimport usePagingTreeRenderProps from './usePagingTreeRenderProps';\n/**\n * AutoCompleteTreeTablePagingSelect\n * @param loadData\n * @param tablePagingProps\n * @param props\n * @constructor\n */\nvar InternalAutoCompleteTreeTablePagingSelect = /*#__PURE__*/memo(function (_a) {\n  var pagingProps = _a.pagingProps,\n    tablePagingProps = _a.tablePagingProps,\n    treeDataSimpleModeConfig = _a.treeDataSimpleModeConfig,\n    defaultTreeData = _a.defaultTreeData,\n    props = __rest(_a, [\"pagingProps\", \"tablePagingProps\", \"treeDataSimpleModeConfig\", \"defaultTreeData\"]);\n  var fetchLoading = useAutoCompleteFetchLoading(props.renderLoading);\n  var targetTreeDataSimpleModeConfig = useMemo(function () {\n    var _a, _b, _c, _d;\n    return {\n      keyAttr: (_a = treeDataSimpleModeConfig === null || treeDataSimpleModeConfig === void 0 ? void 0 : treeDataSimpleModeConfig.keyAttr) !== null && _a !== void 0 ? _a : 'value',\n      titleAttr: (_b = treeDataSimpleModeConfig === null || treeDataSimpleModeConfig === void 0 ? void 0 : treeDataSimpleModeConfig.titleAttr) !== null && _b !== void 0 ? _b : 'title',\n      rootParentId: (_c = treeDataSimpleModeConfig === null || treeDataSimpleModeConfig === void 0 ? void 0 : treeDataSimpleModeConfig.rootParentId) !== null && _c !== void 0 ? _c : 0,\n      parentIdAttr: (_d = treeDataSimpleModeConfig === null || treeDataSimpleModeConfig === void 0 ? void 0 : treeDataSimpleModeConfig.parentIdAttr) !== null && _d !== void 0 ? _d : 'pId'\n    };\n  }, [treeDataSimpleModeConfig]);\n  var _b = usePagingTreeRenderProps(__assign({\n      tablePagingProps: tablePagingProps,\n      multiple: props.multiple,\n      treeDataSimpleMode: props.treeDataSimpleMode\n    }, pagingProps)),\n    isMultiple = _b.isMultiple,\n    isTreeDataSimpleMode = _b.isTreeDataSimpleMode,\n    treeData = _b.treeData,\n    setInputValue = _b.setInputValue,\n    defaultCurrentPage = _b.defaultCurrentPage,\n    defaultPageSize = _b.defaultPageSize,\n    setPaging = _b.setPaging,\n    setKw = _b.setKw,\n    renderProps = _b.renderProps;\n  var Component = useMemo(function () {\n    return isMultiple ? AutoCompleteTreeMultiSelect : AutoCompleteTreeSelect;\n  }, [isMultiple]);\n  // const allTreeData = useMemo(() => {\n  //   let _treeFlatData = treeData ?? [];\n  //   let _defaultTreeFlatData = defaultTreeData ?? [];\n  //\n  //   if (!props.treeDataSimpleMode) {\n  //     // 拉平\n  //     _treeFlatData = Util.treeToArray(\n  //       _treeFlatData,\n  //       {\n  //         parentIdAttr: targetTreeDataSimpleModeConfig.parentIdAttr,\n  //         rootParentId: targetTreeDataSimpleModeConfig.rootParentId,\n  //       },\n  //       targetTreeDataSimpleModeConfig.keyAttr,\n  //     );\n  //     _defaultTreeFlatData = Util.treeToArray(\n  //       _defaultTreeFlatData,\n  //       {\n  //         parentIdAttr: targetTreeDataSimpleModeConfig.parentIdAttr,\n  //         rootParentId: targetTreeDataSimpleModeConfig.rootParentId,\n  //       },\n  //       targetTreeDataSimpleModeConfig.keyAttr,\n  //     );\n  //   }\n  //\n  //   const flatAllData = uniqBy(\n  //     [...(_defaultTreeFlatData ?? []), ...(_treeFlatData ?? [])],\n  //     targetTreeDataSimpleModeConfig.keyAttr,\n  //   );\n  //\n  //   if (!props.treeDataSimpleMode) {\n  //     // 转换成treeData\n  //     return Util.arrayToAntdTreeSelect(flatAllData, targetTreeDataSimpleModeConfig);\n  //   }\n  //\n  //   return flatAllData;\n  // }, [defaultTreeData, treeData]);\n  // const targetTreeData = useMemo(() => {\n  //   let _treeFlatData = treeData ?? [];\n  //   let _allTreeFlatData = allTreeData ?? [];\n  //\n  //   if (!props.treeDataSimpleMode) {\n  //     // 拉平\n  //     _treeFlatData = Util.treeToArray(_treeFlatData, targetTreeDataSimpleModeConfig);\n  //     _allTreeFlatData = Util.treeToArray(_allTreeFlatData, targetTreeDataSimpleModeConfig);\n  //   }\n  //\n  //   const optionKeys = _treeFlatData.map(\n  //     (nodeData) => nodeData[targetTreeDataSimpleModeConfig.keyAttr],\n  //   );\n  //   const flatTreeData = _allTreeFlatData.filter((nodeData) =>\n  //     optionKeys.includes(nodeData[targetTreeDataSimpleModeConfig.keyAttr]),\n  //   );\n  //\n  //   if (!props.treeDataSimpleMode) {\n  //     // 转换成treeData\n  //     return Util.arrayToAntdTreeSelect(flatTreeData, targetTreeDataSimpleModeConfig);\n  //   }\n  //\n  //   return flatTreeData;\n  // }, [treeData, allTreeData]);\n  return /*#__PURE__*/React.createElement(Component, __assign({}, props, {\n    treeData: treeData,\n    defaultTreeData: defaultTreeData,\n    onSearch: setInputValue,\n    onClear: function () {\n      setPaging({\n        page: defaultCurrentPage,\n        limit: defaultPageSize\n      });\n    },\n    loadData: function (_kw) {\n      setKw(_kw);\n      setPaging({\n        page: defaultCurrentPage,\n        limit: defaultPageSize\n      });\n      return new Promise(function (resolve) {\n        setTimeout(function () {\n          return resolve();\n        }, 300);\n      });\n    }\n  }), function (_a) {\n    var originNode = _a.originNode,\n      loading = _a.loading,\n      rest = __rest(_a, [\"originNode\", \"loading\"]);\n    var _omitTreeData = rest.treeData,\n      tablePropsRest = __rest(rest, [\"treeData\"]);\n    var options = isTreeDataSimpleMode ? Util.arrayToAntdTreeSelect(_omitTreeData !== null && _omitTreeData !== void 0 ? _omitTreeData : [], targetTreeDataSimpleModeConfig) : _omitTreeData;\n    var tableProps = renderProps(__assign({\n      options: options\n    }, tablePropsRest));\n    return /*#__PURE__*/React.createElement(React.Fragment, null, loading && fetchLoading, !loading && isMultiple && /*#__PURE__*/React.createElement(CheckboxPagingTreeTable, __assign({}, tableProps)), !loading && !isMultiple && /*#__PURE__*/React.createElement(RadioPagingTreeTable, __assign({}, tableProps)));\n  });\n});\nvar AutoCompleteTreeTablePagingSelect = InternalAutoCompleteTreeTablePagingSelect;\nAutoCompleteTreeTablePagingSelect.displayName = 'AutoCompleteTreeTablePagingSelect';\nexport default AutoCompleteTreeTablePagingSelect;"],"names":["__assign","this","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","memo","useMemo","Util","AutoCompleteTreeMultiSelect","AutoCompleteTreeSelect","useAutoCompleteFetchLoading","CheckboxPagingTreeTable","RadioPagingTreeTable","usePagingTreeRenderProps","InternalAutoCompleteTreeTablePagingSelect","_a","pagingProps","tablePagingProps","treeDataSimpleModeConfig","defaultTreeData","props","fetchLoading","renderLoading","targetTreeDataSimpleModeConfig","_d","keyAttr","titleAttr","_b","rootParentId","_c","parentIdAttr","multiple","treeDataSimpleMode","isMultiple","isTreeDataSimpleMode","treeData","setInputValue","defaultCurrentPage","defaultPageSize","setPaging","setKw","renderProps","Component","createElement","onSearch","onClear","page","limit","loadData","_kw","Promise","resolve","setTimeout","originNode","loading","rest","_omitTreeData","tablePropsRest","options","arrayToAntdTreeSelect","tableProps","Fragment","AutoCompleteTreeTablePagingSelect","displayName"],"mappings":"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"}