var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(n){for(var a,t=1,e=arguments.length;t<e;t++)for(var i in a=arguments[t])Object.prototype.hasOwnProperty.call(a,i)&&(n[i]=a[i]);return n}).apply(this,arguments)};import{cloneElement,memo,useRef,useState}from"react";import useArrayEntityValueHOC from"../useArrayEntityValueHOC";var InternalPagingEntityValueHOC=memo(function(e){var n=useState([]),a=n[0],i=n[1],l=useRef(new Map),n=cloneElement(e.children,__assign(__assign({},null!=(n=null==(n=null==e?void 0:e.children)?void 0:n.props)?n:{}),{pagingProps:__assign(__assign({},null!=(n=null==(n=null==(n=null==e?void 0:e.children)?void 0:n.props)?void 0:n.pagingProps)?n:{}),{onDataSourceChange:function(n,a){var t=null!=(t=null==(t=null==e?void 0:e.getOptionsByDataSource)?void 0:t.call(e,a))?t:a;l.current.set(n,t),i(Array.from(l.current.values()).flat())}})}));return useArrayEntityValueHOC(__assign(__assign({},e),{children:n,options:a}))}),PagingEntityValueHOC=InternalPagingEntityValueHOC;PagingEntityValueHOC.displayName="PagingEntityValueHOC";export default PagingEntityValueHOC;
//# sourceMappingURL=index.js.map
