{"version":3,"file":"useAsyncCascader.js","sources":["cascader/useAsyncCascader.js"],"sourcesContent":["var __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { useMount, useUpdateEffect } from 'ahooks';\nimport { useRef, useState } from 'react';\n/**\n * useAsyncCascader\n * @param cascadeParams\n * @param onDataSourceChange\n * @param fetchBranch\n * @param fetchData\n * @param defaultId\n * @param value\n * @param treeDataSimpleMode\n */\nvar useAsyncCascader = function useAsyncCascader(_a) {\n  var cascadeParams = _a.cascadeParams,\n    onDataSourceChange = _a.onDataSourceChange,\n    fetchBranch = _a.fetchBranch,\n    fetchData = _a.fetchData,\n    defaultId = _a.defaultId,\n    value = _a.value,\n    treeDataSimpleMode = _a.treeDataSimpleMode;\n  var _b = useState([]),\n    treeData = _b[0],\n    setTreeData = _b[1];\n  var changeValue = useRef();\n  /**\n   * findNodeById\n   * @description 通过id寻找节点\n   * @param treeData\n   * @param {string} id\n   * @return object\n   */\n  var findNodeById = function findNodeById(treeData, id) {\n    function loop(_treeData) {\n      var result;\n      for (var i = 0; i < _treeData.length; i++) {\n        if (_treeData[i].value === id) {\n          result = _treeData[i];\n          break;\n        } else {\n          result = loop(_treeData[i].children || []);\n          if (result) {\n            break;\n          }\n        }\n      }\n      return result;\n    }\n    return loop(treeData);\n  };\n  /**\n   * loadDefaultData\n   * @description 加载初始化的数据\n   */\n  var loadDefaultData = function loadDefaultData() {\n    fetchData(defaultId !== null && defaultId !== void 0 ? defaultId : '', cascadeParams).then(function (treeData) {\n      setTreeData(treeData);\n    });\n  };\n  /**\n   * loadDefaultBranchData\n   * @description 加载回显的数据\n   */\n  var loadDefaultBranchData = function loadDefaultBranchData() {\n    // const treeBranchNode = Util.arrayToAntdTreeSelect(data, {\n    //   keyAttr: 'id',\n    //   titleAttr: 'title',\n    //   rootParentId: '0',\n    //   parentIdAttr: 'pid',\n    // });\n    if (!fetchBranch) return;\n    // 回显 回显数据 并集 topLevel\n    Promise.all([loadData(defaultId), fetchBranch === null || fetchBranch === void 0 ? void 0 : fetchBranch(value, cascadeParams)]).then(function (_a) {\n      var _b = _a[0],\n        rootNodes = _b === void 0 ? [] : _b,\n        _c = _a[1],\n        treeBranchNode = _c === void 0 ? [] : _c;\n      setTreeData(__spreadArray(__spreadArray([], treeBranchNode !== null && treeBranchNode !== void 0 ? treeBranchNode : [], true), (rootNodes !== null && rootNodes !== void 0 ? rootNodes : []).filter(function (_node) {\n        return !(treeBranchNode !== null && treeBranchNode !== void 0 ? treeBranchNode : []).map(function (t) {\n          return t.value;\n        }).includes(_node.value);\n      }), true));\n    });\n  };\n  /**\n   * loadData\n   * @description Async加载数据\n   * @param {string} id\n   */\n  var loadData = function loadData(id) {\n    return fetchData(id, cascadeParams).then(function (data) {\n      return data;\n    });\n  };\n  /**\n   * onLoadData\n   * @return {Promise<undefined>}\n   * @param selectedOptions\n   */\n  var onLoadData = function onLoadData(selectedOptions) {\n    return new Promise(function (resolve) {\n      var targetOption = selectedOptions[selectedOptions.length - 1];\n      // 如果加载过则不加载\n      if (!!targetOption.isLoading) return;\n      // 标识为已经加载过\n      targetOption.isLoading = true;\n      var id = targetOption.value;\n      setTimeout(function () {\n        loadData(id).then(function (data) {\n          setTreeData(function (_treeData) {\n            var _a, _b, _c, _d;\n            // 拉平数据处理\n            if (!!treeDataSimpleMode) {\n              return __spreadArray(__spreadArray([], data !== null && data !== void 0 ? data : [], true), (_b = (_a = _treeData === null || _treeData === void 0 ? void 0 : _treeData.filter) === null || _a === void 0 ? void 0 : _a.call(_treeData, function (t) {\n                return t.pId !== id;\n              })) !== null && _b !== void 0 ? _b : [], true);\n            }\n            // 正常数据处理\n            var node = findNodeById(_treeData, id);\n            // children中可能有回显数据，需要分情况处理\n            if (node.children && Array.isArray(node.children)) {\n              if (!node.children.length) {\n                node.children = data;\n              } else {\n                node.children = __spreadArray(__spreadArray([], node.children, true), (_d = (_c = data === null || data === void 0 ? void 0 : data.filter) === null || _c === void 0 ? void 0 : _c.call(data, function (t) {\n                  return node.children.find(function (n) {\n                    return n.value !== t.value;\n                  });\n                })) !== null && _d !== void 0 ? _d : [], true);\n              }\n            } else {\n              node.children = data;\n            }\n            return __spreadArray([], _treeData !== null && _treeData !== void 0 ? _treeData : [], true);\n          });\n        });\n        resolve(undefined);\n      }, 300);\n    });\n  };\n  var onChange = function onChange(callback, params) {\n    changeValue.current = params;\n    callback.apply(void 0, params);\n  };\n  useMount(function () {\n    if (value) {\n      if (Array.isArray(value)) {\n        if (!!value.length) {\n          loadDefaultBranchData();\n        } else {\n          loadDefaultData();\n        }\n      } else {\n        loadDefaultBranchData();\n      }\n    } else {\n      loadDefaultData();\n    }\n  });\n  useUpdateEffect(function () {\n    if (!changeValue.current) {\n      loadDefaultBranchData();\n    }\n  }, [value]);\n  useUpdateEffect(function () {\n    if (value) {\n      loadDefaultBranchData();\n    } else {\n      loadDefaultData();\n    }\n  }, [JSON.stringify(cascadeParams)]);\n  useUpdateEffect(function () {\n    onDataSourceChange === null || onDataSourceChange === void 0 ? void 0 : onDataSourceChange(treeData);\n  }, [treeData]);\n  return {\n    treeData: treeData,\n    onLoadData: onLoadData,\n    onChange: onChange\n  };\n};\nexport default useAsyncCascader;"],"names":["__spreadArray","this","to","from","pack","arguments","length","ar","i","l","Array","prototype","slice","call","concat","useMount","useUpdateEffect","useRef","useState","useAsyncCascader","_a","findNodeById","treeData","id","loop","_treeData","result","value","children","loadDefaultData","fetchData","defaultId","cascadeParams","then","setTreeData","loadDefaultBranchData","fetchBranch","Promise","all","loadData","_b","rootNodes","_c","treeBranchNode","filter","_node","map","t","includes","data","onDataSourceChange","treeDataSimpleMode","changeValue","isArray","current","JSON","stringify","onLoadData","selectedOptions","resolve","targetOption","isLoading","setTimeout","_d","node","pId","find","n","undefined","onChange","callback","params","apply"],"mappings":"AAAA,IAAIA,cAAgBC,MAAQA,KAAKD,eAAiB,SAAUE,EAAIC,EAAMC,GACpE,GAAIA,GAA6B,IAArBC,UAAUC,OAAc,IAAK,IAA4BC,EAAxBC,EAAI,EAAGC,EAAIN,EAAKG,OAAYE,EAAIC,EAAGD,CAAC,GAC3ED,CAAAA,GAAQC,KAAKL,KACVI,EAAAA,GAASG,MAAMC,UAAUC,MAAMC,KAAKV,EAAM,EAAGK,CAAC,GAChDA,GAAKL,EAAKK,IAGjB,OAAON,EAAGY,OAAOP,GAAMG,MAAMC,UAAUC,MAAMC,KAAKV,CAAI,CAAC,CACzD,SACSY,SAAUC,eAA+B,KAAR,gBACjCC,OAAQC,QAAuB,KAAP,QAWjC,IAAIC,iBAAmB,SAA0BC,GAmB5B,SAAfC,EAAqCC,EAAUC,GAgBjD,OAfA,SAASC,EAAKC,GAEZ,IADA,IAAIC,EACKlB,EAAI,EAAGA,EAAIiB,EAAUnB,OAAQE,CAAC,GAAI,CACzC,GAAIiB,EAAUjB,GAAGmB,QAAUJ,EAAI,CAC7BG,EAASD,EAAUjB,GACnB,KACF,CAEE,GADAkB,EAASF,EAAKC,EAAUjB,GAAGoB,UAAY,EAAE,EAEvC,KAGN,CACA,OAAOF,CACT,EACYJ,CAAQ,CACtB,CAKsB,SAAlBO,IACFC,EAAUC,MAAAA,EAA6CA,EAAY,GAAIC,CAAa,EAAEC,KAAK,SAAUX,GACnGY,EAAYZ,CAAQ,CACtB,CAAC,CACH,CAK4B,SAAxBa,IAOGC,GAELC,QAAQC,IAAI,CAACC,EAASR,CAAS,EAAGK,MAAAA,EAAiD,KAAA,EAASA,EAAYT,EAAOK,CAAa,EAAE,EAAEC,KAAK,SAAUb,GAC7I,IAAIoB,EAAKpB,EAAG,GACVqB,EAAmB,KAAA,IAAPD,EAAgB,GAAKA,EACjCE,EAAKtB,EAAG,GACRuB,EAAwB,KAAA,IAAPD,EAAgB,GAAKA,EACxCR,EAAYlC,cAAcA,cAAc,GAAI2C,MAAAA,EAAuDA,EAAiB,GAAI,CAAA,CAAI,GAAIF,MAAAA,EAA6CA,EAAY,IAAIG,OAAO,SAAUC,GAC5M,MAAO,EAAEF,MAAAA,EAAuDA,EAAiB,IAAIG,IAAI,SAAUC,GACjG,OAAOA,EAAEpB,KACX,CAAC,EAAEqB,SAASH,EAAMlB,KAAK,CACzB,CAAC,EAAG,CAAA,CAAI,CAAC,CACX,CAAC,CACH,CAMe,SAAXY,EAA6BhB,GAC/B,OAAOO,EAAUP,EAAIS,CAAa,EAAEC,KAAK,SAAUgB,GACjD,OAAOA,CACT,CAAC,CACH,CA/EA,IAAIjB,EAAgBZ,EAAGY,cACrBkB,EAAqB9B,EAAG8B,mBACxBd,EAAchB,EAAGgB,YACjBN,EAAYV,EAAGU,UACfC,EAAYX,EAAGW,UACfJ,EAAQP,EAAGO,MACXwB,EAAqB/B,EAAG+B,mBACtBX,EAAKtB,SAAS,EAAE,EAClBI,EAAWkB,EAAG,GACdN,EAAcM,EAAG,GACfY,EAAcnC,OAAO,EAsJzB,OA9BAF,SAAS,YACHY,IACEjB,CAAAA,MAAM2C,QAAQ1B,CAAK,GACfA,EAAMrB,QAMZ6B,EAGFN,GAR0B,CAU9B,CAAC,EACDb,gBAAgB,WACToC,EAAYE,SACfnB,EAAsB,CAE1B,EAAG,CAACR,EAAM,EACVX,gBAAgB,YACVW,EACFQ,EAEAN,GAFsB,CAI1B,EAAG,CAAC0B,KAAKC,UAAUxB,CAAa,EAAE,EAClChB,gBAAgB,WACdkC,MAAAA,GAAwEA,EAAmB5B,CAAQ,CACrG,EAAG,CAACA,EAAS,EACN,CACLA,SAAUA,EACVmC,WA7Ee,SAAoBC,GACnC,OAAO,IAAIrB,QAAQ,SAAUsB,GAC3B,IAKIpC,EALAqC,EAAeF,EAAgBA,EAAgBpD,OAAS,GAEtDsD,EAAaC,YAEnBD,EAAaC,UAAY,CAAA,EACrBtC,EAAKqC,EAAajC,MACtBmC,WAAW,WACTvB,EAAShB,CAAE,EAAEU,KAAK,SAAUgB,GAC1Bf,EAAY,SAAUT,GACpB,IAAgBsC,EAQZC,EANJ,OAAMb,EACGnD,cAAcA,cAAc,GAAIiD,MAAAA,EAAmCA,EAAO,GAAI,CAAA,CAAI,EAAG,OAACT,EAAK,OAACpB,EAAKK,MAAAA,EAA6C,KAAA,EAASA,EAAUmB,QAAoC,KAAA,EAASxB,EAAGP,KAAKY,EAAW,SAAUsB,GAChP,OAAOA,EAAEkB,MAAQ1C,CACnB,CAAC,GAA+BiB,EAAK,GAAI,CAAA,CAAI,IAG3CwB,EAAO3C,EAAaI,EAAWF,CAAE,GAE5BK,UAAYlB,MAAM2C,QAAQW,EAAKpC,QAAQ,GACzCoC,EAAKpC,SAAStB,OAGjB0D,EAAKpC,SAAW5B,cAAcA,cAAc,GAAIgE,EAAKpC,SAAU,CAAA,CAAI,EAAG,OAACmC,EAAK,OAACrB,EAAKO,MAAAA,EAAmC,KAAA,EAASA,EAAKL,QAAoC,KAAA,EAASF,EAAG7B,KAAKoC,EAAM,SAAUF,GACtM,OAAOiB,EAAKpC,SAASsC,KAAK,SAAUC,GAClC,OAAOA,EAAExC,QAAUoB,EAAEpB,KACvB,CAAC,CACH,CAAC,GAA+BoC,EAAK,GAAI,CAAA,CAAI,EAG/CC,EAAKpC,SAAWqB,EAEXjD,cAAc,GAAIyB,MAAAA,EAA6CA,EAAY,GAAI,CAAA,CAAI,EAC5F,CAAC,CACH,CAAC,EACDkC,EAAQS,KAAAA,CAAS,CACnB,EAAG,GAAG,EACR,CAAC,CACH,EAsCEC,SArCa,SAAkBC,EAAUC,GACzCnB,EAAYE,QAAUiB,EACtBD,EAASE,MAAM,KAAA,EAAQD,CAAM,CAC/B,CAmCA,CACF,iBACepD"}