var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(a){for(var e,t=1,r=arguments.length;t<r;t++)for(var n in e=arguments[t])Object.prototype.hasOwnProperty.call(e,n)&&(a[n]=e[n]);return a}).apply(this,arguments)},__rest=this&&this.__rest||function(a,e){var t={};for(n in a)Object.prototype.hasOwnProperty.call(a,n)&&e.indexOf(n)<0&&(t[n]=a[n]);if(null!=a&&"function"==typeof Object.getOwnPropertySymbols)for(var r=0,n=Object.getOwnPropertySymbols(a);r<n.length;r++)e.indexOf(n[r])<0&&Object.prototype.propertyIsEnumerable.call(a,n[r])&&(t[n[r]]=a[n[r]]);return t};import React,{memo}from"react";import Cascader from"./CascaderTreeSelect";import useAsyncCascader from"./useAsyncCascader";var InternalAsyncCascader=memo(function(a){var e=a.cascadeParams,t=a.onDataSourceChange,r=a.fetchBranch,n=a.fetchData,c=a.defaultId,s=a.onChange,a=__rest(a,["cascadeParams","onDataSourceChange","fetchBranch","fetchData","defaultId","onChange"]),e=useAsyncCascader({cascadeParams:e,onDataSourceChange:t,fetchBranch:r,fetchData:n,defaultId:c,value:a.value,treeDataSimpleMode:a.treeDataSimpleMode}),t=e.treeData,r=e.onLoadData,o=e.onChange;return React.createElement(Cascader,__assign({},a,{options:t,loadData:r,onChange:function(){for(var a=[],e=0;e<arguments.length;e++)a[e]=arguments[e];return o(s,a)}}))}),AsyncCascader=InternalAsyncCascader;AsyncCascader.displayName="AsyncCascader";export default AsyncCascader;
//# sourceMappingURL=AsyncCascader.js.map
