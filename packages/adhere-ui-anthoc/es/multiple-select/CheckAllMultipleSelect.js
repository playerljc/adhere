var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(e){for(var r,t=1,l=arguments.length;t<l;t++)for(var n in r=arguments[t])Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n]);return e}).apply(this,arguments)},__rest=this&&this.__rest||function(e,r){var t={};for(n in e)Object.prototype.hasOwnProperty.call(e,n)&&r.indexOf(n)<0&&(t[n]=e[n]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var l=0,n=Object.getOwnPropertySymbols(e);l<n.length;l++)r.indexOf(n[l])<0&&Object.prototype.propertyIsEnumerable.call(e,n[l])&&(t[n[l]]=e[n[l]]);return t};import React,{memo}from"react";import DropdownRenderSelect from"../select/DropdownRenderSelect";import useCheckAllMultiple from"./useCheckAllMultiple";var CheckAllSelect=function(e){var r=e.children,t=e.checkAllWrapperClassName,l=e.checkAllWrapperStyle,n=e.dropdownWrapperClassName,p=e.dropdownWrapperStyle,e=__rest(e,["children","checkAllWrapperClassName","checkAllWrapperStyle","dropdownWrapperClassName","dropdownWrapperStyle"]),r=useCheckAllMultiple({children:r,checkAllWrapperClassName:t,checkAllWrapperStyle:l,dropdownWrapperClassName:n,dropdownWrapperStyle:p}),o=r.renderProps,a=r.currentOriginNode,c=r.dropdownRenderElement;return React.createElement(DropdownRenderSelect,__assign({},e,{mode:"multiple",filterOption:function(){return c===a}}),function(e){return o(e)})};export default memo(CheckAllSelect);
//# sourceMappingURL=CheckAllMultipleSelect.js.map
