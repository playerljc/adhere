"use strict";var __assign=function(){return(__assign=Object.assign||function(e){for(var r,t=1,n=arguments.length;t<n;t++)for(var o in r=arguments[t])Object.prototype.hasOwnProperty.call(r,o)&&(e[o]=r[o]);return e}).apply(this,arguments)},__createBinding=Object.create?function(e,r,t,n){void 0===n&&(n=t);var o=Object.getOwnPropertyDescriptor(r,t);o&&("get"in o?r.__esModule:!o.writable&&!o.configurable)||(o={enumerable:!0,get:function(){return r[t]}}),Object.defineProperty(e,n,o)}:function(e,r,t,n){e[n=void 0===n?t:n]=r[t]},__setModuleDefault=Object.create?function(e,r){Object.defineProperty(e,"default",{enumerable:!0,value:r})}:function(e,r){e.default=r},__importStar=function(e){if(e&&e.__esModule)return e;var r={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&__createBinding(r,e,t);return __setModuleDefault(r,e),r},__rest=function(e,r){var t={};for(o in e)Object.prototype.hasOwnProperty.call(e,o)&&r.indexOf(o)<0&&(t[o]=e[o]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var n=0,o=Object.getOwnPropertySymbols(e);n<o.length;n++)r.indexOf(o[n])<0&&Object.prototype.propertyIsEnumerable.call(e,o[n])&&(t[o[n]]=e[o[n]]);return t},__spreadArray=function(e,r,t){if(t||2===arguments.length)for(var n,o=0,l=r.length;o<l;o++)!n&&o in r||((n=n||Array.prototype.slice.call(r,0,o))[o]=r[o]);return e.concat(n||Array.prototype.slice.call(r))},__importDefault=function(e){return e&&e.__esModule?e:{default:e}},react_1=(Object.defineProperty(exports,"__esModule",{value:!0}),__importStar(require("react"))),Table_1=__importDefault(require("./Table")),InternalCheckboxTreeTable=(0,react_1.memo)(function(e){var r=e.value,o=void 0===r?[]:r,l=e.onChange,r=e.options,e=__rest(e,["value","onChange","options"]);return react_1.default.createElement(Table_1.default,__assign({dataSource:r,rowKey:"id",rowSelection:{type:"checkbox",selectedRowKeys:null!=o?o:[],onSelect:function(r,e,t){t=e?(t=t.filter(function(e){return!!e}).map(function(e){return e.value}),Array.from(new Set(__spreadArray(__spreadArray([],null!=o?o:[],!0),t,!0)))):(null!=o?o:[]).filter(function(e){return e!==r.id}),null!=l&&l(t,[],{selected:e,triggerNode:{props:r}})},onSelectAll:function(e,r,t){var n;r=e?(r=r.filter(function(e){return!!e}).map(function(e){return e.value}),Array.from(new Set(__spreadArray(__spreadArray([],null!=o?o:[],!0),r,!0)))):(n=t.filter(function(e){return!!e}).map(function(e){return e.value}),(null!=o?o:[]).filter(function(e){return!n.includes(e)})),null!=l&&l(r,[],{selected:e,triggerNode:{props:t}})}}},null!=e?e:{}))}),CheckboxTreeTable=InternalCheckboxTreeTable;CheckboxTreeTable.displayName="CheckboxTreeTable",exports.default=CheckboxTreeTable;
//# sourceMappingURL=CheckboxTreeTable.js.map
