{"version":3,"file":"CheckboxTreeTable.js","sources":["table/CheckboxTreeTable.js"],"sourcesContent":["\"use strict\";\n\nvar __assign = void 0 && (void 0).__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __createBinding = void 0 && (void 0).__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = void 0 && (void 0).__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = void 0 && (void 0).__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar __spreadArray = void 0 && (void 0).__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar __importDefault = void 0 && (void 0).__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar react_1 = __importStar(require(\"react\"));\nvar Table_1 = __importDefault(require(\"./Table\"));\n/**\n * CheckboxTreeTable\n * @description 多选的Table\n * @param value\n * @param onChange\n * @param options\n * @param props\n * @constructor\n */\nvar InternalCheckboxTreeTable = (0, react_1.memo)(function (_a) {\n  var _b = _a.value,\n    value = _b === void 0 ? [] : _b,\n    onChange = _a.onChange,\n    options = _a.options,\n    tableProps = __rest(_a, [\"value\", \"onChange\", \"options\"]);\n  return react_1.default.createElement(Table_1.default, __assign({\n    dataSource: options,\n    rowKey: \"id\",\n    rowSelection: {\n      type: 'checkbox',\n      selectedRowKeys: value !== null && value !== void 0 ? value : [],\n      onSelect: function onSelect(record, selected, selectedRows) {\n        var changeSelectedRowKeys;\n        if (selected) {\n          var selectedRowKeys = selectedRows.filter(function (t) {\n            return !!t;\n          }).map(function (t) {\n            return t.value;\n          });\n          changeSelectedRowKeys = Array.from(new Set(__spreadArray(__spreadArray([], value !== null && value !== void 0 ? value : [], true), selectedRowKeys, true)));\n        } else {\n          changeSelectedRowKeys = (value !== null && value !== void 0 ? value : []).filter(function (t) {\n            return t !== record.id;\n          });\n        }\n        onChange === null || onChange === void 0 ? void 0 : onChange(changeSelectedRowKeys, [], {\n          selected: selected,\n          // @ts-ignore\n          triggerNode: {\n            props: record\n          }\n        });\n      },\n      onSelectAll: function onSelectAll(selected, selectedRows, changeRows) {\n        var changeSelectedRowKeys;\n        if (selected) {\n          var selectedRowKeys = selectedRows.filter(function (t) {\n            return !!t;\n          }).map(function (t) {\n            return t.value;\n          });\n          changeSelectedRowKeys = Array.from(new Set(__spreadArray(__spreadArray([], value !== null && value !== void 0 ? value : [], true), selectedRowKeys, true)));\n        } else {\n          var selectedRowKeys_1 = changeRows.filter(function (t) {\n            return !!t;\n          }).map(function (t) {\n            return t.value;\n          });\n          changeSelectedRowKeys = (value !== null && value !== void 0 ? value : []).filter(function (t) {\n            return !selectedRowKeys_1.includes(t);\n          });\n        }\n        onChange === null || onChange === void 0 ? void 0 : onChange(changeSelectedRowKeys, [], {\n          selected: selected,\n          // @ts-ignore\n          triggerNode: {\n            props: changeRows\n          }\n        });\n      }\n    }\n  }, tableProps !== null && tableProps !== void 0 ? tableProps : {}));\n});\nvar CheckboxTreeTable = InternalCheckboxTreeTable;\nCheckboxTreeTable.displayName = 'CheckboxTreeTable';\nexports.default = CheckboxTreeTable;"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__createBinding","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__spreadArray","to","from","pack","ar","l","Array","slice","concat","__importDefault","default","react_1","exports","require","Table_1","InternalCheckboxTreeTable","memo","_a","_b","onChange","options","tableProps","createElement","dataSource","rowKey","rowSelection","type","selectedRowKeys","onSelect","record","selected","selectedRows","changeSelectedRowKeys","filter","map","Set","id","triggerNode","props","onSelectAll","changeRows","selectedRowKeys_1","includes","CheckboxTreeTable","displayName"],"mappings":"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"}