{"version":3,"file":"useAsyncTreeSelect.js","sources":["tree-select/useAsyncTreeSelect.js"],"sourcesContent":["\"use strict\";\n\nvar __spreadArray = void 0 && (void 0).__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ahooks_1 = require(\"ahooks\");\nvar react_1 = require(\"react\");\n/**\n * useAsyncTreeSelect\n * @param dictName\n * @param cascadeParams\n * @param onDataSourceChange\n * @param fetchBranch\n * @param defaultId\n * @param value\n * @param treeDataSimpleMode\n */\nvar useAsyncTreeSelect = function useAsyncTreeSelect(_a) {\n  var cascadeParams = _a.cascadeParams,\n    onDataSourceChange = _a.onDataSourceChange,\n    fetchBranch = _a.fetchBranch,\n    fetchData = _a.fetchData,\n    defaultId = _a.defaultId,\n    value = _a.value,\n    treeDataSimpleMode = _a.treeDataSimpleMode;\n  var _b = (0, react_1.useState)([]),\n    treeData = _b[0],\n    setTreeData = _b[1];\n  var changeValue = (0, react_1.useRef)();\n  /**\n   * findNodeById\n   * @description 通过id寻找节点\n   * @param treeData\n   * @param {string} id\n   * @return object\n   */\n  var findNodeById = function findNodeById(treeData, id) {\n    function loop(_treeData) {\n      var result;\n      for (var i = 0; i < _treeData.length; i++) {\n        if (_treeData[i].value === id) {\n          result = _treeData[i];\n          break;\n        } else {\n          result = loop(_treeData[i].children || []);\n          if (result) {\n            break;\n          }\n        }\n      }\n      return result;\n    }\n    return loop(treeData);\n  };\n  /**\n   * loadDefaultData\n   * @description 加载初始化的数据\n   */\n  var loadDefaultData = function loadDefaultData() {\n    fetchData(defaultId !== null && defaultId !== void 0 ? defaultId : '', cascadeParams).then(function (treeData) {\n      setTreeData(treeData);\n    });\n  };\n  /**\n   * loadDefaultBranchData\n   * @description 加载回显的数据\n   */\n  var loadDefaultBranchData = function loadDefaultBranchData() {\n    // const treeBranchNode = Util.arrayToAntdTreeSelect(data, {\n    //   keyAttr: 'id',\n    //   titleAttr: 'title',\n    //   rootParentId: '0',\n    //   parentIdAttr: 'pid',\n    // });\n    if (!fetchBranch) return;\n    // 回显 回显数据 并集 topLevel\n    Promise.all([loadData(defaultId), fetchBranch === null || fetchBranch === void 0 ? void 0 : fetchBranch(value, cascadeParams)]).then(function (_a) {\n      var _b = _a[0],\n        rootNodes = _b === void 0 ? [] : _b,\n        _c = _a[1],\n        treeBranchNode = _c === void 0 ? [] : _c;\n      setTreeData(__spreadArray(__spreadArray([], treeBranchNode !== null && treeBranchNode !== void 0 ? treeBranchNode : [], true), (rootNodes !== null && rootNodes !== void 0 ? rootNodes : []).filter(function (_node) {\n        return !(treeBranchNode !== null && treeBranchNode !== void 0 ? treeBranchNode : []).map(function (t) {\n          return t.value;\n        }).includes(_node.value);\n      }), true));\n    });\n  };\n  /**\n   * loadData\n   * @description Async加载数据\n   * @param {string} id\n   */\n  var loadData = function loadData(id) {\n    return fetchData(id, cascadeParams).then(function (data) {\n      return data;\n    });\n  };\n  /**\n   * onLoadData\n   * @param id\n   * @return {Promise<undefined>}\n   */\n  var onLoadData = function onLoadData(_a) {\n    var id = _a.value;\n    return new Promise(function (resolve) {\n      setTimeout(function () {\n        loadData(id).then(function (data) {\n          setTreeData(function (_treeData) {\n            var _a, _b, _c, _d;\n            // 拉平数据处理\n            if (!!treeDataSimpleMode) {\n              return __spreadArray(__spreadArray([], data !== null && data !== void 0 ? data : [], true), (_b = (_a = _treeData === null || _treeData === void 0 ? void 0 : _treeData.filter) === null || _a === void 0 ? void 0 : _a.call(_treeData, function (t) {\n                return t.pId !== id;\n              })) !== null && _b !== void 0 ? _b : [], true);\n            }\n            // 正常数据处理\n            var node = findNodeById(_treeData, id);\n            // children中可能有回显数据，需要分情况处理\n            if (node.children && Array.isArray(node.children)) {\n              if (!node.children.length) {\n                node.children = data;\n              } else {\n                node.children = __spreadArray(__spreadArray([], node.children, true), (_d = (_c = data === null || data === void 0 ? void 0 : data.filter) === null || _c === void 0 ? void 0 : _c.call(data, function (t) {\n                  return node.children.find(function (n) {\n                    return n.value !== t.value;\n                  });\n                })) !== null && _d !== void 0 ? _d : [], true);\n              }\n            } else {\n              node.children = data;\n            }\n            return __spreadArray([], _treeData !== null && _treeData !== void 0 ? _treeData : [], true);\n          });\n        });\n        resolve(undefined);\n      }, 300);\n    });\n  };\n  var onChange = function onChange(callback, params) {\n    changeValue.current = params;\n    callback.apply(void 0, params);\n  };\n  (0, ahooks_1.useMount)(function () {\n    if (value) {\n      if (Array.isArray(value)) {\n        if (!!value.length) {\n          loadDefaultBranchData();\n        } else {\n          loadDefaultData();\n        }\n      } else {\n        loadDefaultBranchData();\n      }\n    } else {\n      loadDefaultData();\n    }\n  });\n  (0, ahooks_1.useUpdateEffect)(function () {\n    if (!changeValue.current) {\n      loadDefaultBranchData();\n    }\n  }, [value]);\n  (0, ahooks_1.useUpdateEffect)(function () {\n    if (value) {\n      loadDefaultBranchData();\n    } else {\n      loadDefaultData();\n    }\n  }, [JSON.stringify(cascadeParams)]);\n  (0, ahooks_1.useUpdateEffect)(function () {\n    onDataSourceChange === null || onDataSourceChange === void 0 ? void 0 : onDataSourceChange(treeData);\n  }, [treeData]);\n  return {\n    treeData: treeData,\n    onLoadData: onLoadData,\n    onChange: onChange\n  };\n};\nexports.default = useAsyncTreeSelect;"],"names":["__spreadArray","to","from","pack","arguments","length","ar","i","l","Array","prototype","slice","call","concat","ahooks_1","Object","defineProperty","exports","value","require","react_1","useAsyncTreeSelect","_a","findNodeById","treeData","id","loop","_treeData","result","children","loadDefaultData","fetchData","defaultId","cascadeParams","then","setTreeData","loadDefaultBranchData","fetchBranch","Promise","all","loadData","_b","rootNodes","_c","treeBranchNode","filter","_node","map","t","includes","data","onDataSourceChange","treeDataSimpleMode","useState","changeValue","useRef","useMount","isArray","useUpdateEffect","current","JSON","stringify","onLoadData","resolve","setTimeout","_d","node","pId","find","n","undefined","onChange","callback","params","apply","default"],"mappings":"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"}