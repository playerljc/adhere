{"version":3,"file":"Permission.js","sources":["Permission.js"],"sourcesContent":["import React from 'react';\nimport ConditionalRender from '@baifendian/adhere-ui-conditionalrender';\n// 所有的权限\nvar permissions = [];\n/**\n * setPermission - 设置拥有的所有权限\n * @param {Array<String>} permission\n */\nexport var setPermission = function (permission) {\n    permissions = permission;\n};\n/**\n * getPermission - 获取拥有的所有权限\n * @return\n */\nexport var getPermission = function () { return JSON.parse(JSON.stringify(permissions)); };\n/**\n * checkPermission - 判断是否有权限方法\n * @param {Array<String>} allPermission\n * @param {String | Array<String>} currentPermissions 当前组件或者页面对应得权限key\n * @return boolean\n */\nexport var checkPermission = function (allPermission, currentPermissions) {\n    if (allPermission === void 0) { allPermission = getPermission(); }\n    allPermission = allPermission || getPermission();\n    // 所有的权限\n    if (!allPermission || !Array.isArray(allPermission) || !currentPermissions) {\n        return true;\n    }\n    if (Array.isArray(currentPermissions)) {\n        return currentPermissions.every(function (curPermissions) { return allPermission.indexOf(curPermissions) !== -1; });\n    }\n    return allPermission.indexOf(currentPermissions) !== -1;\n};\n/**\n * Permission - 组件或者某一个模块的权限渲染方式\n * @param {Array<String>} allPermission\n * @param {String | Array<String>} permissions 当前组件或者某一个模块对应得权限key\n * @param {String | ReactElement} children 想要渲染的部分\n * @param {String | ReactElement} noMatch 没有权限是想要提示的部分\n * @return {String | ReactElement}\n */\nexport var Permission = function (_a) {\n    var _b = _a.allPermission, allPermission = _b === void 0 ? getPermission() : _b, permissions = _a.permissions, children = _a.children, noMatch = _a.noMatch;\n    return (React.createElement(ConditionalRender, { conditional: checkPermission(allPermission, permissions), noMatch: noMatch }, children));\n};\n/**\n * PermissionFun - 函数方式实现\n * @param allPermission\n * @param permissions\n * @param match\n * @param noMatch\n * @constructor\n */\nexport function PermissionFun(_a) {\n    var _b = _a.allPermission, allPermission = _b === void 0 ? getPermission() : _b, permissions = _a.permissions, match = _a.match, noMatch = _a.noMatch;\n    return ConditionalRender.conditionalRender({\n        conditional: checkPermission(allPermission, permissions),\n        match: match,\n        noMatch: noMatch,\n    });\n}\n// Permission.defaultProps = {\n//   allPermission: undefined,\n//   permissions: '',\n//   noMatch: () => null,\n//   children: null,\n// };\n//\n// Permission.propTypes = {\n//   allPermission: PropTypes.array,\n//   permissions: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n//   noMatch: PropTypes.node,\n//   children: PropTypes.node,\n// };\n"],"names":["React","ConditionalRender","permissions","setPermission","permission","getPermission","JSON","parse","stringify","checkPermission","allPermission","currentPermissions","Array","isArray","every","curPermissions","indexOf","Permission","_a","_b","children","noMatch","createElement","conditional","PermissionFun","match","conditionalRender"],"mappings":"OAAOA,UAAW,eACXC,sBAAuB,0CAE9B,IAAIC,YAAc,GAKPC,cAAgB,SAAUC,GACjCF,YAAcE,CAClB,EAKWC,cAAgB,WAAc,OAAOC,KAAKC,MAAMD,KAAKE,UAAUN,WAAW,CAAC,CAAG,EAO9EO,gBAAkB,SAAUC,EAAeC,GAIlD,MAAI,GAFJD,GADgCA,EAAV,KAAA,IAAlBA,EAA4CL,cAAc,EAC9CK,IAAiBL,cAAc,IAExBO,MAAMC,QAAQH,CAAa,GAAMC,KAGpDC,MAAMC,QAAQF,CAAkB,EACzBA,EAAmBG,MAAM,SAAUC,GAAkB,MAAiD,CAAC,IAA3CL,EAAcM,QAAQD,CAAc,CAAU,CAAC,EAEjE,CAAC,IAA/CL,EAAcM,QAAQL,CAAkB,EACnD,EASWM,WAAa,SAAUC,GAC9B,IAAIC,EAAKD,EAAGR,cAAeA,EAAuB,KAAA,IAAPS,EAAgBd,cAAc,EAAIc,EAAIjB,EAAcgB,EAAGhB,YAAakB,EAAWF,EAAGE,SAAUC,EAAUH,EAAGG,QACpJ,OAAQrB,MAAMsB,cAAcrB,kBAAmB,CAAEsB,YAAad,gBAAgBC,EAAeR,CAAW,EAAGmB,QAASA,CAAQ,EAAGD,CAAS,CAC5I,EASO,SAASI,cAAcN,GAC1B,IAAIC,EAAKD,EAAGR,cAAeA,EAAuB,KAAA,IAAPS,EAAgBd,cAAc,EAAIc,EAAIjB,EAAcgB,EAAGhB,YAAauB,EAAQP,EAAGO,MAAOJ,EAAUH,EAAGG,QAC9I,OAAOpB,kBAAkByB,kBAAkB,CACvCH,YAAad,gBAAgBC,EAAeR,CAAW,EACvDuB,MAAOA,EACPJ,QAASA,CACb,CAAC,CACL,QArDWlB,cAOAE,cAOAI,gBAoBAQ,WAYKO,aAOhB"}