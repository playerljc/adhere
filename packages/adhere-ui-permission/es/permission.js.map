{"version":3,"file":"permission.js","sources":["permission.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\n// 所有的权限\r\nvar permissions = [];\r\n/**\r\n * setPermission - 设置拥有的所有权限\r\n * @param {Array<String>} permission\r\n */\r\nexport var setPermission = function (permission) {\r\n    permissions = permission;\r\n};\r\n/**\r\n * getPermission - 获取拥有的所有权限\r\n * @return\r\n */\r\nexport var getPermission = function () { return JSON.parse(JSON.stringify(permissions)); };\r\n/**\r\n * checkPermission - 判断是否有权限方法\r\n * @param {Array<String>} allPermission\r\n * @param {String | Array<String>} currentPermissions 当前组件或者页面对应得权限key\r\n * @return boolean\r\n */\r\nexport var checkPermission = function (allPermission, currentPermissions) {\r\n    if (allPermission === void 0) { allPermission = getPermission(); }\r\n    allPermission = allPermission || getPermission();\r\n    // 所有的权限\r\n    if (!allPermission || !Array.isArray(allPermission) || !currentPermissions) {\r\n        return true;\r\n    }\r\n    if (Array.isArray(currentPermissions)) {\r\n        return currentPermissions.every(function (curPermissions) { return allPermission.indexOf(curPermissions) !== -1; });\r\n    }\r\n    return allPermission.indexOf(currentPermissions) !== -1;\r\n};\r\n/**\r\n * Permission - 组件或者某一个模块的权限渲染方式\r\n * @param {Array<String>} allPermission\r\n * @param {String | Array<String>} permissions 当前组件或者某一个模块对应得权限key\r\n * @param {String | ReactElement} children 想要渲染的部分\r\n * @param {String | ReactElement} noMatch 没有权限是想要提示的部分\r\n * @return {String | ReactElement}\r\n */\r\nexport var Permission = function (_a) {\r\n    var _b = _a.allPermission, allPermission = _b === void 0 ? getPermission() : _b, permissions = _a.permissions, children = _a.children, _c = _a.noMatch, noMatch = _c === void 0 ? null : _c;\r\n    return (checkPermission(allPermission, permissions) ? children : noMatch);\r\n};\r\nPermission.defaultProps = {\r\n    allPermission: undefined,\r\n    permissions: '',\r\n    noMatch: null,\r\n    children: null,\r\n};\r\nPermission.propTypes = {\r\n    allPermission: PropTypes.array,\r\n    permissions: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\r\n    noMatch: PropTypes.node,\r\n    children: PropTypes.node,\r\n};\r\n"],"names":["PropTypes","permissions","setPermission","permission","getPermission","JSON","parse","stringify","checkPermission","allPermission","currentPermissions","Array","isArray","every","curPermissions","indexOf","Permission","_a","_b","children","_c","noMatch","defaultProps","undefined","propTypes","array","oneOfType","string","node"],"mappings":"OAAOA,2BAEP,IAAIC,YAAc,GAKPC,cAAgB,SAAUC,GACjCF,YAAcE,GAMPC,cAAgB,WAAc,OAAOC,KAAKC,MAAMD,KAAKE,UAAUN,eAO/DO,gBAAkB,SAAUC,EAAeC,GAIlD,SAFAD,GADgCA,OAAV,IAAlBA,EAA4CL,gBAChCK,IAAiBL,kBAEVO,MAAMC,QAAQH,IAAmBC,KAGpDC,MAAMC,QAAQF,GACPA,EAAmBG,MAAM,SAAUC,GAAkB,OAAkD,IAA3CL,EAAcM,QAAQD,MAEvC,IAA/CL,EAAcM,QAAQL,KAUtBM,WAAa,SAAUC,GAC9B,IAAIC,EAAKD,EAAGR,cAAeA,OAAuB,IAAPS,EAAgBd,gBAAkBc,EAAIjB,EAAcgB,EAAGhB,YAAakB,EAAWF,EAAGE,SAAUC,EAAKH,EAAGI,QAASA,OAAiB,IAAPD,EAAgB,KAAOA,EACzL,OAAQZ,gBAAgBC,EAAeR,GAAekB,EAAWE,GAErEL,WAAWM,aAAe,CACtBb,mBAAec,EACftB,YAAa,GACboB,QAAS,KACTF,SAAU,MAEdH,WAAWQ,UAAY,CACnBf,cAAeT,UAAUyB,MACzBxB,YAAaD,UAAU0B,UAAU,CAAC1B,UAAUyB,MAAOzB,UAAU2B,SAC7DN,QAASrB,UAAU4B,KACnBT,SAAUnB,UAAU4B,aAhDb1B,cAOAE,cAOAI,gBAoBAQ"}