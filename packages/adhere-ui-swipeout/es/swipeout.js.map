{"version":3,"file":"swipeout.js","sources":["swipeout.js"],"sourcesContent":["import React, { useEffect, useLayoutEffect, useRef } from 'react';\r\nimport classNames from 'classnames';\r\nimport Swiper from 'swiper';\r\nvar selectorPrefix = 'adhere-ui-swipeout';\r\nvar SwipeOut = function (props) {\r\n    var _a = props.className, className = _a === void 0 ? '' : _a, _b = props.style, style = _b === void 0 ? {} : _b, _c = props.contentClassName, contentClassName = _c === void 0 ? '' : _c, _d = props.contentStyle, contentStyle = _d === void 0 ? {} : _d, _e = props.beforeClassName, beforeClassName = _e === void 0 ? '' : _e, _f = props.beforeStyle, beforeStyle = _f === void 0 ? {} : _f, _g = props.afterClassName, afterClassName = _g === void 0 ? '' : _g, _h = props.afterStyle, afterStyle = _h === void 0 ? {} : _h, before = props.before, after = props.after, _j = props.beforeShow, beforeShow = _j === void 0 ? false : _j, _k = props.afterShow, afterShow = _k === void 0 ? false : _k, _l = props.direction, direction = _l === void 0 ? 'horizontal' : _l, _m = props.duration, duration = _m === void 0 ? 0 : _m, children = props.children;\r\n    var ref = useRef(null);\r\n    var swiper = useRef();\r\n    var map = useRef(new Map([\r\n        [[true, true].toString(), 1],\r\n        [[false, false].toString(), 1],\r\n        [[true, false].toString(), 0],\r\n        [[false, true].toString(), 2],\r\n    ]));\r\n    function slide() {\r\n        swiper.current.slideTo(map.current.get([beforeShow, afterShow].toString()), duration);\r\n    }\r\n    function createSwiper() {\r\n        if (swiper.current) {\r\n            return;\r\n            // swiper.current.destroy();\r\n        }\r\n        var initialSlide = map.current.get([beforeShow, afterShow].toString());\r\n        swiper.current = new Swiper(ref.current, {\r\n            init: false,\r\n            // 初始化在第一个选项卡上\r\n            initialSlide: initialSlide,\r\n            direction: direction,\r\n            slidesPerView: 'auto',\r\n            centeredSlides: false,\r\n            spaceBetween: 0,\r\n        });\r\n        swiper.current.on('init', function () { return trigger('onInit'); });\r\n        swiper.current.on('slideChangeTransitionStart', function () {\r\n            return trigger('onSlideChangeTransitionStart', swiper.current.activeIndex);\r\n        });\r\n        swiper.current.on('slideChangeTransitionEnd', function () {\r\n            return trigger('onSlideChangeTransitionEnd', swiper.current.activeIndex);\r\n        });\r\n        swiper.current.init();\r\n    }\r\n    function trigger(action, params) {\r\n        if (props[action]) {\r\n            props[action](params);\r\n        }\r\n    }\r\n    useLayoutEffect(function () { return createSwiper(); }, []);\r\n    useEffect(function () { return slide(); }, [beforeShow, afterShow, duration]);\r\n    useEffect(function () { return swiper.current && swiper.current.changeDirection(direction); }, [direction]);\r\n    return (React.createElement(\"div\", { className: classNames(selectorPrefix, 'swiper-container', className || ''), style: style || {}, ref: ref },\r\n        React.createElement(\"div\", { className: \"swiper-wrapper\" },\r\n            React.createElement(\"div\", { className: classNames('swiper-slide', selectorPrefix + \"-before\", beforeClassName || ''), style: beforeStyle || {} }, before === null || before === void 0 ? void 0 : before()),\r\n            React.createElement(\"div\", { className: classNames('swiper-slide', selectorPrefix + \"-content\", contentClassName || ''), style: contentStyle || {} }, children),\r\n            React.createElement(\"div\", { className: classNames('swiper-slide', selectorPrefix + \"-after\", afterClassName || ''), style: afterStyle || {} }, after === null || after === void 0 ? void 0 : after()))));\r\n};\r\n// /**\r\n//  * SwipeOut\r\n//  * @class SwipeOut\r\n//  * @classdesc SwipeOut\r\n//  */\r\n// class SwipeOut extends React.Component<ISwipeOutProps> {\r\n//   static defaultProps: any;\r\n//   static propTypes: any;\r\n//\r\n//   private ref = React.createRef();\r\n//   private swiper: Swiper | null = null;\r\n//\r\n//   private map = new Map([\r\n//     [[true, true].toString(), 1],\r\n//     [[false, false].toString(), 1],\r\n//     [[true, false].toString(), 0],\r\n//     [[false, true].toString(), 2],\r\n//   ]);\r\n//\r\n//   componentDidMount() {\r\n//     this.createSwiper();\r\n//   }\r\n//\r\n//   componentWillReceiveProps(nextProps: Readonly<ISwipeOutProps>) {\r\n//     if (this.props.direction !== nextProps.direction) {\r\n//       this.swiper.changeDirection(nextProps.direction);\r\n//     }\r\n//\r\n//     if (\r\n//       this.props.beforeShow !== nextProps.beforeShow ||\r\n//       this.props.afterShow !== nextProps.afterShow\r\n//     ) {\r\n//       this.slide(nextProps);\r\n//     }\r\n//   }\r\n//\r\n//   private slide(props: ISwipeOutProps): void {\r\n//     const { beforeShow, afterShow, duration } = props;\r\n//\r\n//     this.swiper.slideTo(this.map.get([beforeShow, afterShow].toString()), duration);\r\n//   }\r\n//\r\n//   /**\r\n//    * createSwiper\r\n//    * @private\r\n//    */\r\n//   private createSwiper(): void {\r\n//     if (this.swiper) {\r\n//       this.swiper.destroy();\r\n//     }\r\n//\r\n//     const { beforeShow, afterShow } = this.props;\r\n//\r\n//     // console.log('beforeShow-afterShow', beforeShow, afterShow, [beforeShow, afterShow].toString());\r\n//\r\n//     const initialSlide = this.map.get([beforeShow, afterShow].toString());\r\n//\r\n//     // console.log('initialSlide', initialSlide);\r\n//\r\n//     this.swiper = new Swiper(this.ref.current, {\r\n//       init: false,\r\n//       // 初始化在第一个选项卡上\r\n//       initialSlide,\r\n//       direction: this.props.direction,\r\n//       slidesPerView: 'auto',\r\n//       centeredSlides: false,\r\n//       spaceBetween: 0,\r\n//     });\r\n//\r\n//     this.swiper.on('init', () => {\r\n//       this.trigger('onInit');\r\n//     });\r\n//\r\n//     this.swiper.on('slideChangeTransitionStart', () => {\r\n//       this.trigger('onSlideChangeTransitionStart', this.swiper.activeIndex);\r\n//     });\r\n//\r\n//     this.swiper.on('slideChangeTransitionEnd', () => {\r\n//       this.trigger('onSlideChangeTransitionEnd', this.swiper.activeIndex);\r\n//     });\r\n//\r\n//     this.swiper.init();\r\n//   }\r\n//\r\n//   /**\r\n//    * trigger\r\n//    * @param action\r\n//    * @param params\r\n//    * @private\r\n//    */\r\n//   private trigger(action: string, params?: any): void {\r\n//     if (this.props[action]) {\r\n//       this.props[action](params);\r\n//     }\r\n//   }\r\n//\r\n//   render() {\r\n//     // @ts-ignore\r\n//     const {\r\n//       className,\r\n//       style,\r\n//       contentClassName,\r\n//       contentStyle,\r\n//       beforeClassName,\r\n//       beforeStyle,\r\n//       afterClassName,\r\n//       afterStyle,\r\n//       before,\r\n//       after,\r\n//       children,\r\n//     } = this.props;\r\n//\r\n//     // @ts-ignore\r\n//     return (\r\n//       <div\r\n//         className={classNames(\r\n//           selectorPrefix,\r\n//           'swiper-container',\r\n//           // @ts-ignore\r\n//           className.split(/\\s+/),\r\n//         )}\r\n//         style={{ ...style }}\r\n//         // @ts-ignore\r\n//         ref={this.ref}\r\n//       >\r\n//         <div className=\"swiper-wrapper\">\r\n//           <div\r\n//             className={classNames(\r\n//               'swiper-slide',\r\n//               `${selectorPrefix}-before`,\r\n//               // @ts-ignore\r\n//               beforeClassName.split(/\\s+/),\r\n//             )}\r\n//             style={{ ...beforeStyle }}\r\n//           >\r\n//             {before()}\r\n//           </div>\r\n//           <div\r\n//             className={classNames(\r\n//               'swiper-slide',\r\n//               `${selectorPrefix}-content`,\r\n//               // @ts-ignore\r\n//               contentClassName.split(/\\s+/),\r\n//             )}\r\n//             style={{ ...contentStyle }}\r\n//           >\r\n//             {children}\r\n//           </div>\r\n//           <div\r\n//             className={classNames(\r\n//               'swiper-slide',\r\n//               `${selectorPrefix}-after`,\r\n//               // @ts-ignore\r\n//               afterClassName.split(/\\s+/),\r\n//             )}\r\n//             style={{ ...afterStyle }}\r\n//           >\r\n//             {after()}\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n//\r\n// SwipeOut.defaultProps = {\r\n//   className: '',\r\n//   style: {},\r\n//   beforeClassName: '',\r\n//   beforeStyle: {},\r\n//   afterClassName: '',\r\n//   afterStyle: {},\r\n//   contentClassName: '',\r\n//   contentStyle: {},\r\n//   beforeShow: false,\r\n//   afterShow: false,\r\n//   direction: 'horizontal',\r\n//   duration: 0,\r\n//   before: () => null,\r\n//   after: () => null,\r\n// };\r\n//\r\n// SwipeOut.propTypes = {\r\n//   className: PropTypes.string,\r\n//   style: PropTypes.object,\r\n//   beforeClassName: PropTypes.string,\r\n//   beforeStyle: PropTypes.object,\r\n//   afterClassName: PropTypes.string,\r\n//   afterStyle: PropTypes.object,\r\n//   contentClassName: PropTypes.string,\r\n//   contentStyle: PropTypes.object,\r\n//   beforeShow: PropTypes.bool,\r\n//   afterShow: PropTypes.bool,\r\n//   direction: PropTypes.string,\r\n//   duration: PropTypes.number,\r\n//   before: PropTypes.func,\r\n//   after: PropTypes.func,\r\n//   onInit: PropTypes.func,\r\n//   slideChangeTransitionStart: PropTypes.func,\r\n//   slideChangeTransitionEnd: PropTypes.func,\r\n// };\r\nexport default SwipeOut;\r\n"],"names":["React","useEffect","useLayoutEffect","useRef","classNames","Swiper","selectorPrefix","SwipeOut","props","_a","className","_b","style","_c","contentClassName","_d","contentStyle","_e","beforeClassName","_f","beforeStyle","_g","afterClassName","_h","afterStyle","before","after","_j","beforeShow","_k","afterShow","_l","direction","_m","duration","children","ref","swiper","map","Map","toString","trigger","action","params","initialSlide","current","get","init","slidesPerView","centeredSlides","spaceBetween","on","activeIndex","slideTo","changeDirection","createElement"],"mappings":"OAAOA,OAASC,UAAWC,gBAAiBC,0BACrCC,mCACAC,oBACP,IAAIC,eAAiB,qBACjBC,SAAW,SAAUC,GACrB,IAAIC,EAAKD,EAAME,UAAWA,OAAmB,IAAPD,EAAgB,GAAKA,EAAIE,EAAKH,EAAMI,MAAOA,OAAe,IAAPD,EAAgB,GAAKA,EAAIE,EAAKL,EAAMM,iBAAkBA,OAA0B,IAAPD,EAAgB,GAAKA,EAAIE,EAAKP,EAAMQ,aAAcA,OAAsB,IAAPD,EAAgB,GAAKA,EAAIE,EAAKT,EAAMU,gBAAiBA,OAAyB,IAAPD,EAAgB,GAAKA,EAAIE,EAAKX,EAAMY,YAAaA,OAAqB,IAAPD,EAAgB,GAAKA,EAAIE,EAAKb,EAAMc,eAAgBA,OAAwB,IAAPD,EAAgB,GAAKA,EAAIE,EAAKf,EAAMgB,WAAYA,OAAoB,IAAPD,EAAgB,GAAKA,EAAIE,EAASjB,EAAMiB,OAAQC,EAAQlB,EAAMkB,MAAOC,EAAKnB,EAAMoB,WAAYA,OAAoB,IAAPD,GAAwBA,EAAIE,EAAKrB,EAAMsB,UAAWA,OAAmB,IAAPD,GAAwBA,EAAIE,EAAKvB,EAAMwB,UAAWA,OAAmB,IAAPD,EAAgB,aAAeA,EAAIE,EAAKzB,EAAM0B,SAAUA,OAAkB,IAAPD,EAAgB,EAAIA,EAAIE,EAAW3B,EAAM2B,SACxzBC,EAAMjC,OAAO,MACbkC,EAASlC,SACTmC,EAAMnC,OAAO,IAAIoC,IAAI,CACrB,CAAC,EAAC,GAAM,GAAMC,WAAY,GAC1B,CAAC,EAAC,GAAO,GAAOA,WAAY,GAC5B,CAAC,EAAC,GAAM,GAAOA,WAAY,GAC3B,CAAC,EAAC,GAAO,GAAMA,WAAY,MA6B/B,SAASC,EAAQC,EAAQC,GACjBnC,EAAMkC,IACNlC,EAAMkC,GAAQC,GAMtB,OAHAzC,gBAAgB,WA7BhB,IAKQ0C,EAJAP,EAAOQ,UAIPD,EAAeN,EAAIO,QAAQC,IAAI,CAAClB,EAAYE,GAAWU,YAC3DH,EAAOQ,QAAU,IAAIxC,OAAO+B,EAAIS,QAAS,CACrCE,MAAM,EAENH,aAAcA,EACdZ,UAAWA,EACXgB,cAAe,OACfC,gBAAgB,EAChBC,aAAc,IAElBb,EAAOQ,QAAQM,GAAG,OAAQ,WAAc,OAAOV,EAAQ,YACvDJ,EAAOQ,QAAQM,GAAG,6BAA8B,WAC5C,OAAOV,EAAQ,+BAAgCJ,EAAOQ,QAAQO,eAElEf,EAAOQ,QAAQM,GAAG,2BAA4B,WAC1C,OAAOV,EAAQ,6BAA8BJ,EAAOQ,QAAQO,eAEhEf,EAAOQ,QAAQE,SAOqC,IACxD9C,UAAU,WAhCNoC,EAAOQ,QAAQQ,QAAQf,EAAIO,QAAQC,IAAI,CAAClB,EAAYE,GAAWU,YAAaN,IAgCrC,CAACN,EAAYE,EAAWI,IACnEjC,UAAU,WAAc,OAAOoC,EAAOQ,SAAWR,EAAOQ,QAAQS,gBAAgBtB,IAAe,CAACA,IACxFhC,MAAMuD,cAAc,MAAO,CAAE7C,UAAWN,WAAWE,eAAgB,mBAAoBI,GAAa,IAAKE,MAAOA,GAAS,GAAIwB,IAAKA,GACtIpC,MAAMuD,cAAc,MAAO,CAAE7C,UAAW,kBACpCV,MAAMuD,cAAc,MAAO,CAAE7C,UAAWN,WAAW,eAAgBE,eAAiB,UAAWY,GAAmB,IAAKN,MAAOQ,GAAe,IAAMK,MAAAA,OAAuC,EAASA,KACnMzB,MAAMuD,cAAc,MAAO,CAAE7C,UAAWN,WAAW,eAAgBE,eAAiB,WAAYQ,GAAoB,IAAKF,MAAOI,GAAgB,IAAMmB,GACtJnC,MAAMuD,cAAc,MAAO,CAAE7C,UAAWN,WAAW,eAAgBE,eAAiB,SAAUgB,GAAkB,IAAKV,MAAOY,GAAc,IAAME,MAAAA,OAAqC,EAASA,uBA2M3LnB"}