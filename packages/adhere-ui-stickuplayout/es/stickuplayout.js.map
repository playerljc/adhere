{"version":3,"file":"stickuplayout.js","sources":["stickuplayout.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nimport React, { forwardRef, useImperativeHandle, useLayoutEffect, useRef, } from 'react';\r\nimport classNames from 'classnames';\r\nimport StickupLayoutItem from './item';\r\nvar selectorPrefix = 'adhere-ui-stickuplayout';\r\nvar StickupLayout = function (props, ref) {\r\n    var className = props.className, style = props.style, fixedClassName = props.fixedClassName, fixedStyle = props.fixedStyle, innerClassName = props.innerClassName, innerStyle = props.innerStyle, onChange = props.onChange, children = props.children;\r\n    var el = useRef(null);\r\n    var fixedEl = useRef(null);\r\n    var innerEl = useRef(null);\r\n    var key = useRef(false);\r\n    var index = useRef([]);\r\n    var headerEls = useRef();\r\n    var preScrollObj = useRef(null);\r\n    var maskEl = useRef();\r\n    /**\r\n     * updateInterval\r\n     */\r\n    function updateInterval() {\r\n        return 'updateInterval' in screen ? screen['updateInterval'] : 16.7;\r\n    }\r\n    /**\r\n     * createIndex\r\n     */\r\n    function createIndex() {\r\n        var pre = 0;\r\n        index.current = [];\r\n        preScrollObj.current = null;\r\n        for (var i = 0, len = headerEls.current.length; i < len; i++) {\r\n            var header = headerEls.current[i];\r\n            var rangeStart = pre;\r\n            var rangeEnd = void 0;\r\n            if (i !== len - 1) {\r\n                rangeEnd = headerEls.current[i + 1].offsetTop - header.offsetHeight;\r\n            }\r\n            else {\r\n                rangeEnd = innerEl.current.scrollHeight;\r\n            }\r\n            index.current.push({\r\n                start: rangeStart,\r\n                end: rangeEnd,\r\n                dom: header,\r\n                index: i,\r\n            });\r\n            pre = rangeEnd;\r\n            if (pre > innerEl.current.scrollHeight - innerEl.current.offsetHeight) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * position\r\n     */\r\n    function position() {\r\n        var val = innerEl.current.scrollTop;\r\n        var low = 0, high = index.current.length - 1, middle, target;\r\n        while (low <= high && low <= index.current.length - 1 && high <= index.current.length - 1) {\r\n            middle = (high + low) >> 1;\r\n            var targetVal = index.current[middle];\r\n            if (val >= targetVal.start && val < targetVal.end) {\r\n                target = targetVal;\r\n                break;\r\n            }\r\n            else if (val < targetVal.start) {\r\n                high = middle - 1;\r\n            }\r\n            else {\r\n                low = middle + 1;\r\n            }\r\n        }\r\n        if (target) {\r\n            if (preScrollObj.current && preScrollObj.current.index === target.index) {\r\n                return false;\r\n            }\r\n            else {\r\n                preScrollObj.current = target;\r\n                fixedEl.current.innerHTML = target.dom.outerHTML;\r\n                if (onChange) {\r\n                    onChange(target.index);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * initial\r\n     */\r\n    function initial() {\r\n        key.current = false;\r\n        index.current = [];\r\n        headerEls.current = el.current.querySelectorAll(\".\" + selectorPrefix + \"-item-header\");\r\n        createIndex();\r\n        position();\r\n        innerEl.current.removeEventListener('scroll', onScroll);\r\n        innerEl.current.addEventListener('scroll', onScroll);\r\n    }\r\n    /**\r\n     * initMask\r\n     */\r\n    function initMask() {\r\n        if (typeof window === 'undefined')\r\n            return;\r\n        if (!maskEl.current) {\r\n            maskEl.current = document.createElement('div');\r\n            maskEl.current.className = selectorPrefix + \"-mask\";\r\n            window.document.body.appendChild(maskEl.current);\r\n        }\r\n    }\r\n    /**\r\n     * scrollAnimationTo\r\n     * @access private\r\n     * @param {number} targetTop\r\n     * @param {number} duration\r\n     */\r\n    function scrollAnimationTo(targetTop, duration) {\r\n        if (targetTop === void 0) { targetTop = 0; }\r\n        if (duration === void 0) { duration = 300; }\r\n        if (key.current)\r\n            return;\r\n        initMask();\r\n        key.current = true;\r\n        maskEl.current.style.display = 'block';\r\n        var srcTop = innerEl.current.scrollTop, scrollVal = srcTop, \r\n        /**\r\n         * 一次滚动的步进\r\n         * @type {number}\r\n         */\r\n        setp = innerEl.current.scrollHeight /\r\n            (duration / updateInterval() + (duration % updateInterval() !== 0 ? 1 : 0));\r\n        /** *\r\n         * 动画的滚动\r\n         */\r\n        function scrollAnimation() {\r\n            if (srcTop < targetTop) {\r\n                if (scrollVal + setp > targetTop) {\r\n                    scrollVal = targetTop;\r\n                }\r\n                else {\r\n                    scrollVal += setp;\r\n                }\r\n            }\r\n            else if (scrollVal - setp < targetTop) {\r\n                scrollVal = targetTop;\r\n            }\r\n            else {\r\n                scrollVal -= setp;\r\n            }\r\n            innerEl.current.scrollTop = scrollVal;\r\n            if (srcTop < targetTop) {\r\n                if (scrollVal >= targetTop) {\r\n                    clear();\r\n                }\r\n                else {\r\n                    typeof window !== 'undefined' && window.requestAnimationFrame(scrollAnimation);\r\n                }\r\n            }\r\n            else if (scrollVal <= targetTop) {\r\n                clear();\r\n            }\r\n            else {\r\n                typeof window !== 'undefined' && window.requestAnimationFrame(scrollAnimation);\r\n            }\r\n            function clear() {\r\n                key.current = false;\r\n                maskEl.current.style.display = 'none';\r\n            }\r\n        }\r\n        /** *\r\n         * 滚动core\r\n         */\r\n        typeof window !== 'undefined' && window.requestAnimationFrame(scrollAnimation);\r\n    }\r\n    /**\r\n     * scrollTo\r\n     * @param item\r\n     * @param duration\r\n     */\r\n    function scrollTo(item, duration) {\r\n        if (duration === void 0) { duration = 300; }\r\n        var targetTop = item.start + headerEls.current[item.index].offsetHeight;\r\n        if (duration === 0) {\r\n            innerEl.current.scrollTop = targetTop;\r\n        }\r\n        else {\r\n            scrollAnimationTo(targetTop, duration);\r\n        }\r\n    }\r\n    /**\r\n     * onScroll\r\n     */\r\n    function onScroll() {\r\n        position();\r\n    }\r\n    useImperativeHandle(ref, function () { return ({\r\n        /**\r\n         * refresh\r\n         */\r\n        refresh: function () { return initial(); },\r\n        /**\r\n         * scrollToByIndex\r\n         * @param {number} _index\r\n         * @param {number} _duration\r\n         * @return {boolean}\r\n         */\r\n        scrollToByIndex: function (_index, _duration) {\r\n            if (_duration === void 0) { _duration = 300; }\r\n            var i = 0, item;\r\n            for (; i < index.current.length; i++) {\r\n                if (index.current[i].index === _index) {\r\n                    item = index.current[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!item)\r\n                return false;\r\n            scrollTo(item, _duration);\r\n        },\r\n        /**\r\n         * scrollToByHeaderEl\r\n         * @param {HtmlElement} _headerEl\r\n         * @param {number} _duration\r\n         * @return {boolean}\r\n         */\r\n        scrollToByHeaderEl: function (_headerEl, _duration) {\r\n            if (_duration === void 0) { _duration = 300; }\r\n            var i = 0, item, current = -1;\r\n            for (; i < index.current.length; i++) {\r\n                if (index.current[i].dom === _headerEl) {\r\n                    item = index.current[i];\r\n                    current = i;\r\n                    break;\r\n                }\r\n            }\r\n            if (!item)\r\n                return false;\r\n            scrollTo(item, _duration);\r\n        },\r\n    }); });\r\n    useLayoutEffect(function () {\r\n        initial();\r\n        return function () {\r\n            var _a;\r\n            if (maskEl.current) {\r\n                (_a = maskEl.current.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(maskEl.current);\r\n            }\r\n        };\r\n    }, []);\r\n    return (React.createElement(\"div\", { className: classNames(selectorPrefix, className), style: style || {}, ref: el },\r\n        React.createElement(\"div\", { className: classNames(selectorPrefix + \"-fixed\", fixedClassName), style: fixedStyle || {}, ref: fixedEl }),\r\n        React.createElement(\"div\", { className: classNames(selectorPrefix + \"-inner\", innerClassName), style: innerStyle || {}, ref: innerEl }, children)));\r\n};\r\n// @ts-ignore\r\nvar StickupLayoutHOC = __assign({ Item: StickupLayoutItem }, forwardRef(StickupLayout));\r\nexport default StickupLayoutHOC;\r\n// /**\r\n//  * StickupLayout\r\n//  * @class StickupLayout\r\n//  * @classdesc StickupLayout\r\n//  */\r\n// class StickupLayout extends React.Component<IStickupLayoutProps> {\r\n//   static defaultProps: any;\r\n//   static propTypes: any;\r\n//   static Item = StickupLayoutItem;\r\n//\r\n//   private el: HTMLDivElement | null | undefined;\r\n//   private fixedEl: HTMLDivElement | null | undefined;\r\n//   private innerEl: HTMLDivElement | null | undefined;\r\n//   private key: boolean | undefined;\r\n//   private index: Array<IIndexItem> | undefined;\r\n//   private headerEls: NodeList | undefined;\r\n//   private preScrollObj: IIndexItem | null | undefined;\r\n//   private maskEl: HTMLElement | undefined;\r\n//\r\n//   componentDidMount() {\r\n//     this.initial();\r\n//   }\r\n//\r\n//   componentDidUpdate() {\r\n//     this.initial();\r\n//   }\r\n//\r\n//   componentWillUnmount() {\r\n//     if (this.maskEl) {\r\n//       // @ts-ignore\r\n//       this.maskEl.parentElement.removeChild(this.maskEl);\r\n//     }\r\n//   }\r\n//\r\n//   private onScroll = () => {\r\n//     this.position();\r\n//   };\r\n//\r\n//   private initial() {\r\n//     this.key = false;\r\n//     this.index = [];\r\n//     // @ts-ignore\r\n//     this.headerEls = this.el.querySelectorAll(`.${selectorPrefix}-item-header`);\r\n//\r\n//     this.createIndex();\r\n//\r\n//     this.position();\r\n//\r\n//     // @ts-ignore\r\n//     this.innerEl.removeEventListener('scroll', this.onScroll);\r\n//     // @ts-ignore\r\n//     this.innerEl.addEventListener('scroll', this.onScroll);\r\n//   }\r\n//\r\n//   private createIndex() {\r\n//     let pre = 0;\r\n//\r\n//     this.index = [];\r\n//\r\n//     this.preScrollObj = null;\r\n//\r\n//     // @ts-ignore\r\n//     for (let i = 0, len = this.headerEls.length; i < len; i++) {\r\n//       // @ts-ignore\r\n//       const header = this.headerEls[i];\r\n//\r\n//       let rangeStart = pre;\r\n//\r\n//       let rangeEnd;\r\n//\r\n//       if (i !== len - 1) {\r\n//         // @ts-ignore\r\n//         rangeEnd = this.headerEls[i + 1].offsetTop - header.offsetHeight;\r\n//       } else {\r\n//         // @ts-ignore\r\n//         rangeEnd = this.innerEl.scrollHeight;\r\n//       }\r\n//\r\n//       this.index.push({\r\n//         start: rangeStart,\r\n//         end: rangeEnd,\r\n//         // @ts-ignore\r\n//         dom: header,\r\n//         index: i,\r\n//       });\r\n//       pre = rangeEnd;\r\n//\r\n//       // @ts-ignore\r\n//       if (pre > this.innerEl.scrollHeight - this.innerEl.offsetHeight) {\r\n//         break;\r\n//       }\r\n//     }\r\n//   }\r\n//\r\n//   private position() {\r\n//     // @ts-ignore\r\n//     const val = this.innerEl.scrollTop;\r\n//\r\n//     let low = 0,\r\n//       // @ts-ignore\r\n//       high = this.index.length - 1,\r\n//       middle,\r\n//       target;\r\n//     // @ts-ignore\r\n//     while (low <= high && low <= this.index.length - 1 && high <= this.index.length - 1) {\r\n//       middle = (high + low) >> 1;\r\n//       // @ts-ignore\r\n//       const targetVal = this.index[middle];\r\n//       if (val >= targetVal.start && val < targetVal.end) {\r\n//         target = targetVal;\r\n//         break;\r\n//       } else if (val < targetVal.start) {\r\n//         high = middle - 1;\r\n//       } else {\r\n//         low = middle + 1;\r\n//       }\r\n//     }\r\n//\r\n//     if (target) {\r\n//       if (this.preScrollObj && this.preScrollObj.index === target.index) {\r\n//         return false;\r\n//       } else {\r\n//         this.preScrollObj = target;\r\n//         // @ts-ignore\r\n//         this.fixedEl.innerHTML = target.dom.outerHTML;\r\n//\r\n//         const { onChange } = this.props;\r\n//         if (onChange) {\r\n//           onChange(target.index);\r\n//         }\r\n//       }\r\n//     }\r\n//   }\r\n//\r\n//   /**\r\n//    * scrollAnimationTo\r\n//    * @access private\r\n//    * @param {number} targetTop\r\n//    * @param {number} duration\r\n//    */\r\n//   private scrollAnimationTo(targetTop = 0, duration = 300) {\r\n//     const self = this;\r\n//\r\n//     if (self.key) return;\r\n//\r\n//     this.initMask();\r\n//\r\n//     self.key = true;\r\n//\r\n//     // @ts-ignore\r\n//     this.maskEl.style.display = 'block';\r\n//\r\n//     // @ts-ignore\r\n//\r\n//     let srcTop = this.innerEl.scrollTop,\r\n//       scrollVal = srcTop,\r\n//       /**\r\n//        * 一次滚动的步进\r\n//        * @type {number}\r\n//        */\r\n//       setp =\r\n//         // @ts-ignore\r\n//         this.innerEl.scrollHeight /\r\n//         // @ts-ignore\r\n//         (duration / (screen.updateInterval || 16.7) +\r\n//           // @ts-ignore\r\n//           (duration % (screen.updateInterval || 16.7) !== 0 ? 1 : 0));\r\n//\r\n//     /** *\r\n//      * 动画的滚动\r\n//      */\r\n//     function scrollAnimation() {\r\n//       if (srcTop < targetTop) {\r\n//         if (scrollVal + setp > targetTop) {\r\n//           scrollVal = targetTop;\r\n//         } else {\r\n//           scrollVal += setp;\r\n//         }\r\n//       } else if (scrollVal - setp < targetTop) {\r\n//         scrollVal = targetTop;\r\n//       } else {\r\n//         scrollVal -= setp;\r\n//       }\r\n//\r\n//       // @ts-ignore\r\n//       self.innerEl.scrollTop = scrollVal;\r\n//\r\n//       if (srcTop < targetTop) {\r\n//         if (scrollVal >= targetTop) {\r\n//           clear();\r\n//         } else {\r\n//           typeof window !== 'undefined' && window.requestAnimationFrame(scrollAnimation);\r\n//         }\r\n//       } else if (scrollVal <= targetTop) {\r\n//         clear();\r\n//       } else {\r\n//         typeof window !== 'undefined' && window.requestAnimationFrame(scrollAnimation);\r\n//       }\r\n//\r\n//       function clear() {\r\n//         self.key = false;\r\n//         // @ts-ignore\r\n//         self.maskEl.style.display = 'none';\r\n//       }\r\n//     }\r\n//\r\n//     /** *\r\n//      * 滚动core\r\n//      */\r\n//     typeof window !== 'undefined' && window.requestAnimationFrame(scrollAnimation);\r\n//   }\r\n//\r\n//   /**\r\n//    * scrollTo\r\n//    * @access private\r\n//    * @param {Object} item\r\n//    * @param {number} duration\r\n//    */\r\n//   private scrollTo(item: IIndexItem, duration = 300) {\r\n//     // @ts-ignore\r\n//     const targetTop = item.start + this.headerEls[item.index].offsetHeight;\r\n//     if (duration === 0) {\r\n//       // @ts-ignore\r\n//       this.innerEl.scrollTop = targetTop;\r\n//     } else {\r\n//       this.scrollAnimationTo(targetTop, duration);\r\n//     }\r\n//   }\r\n//\r\n//   /**\r\n//    * initMask\r\n//    * @access private\r\n//    */\r\n//   private initMask() {\r\n//     if(typeof window === 'undefined') return;\r\n//\r\n//     if (!this.maskEl) {\r\n//       this.maskEl = document.createElement('div');\r\n//\r\n//       this.maskEl.className = `${selectorPrefix}-mask`;\r\n//\r\n//       window.document.body.appendChild(this.maskEl);\r\n//     }\r\n//   }\r\n//\r\n//   refresh() {\r\n//     this.initial();\r\n//   }\r\n//\r\n//   /**\r\n//    * scrollToByIndex\r\n//    * @param {number} index\r\n//    * @param {number} duration\r\n//    * @return {boolean}\r\n//    */\r\n//   scrollToByIndex(index, duration = 300) {\r\n//     let i = 0,\r\n//       item;\r\n//     // @ts-ignore\r\n//     for (; i < this.index.length; i++) {\r\n//       // @ts-ignore\r\n//       if (this.index[i].index === index) {\r\n//         // @ts-ignore\r\n//         item = this.index[i];\r\n//         break;\r\n//       }\r\n//     }\r\n//     if (!item) return false;\r\n//\r\n//     this.scrollTo(item, duration);\r\n//   }\r\n//\r\n//   /**\r\n//    * scrollToByHeaderEl\r\n//    * @param {HtmlElement} headerEl\r\n//    * @param {number} duration\r\n//    * @return {boolean}\r\n//    */\r\n//   scrollToByHeaderEl(headerEl, duration = 300) {\r\n//     let i = 0,\r\n//       item,\r\n//       index = -1;\r\n//     // @ts-ignore\r\n//     for (; i < this.index.length; i++) {\r\n//       // @ts-ignore\r\n//       if (this.index[i].dom === headerEl) {\r\n//         // @ts-ignore\r\n//         item = this.index[i];\r\n//         index = i;\r\n//         break;\r\n//       }\r\n//     }\r\n//     if (!item) return false;\r\n//\r\n//     this.scrollTo(item, duration);\r\n//   }\r\n//\r\n//   render() {\r\n//     // @ts-ignore\r\n//     const { className, style, fixedClassName, fixedStyle, innerClassName, innerStyle, children } =\r\n//       this.props;\r\n//\r\n//     // @ts-ignore\r\n//     return (\r\n//       <div\r\n//         className={classNames(\r\n//           selectorPrefix,\r\n//           // @ts-ignore\r\n//           className.split(/\\s+/),\r\n//         )}\r\n//         style={{ ...style }}\r\n//         ref={(el) => (this.el = el)}\r\n//       >\r\n//         <div\r\n//           className={classNames(\r\n//             `${selectorPrefix}-fixed`,\r\n//             // @ts-ignore\r\n//             fixedClassName.split(/\\s+/),\r\n//           )}\r\n//           style={{ ...fixedStyle }}\r\n//           ref={(el) => (this.fixedEl = el)}\r\n//         />\r\n//         <div\r\n//           className={classNames(\r\n//             `${selectorPrefix}-inner`,\r\n//             // @ts-ignore\r\n//             innerClassName.split(/\\s+/),\r\n//           )}\r\n//           style={{ ...innerStyle }}\r\n//           ref={(el) => (this.innerEl = el)}\r\n//         >\r\n//           {children}\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n//\r\n// StickupLayout.defaultProps = {\r\n//   className: '',\r\n//   style: {},\r\n//   fixedClassName: '',\r\n//   fixedStyle: {},\r\n//   innerClassName: '',\r\n//   innerStyle: {},\r\n//   onChange: () => {},\r\n// };\r\n//\r\n// StickupLayout.propTypes = {\r\n//   className: PropTypes.string,\r\n//   style: PropTypes.object,\r\n//   fixedClassName: PropTypes.string,\r\n//   fixedStyle: PropTypes.object,\r\n//   innerClassName: PropTypes.string,\r\n//   innerStyle: PropTypes.object,\r\n//   onChange: PropTypes.func,\r\n// };\r\n//\r\n// export default StickupLayout;\r\n"],"names":["__assign","this","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","forwardRef","useImperativeHandle","useLayoutEffect","useRef","classNames","StickupLayoutItem","selectorPrefix","StickupLayout","props","ref","className","style","fixedClassName","fixedStyle","innerClassName","innerStyle","onChange","children","el","fixedEl","innerEl","key","index","headerEls","preScrollObj","maskEl","updateInterval","screen","position","target","val","current","scrollTop","low","high","middle","targetVal","start","end","innerHTML","dom","outerHTML","initial","querySelectorAll","pre","len","header","rangeStart","rangeEnd","offsetTop","offsetHeight","scrollHeight","push","createIndex","removeEventListener","onScroll","addEventListener","scrollAnimationTo","targetTop","duration","srcTop","scrollVal","setp","window","document","createElement","body","appendChild","display","requestAnimationFrame","scrollAnimation","clear","scrollTo","item","refresh","scrollToByIndex","_index","_duration","scrollToByHeaderEl","_headerEl","_a","parentElement","removeChild","StickupLayoutHOC","Item"],"mappings":"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"}