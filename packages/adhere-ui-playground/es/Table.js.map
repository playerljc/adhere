{"version":3,"file":"Table.js","sources":["Table.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nimport classNames from 'classnames';\r\nimport React, { memo } from 'react';\r\nimport ConditionalRender from '@baifendian/adhere-ui-conditionalrender';\r\nvar selectorPrefix = 'adhere-ui-playground-table';\r\nvar Table = function (props) {\r\n    var _a = props.className, className = _a === void 0 ? '' : _a, _b = props.style, style = _b === void 0 ? {} : _b, _c = props.tableClassName, tableClassName = _c === void 0 ? '' : _c, _d = props.tableStyle, tableStyle = _d === void 0 ? {} : _d, _e = props.columns, columns = _e === void 0 ? [] : _e, _f = props.dataSource, dataSource = _f === void 0 ? [] : _f, _g = props.rowKey, rowKey = _g === void 0 ? 'id' : _g;\r\n    /**\r\n     * renderHeader\r\n     */\r\n    function renderHeader() {\r\n        return (React.createElement(\"thead\", null,\r\n            React.createElement(\"tr\", { className: selectorPrefix + \"-header\" }, (columns || []).map(function (column) {\r\n                var _a = column.className, className = _a === void 0 ? '' : _a, _b = column.style, style = _b === void 0 ? {} : _b, align = column.align;\r\n                var thProps = {\r\n                    key: column.key,\r\n                    width: column.width,\r\n                };\r\n                return (React.createElement(\"th\", __assign({}, thProps, { className: classNames(selectorPrefix + \"-header-column\", className || ''), style: __assign({ textAlign: align || 'left' }, (style || {})) }), column.title || '-'));\r\n            }))));\r\n    }\r\n    /**\r\n     * renderBody\r\n     */\r\n    function renderBody() {\r\n        return (React.createElement(\"tbody\", null, (dataSource || []).map(function (record, rowIndex) { return (React.createElement(\"tr\", { className: selectorPrefix + \"-row\", key: record[rowKey] }, columns.map(function (column, columnIndex) {\r\n            var dataIndex = column.dataIndex, render = column.render, align = column.align, valign = column.valign;\r\n            return (React.createElement(\"td\", { className: selectorPrefix + \"-cell\", key: column.key, valign: valign || 'top', style: { textAlign: align || 'left' } },\r\n                React.createElement(ConditionalRender, { conditional: !!render, noMatch: function () { return record[dataIndex] || '-'; } }, function () { return render === null || render === void 0 ? void 0 : render(record[dataIndex], record, rowIndex, columnIndex); })));\r\n        }))); })));\r\n    }\r\n    return (React.createElement(\"div\", { className: classNames(\"\" + selectorPrefix, className || ''), style: style || {} },\r\n        React.createElement(\"table\", { className: classNames(selectorPrefix + \"-inner\", tableClassName || ''), style: tableStyle || {} },\r\n            renderHeader(),\r\n            renderBody())));\r\n};\r\n// /**\r\n//  * Table\r\n//  * @class Table\r\n//  * @classdesc Table\r\n//  */\r\n// // @ts-ignore\r\n// class Table extends React.Component<ITableProps, any> {\r\n//   static defaultProps: {\r\n//     tableClassName: string;\r\n//     columns: any[];\r\n//     tableStyle: {};\r\n//     className: string;\r\n//     style: {};\r\n//     dataSource: any[];\r\n//   };\r\n//\r\n//   static propTypes: {\r\n//     tableClassName: any;\r\n//     columns: Requireable<any[]>;\r\n//     tableStyle: any;\r\n//     className: any;\r\n//     style: any;\r\n//     dataSource: Requireable<any[]>;\r\n//     rowKey: any;\r\n//   };\r\n//\r\n//   /**\r\n//    * renderHeader\r\n//    */\r\n//   protected renderHeader() {\r\n//     const { columns } = this.props;\r\n//\r\n//     return (\r\n//       <thead>\r\n//         <tr className={`${selectorPrefix}-header`}>\r\n//           {columns.map((column) => {\r\n//             const { className, style, align } = column;\r\n//             const props = {\r\n//               key: column.key,\r\n//               width: undefined,\r\n//             };\r\n//\r\n//             // @ts-ignore\r\n//             column.width && (props.width = column.width);\r\n//\r\n//             return (\r\n//               <th\r\n//                 {...props}\r\n//                 className={classNames(\r\n//                   `${selectorPrefix}-header-column`,\r\n//                   (className || '').split(/\\s+/),\r\n//                 )}\r\n//                 style={{ textAlign: align || 'left', ...style }}\r\n//               >\r\n//                 {column.title || '-'}\r\n//               </th>\r\n//             );\r\n//           })}\r\n//         </tr>\r\n//       </thead>\r\n//     );\r\n//   }\r\n//\r\n//   /**\r\n//    * renderBody\r\n//    */\r\n//   protected renderBody() {\r\n//     const { columns, dataSource, rowKey } = this.props;\r\n//\r\n//     return (\r\n//       <tbody>\r\n//         {dataSource.map((record, rowIndex: number) => {\r\n//           return (\r\n//             <tr className={`${selectorPrefix}-row`} key={record[rowKey]}>\r\n//               {columns.map((column, columnIndex) => {\r\n//                 const { dataIndex, render, align, valign } = column;\r\n//\r\n//                 return (\r\n//                   <td\r\n//                     className={`${selectorPrefix}-cell`}\r\n//                     key={column.key}\r\n//                     valign={valign || 'top'}\r\n//                     style={{ textAlign: align || 'left' }}\r\n//                   >\r\n//                     <ConditionalRender\r\n//                       conditional={!!render}\r\n//                       // @ts-ignore\r\n//                       noMatch={() => record[dataIndex] || '-'}\r\n//                     >\r\n//                       {() => render(record[dataIndex], record, rowIndex, columnIndex)}\r\n//                     </ConditionalRender>\r\n//                   </td>\r\n//                 );\r\n//               })}\r\n//             </tr>\r\n//           );\r\n//         })}\r\n//       </tbody>\r\n//     );\r\n//   }\r\n//\r\n//   protected render() {\r\n//     const { className, style, tableClassName, tableStyle } = this.props;\r\n//\r\n//     return (\r\n//       <div className={classNames(`${selectorPrefix}`, className.split(/\\s+/))} style={{ ...style }}>\r\n//         <table\r\n//           className={classNames(`${selectorPrefix}-inner`, tableClassName.split(/\\s+/))}\r\n//           style={{ ...tableStyle }}\r\n//         >\r\n//           {this.renderHeader()}\r\n//           {this.renderBody()}\r\n//         </table>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n//\r\n// Table.defaultProps = {\r\n//   className: '',\r\n//   style: {},\r\n//   tableClassName: '',\r\n//   tableStyle: {},\r\n//   columns: [],\r\n//   dataSource: [],\r\n// };\r\n//\r\n// Table.propTypes = {\r\n//   className: PropTypes.string,\r\n//   style: PropTypes.object,\r\n//   tableClassName: PropTypes.string,\r\n//   tableStyle: PropTypes.object,\r\n//   columns: PropTypes.arrayOf(\r\n//     PropTypes.shape({\r\n//       key: PropTypes.string,\r\n//       dataIndex: PropTypes.string,\r\n//       title: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\r\n//       width: PropTypes.string,\r\n//       align: PropTypes.oneOf(['left', 'right', 'center']),\r\n//       valign: PropTypes.oneOf(['top', 'middle', 'bottom']),\r\n//       render: PropTypes.func,\r\n//       className: PropTypes.string,\r\n//       style: PropTypes.object,\r\n//     }),\r\n//   ),\r\n//   dataSource: PropTypes.arrayOf(PropTypes.object),\r\n//   rowKey: PropTypes.string,\r\n// };\r\nexport default memo(Table);\r\n"],"names":["__assign","this","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","classNames","React","memo","ConditionalRender","selectorPrefix","Table","props","_a","className","_b","style","_c","tableClassName","_d","tableStyle","_e","columns","_f","dataSource","_g","rowKey","createElement","map","column","align","thProps","key","width","textAlign","title","record","rowIndex","columnIndex","dataIndex","render","valign","conditional","noMatch"],"mappings":"AAAA,IAAIA,SAAYC,MAAQA,KAAKD,UAAa,WAStC,OARAA,SAAWE,OAAOC,QAAU,SAASC,GACjC,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,CAAC,GAE7C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,CAAC,IAC1DN,EAAEM,GAAKL,EAAEK,IAEjB,OAAON,CACX,GACgBU,MAAMb,KAAMO,SAAS,CACzC,SACOO,eAAgB,oBAChBC,OAASC,IAAmB,KAAP,eACrBC,sBAAuB,0CAC9B,IAAIC,eAAiB,6BACjBC,MAAQ,SAAUC,GAClB,IAAIC,EAAKD,EAAME,UAAgDC,EAAKH,EAAMI,MAAOA,EAAe,KAAA,IAAPD,EAAgB,GAAKA,EAAIE,EAAKL,EAAMM,eAAgBA,EAAwB,KAAA,IAAPD,EAAgB,GAAKA,EAAIE,EAAKP,EAAMQ,WAAYA,EAAoB,KAAA,IAAPD,EAAgB,GAAKA,EAAIE,EAAKT,EAAMU,QAASA,EAAiB,KAAA,IAAPD,EAAgB,GAAKA,EAAIE,EAAKX,EAAMY,WAAYA,EAAoB,KAAA,IAAPD,EAAgB,GAAKA,EAAIE,EAAKb,EAAMc,OAAQA,EAAgB,KAAA,IAAPD,EAAgB,KAAOA,EAyB3Z,OAAQlB,MAAMoB,cAAc,MAAO,CAAEb,UAAWR,WAAW,GAAKI,gBAzBnB,KAAA,IAAPG,EAAgB,GAAKA,IAyBkC,EAAE,EAAGG,MAAOA,GAAS,EAAG,EACjHT,MAAMoB,cAAc,QAAS,CAAEb,UAAWR,WAAWI,eAAiB,SAAUQ,GAAkB,EAAE,EAAGF,MAAOI,GAAc,EAAG,EArBvHb,MAAMoB,cAAc,QAAS,KACjCpB,MAAMoB,cAAc,KAAM,CAAEb,UAAWJ,eAAiB,SAAU,GAAIY,GAAW,IAAIM,IAAI,SAAUC,GAC/F,IAAIhB,EAAKgB,EAAOf,UAAgDC,EAAKc,EAAOb,MAAOA,EAAe,KAAA,IAAPD,EAAgB,GAAKA,EAAIe,EAAQD,EAAOC,MAC/HC,EAAU,CACVC,IAAKH,EAAOG,IACZC,MAAOJ,EAAOI,KAClB,EACA,OAAQ1B,MAAMoB,cAAc,KAAMpC,SAAS,GAAIwC,EAAS,CAAEjB,UAAWR,WAAWI,eAAiB,kBALnD,KAAA,IAAPG,EAAgB,GAAKA,IAKoE,EAAE,EAAGG,MAAOzB,SAAS,CAAE2C,UAAWJ,GAAS,MAAO,EAAId,GAAS,EAAG,CAAE,CAAC,EAAGa,EAAOM,OAAS,GAAI,CAChO,CAAC,CAAC,CAAE,EAMA5B,MAAMoB,cAAc,QAAS,MAAOH,GAAc,IAAII,IAAI,SAAUQ,EAAQC,GAAY,OAAQ9B,MAAMoB,cAAc,KAAM,CAAEb,UAAWJ,eAAiB,OAAQsB,IAAKI,EAAOV,EAAQ,EAAGJ,EAAQM,IAAI,SAAUC,EAAQS,GACzN,IAAIC,EAAYV,EAAOU,UAAWC,EAASX,EAAOW,OAAQV,EAAQD,EAAOC,MAAOW,EAASZ,EAAOY,OAChG,OAAQlC,MAAMoB,cAAc,KAAM,CAAEb,UAAWJ,eAAiB,QAASsB,IAAKH,EAAOG,IAAKS,OAAQA,GAAU,MAAOzB,MAAO,CAAEkB,UAAWJ,GAAS,MAAO,CAAE,EACrJvB,MAAMoB,cAAclB,kBAAmB,CAAEiC,YAAa,CAAC,CAACF,EAAQG,QAAS,WAAc,OAAOP,EAAOG,IAAc,GAAK,CAAE,EAAG,WAAc,OAAOC,MAAAA,EAAuC,KAAA,EAASA,EAAOJ,EAAOG,GAAYH,EAAQC,EAAUC,CAAW,CAAG,CAAC,CAAE,CACvQ,CAAC,CAAE,CAAG,CAAC,CAAE,CAKO,CAAE,CAC1B,iBAqJe9B,KAAKG,KAAK"}