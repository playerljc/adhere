{"version":3,"file":"index.js","sources":["SimpleTabs/index.js"],"sourcesContent":["import React, { memo, useCallback, useEffect, useState } from 'react';\nimport { TabContext } from './Context';\nimport TabPanel from './TabPanel';\nvar selectorPrefix = 'adhere-ui-playground-simple-tabs';\nvar SimpleTabs = function (props) {\n    var _a = props.className, className = _a === void 0 ? '' : _a, onChange = props.onChange, children = props.children;\n    var _b = useState(props.activeKey), activeKey = _b[0], setActiveKey = _b[1];\n    var renderHead = useCallback(function () {\n        return children instanceof Array\n            ? children.map(function (t) { return renderHeadItem(t); })\n            : renderHeadItem(children);\n    }, [children]);\n    function renderHeadItem(_a) {\n        var _b = _a.props, index = _b.index, title = _b.title;\n        return (React.createElement(\"li\", { key: index, className: activeKey === index ? 'active' : '', onClick: function () {\n                setActiveKey(index);\n                onChange && onChange(index);\n            } }, title));\n    }\n    useEffect(function () {\n        setActiveKey(props.activeKey);\n    }, [props.activeKey]);\n    return (React.createElement(TabContext.Provider, { value: {\n            activeKey: activeKey !== null && activeKey !== void 0 ? activeKey : '',\n        } },\n        React.createElement(\"div\", { className: \"\".concat(selectorPrefix, \" \").concat(className) },\n            React.createElement(\"ul\", { className: \"\".concat(selectorPrefix, \"-head\") }, renderHead()),\n            React.createElement(\"div\", { className: \"\".concat(selectorPrefix, \"-body\") }, children))));\n};\n// @ts-ignore\nvar MemoWrap = memo(SimpleTabs);\nMemoWrap.TabPanel = TabPanel;\n// /**\n//  * SimpleTabs\n//  * @class SimpleTabs\n//  * @classdesc 一个超级简单的选项卡\n//  */\n// class SimpleTabs extends React.PureComponent {\n//   static TabPanel = TabPanel;\n//   static defaultProps: { onChange: () => void; activeKey: string; className: string };\n//   static propTypes: {\n//     onChange: Requireable<(...args: any[]) => any>;\n//     activeKey: Requireable<NonNullable<InferType<Requireable<number> | any>>>;\n//     className: any;\n//   };\n//\n//   constructor(props) {\n//     super(props);\n//\n//     this.state = {\n//       activeKey: props.activeKey,\n//     };\n//   }\n//\n//   componentWillReceiveProps(nextProps) {\n//     this.setState({\n//       activeKey: nextProps.activeKey,\n//     });\n//   }\n//\n//   renderHead() {\n//     const { children } = this.props;\n//     return children instanceof Array\n//       ? children.map((t) => this.renderHeadItem(t))\n//       : this.renderHeadItem(children);\n//   }\n//\n//   renderHeadItem({ props: { index, title } }) {\n//     const { onChange } = this.props;\n//\n//     const { activeKey } = this.state;\n//\n//     return (\n//       <li\n//         key={index}\n//         className={activeKey === index ? 'active' : ''}\n//         onClick={() => {\n//           this.setState(\n//             {\n//               activeKey: index,\n//             },\n//             () => {\n//               if (onChange) {\n//                 onChange(index);\n//               }\n//             },\n//           );\n//         }}\n//       >\n//         {title}\n//       </li>\n//     );\n//   }\n//\n//   render() {\n//     const { className, children } = this.props;\n//\n//     return (\n//       <TabContext.Provider value={this.state}>\n//         <div className={`${selectorPrefix} ${className}`}>\n//           <ul className={`${selectorPrefix}-head`}>{this.renderHead()}</ul>\n//           <div className={`${selectorPrefix}-body`}>{children}</div>\n//         </div>\n//       </TabContext.Provider>\n//     );\n//   }\n// }\n//\n// SimpleTabs.defaultProps = {\n//   activeKey: '',\n//   className: '',\n//   onChange: () => {},\n// };\n//\n// SimpleTabs.propTypes = {\n//   activeKey: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n//   className: PropTypes.string,\n//   onChange: PropTypes.func,\n// };\nexport default MemoWrap;\n"],"names":["React","memo","useCallback","useEffect","useState","TabContext","TabPanel","selectorPrefix","SimpleTabs","props","_a","className","onChange","children","_b","activeKey","setActiveKey","renderHead","Array","map","renderHeadItem","index","title","createElement","key","onClick","Provider","value","concat","MemoWrap"],"mappings":"OAAOA,OAASC,KAAMC,YAAaC,UAAWC,QAAuB,KAAP,eACrDC,UAA6B,KAAX,mBACpBC,aAAc,aACrB,IAAIC,eAAiB,mCACjBC,WAAa,SAAUC,GACvB,IAAIC,EAAKD,EAAME,UAAWA,EAAmB,KAAA,IAAPD,EAAgB,GAAKA,EAAIE,EAAWH,EAAMG,SAAUC,EAAWJ,EAAMI,SACvGC,EAAKV,SAASK,EAAMM,SAAS,EAAGA,EAAYD,EAAG,GAAIE,EAAeF,EAAG,GACrEG,EAAaf,YAAY,WACzB,OAAOW,aAAoBK,MACrBL,EAASM,IAA0BC,CAAoB,EACvDA,EAAeP,CAAQ,CACjC,EAAG,CAACA,EAAS,EACb,SAASO,EAAeV,GACpB,IAAII,EAAKJ,EAAGD,MAAOY,EAAQP,EAAGO,MAAOC,EAAQR,EAAGQ,MAChD,OAAQtB,MAAMuB,cAAc,KAAM,CAAEC,IAAKH,EAAOV,UAAWI,IAAcM,EAAQ,SAAW,GAAII,QAAS,WACjGT,EAAaK,CAAK,EAClBT,GAAYA,EAASS,CAAK,CAC9B,CAAE,EAAGC,CAAM,CACnB,CAIA,OAHAnB,UAAU,WACNa,EAAaP,EAAMM,SAAS,CAChC,EAAG,CAACN,EAAMM,UAAU,EACZf,MAAMuB,cAAclB,WAAWqB,SAAU,CAAEC,MAAO,CAClDZ,UAAWA,MAAAA,EAA6CA,EAAY,EACxE,CAAE,EACFf,MAAMuB,cAAc,MAAO,CAAEZ,UAAW,GAAGiB,OAAOrB,eAAgB,GAAG,EAAEqB,OAAOjB,CAAS,CAAE,EACrFX,MAAMuB,cAAc,KAAM,CAAEZ,UAAW,GAAGiB,OAAOrB,eAAgB,OAAO,CAAE,EAAGU,EAAW,CAAC,EACzFjB,MAAMuB,cAAc,MAAO,CAAEZ,UAAW,GAAGiB,OAAOrB,eAAgB,OAAO,CAAE,EAAGM,CAAQ,CAAC,CAAE,CACrG,EAEIgB,SAAW5B,KAAKO,UAAU,EAC9BqB,SAASvB,SAAWA,wBAwFLuB"}