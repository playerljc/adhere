{"version":3,"file":"CircleDrawAction.js","sources":["draw/CircleDrawAction.js"],"sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar adhere_util_1 = __importDefault(require(\"@baifendian/adhere-util\"));\nvar types_1 = require(\"../types\");\nvar DrawAction_1 = __importDefault(require(\"./DrawAction\"));\n/**\n * CircleDrawAction\n * @class\n * @classdesc - 圆形选取\n * @remark: - 一个start - end的周期中只能绘制一个圆形\n */\nvar CircleDrawAction = /** @class */ (function (_super) {\n    __extends(CircleDrawAction, _super);\n    /**\n     * context\n     */\n    function CircleDrawAction() {\n        var _this = _super.call(this) || this;\n        // 中心点\n        _this.centerPoint = null;\n        _this.isMove = false;\n        // 半径\n        _this.radius = 0;\n        _this.onCanvasMouseDown = _this.onCanvasMouseDown.bind(_this);\n        _this.onCanvasMouseMove = _this.onCanvasMouseMove.bind(_this);\n        _this.onCanvasMouseUp = _this.onCanvasMouseUp.bind(_this);\n        return _this;\n    }\n    /**\n     * booleanPointInData\n     * @description 判断点是否在\n     * @param point\n     * @param data\n     */\n    CircleDrawAction.booleanPointInData = function (point, data) {\n        return adhere_util_1.default.isPointInCircle(point, data.data);\n    };\n    /**\n     * draw\n     * @param e\n     */\n    CircleDrawAction.prototype.draw = function (e) {\n        var _a = this, context = _a.context, centerPoint = _a.centerPoint, style = _a.style;\n        var ctx = context === null || context === void 0 ? void 0 : context.getCtx();\n        if (!context || !ctx || !centerPoint)\n            return;\n        var canvasEl = context.getCanvasEl();\n        if (!canvasEl)\n            return;\n        var targetPoint = adhere_util_1.default.clientToCtxPoint({\n            event: e,\n            rect: canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.getBoundingClientRect(),\n        });\n        if (!targetPoint)\n            return;\n        context.clearDraw();\n        context.drawHistoryData();\n        ctx.beginPath();\n        this.radius = adhere_util_1.default.getDistanceByBetweenPoint({ p1: centerPoint, p2: targetPoint });\n        ctx.lineWidth = style.lineWidth;\n        ctx.lineJoin = style.lineJoin;\n        ctx.lineCap = style.lineCap;\n        style.lineDash && ctx.setLineDash(style.lineDash);\n        ctx.lineDashOffset = style.lineDashOffset;\n        ctx.strokeStyle = style.strokeStyle;\n        ctx.fillStyle = style.fillStyle;\n        ctx.globalAlpha = style.globalAlpha;\n        ctx.ellipse((centerPoint === null || centerPoint === void 0 ? void 0 : centerPoint.x) || 0, (centerPoint === null || centerPoint === void 0 ? void 0 : centerPoint.y) || 0, this.radius, this.radius, (45 * Math.PI) / 180, 0, 2 * Math.PI);\n        ctx.closePath();\n        ctx.stroke();\n        ctx.fill();\n    };\n    /**\n     * onCanvasMouseDown\n     * @param e\n     */\n    CircleDrawAction.prototype.onCanvasMouseDown = function (e) {\n        if (!this.context)\n            return;\n        var canvasEl = this.context.getCanvasEl();\n        if (!canvasEl)\n            return;\n        this.centerPoint = adhere_util_1.default.clientToCtxPoint({\n            event: e,\n            rect: canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.getBoundingClientRect(),\n        });\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.addEventListener('mousemove', this.onCanvasMouseMove);\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.addEventListener('mouseup', this.onCanvasMouseUp);\n    };\n    /**\n     * onCanvasMouseMove\n     * @param e\n     */\n    CircleDrawAction.prototype.onCanvasMouseMove = function (e) {\n        var context = this.context;\n        if (!context)\n            return;\n        var ctx = context.getCtx();\n        if (!ctx)\n            return;\n        this.isMove = true;\n        this.draw(e);\n        this.trigger(types_1.ActionEvents.Drawing, {\n            selectType: types_1.SelectType.Circle,\n            actionType: types_1.ActionType.Draw,\n            data: {\n                id: adhere_util_1.default.uuid(),\n                type: types_1.SelectType.Circle,\n                data: {\n                    center: this.centerPoint,\n                    radius: this.radius,\n                },\n                style: this.style,\n            },\n        });\n    };\n    /**\n     * onCanvasMouseUp\n     * @param e\n     */\n    CircleDrawAction.prototype.onCanvasMouseUp = function (e) {\n        if (!this.isMove)\n            return;\n        this.end(e);\n        e.stopPropagation();\n    };\n    /**\n     * draw\n     * @description 绘制\n     * @param ctx\n     * @param data\n     */\n    CircleDrawAction.draw = function (ctx, data) {\n        if (!ctx || !data)\n            return;\n        this.drawHistoryPath(ctx, data /*data.data as { center: IPoint; radius: number }*/);\n    };\n    /**\n     * drawHistoryPath - 绘制历史数据\n     * @param ctx\n     * @param data\n     */\n    CircleDrawAction.drawHistoryPath = function (ctx, data /*{\n      center: IPoint;\n      radius: number;\n    }*/) {\n        ctx.beginPath();\n        if (data.style) {\n            // 设置上下文属性\n            ctx.lineWidth = data.style.lineWidth;\n            ctx.lineJoin = data.style.lineJoin;\n            ctx.lineCap = data.style.lineCap;\n            data.style.lineDash && ctx.setLineDash(data.style.lineDash);\n            ctx.lineDashOffset = data.style.lineDashOffset;\n            ctx.strokeStyle = data.style.strokeStyle;\n            ctx.fillStyle = data.style.fillStyle;\n            ctx.globalAlpha = data.style.globalAlpha || 1;\n        }\n        ctx.ellipse(data.data.center.x, data.data.center.y, data.data.radius, data.data.radius, (45 * Math.PI) / 180, 0, 2 * Math.PI);\n        ctx.closePath();\n        ctx.stroke();\n        ctx.fill();\n    };\n    /**\n     * start\n     * @param style\n     */\n    CircleDrawAction.prototype.start = function (style) {\n        var _a;\n        if (!this.context || [types_1.ActionStatus.Running, types_1.ActionStatus.Destroy].includes(this.status))\n            return;\n        var context = this.context;\n        var canvasEl = (_a = context === null || context === void 0 ? void 0 : context.getCanvasEl) === null || _a === void 0 ? void 0 : _a.call(context);\n        if (!canvasEl)\n            return;\n        _super.prototype.start.call(this, style);\n        style && (this.style = style);\n        // 触发开始之前事件\n        this.trigger(types_1.ActionEvents.DrawBeforeStart, {\n            selectType: types_1.SelectType.Circle,\n            actionType: types_1.ActionType.Draw,\n        });\n        // 注册事件\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.addEventListener('mousedown', this.onCanvasMouseDown);\n        // 修改状态\n        this.status = types_1.ActionStatus.Running;\n        // 触发开始事件\n        this.trigger(types_1.ActionEvents.DrawStart, {\n            selectType: types_1.SelectType.Circle,\n            actionType: types_1.ActionType.Draw,\n        });\n    };\n    /**\n     * end\n     */\n    CircleDrawAction.prototype.end = function (e) {\n        var context = this.context;\n        if (!context) {\n            _super.prototype.end.call(this, e);\n            return;\n        }\n        var canvasEl = context.getCanvasEl();\n        if (!canvasEl) {\n            _super.prototype.end.call(this, e);\n            return;\n        }\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mousedown', this.onCanvasMouseDown);\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mousemove', this.onCanvasMouseMove);\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mouseup', this.onCanvasMouseUp);\n        e && this.draw(e);\n        this.status = types_1.ActionStatus.End;\n        var data = {\n            id: adhere_util_1.default.uuid(),\n            type: types_1.SelectType.Circle,\n            data: {\n                center: this.centerPoint,\n                radius: this.radius,\n            },\n            style: this.style,\n        };\n        context.addHistoryData(data);\n        this.centerPoint = null;\n        this.radius = 0;\n        this.isMove = false;\n        this.trigger(types_1.ActionEvents.DrawEnd, {\n            selectType: types_1.SelectType.Circle,\n            actionType: types_1.ActionType.Draw,\n            data: data,\n        });\n        _super.prototype.end.call(this, e);\n    };\n    /**\n     * destroy\n     */\n    CircleDrawAction.prototype.destroy = function () {\n        var context = this.context;\n        if (!context) {\n            _super.prototype.destroy.call(this);\n            return;\n        }\n        var canvasEl = context.getCanvasEl();\n        if (!canvasEl) {\n            _super.prototype.destroy.call(this);\n            return;\n        }\n        // 如果是运行状态则删除之前的绘制\n        if (this.status === types_1.ActionStatus.Running) {\n            context.clearDraw();\n            context.drawHistoryData();\n        }\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mousedown', this.onCanvasMouseDown);\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mousemove', this.onCanvasMouseMove);\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mouseup', this.onCanvasMouseUp);\n        this.centerPoint = null;\n        this.radius = 0;\n        this.isMove = false;\n        this.status = types_1.ActionStatus.Destroy;\n        this.trigger(types_1.ActionEvents.Destroy, {\n            selectType: types_1.SelectType.Circle,\n            actionType: types_1.ActionType.Draw,\n        });\n        _super.prototype.destroy.call(this);\n    };\n    return CircleDrawAction;\n}(DrawAction_1.default));\nexports.default = CircleDrawAction;\n"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__importDefault","mod","__esModule","default","adhere_util_1","defineProperty","exports","value","require","types_1","DrawAction_1","CircleDrawAction","_super","_this","centerPoint","isMove","radius","onCanvasMouseDown","bind","onCanvasMouseMove","onCanvasMouseUp","booleanPointInData","point","data","isPointInCircle","draw","e","canvasEl","_a","context","style","ctx","getCtx","getCanvasEl","targetPoint","clientToCtxPoint","event","rect","getBoundingClientRect","clearDraw","drawHistoryData","beginPath","getDistanceByBetweenPoint","p1","p2","lineWidth","lineJoin","lineCap","lineDash","setLineDash","lineDashOffset","strokeStyle","fillStyle","globalAlpha","ellipse","x","y","Math","PI","closePath","stroke","fill","addEventListener","trigger","ActionEvents","Drawing","selectType","SelectType","Circle","actionType","ActionType","Draw","id","uuid","type","center","end","stopPropagation","drawHistoryPath","start","ActionStatus","Running","Destroy","includes","status","DrawBeforeStart","DrawStart","removeEventListener","End","addHistoryData","DrawEnd","destroy"],"mappings":"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"}