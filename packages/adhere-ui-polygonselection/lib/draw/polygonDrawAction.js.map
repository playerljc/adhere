{"version":3,"file":"PolygonDrawAction.js","sources":["draw/PolygonDrawAction.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n};\r\nimport BaseUtil from '@baifendian/adhere-util';\r\nimport * as turf from '@turf/turf';\r\nimport { ActionEvents, ActionStatus, ActionType, SelectType, } from '../types';\r\nimport DrawAction from './DrawAction';\r\n/**\r\n * PolygonAction\r\n * @class PolygonAction\r\n * @classdesc  - 多边形选取\r\n * @remark: 一个start - end的周期中只能绘制一个多边形\r\n */\r\nvar PolygonDrawAction = /** @class */ (function (_super) {\r\n    __extends(PolygonDrawAction, _super);\r\n    /**\r\n     * constructor\r\n     */\r\n    function PolygonDrawAction() {\r\n        var _this = _super.call(this) || this;\r\n        // 开始点\r\n        _this.startPoint = null;\r\n        // 点的集合\r\n        _this.pointStack = [];\r\n        _this.isMove = false;\r\n        _this.onCanvasClick = _this.onCanvasClick.bind(_this);\r\n        _this.onCanvasMousemove = _this.onCanvasMousemove.bind(_this);\r\n        _this.onCanvasDbClick = _this.onCanvasDbClick.bind(_this);\r\n        return _this;\r\n    }\r\n    /**\r\n     * booleanPointInData\r\n     * @description 判断点是否在\r\n     * @param point\r\n     * @param data\r\n     */\r\n    PolygonDrawAction.booleanPointInData = function (point, data) {\r\n        var points = __spreadArray([], data.data, true);\r\n        points.push(points[0]);\r\n        var pt = turf.point([point.x, point.y]);\r\n        var poly = turf.polygon([points.map(function (point) { return [point.x, point.y]; })]);\r\n        return turf.booleanPointInPolygon(pt, poly);\r\n    };\r\n    /**\r\n     * onCanvasClick\r\n     * @param e\r\n     */\r\n    PolygonDrawAction.prototype.onCanvasClick = function (e) {\r\n        if (!this.context)\r\n            return;\r\n        var canvasEl = this.context.getCanvasEl();\r\n        if (!canvasEl)\r\n            return;\r\n        // 第一次\r\n        if (!this.startPoint) {\r\n            canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.addEventListener('mousemove', this.onCanvasMousemove);\r\n            canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.addEventListener('dblclick', this.onCanvasDbClick);\r\n            this.startPoint = BaseUtil.clientToCtxPoint({\r\n                event: e,\r\n                rect: canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.getBoundingClientRect(),\r\n            });\r\n            if (!this.startPoint)\r\n                return;\r\n            this.pointStack.push(this.startPoint);\r\n            // 触发开始事件\r\n            this.trigger(ActionEvents.Start, {\r\n                selectType: SelectType.Polygon,\r\n                actionType: ActionType.Draw,\r\n            });\r\n        }\r\n        else {\r\n            // 不是第一次\r\n            // 画一条直线\r\n            // 当前点\r\n            var curPoint = BaseUtil.clientToCtxPoint({\r\n                event: e,\r\n                rect: canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.getBoundingClientRect(),\r\n            });\r\n            this.drawLine(this.startPoint, curPoint);\r\n            this.startPoint = curPoint;\r\n            if (this.startPoint) {\r\n                this.pointStack.push(this.startPoint);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * onCanvasMousemove\r\n     * @param e\r\n     */\r\n    PolygonDrawAction.prototype.onCanvasMousemove = function (e) {\r\n        if (!this.context)\r\n            return;\r\n        if (!this.startPoint)\r\n            return;\r\n        var canvasEl = this.context.getCanvasEl();\r\n        if (!canvasEl)\r\n            return;\r\n        this.isMove = true;\r\n        // 如果有startPoint,擦除绘制直线\r\n        this.context.clearDraw();\r\n        // 绘制历史数据\r\n        this.context.drawHistoryData();\r\n        // 绘制stack数据\r\n        this.drawStack();\r\n        // drawLine\r\n        this.drawLine(this.startPoint, BaseUtil.clientToCtxPoint({\r\n            event: e,\r\n            rect: canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.getBoundingClientRect(),\r\n        }));\r\n    };\r\n    /**\r\n     * onCanvasDbClick - 结束绘制\r\n     */\r\n    PolygonDrawAction.prototype.onCanvasDbClick = function (e) {\r\n        if (!this.isMove)\r\n            return;\r\n        this.end();\r\n        e.stopPropagation();\r\n    };\r\n    /**\r\n     * drawStack\r\n     */\r\n    PolygonDrawAction.prototype.drawStack = function () {\r\n        var pointStack = this.pointStack;\r\n        if (pointStack.length <= 1)\r\n            return;\r\n        var index = 0;\r\n        do {\r\n            this.drawLine(pointStack[index], pointStack[index + 1]);\r\n            index++;\r\n        } while (index !== pointStack.length - 1);\r\n    };\r\n    /**\r\n     * fill\r\n     */\r\n    PolygonDrawAction.prototype.fill = function () {\r\n        if (!this.context)\r\n            return;\r\n        var pointStack = this.pointStack;\r\n        var ctx = this.context.getCtx();\r\n        if (!ctx)\r\n            return;\r\n        if (pointStack.length <= 1)\r\n            return;\r\n        ctx === null || ctx === void 0 ? void 0 : ctx.beginPath();\r\n        for (var i = 0; i < pointStack.length; i++) {\r\n            var point = pointStack[i];\r\n            if (i === 0) {\r\n                ctx === null || ctx === void 0 ? void 0 : ctx.moveTo(point.x, point.y);\r\n            }\r\n            else {\r\n                ctx === null || ctx === void 0 ? void 0 : ctx.lineTo(point.x, point.y);\r\n            }\r\n        }\r\n        ctx === null || ctx === void 0 ? void 0 : ctx.closePath();\r\n        ctx.fillStyle = this.style.fillStyle;\r\n        ctx.fill();\r\n    };\r\n    /**\r\n     * drawLine\r\n     * @param sP\r\n     * @param eP\r\n     */\r\n    PolygonDrawAction.prototype.drawLine = function (sP, eP) {\r\n        if (!this.context)\r\n            return;\r\n        var style = this.style;\r\n        var ctx = this.context.getCtx();\r\n        if (!ctx)\r\n            return;\r\n        ctx.beginPath();\r\n        ctx.moveTo(sP.x, sP.y);\r\n        ctx.lineTo(eP.x, eP.y);\r\n        ctx.lineWidth = style.lineWidth;\r\n        ctx.lineCap = style.lineCap;\r\n        ctx.lineJoin = style.lineJoin;\r\n        ctx.lineDashOffset = style.lineDashOffset;\r\n        ctx.setLineDash(style.lineDash);\r\n        ctx.stroke();\r\n    };\r\n    /**\r\n     * draw\r\n     * @description\r\n     * @param ctx\r\n     * @param data\r\n     */\r\n    PolygonDrawAction.draw = function (ctx, data) {\r\n        if (!ctx || !data)\r\n            return;\r\n        if (data.style) {\r\n            // 设置上下文属性\r\n            ctx.lineWidth = data.style.lineWidth;\r\n            ctx.lineJoin = data.style.lineJoin;\r\n            ctx.lineCap = data.style.lineCap;\r\n            ctx.setLineDash(data.style.lineDash);\r\n            ctx.lineDashOffset = data.style.lineDashOffset;\r\n            ctx.strokeStyle = data.style.strokeStyle;\r\n            ctx.fillStyle = data.style.fillStyle;\r\n            ctx.globalAlpha = data.style.globalAlpha || 1;\r\n        }\r\n        this.drawHistoryPath(ctx, data.data);\r\n        // 描边\r\n        ctx.stroke();\r\n        // 填充\r\n        ctx.fill();\r\n    };\r\n    /**\r\n     * drawHistoryPath - 绘制历史数据\r\n     * @param ctx\r\n     * @param data\r\n     */\r\n    PolygonDrawAction.drawHistoryPath = function (ctx, data) {\r\n        if (data === void 0) { data = []; }\r\n        ctx.beginPath();\r\n        (data || []).forEach(function (point, index) {\r\n            if (index === 0) {\r\n                ctx.moveTo(point.x, point.y);\r\n            }\r\n            else {\r\n                ctx.lineTo(point.x, point.y);\r\n            }\r\n        });\r\n        ctx.closePath();\r\n    };\r\n    /**\r\n     * start - 开始\r\n     * @param style\r\n     */\r\n    PolygonDrawAction.prototype.start = function (style) {\r\n        if (!this.context || [ActionStatus.Running, ActionStatus.Destroy].includes(this.status))\r\n            return;\r\n        var context = this.context;\r\n        if (!context)\r\n            return;\r\n        var canvasEl = context.getCanvasEl();\r\n        if (!canvasEl)\r\n            return;\r\n        _super.prototype.start.call(this, style);\r\n        style && (this.style = style);\r\n        // 触发开始之前事件\r\n        this.trigger(ActionEvents.BeforeStart, {\r\n            selectType: SelectType.Polygon,\r\n            actionType: ActionType.Draw,\r\n        });\r\n        // 注册事件\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.addEventListener('click', this.onCanvasClick);\r\n        // 修改状态\r\n        this.status = ActionStatus.Running;\r\n    };\r\n    /**\r\n     * end - 结束\r\n     */\r\n    PolygonDrawAction.prototype.end = function () {\r\n        // 结束\r\n        var context = this.context;\r\n        if (!context) {\r\n            _super.prototype.end.call(this);\r\n            return;\r\n        }\r\n        var canvasEl = context.getCanvasEl();\r\n        if (!canvasEl) {\r\n            _super.prototype.end.call(this);\r\n            return;\r\n        }\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('click', this.onCanvasClick);\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mousemove', this.onCanvasMousemove);\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('dblclick', this.onCanvasDbClick);\r\n        context.clearDraw();\r\n        context.drawHistoryData();\r\n        this.fill();\r\n        this.status = ActionStatus.End;\r\n        var data = {\r\n            id: BaseUtil.uuid(),\r\n            type: SelectType.Polygon,\r\n            data: __spreadArray([], this.pointStack, true),\r\n            style: this.style,\r\n        };\r\n        this.startPoint = null;\r\n        this.pointStack = [];\r\n        this.isMove = false;\r\n        context.addHistoryData(data);\r\n        this.trigger(ActionEvents.End, {\r\n            selectType: SelectType.Polygon,\r\n            actionType: ActionType.Draw,\r\n            data: data,\r\n        });\r\n        _super.prototype.end.call(this);\r\n    };\r\n    /**\r\n     * destroy\r\n     */\r\n    PolygonDrawAction.prototype.destroy = function () {\r\n        var context = this.context;\r\n        if (!context) {\r\n            _super.prototype.destroy.call(this);\r\n            return;\r\n        }\r\n        var canvasEl = context.getCanvasEl();\r\n        if (!canvasEl) {\r\n            _super.prototype.destroy.call(this);\r\n            return;\r\n        }\r\n        // 如果是运行状态则删除之前的绘制\r\n        if (this.status === ActionStatus.Running) {\r\n            context.clearDraw();\r\n            context.drawHistoryData();\r\n        }\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('click', this.onCanvasClick);\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mousemove', this.onCanvasMousemove);\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('dblclick', this.onCanvasDbClick);\r\n        this.startPoint = null;\r\n        this.pointStack = [];\r\n        this.isMove = false;\r\n        this.status = ActionStatus.Destroy;\r\n        this.trigger(ActionEvents.Destroy, {\r\n            selectType: SelectType.Polygon,\r\n            actionType: ActionType.Draw,\r\n        });\r\n        _super.prototype.destroy.call(this);\r\n    };\r\n    return PolygonDrawAction;\r\n}(DrawAction));\r\nexport default PolygonDrawAction;\r\n"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__spreadArray","to","from","pack","arguments","length","ar","i","l","slice","concat","BaseUtil","turf","ActionEvents","ActionStatus","ActionType","SelectType","DrawAction","PolygonDrawAction","_super","_this","startPoint","pointStack","isMove","onCanvasClick","bind","onCanvasMousemove","onCanvasDbClick","booleanPointInData","point","data","points","push","pt","x","y","poly","polygon","map","booleanPointInPolygon","e","canvasEl","curPoint","context","getCanvasEl","clientToCtxPoint","event","rect","getBoundingClientRect","drawLine","addEventListener","trigger","Start","selectType","Polygon","actionType","Draw","clearDraw","drawHistoryData","drawStack","end","stopPropagation","index","fill","ctx","getCtx","beginPath","moveTo","lineTo","closePath","fillStyle","style","sP","eP","lineWidth","lineCap","lineJoin","lineDashOffset","setLineDash","lineDash","stroke","draw","strokeStyle","globalAlpha","drawHistoryPath","forEach","start","Running","Destroy","includes","status","BeforeStart","removeEventListener","End","id","uuid","type","addHistoryData","destroy"],"mappings":"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"}