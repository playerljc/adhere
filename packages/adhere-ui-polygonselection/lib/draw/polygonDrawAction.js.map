{"version":3,"file":"polygonDrawAction.js","sources":["draw/polygonDrawAction.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n// @ts-ignore\r\nimport MathUtil from '@baifendian/adhere-util/lib/math.js';\r\n// @ts-ignore\r\nimport BaseUtil from '@baifendian/adhere-util/lib/base';\r\nimport { ActionEvents, ActionStatus, SelectType, ActionType, } from '../types';\r\nimport DrawAction from './drawAction';\r\n/**\r\n * PolygonAction\r\n * @class PolygonAction\r\n * @classdesc  - 多边形选取\r\n * @remark: 一个start - end的周期中只能绘制一个多边形\r\n */\r\nvar PolygonDrawAction = /** @class */ (function (_super) {\r\n    __extends(PolygonDrawAction, _super);\r\n    /**\r\n     * constructor\r\n     */\r\n    function PolygonDrawAction() {\r\n        var _this = _super.call(this) || this;\r\n        // 开始点\r\n        _this.startPoint = null;\r\n        // 点的集合\r\n        _this.pointStack = [];\r\n        _this.onCanvasClick = _this.onCanvasClick.bind(_this);\r\n        _this.onCanvasMousemove = _this.onCanvasMousemove.bind(_this);\r\n        _this.onCanvasDbClick = _this.onCanvasDbClick.bind(_this);\r\n        return _this;\r\n    }\r\n    /**\r\n     * onCanvasClick\r\n     * @param e\r\n     */\r\n    PolygonDrawAction.prototype.onCanvasClick = function (e) {\r\n        if (!this.context)\r\n            return;\r\n        var canvasEl = this.context.getCanvasEl();\r\n        if (!canvasEl)\r\n            return;\r\n        // 第一次\r\n        if (!this.startPoint) {\r\n            canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.addEventListener('mousemove', this.onCanvasMousemove);\r\n            canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.addEventListener('dblclick', this.onCanvasDbClick);\r\n            this.startPoint = MathUtil.clientToCtxPoint({\r\n                event: e,\r\n                rect: canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.getBoundingClientRect(),\r\n            });\r\n            if (!this.startPoint)\r\n                return;\r\n            this.pointStack.push(this.startPoint);\r\n            // 触发开始事件\r\n            this.trigger(ActionEvents.Start, {\r\n                selectType: SelectType.Polygon,\r\n                actionType: ActionType.Draw,\r\n            });\r\n        }\r\n        else {\r\n            // 不是第一次\r\n            // 画一条直线\r\n            // 当前点\r\n            var curPoint = MathUtil.clientToCtxPoint({\r\n                event: e,\r\n                rect: canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.getBoundingClientRect(),\r\n            });\r\n            this.drawLine(this.startPoint, curPoint);\r\n            this.startPoint = curPoint;\r\n            if (this.startPoint) {\r\n                this.pointStack.push(this.startPoint);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * onCanvasMousemove\r\n     * @param e\r\n     */\r\n    PolygonDrawAction.prototype.onCanvasMousemove = function (e) {\r\n        if (!this.context)\r\n            return;\r\n        if (!this.startPoint)\r\n            return;\r\n        var canvasEl = this.context.getCanvasEl();\r\n        if (!canvasEl)\r\n            return;\r\n        // 如果有startPoint,擦除绘制直线\r\n        this.context.clearDraw();\r\n        // 绘制历史数据\r\n        this.context.drawHistoryData();\r\n        // 绘制stack数据\r\n        this.drawStack();\r\n        // drawLine\r\n        this.drawLine(this.startPoint, MathUtil.clientToCtxPoint({\r\n            event: e,\r\n            rect: canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.getBoundingClientRect(),\r\n        }));\r\n    };\r\n    /**\r\n     * onCanvasDbClick - 结束绘制\r\n     */\r\n    PolygonDrawAction.prototype.onCanvasDbClick = function () {\r\n        this.end();\r\n    };\r\n    /**\r\n     * drawStack\r\n     */\r\n    PolygonDrawAction.prototype.drawStack = function () {\r\n        var pointStack = this.pointStack;\r\n        if (pointStack.length <= 1)\r\n            return;\r\n        var index = 0;\r\n        do {\r\n            this.drawLine(pointStack[index], pointStack[index + 1]);\r\n            index++;\r\n        } while (index !== pointStack.length - 1);\r\n    };\r\n    /**\r\n     * fill\r\n     */\r\n    PolygonDrawAction.prototype.fill = function () {\r\n        if (!this.context)\r\n            return;\r\n        var pointStack = this.pointStack;\r\n        var ctx = this.context.getCtx();\r\n        if (!ctx)\r\n            return;\r\n        if (pointStack.length <= 1)\r\n            return;\r\n        ctx === null || ctx === void 0 ? void 0 : ctx.beginPath();\r\n        for (var i = 0; i < pointStack.length; i++) {\r\n            var point = pointStack[i];\r\n            if (i === 0) {\r\n                ctx === null || ctx === void 0 ? void 0 : ctx.moveTo(point.x, point.y);\r\n            }\r\n            else {\r\n                ctx === null || ctx === void 0 ? void 0 : ctx.lineTo(point.x, point.y);\r\n            }\r\n        }\r\n        ctx === null || ctx === void 0 ? void 0 : ctx.closePath();\r\n        ctx.fillStyle = this.style.fillStyle;\r\n        ctx.fill();\r\n    };\r\n    /**\r\n     * drawLine\r\n     * @param sP\r\n     * @param eP\r\n     */\r\n    PolygonDrawAction.prototype.drawLine = function (sP, eP) {\r\n        if (!this.context)\r\n            return;\r\n        var style = this.style;\r\n        var ctx = this.context.getCtx();\r\n        if (!ctx)\r\n            return;\r\n        ctx.beginPath();\r\n        ctx.moveTo(sP.x, sP.y);\r\n        ctx.lineTo(eP.x, eP.y);\r\n        ctx.lineWidth = style.lineWidth;\r\n        ctx.lineCap = style.lineCap;\r\n        ctx.lineJoin = style.lineJoin;\r\n        ctx.lineDashOffset = style.lineDashOffset;\r\n        ctx.setLineDash(style.lineDash);\r\n        ctx.stroke();\r\n    };\r\n    /**\r\n     * draw\r\n     * @description\r\n     * @param ctx\r\n     * @param data\r\n     */\r\n    PolygonDrawAction.draw = function (ctx, data) {\r\n        if (!ctx || !data)\r\n            return;\r\n        if (data.style) {\r\n            // 设置上下文属性\r\n            ctx.lineWidth = data.style.lineWidth;\r\n            ctx.lineJoin = data.style.lineJoin;\r\n            ctx.lineCap = data.style.lineCap;\r\n            ctx.setLineDash(data.style.lineDash);\r\n            ctx.lineDashOffset = data.style.lineDashOffset;\r\n            ctx.strokeStyle = data.style.strokeStyle;\r\n            ctx.fillStyle = data.style.fillStyle;\r\n        }\r\n        this.drawHistoryPath(ctx, data.data);\r\n        // 描边\r\n        ctx.stroke();\r\n        // 填充\r\n        ctx.fill();\r\n    };\r\n    /**\r\n     * drawHistoryPath - 绘制历史数据\r\n     * @param ctx\r\n     * @param data\r\n     */\r\n    PolygonDrawAction.drawHistoryPath = function (ctx, data) {\r\n        if (data === void 0) { data = []; }\r\n        ctx.beginPath();\r\n        (data || []).forEach(function (point, index) {\r\n            if (index === 0) {\r\n                ctx.moveTo(point.x, point.y);\r\n            }\r\n            else {\r\n                ctx.lineTo(point.x, point.y);\r\n            }\r\n        });\r\n        ctx.closePath();\r\n    };\r\n    /**\r\n     * start - 开始\r\n     * @param style\r\n     */\r\n    PolygonDrawAction.prototype.start = function (style) {\r\n        if (!this.context || [ActionStatus.Running, ActionStatus.Destroy].includes(this.status))\r\n            return;\r\n        var context = this.context;\r\n        if (!context)\r\n            return;\r\n        var canvasEl = context.getCanvasEl();\r\n        if (!canvasEl)\r\n            return;\r\n        _super.prototype.start.call(this, style);\r\n        style && (this.style = style);\r\n        // 触发开始之前事件\r\n        this.trigger(ActionEvents.BeforeStart, {\r\n            selectType: SelectType.Polygon,\r\n            actionType: ActionType.Draw,\r\n        });\r\n        // 注册事件\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.addEventListener('click', this.onCanvasClick);\r\n        // 修改状态\r\n        this.status = ActionStatus.Running;\r\n    };\r\n    /**\r\n     * end - 结束\r\n     */\r\n    PolygonDrawAction.prototype.end = function () {\r\n        // 结束\r\n        var context = this.context;\r\n        if (!context) {\r\n            _super.prototype.end.call(this);\r\n            return;\r\n        }\r\n        var canvasEl = context.getCanvasEl();\r\n        if (!canvasEl) {\r\n            _super.prototype.end.call(this);\r\n            return;\r\n        }\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('click', this.onCanvasClick);\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mousemove', this.onCanvasMousemove);\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('dblclick', this.onCanvasDbClick);\r\n        context.clearDraw();\r\n        context.drawHistoryData();\r\n        this.fill();\r\n        this.status = ActionStatus.End;\r\n        var data = {\r\n            id: BaseUtil.uuid(),\r\n            type: SelectType.Polygon,\r\n            data: __spreadArrays(this.pointStack),\r\n            style: this.style,\r\n        };\r\n        this.startPoint = null;\r\n        this.pointStack = [];\r\n        context.addHistoryData(data);\r\n        this.trigger(ActionEvents.End, {\r\n            selectType: SelectType.Polygon,\r\n            actionType: ActionType.Draw,\r\n            data: data,\r\n        });\r\n        _super.prototype.end.call(this);\r\n    };\r\n    /**\r\n     * destroy\r\n     */\r\n    PolygonDrawAction.prototype.destroy = function () {\r\n        var context = this.context;\r\n        if (!context) {\r\n            _super.prototype.destroy.call(this);\r\n            return;\r\n        }\r\n        var canvasEl = context.getCanvasEl();\r\n        if (!canvasEl) {\r\n            _super.prototype.destroy.call(this);\r\n            return;\r\n        }\r\n        // 如果是运行状态则删除之前的绘制\r\n        if (this.status === ActionStatus.Running) {\r\n            context.clearDraw();\r\n            context.drawHistoryData();\r\n        }\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('click', this.onCanvasClick);\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mousemove', this.onCanvasMousemove);\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('dblclick', this.onCanvasDbClick);\r\n        this.startPoint = null;\r\n        this.pointStack = [];\r\n        this.status = ActionStatus.Destroy;\r\n        this.trigger(ActionEvents.Destroy, {\r\n            selectType: SelectType.Polygon,\r\n            actionType: ActionType.Draw,\r\n        });\r\n        _super.prototype.destroy.call(this);\r\n    };\r\n    return PolygonDrawAction;\r\n}(DrawAction));\r\nexport default PolygonDrawAction;\r\n"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__spreadArrays","s","i","il","arguments","length","r","k","a","j","jl","MathUtil","BaseUtil","ActionEvents","ActionStatus","SelectType","ActionType","DrawAction","PolygonDrawAction","_super","_this","call","startPoint","pointStack","onCanvasClick","bind","onCanvasMousemove","onCanvasDbClick","e","canvasEl","curPoint","context","getCanvasEl","clientToCtxPoint","event","rect","getBoundingClientRect","drawLine","push","addEventListener","trigger","Start","selectType","Polygon","actionType","Draw","clearDraw","drawHistoryData","drawStack","end","index","fill","ctx","getCtx","beginPath","point","moveTo","x","y","lineTo","closePath","fillStyle","style","sP","eP","lineWidth","lineCap","lineJoin","lineDashOffset","setLineDash","lineDash","stroke","draw","data","strokeStyle","drawHistoryPath","forEach","start","Running","Destroy","includes","status","BeforeStart","removeEventListener","End","id","uuid","type","addHistoryData","destroy"],"mappings":"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"}