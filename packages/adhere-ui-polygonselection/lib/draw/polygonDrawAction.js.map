{"version":3,"file":"PolygonDrawAction.js","sources":["draw/PolygonDrawAction.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\nimport * as turf from '@turf/turf';\r\n// @ts-ignore\r\nimport MathUtil from '@baifendian/adhere-util/lib/math.js';\r\n// @ts-ignore\r\nimport BaseUtil from '@baifendian/adhere-util/lib/base';\r\nimport { ActionEvents, ActionStatus, SelectType, ActionType, } from '../types';\r\nimport DrawAction from './DrawAction';\r\n/**\r\n * PolygonAction\r\n * @class PolygonAction\r\n * @classdesc  - 多边形选取\r\n * @remark: 一个start - end的周期中只能绘制一个多边形\r\n */\r\nvar PolygonDrawAction = /** @class */ (function (_super) {\r\n    __extends(PolygonDrawAction, _super);\r\n    /**\r\n     * constructor\r\n     */\r\n    function PolygonDrawAction() {\r\n        var _this = _super.call(this) || this;\r\n        // 开始点\r\n        _this.startPoint = null;\r\n        // 点的集合\r\n        _this.pointStack = [];\r\n        _this.isMove = false;\r\n        _this.onCanvasClick = _this.onCanvasClick.bind(_this);\r\n        _this.onCanvasMousemove = _this.onCanvasMousemove.bind(_this);\r\n        _this.onCanvasDbClick = _this.onCanvasDbClick.bind(_this);\r\n        return _this;\r\n    }\r\n    /**\r\n     * booleanPointInData\r\n     * @description 判断点是否在\r\n     * @param point\r\n     * @param data\r\n     */\r\n    PolygonDrawAction.booleanPointInData = function (point, data) {\r\n        var points = __spreadArrays(data.data);\r\n        points.push(points[0]);\r\n        var pt = turf.point([point.x, point.y]);\r\n        var poly = turf.polygon([points.map(function (point) { return [point.x, point.y]; })]);\r\n        return turf.booleanPointInPolygon(pt, poly);\r\n    };\r\n    /**\r\n     * onCanvasClick\r\n     * @param e\r\n     */\r\n    PolygonDrawAction.prototype.onCanvasClick = function (e) {\r\n        if (!this.context)\r\n            return;\r\n        var canvasEl = this.context.getCanvasEl();\r\n        if (!canvasEl)\r\n            return;\r\n        // 第一次\r\n        if (!this.startPoint) {\r\n            canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.addEventListener('mousemove', this.onCanvasMousemove);\r\n            canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.addEventListener('dblclick', this.onCanvasDbClick);\r\n            this.startPoint = MathUtil.clientToCtxPoint({\r\n                event: e,\r\n                rect: canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.getBoundingClientRect(),\r\n            });\r\n            if (!this.startPoint)\r\n                return;\r\n            this.pointStack.push(this.startPoint);\r\n            // 触发开始事件\r\n            this.trigger(ActionEvents.Start, {\r\n                selectType: SelectType.Polygon,\r\n                actionType: ActionType.Draw,\r\n            });\r\n        }\r\n        else {\r\n            // 不是第一次\r\n            // 画一条直线\r\n            // 当前点\r\n            var curPoint = MathUtil.clientToCtxPoint({\r\n                event: e,\r\n                rect: canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.getBoundingClientRect(),\r\n            });\r\n            this.drawLine(this.startPoint, curPoint);\r\n            this.startPoint = curPoint;\r\n            if (this.startPoint) {\r\n                this.pointStack.push(this.startPoint);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * onCanvasMousemove\r\n     * @param e\r\n     */\r\n    PolygonDrawAction.prototype.onCanvasMousemove = function (e) {\r\n        if (!this.context)\r\n            return;\r\n        if (!this.startPoint)\r\n            return;\r\n        var canvasEl = this.context.getCanvasEl();\r\n        if (!canvasEl)\r\n            return;\r\n        this.isMove = true;\r\n        // 如果有startPoint,擦除绘制直线\r\n        this.context.clearDraw();\r\n        // 绘制历史数据\r\n        this.context.drawHistoryData();\r\n        // 绘制stack数据\r\n        this.drawStack();\r\n        // drawLine\r\n        this.drawLine(this.startPoint, MathUtil.clientToCtxPoint({\r\n            event: e,\r\n            rect: canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.getBoundingClientRect(),\r\n        }));\r\n    };\r\n    /**\r\n     * onCanvasDbClick - 结束绘制\r\n     */\r\n    PolygonDrawAction.prototype.onCanvasDbClick = function (e) {\r\n        if (!this.isMove)\r\n            return;\r\n        this.end();\r\n        e.stopPropagation();\r\n    };\r\n    /**\r\n     * drawStack\r\n     */\r\n    PolygonDrawAction.prototype.drawStack = function () {\r\n        var pointStack = this.pointStack;\r\n        if (pointStack.length <= 1)\r\n            return;\r\n        var index = 0;\r\n        do {\r\n            this.drawLine(pointStack[index], pointStack[index + 1]);\r\n            index++;\r\n        } while (index !== pointStack.length - 1);\r\n    };\r\n    /**\r\n     * fill\r\n     */\r\n    PolygonDrawAction.prototype.fill = function () {\r\n        if (!this.context)\r\n            return;\r\n        var pointStack = this.pointStack;\r\n        var ctx = this.context.getCtx();\r\n        if (!ctx)\r\n            return;\r\n        if (pointStack.length <= 1)\r\n            return;\r\n        ctx === null || ctx === void 0 ? void 0 : ctx.beginPath();\r\n        for (var i = 0; i < pointStack.length; i++) {\r\n            var point = pointStack[i];\r\n            if (i === 0) {\r\n                ctx === null || ctx === void 0 ? void 0 : ctx.moveTo(point.x, point.y);\r\n            }\r\n            else {\r\n                ctx === null || ctx === void 0 ? void 0 : ctx.lineTo(point.x, point.y);\r\n            }\r\n        }\r\n        ctx === null || ctx === void 0 ? void 0 : ctx.closePath();\r\n        ctx.fillStyle = this.style.fillStyle;\r\n        ctx.fill();\r\n    };\r\n    /**\r\n     * drawLine\r\n     * @param sP\r\n     * @param eP\r\n     */\r\n    PolygonDrawAction.prototype.drawLine = function (sP, eP) {\r\n        if (!this.context)\r\n            return;\r\n        var style = this.style;\r\n        var ctx = this.context.getCtx();\r\n        if (!ctx)\r\n            return;\r\n        ctx.beginPath();\r\n        ctx.moveTo(sP.x, sP.y);\r\n        ctx.lineTo(eP.x, eP.y);\r\n        ctx.lineWidth = style.lineWidth;\r\n        ctx.lineCap = style.lineCap;\r\n        ctx.lineJoin = style.lineJoin;\r\n        ctx.lineDashOffset = style.lineDashOffset;\r\n        ctx.setLineDash(style.lineDash);\r\n        ctx.stroke();\r\n    };\r\n    /**\r\n     * draw\r\n     * @description\r\n     * @param ctx\r\n     * @param data\r\n     */\r\n    PolygonDrawAction.draw = function (ctx, data) {\r\n        if (!ctx || !data)\r\n            return;\r\n        if (data.style) {\r\n            // 设置上下文属性\r\n            ctx.lineWidth = data.style.lineWidth;\r\n            ctx.lineJoin = data.style.lineJoin;\r\n            ctx.lineCap = data.style.lineCap;\r\n            ctx.setLineDash(data.style.lineDash);\r\n            ctx.lineDashOffset = data.style.lineDashOffset;\r\n            ctx.strokeStyle = data.style.strokeStyle;\r\n            ctx.fillStyle = data.style.fillStyle;\r\n            ctx.globalAlpha = data.style.globalAlpha || 1;\r\n        }\r\n        this.drawHistoryPath(ctx, data.data);\r\n        // 描边\r\n        ctx.stroke();\r\n        // 填充\r\n        ctx.fill();\r\n    };\r\n    /**\r\n     * drawHistoryPath - 绘制历史数据\r\n     * @param ctx\r\n     * @param data\r\n     */\r\n    PolygonDrawAction.drawHistoryPath = function (ctx, data) {\r\n        if (data === void 0) { data = []; }\r\n        ctx.beginPath();\r\n        (data || []).forEach(function (point, index) {\r\n            if (index === 0) {\r\n                ctx.moveTo(point.x, point.y);\r\n            }\r\n            else {\r\n                ctx.lineTo(point.x, point.y);\r\n            }\r\n        });\r\n        ctx.closePath();\r\n    };\r\n    /**\r\n     * start - 开始\r\n     * @param style\r\n     */\r\n    PolygonDrawAction.prototype.start = function (style) {\r\n        if (!this.context || [ActionStatus.Running, ActionStatus.Destroy].includes(this.status))\r\n            return;\r\n        var context = this.context;\r\n        if (!context)\r\n            return;\r\n        var canvasEl = context.getCanvasEl();\r\n        if (!canvasEl)\r\n            return;\r\n        _super.prototype.start.call(this, style);\r\n        style && (this.style = style);\r\n        // 触发开始之前事件\r\n        this.trigger(ActionEvents.BeforeStart, {\r\n            selectType: SelectType.Polygon,\r\n            actionType: ActionType.Draw,\r\n        });\r\n        // 注册事件\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.addEventListener('click', this.onCanvasClick);\r\n        // 修改状态\r\n        this.status = ActionStatus.Running;\r\n    };\r\n    /**\r\n     * end - 结束\r\n     */\r\n    PolygonDrawAction.prototype.end = function () {\r\n        // 结束\r\n        var context = this.context;\r\n        if (!context) {\r\n            _super.prototype.end.call(this);\r\n            return;\r\n        }\r\n        var canvasEl = context.getCanvasEl();\r\n        if (!canvasEl) {\r\n            _super.prototype.end.call(this);\r\n            return;\r\n        }\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('click', this.onCanvasClick);\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mousemove', this.onCanvasMousemove);\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('dblclick', this.onCanvasDbClick);\r\n        context.clearDraw();\r\n        context.drawHistoryData();\r\n        this.fill();\r\n        this.status = ActionStatus.End;\r\n        var data = {\r\n            id: BaseUtil.uuid(),\r\n            type: SelectType.Polygon,\r\n            data: __spreadArrays(this.pointStack),\r\n            style: this.style,\r\n        };\r\n        this.startPoint = null;\r\n        this.pointStack = [];\r\n        this.isMove = false;\r\n        context.addHistoryData(data);\r\n        this.trigger(ActionEvents.End, {\r\n            selectType: SelectType.Polygon,\r\n            actionType: ActionType.Draw,\r\n            data: data,\r\n        });\r\n        _super.prototype.end.call(this);\r\n    };\r\n    /**\r\n     * destroy\r\n     */\r\n    PolygonDrawAction.prototype.destroy = function () {\r\n        var context = this.context;\r\n        if (!context) {\r\n            _super.prototype.destroy.call(this);\r\n            return;\r\n        }\r\n        var canvasEl = context.getCanvasEl();\r\n        if (!canvasEl) {\r\n            _super.prototype.destroy.call(this);\r\n            return;\r\n        }\r\n        // 如果是运行状态则删除之前的绘制\r\n        if (this.status === ActionStatus.Running) {\r\n            context.clearDraw();\r\n            context.drawHistoryData();\r\n        }\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('click', this.onCanvasClick);\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mousemove', this.onCanvasMousemove);\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('dblclick', this.onCanvasDbClick);\r\n        this.startPoint = null;\r\n        this.pointStack = [];\r\n        this.isMove = false;\r\n        this.status = ActionStatus.Destroy;\r\n        this.trigger(ActionEvents.Destroy, {\r\n            selectType: SelectType.Polygon,\r\n            actionType: ActionType.Draw,\r\n        });\r\n        _super.prototype.destroy.call(this);\r\n    };\r\n    return PolygonDrawAction;\r\n}(DrawAction));\r\nexport default PolygonDrawAction;\r\n"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__spreadArrays","s","i","il","arguments","length","r","k","a","j","jl","turf","MathUtil","BaseUtil","ActionEvents","ActionStatus","SelectType","ActionType","DrawAction","PolygonDrawAction","_super","_this","call","startPoint","pointStack","isMove","onCanvasClick","bind","onCanvasMousemove","onCanvasDbClick","booleanPointInData","point","data","points","push","pt","x","y","poly","polygon","map","booleanPointInPolygon","e","canvasEl","curPoint","context","getCanvasEl","clientToCtxPoint","event","rect","getBoundingClientRect","drawLine","addEventListener","trigger","Start","selectType","Polygon","actionType","Draw","clearDraw","drawHistoryData","drawStack","end","stopPropagation","index","fill","ctx","getCtx","beginPath","moveTo","lineTo","closePath","fillStyle","style","sP","eP","lineWidth","lineCap","lineJoin","lineDashOffset","setLineDash","lineDash","stroke","draw","strokeStyle","globalAlpha","drawHistoryPath","forEach","start","Running","Destroy","includes","status","BeforeStart","removeEventListener","End","id","uuid","type","addHistoryData","destroy"],"mappings":"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"}