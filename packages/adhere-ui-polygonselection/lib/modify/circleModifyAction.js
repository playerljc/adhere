"use strict";var __extends=this&&this.__extends||function(){var i=function(t,e){return(i=Object.setPrototypeOf||({__proto__:[]}instanceof Array?function(t,e){t.__proto__=e}:function(t,e){for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&(t[a]=e[a])}))(t,e)};return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function a(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(a.prototype=e.prototype,new a)}}(),__assign=this&&this.__assign||function(){return(__assign=Object.assign||function(t){for(var e,a=1,i=arguments.length;a<i;a++)for(var r in e=arguments[a])Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t}).apply(this,arguments)},__importDefault=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}},adhere_util_1=(Object.defineProperty(exports,"__esModule",{value:!0}),__importDefault(require("@baifendian/adhere-util"))),defaultMoveGemStyle_1=__importDefault(require("../defaultMoveGemStyle")),CircleDrawAction_1=__importDefault(require("../draw/CircleDrawAction")),types_1=require("../types"),ModifyAction_1=__importDefault(require("./ModifyAction")),CircleModifyAction=function(e){function t(t){t=e.call(this,t)||this;return t.ResizeCursorMapping=new Map([[0,"ns-resize"],[1,"ew-resize"],[2,"ns-resize"],[3,"ew-resize"]]),t}return __extends(t,e),t.prototype.drawAnchors=function(){if(this.context){var t=this.context.getCtx();if(t)for(var e=null==(e=null==(e=null==this?void 0:this.data)?void 0:e.data)?void 0:e.data,a=e.center,e=e.radius,i=[{x:a.x,y:a.y-e},{x:a.x+e,y:a.y},{x:a.x,y:a.y+e},{x:a.x-e,y:a.y}],r=0;r<i.length;r++){var n=i[r];t.beginPath(),this.setAnchorCircleStyle(),t.ellipse(n.x,n.y,this.anchorRadius,this.anchorRadius,45*Math.PI/180,0,2*Math.PI),t.stroke(),t.fill()}}},t.prototype.getPointInAnchor=function(t){if(!this.data)return null;for(var e=null,a=-1,i=null==(i=null==(i=null==this?void 0:this.data)?void 0:i.data)?void 0:i.data,r=i.center,i=i.radius,n=[{x:r.x,y:r.y-i},{x:r.x+i,y:r.y},{x:r.x,y:r.y+i},{x:r.x-i,y:r.y}],o=0;o<n.length;o++){var s=n[o],l=this.anchorRadius+this.anchorLineWidth;if(adhere_util_1.default.isPointInCircle(t,{center:s,radius:l})){e=s,a=o;break}}return e&&-1!==a?{point:e,index:a}:null},t.prototype.setResizeCursorByIndex=function(t){var e,a;this.context&&(e=this.context.getCanvasEl(),a=this.context.getAssistCanvasEl(),e)&&a&&(e.style.cursor=a.style.cursor=this.ResizeCursorMapping.get(t))},t.prototype.drawModify=function(t){var e,a=this.context,i=null==a?void 0:a.getCtx();a&&i&&this.data&&this.startPoint&&(i=a.getHistoryDataById(this.data.data.id))&&(e=i.data.center,i.data.radius=adhere_util_1.default.getDistanceByBetweenPoint({p1:e,p2:t}),this.data.data=i,a.clearDraw(),a.drawHistoryData(),this.drawAnchors())},t.prototype.drawMove=function(t,e){var a,i=this.context,r=null==i?void 0:i.getCtx();i&&r&&this.data&&(r=i.getHistoryDataById(this.data.data.id))&&(a=e.x-t.x,e=e.y-t.y,r.data.center.x+=a,r.data.center.y+=e,this.data.data=r,i.clearDraw(),i.drawHistoryData(),this.drawAnchors())},t.prototype.getSelectType=function(){return types_1.SelectType.Circle},t.prototype.isCanMove=function(t){var e,a;return!!this.data&&(e=(a=null==(a=null==(a=null==this?void 0:this.data)?void 0:a.data)?void 0:a.data).center,a=a.radius,adhere_util_1.default.isPointInCircle(t,{center:e,radius:a}))&&!this.getPointInAnchor(t)},t.prototype.drawMoveGeometry=function(){this.context&&this.data&&CircleDrawAction_1.default.draw(this.context.getAssistCtx(),this.data)},t.prototype.drawMoveGeometry=function(t,e){var a,i;this.context&&this.data&&t&&e&&((a=__assign({},this.data.data)).data=__assign(__assign({},a.data),{center:__assign({},a.data.center)}),i=e.x-t.x,e=e.y-t.y,a.data)&&a.data.center&&(a.data.center.x+=i,a.data.center.y+=e,a.style&&(a.style.globalAlpha=defaultMoveGemStyle_1.default.globalAlpha,a.style.strokeStyle=defaultMoveGemStyle_1.default.strokeStyle,a.style.lineWidth=defaultMoveGemStyle_1.default.lineWidth,a.style.lineDash=defaultMoveGemStyle_1.default.lineDash,a.style.lineDashOffset=defaultMoveGemStyle_1.default.lineDashOffset),CircleDrawAction_1.default.draw(this.context.getAssistCtx(),a))},t}(ModifyAction_1.default);exports.default=CircleModifyAction;
//# sourceMappingURL=CircleModifyAction.js.map
