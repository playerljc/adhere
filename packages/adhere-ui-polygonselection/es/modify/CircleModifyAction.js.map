{"version":3,"file":"CircleModifyAction.js","sources":["modify/CircleModifyAction.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nimport MathUtil from '@baifendian/adhere-util';\r\nimport { SelectType } from '../types';\r\nimport ModifyAction from './ModifyAction';\r\nimport CircleDrawAction from '../draw/CircleDrawAction';\r\nimport defaultMoveGemStyle from '../defaultMoveGemStyle';\r\n/**\r\n * CircleModifyAction\r\n * @class CircleModifyAction\r\n * @classdesc - 圆形修改\r\n * @remark:\r\n */\r\nvar CircleModifyAction = /** @class */ (function (_super) {\r\n    __extends(CircleModifyAction, _super);\r\n    function CircleModifyAction(data) {\r\n        var _this = _super.call(this, data) || this;\r\n        _this.ResizeCursorMapping = new Map([\r\n            [0, 'ns-resize'],\r\n            [1, 'ew-resize'],\r\n            [2, 'ns-resize'],\r\n            [3, 'ew-resize'],\r\n        ]);\r\n        return _this;\r\n    }\r\n    /**\r\n     * drawAnchors\r\n     * circle有4个anchor，上，下，左，右\r\n     */\r\n    CircleModifyAction.prototype.drawAnchors = function () {\r\n        var _a, _b;\r\n        if (!this.context)\r\n            return;\r\n        var ctx = this.context.getCtx();\r\n        if (!ctx)\r\n            return;\r\n        var _c = (_b = (_a = this === null || this === void 0 ? void 0 : this.data) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.data, center = _c.center, radius = _c.radius;\r\n        // 顺时针，上，右，下，左\r\n        var circleAnchorPoints = [\r\n            {\r\n                x: center.x,\r\n                y: center.y - radius,\r\n            },\r\n            {\r\n                x: center.x + radius,\r\n                y: center.y,\r\n            },\r\n            {\r\n                x: center.x,\r\n                y: center.y + radius,\r\n            },\r\n            {\r\n                x: center.x - radius,\r\n                y: center.y,\r\n            },\r\n        ];\r\n        for (var i = 0; i < circleAnchorPoints.length; i++) {\r\n            var point = circleAnchorPoints[i];\r\n            ctx.beginPath();\r\n            this.setAnchorCircleStyle();\r\n            ctx.ellipse(point.x, point.y, this.anchorRadius, this.anchorRadius, (45 * Math.PI) / 180, 0, 2 * Math.PI);\r\n            ctx.stroke();\r\n            ctx.fill();\r\n        }\r\n    };\r\n    /**\r\n     * getPointInAnchor\r\n     * @param targetPoint\r\n     * @return IPoint | null\r\n     */\r\n    CircleModifyAction.prototype.getPointInAnchor = function (targetPoint) {\r\n        var _a, _b;\r\n        if (!this.data)\r\n            return null;\r\n        var point = null;\r\n        var index = -1;\r\n        var _c = (_b = (_a = this === null || this === void 0 ? void 0 : this.data) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.data, center = _c.center, radius = _c.radius;\r\n        // 顺时针，上，右，下，左\r\n        var circleAnchorPoints = [\r\n            {\r\n                x: center.x,\r\n                y: center.y - radius,\r\n            },\r\n            {\r\n                x: center.x + radius,\r\n                y: center.y,\r\n            },\r\n            {\r\n                x: center.x,\r\n                y: center.y + radius,\r\n            },\r\n            {\r\n                x: center.x - radius,\r\n                y: center.y,\r\n            },\r\n        ];\r\n        for (var i = 0; i < circleAnchorPoints.length; i++) {\r\n            var center_1 = circleAnchorPoints[i];\r\n            var radius_1 = this.anchorRadius + this.anchorLineWidth;\r\n            if (MathUtil.isPointInCircle(targetPoint, { center: center_1, radius: radius_1 })) {\r\n                point = center_1;\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n        if (point && index !== -1) {\r\n            return {\r\n                point: point,\r\n                index: index,\r\n            };\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * setResizeCursorByIndex\r\n     * @param index\r\n     */\r\n    CircleModifyAction.prototype.setResizeCursorByIndex = function (index) {\r\n        if (!this.context)\r\n            return;\r\n        var canvasEl = this.context.getCanvasEl();\r\n        var assistCanvasEl = this.context.getAssistCanvasEl();\r\n        if (!canvasEl || !assistCanvasEl)\r\n            return;\r\n        canvasEl.style.cursor = assistCanvasEl.style.cursor = this.ResizeCursorMapping.get(index);\r\n    };\r\n    /**\r\n     * drawModify\r\n     * @param targetPoint\r\n     */\r\n    CircleModifyAction.prototype.drawModify = function (targetPoint) {\r\n        var context = this.context;\r\n        var ctx = context === null || context === void 0 ? void 0 : context.getCtx();\r\n        if (!context || !ctx || !this.data || !this.startPoint)\r\n            return;\r\n        // canvasHistory需要修改 需要修改半径\r\n        var data = context.getHistoryDataById(this.data.data.id);\r\n        if (!data)\r\n            return;\r\n        // 中心点和startPoint的距离就是半径\r\n        var center = data.data.center;\r\n        // 两点间距离(圆的中心点和targetPoint)之间的距离\r\n        data.data.radius = MathUtil.getDistanceByBetweenPoint({ p1: center, p2: targetPoint });\r\n        this.data.data = data;\r\n        context.clearDraw();\r\n        context.drawHistoryData();\r\n        this.drawAnchors();\r\n    };\r\n    /**\r\n     * drawMove\r\n     * @param startPoint\r\n     * @param targetPoint\r\n     */\r\n    CircleModifyAction.prototype.drawMove = function (startPoint, targetPoint) {\r\n        var context = this.context;\r\n        var ctx = context === null || context === void 0 ? void 0 : context.getCtx();\r\n        if (!context || !ctx || !this.data)\r\n            return;\r\n        var data = context.getHistoryDataById(this.data.data.id);\r\n        if (!data)\r\n            return;\r\n        var offsetX = targetPoint.x - startPoint.x;\r\n        var offsetY = targetPoint.y - startPoint.y;\r\n        data.data.center.x += offsetX;\r\n        data.data.center.y += offsetY;\r\n        this.data.data = data;\r\n        context.clearDraw();\r\n        context.drawHistoryData();\r\n        this.drawAnchors();\r\n    };\r\n    /**\r\n     * getSelectType\r\n     */\r\n    CircleModifyAction.prototype.getSelectType = function () {\r\n        return SelectType.Circle;\r\n    };\r\n    /**\r\n     * isCanMove\r\n     * @param targetPoint\r\n     */\r\n    CircleModifyAction.prototype.isCanMove = function (targetPoint) {\r\n        var _a, _b;\r\n        if (!this.data)\r\n            return false;\r\n        var _c = (_b = (_a = this === null || this === void 0 ? void 0 : this.data) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.data, center = _c.center, radius = _c.radius;\r\n        return (MathUtil.isPointInCircle(targetPoint, { center: center, radius: radius }) &&\r\n            !this.getPointInAnchor(targetPoint));\r\n    };\r\n    /**\r\n     * drawMoveGeometry\r\n     * @description 绘制移动时的几何图形\r\n     */\r\n    // @ts-ignore\r\n    CircleModifyAction.prototype.drawMoveGeometry = function () {\r\n        if (!this.context || !this.data)\r\n            return;\r\n        CircleDrawAction.draw(this.context.getAssistCtx(), this.data);\r\n    };\r\n    /**\r\n     * drawMoveGeometry\r\n     * @description 绘制移动时的几何图形\r\n     * @param startPoint\r\n     * @param targetPoint\r\n     */\r\n    // @ts-ignore\r\n    CircleModifyAction.prototype.drawMoveGeometry = function (startPoint, targetPoint) {\r\n        if (!this.context || !this.data || !startPoint || !targetPoint)\r\n            return;\r\n        var srcData = __assign({}, this.data.data);\r\n        srcData.data = __assign(__assign({}, srcData.data), { center: __assign({}, srcData.data.center) });\r\n        var offsetX = targetPoint.x - startPoint.x;\r\n        var offsetY = targetPoint.y - startPoint.y;\r\n        if (srcData.data && srcData.data.center) {\r\n            srcData.data.center.x += offsetX;\r\n            srcData.data.center.y += offsetY;\r\n            if (srcData.style) {\r\n                srcData.style.globalAlpha = defaultMoveGemStyle.globalAlpha;\r\n                srcData.style.strokeStyle = defaultMoveGemStyle.strokeStyle;\r\n                srcData.style.lineWidth = defaultMoveGemStyle.lineWidth;\r\n                srcData.style.lineDash = defaultMoveGemStyle.lineDash;\r\n                srcData.style.lineDashOffset = defaultMoveGemStyle.lineDashOffset;\r\n            }\r\n            CircleDrawAction.draw(this.context.getAssistCtx(), srcData);\r\n        }\r\n    };\r\n    return CircleModifyAction;\r\n}(ModifyAction));\r\nexport default CircleModifyAction;\r\n"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","MathUtil","SelectType","ModifyAction","CircleDrawAction","defaultMoveGemStyle","CircleModifyAction","_super","data","_this","ResizeCursorMapping","Map","drawAnchors","context","ctx","getCtx","_c","_b","_a","center","radius","circleAnchorPoints","x","y","point","beginPath","setAnchorCircleStyle","ellipse","anchorRadius","Math","PI","stroke","fill","getPointInAnchor","targetPoint","index","center_1","radius_1","anchorLineWidth","isPointInCircle","setResizeCursorByIndex","canvasEl","assistCanvasEl","getCanvasEl","getAssistCanvasEl","style","cursor","get","drawModify","startPoint","getHistoryDataById","id","getDistanceByBetweenPoint","p1","p2","clearDraw","drawHistoryData","drawMove","offsetX","offsetY","getSelectType","Circle","isCanMove","drawMoveGeometry","draw","getAssistCtx","srcData","globalAlpha","strokeStyle","lineWidth","lineDash","lineDashOffset"],"mappings":"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"}