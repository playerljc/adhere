{"version":3,"file":"RectangleDrawAction.js","sources":["draw/RectangleDrawAction.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport BaseUtil from '@baifendian/adhere-util';\r\nimport * as turf from '@turf/turf';\r\nimport { ActionEvents, ActionStatus, ActionType, SelectType, } from '../types';\r\nimport Util from '../util';\r\nimport DrawAction from './DrawAction';\r\n/**\r\n * RectangleDrawAction\r\n * @class\r\n * @classdesc - 矩形选取\r\n * @remark: - 一个start - end的周期中只能绘制一个矩形\r\n */\r\nvar RectangleDrawAction = /** @class */ (function (_super) {\r\n    __extends(RectangleDrawAction, _super);\r\n    /**\r\n     * context\r\n     */\r\n    function RectangleDrawAction() {\r\n        var _this = _super.call(this) || this;\r\n        // startPoint\r\n        _this.startPoint = null;\r\n        // 左上角坐标\r\n        _this.leftTopPoint = null;\r\n        // 宽度\r\n        _this.width = 0;\r\n        // 高度\r\n        _this.height = 0;\r\n        _this.isMove = false;\r\n        _this.onCanvasMouseDown = _this.onCanvasMouseDown.bind(_this);\r\n        _this.onCanvasMouseMove = _this.onCanvasMouseMove.bind(_this);\r\n        _this.onCanvasMouseUp = _this.onCanvasMouseUp.bind(_this);\r\n        return _this;\r\n    }\r\n    /**\r\n     * booleanPointInData\r\n     * @description 判断点是否在\r\n     * @param point\r\n     * @param data\r\n     */\r\n    RectangleDrawAction.booleanPointInData = function (point, data) {\r\n        var _a = data.data, leftTopPoint = _a.leftTopPoint, width = _a.width, height = _a.height;\r\n        var pt = turf.point([point.x, point.y]);\r\n        var poly = turf.polygon([\r\n            [\r\n                [leftTopPoint.x, leftTopPoint.y],\r\n                [leftTopPoint.x + width, leftTopPoint.y],\r\n                [leftTopPoint.x + width, leftTopPoint.y + height],\r\n                [leftTopPoint.x, leftTopPoint.y + height],\r\n                [leftTopPoint.x, leftTopPoint.y],\r\n            ],\r\n        ]);\r\n        return turf.booleanPointInPolygon(pt, poly);\r\n    };\r\n    /**\r\n     * draw\r\n     * @param e\r\n     */\r\n    RectangleDrawAction.prototype.draw = function (e) {\r\n        var _a, _b;\r\n        var _c = this, context = _c.context, startPoint = _c.startPoint, style = _c.style;\r\n        var ctx = context === null || context === void 0 ? void 0 : context.getCtx();\r\n        if (!context || !ctx)\r\n            return;\r\n        var canvasEl = context.getCanvasEl();\r\n        if (!canvasEl)\r\n            return;\r\n        var targetPoint = BaseUtil.clientToCtxPoint({\r\n            event: e,\r\n            rect: canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.getBoundingClientRect(),\r\n        });\r\n        context.clearDraw();\r\n        context.drawHistoryData();\r\n        ctx.beginPath();\r\n        this.leftTopPoint = Util.getRectLeftTopPoint({ startPoint: startPoint, targetPoint: targetPoint });\r\n        this.width = Math.abs(targetPoint.x - ((startPoint === null || startPoint === void 0 ? void 0 : startPoint.x) || 0));\r\n        this.height = Math.abs(targetPoint.y - ((startPoint === null || startPoint === void 0 ? void 0 : startPoint.y) || 0));\r\n        ctx.lineWidth = style.lineWidth;\r\n        ctx.lineJoin = style.lineJoin;\r\n        ctx.lineCap = style.lineCap;\r\n        ctx.setLineDash(style.lineDash);\r\n        ctx.lineDashOffset = style.lineDashOffset;\r\n        ctx.strokeStyle = style.strokeStyle;\r\n        ctx.fillStyle = style.fillStyle;\r\n        ctx.rect(((_a = this.leftTopPoint) === null || _a === void 0 ? void 0 : _a.x) || 0, ((_b = this.leftTopPoint) === null || _b === void 0 ? void 0 : _b.y) || 0, this.width, this.height);\r\n        ctx.stroke();\r\n        ctx.fill();\r\n    };\r\n    /**\r\n     * onCanvasMouseDown\r\n     * @param e\r\n     */\r\n    RectangleDrawAction.prototype.onCanvasMouseDown = function (e) {\r\n        if (!this.context)\r\n            return;\r\n        var canvasEl = this.context.getCanvasEl();\r\n        if (!canvasEl)\r\n            return;\r\n        this.startPoint = BaseUtil.clientToCtxPoint({\r\n            event: e,\r\n            rect: canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.getBoundingClientRect(),\r\n        });\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.addEventListener('mousemove', this.onCanvasMouseMove);\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.addEventListener('mouseup', this.onCanvasMouseUp);\r\n    };\r\n    /**\r\n     * onCanvasMouseMove\r\n     * @param e\r\n     */\r\n    RectangleDrawAction.prototype.onCanvasMouseMove = function (e) {\r\n        var context = this.context;\r\n        if (!context)\r\n            return;\r\n        this.isMove = true;\r\n        this.draw(e);\r\n    };\r\n    /**\r\n     * onCanvasMouseUp\r\n     * @param e\r\n     */\r\n    RectangleDrawAction.prototype.onCanvasMouseUp = function (e) {\r\n        if (!this.isMove)\r\n            return;\r\n        this.end(e);\r\n        e.stopPropagation();\r\n    };\r\n    /**\r\n     * draw\r\n     * @description\r\n     * @param ctx\r\n     * @param data\r\n     */\r\n    RectangleDrawAction.draw = function (ctx, data) {\r\n        if (!ctx || !data)\r\n            return;\r\n        if (data.style) {\r\n            // 设置上下文属性\r\n            ctx.lineWidth = data.style.lineWidth;\r\n            ctx.lineJoin = data.style.lineJoin;\r\n            ctx.lineCap = data.style.lineCap;\r\n            ctx.setLineDash(data.style.lineDash);\r\n            ctx.lineDashOffset = data.style.lineDashOffset;\r\n            ctx.strokeStyle = data.style.strokeStyle;\r\n            ctx.fillStyle = data.style.fillStyle;\r\n            ctx.globalAlpha = data.style.globalAlpha || 1;\r\n        }\r\n        this.drawHistoryPath(ctx, data.data);\r\n        // 描边\r\n        ctx.stroke();\r\n        // 填充\r\n        ctx.fill();\r\n    };\r\n    /**\r\n     * drawHistoryPath - 绘制历史数据\r\n     * @param ctx\r\n     * @param data\r\n     */\r\n    RectangleDrawAction.drawHistoryPath = function (ctx, data) {\r\n        var _a, _b;\r\n        ctx.beginPath();\r\n        ctx.rect(((_a = data === null || data === void 0 ? void 0 : data.leftTopPoint) === null || _a === void 0 ? void 0 : _a.x) || 0, ((_b = data === null || data === void 0 ? void 0 : data.leftTopPoint) === null || _b === void 0 ? void 0 : _b.y) || 0, data === null || data === void 0 ? void 0 : data.width, data === null || data === void 0 ? void 0 : data.height);\r\n    };\r\n    /**\r\n     * start\r\n     * @param style\r\n     */\r\n    RectangleDrawAction.prototype.start = function (style) {\r\n        if (!this.context || [ActionStatus.Running, ActionStatus.Destroy].includes(this.status))\r\n            return;\r\n        var context = this.context;\r\n        var canvasEl = context.getCanvasEl();\r\n        if (!canvasEl)\r\n            return;\r\n        _super.prototype.start.call(this, style);\r\n        style && (this.style = style);\r\n        // 触发开始之前事件\r\n        this.trigger(ActionEvents.BeforeStart, {\r\n            selectType: SelectType.Rectangle,\r\n            actionType: ActionType.Draw,\r\n        });\r\n        // 注册事件\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.addEventListener('mousedown', this.onCanvasMouseDown);\r\n        // 修改状态\r\n        this.status = ActionStatus.Running;\r\n        // 触发开始事件\r\n        this.trigger(ActionEvents.Start, {\r\n            selectType: SelectType.Rectangle,\r\n            actionType: ActionType.Draw,\r\n        });\r\n    };\r\n    /**\r\n     * end\r\n     */\r\n    RectangleDrawAction.prototype.end = function (e) {\r\n        var context = this.context;\r\n        if (!context) {\r\n            _super.prototype.end.call(this, e);\r\n            return;\r\n        }\r\n        var canvasEl = context.getCanvasEl();\r\n        if (!canvasEl) {\r\n            _super.prototype.end.call(this, e);\r\n            return;\r\n        }\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mousedown', this.onCanvasMouseDown);\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mousemove', this.onCanvasMouseMove);\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mouseup', this.onCanvasMouseUp);\r\n        e && this.draw(e);\r\n        this.status = ActionStatus.End;\r\n        var data = {\r\n            id: BaseUtil.uuid(),\r\n            type: SelectType.Rectangle,\r\n            data: {\r\n                leftTopPoint: this.leftTopPoint,\r\n                width: this.width,\r\n                height: this.height,\r\n            },\r\n            style: this.style,\r\n        };\r\n        context.addHistoryData(data);\r\n        this.startPoint = null;\r\n        this.leftTopPoint = null;\r\n        this.width = 0;\r\n        this.height = 0;\r\n        this.isMove = false;\r\n        this.trigger(ActionEvents.End, {\r\n            selectType: SelectType.Rectangle,\r\n            actionType: ActionType.Draw,\r\n            data: data,\r\n        });\r\n        _super.prototype.end.call(this, e);\r\n    };\r\n    /**\r\n     * destroy\r\n     */\r\n    RectangleDrawAction.prototype.destroy = function () {\r\n        var context = this.context;\r\n        if (!context) {\r\n            _super.prototype.destroy.call(this);\r\n            return;\r\n        }\r\n        var canvasEl = context.getCanvasEl();\r\n        if (!canvasEl) {\r\n            _super.prototype.destroy.call(this);\r\n            return;\r\n        }\r\n        // 如果是运行状态则删除之前的绘制\r\n        if (this.status === ActionStatus.Running) {\r\n            context.clearDraw();\r\n            context.drawHistoryData();\r\n        }\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mousedown', this.onCanvasMouseDown);\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mousemove', this.onCanvasMouseMove);\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mouseup', this.onCanvasMouseUp);\r\n        this.startPoint = null;\r\n        this.leftTopPoint = null;\r\n        this.width = 0;\r\n        this.height = 0;\r\n        this.isMove = false;\r\n        this.status = ActionStatus.Destroy;\r\n        this.trigger(ActionEvents.Destroy, {\r\n            selectType: SelectType.Rectangle,\r\n            actionType: ActionType.Draw,\r\n        });\r\n        _super.prototype.destroy.call(this);\r\n    };\r\n    return RectangleDrawAction;\r\n}(DrawAction));\r\nexport default RectangleDrawAction;\r\n"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","BaseUtil","turf","ActionEvents","ActionStatus","ActionType","SelectType","Util","DrawAction","RectangleDrawAction","_super","_this","startPoint","leftTopPoint","width","height","isMove","onCanvasMouseDown","bind","onCanvasMouseMove","onCanvasMouseUp","booleanPointInData","point","data","_a","pt","x","y","poly","polygon","booleanPointInPolygon","draw","e","canvasEl","_c","context","style","ctx","getCtx","getCanvasEl","targetPoint","clientToCtxPoint","event","rect","getBoundingClientRect","clearDraw","drawHistoryData","beginPath","getRectLeftTopPoint","Math","abs","lineWidth","lineJoin","lineCap","setLineDash","lineDash","lineDashOffset","strokeStyle","fillStyle","_b","stroke","fill","addEventListener","end","stopPropagation","globalAlpha","drawHistoryPath","start","Running","Destroy","includes","status","trigger","BeforeStart","selectType","Rectangle","actionType","Draw","Start","removeEventListener","End","id","uuid","type","addHistoryData","destroy"],"mappings":"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"}