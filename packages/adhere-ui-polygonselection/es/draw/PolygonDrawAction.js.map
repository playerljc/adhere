{"version":3,"file":"PolygonDrawAction.js","sources":["draw/PolygonDrawAction.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport BaseUtil from '@baifendian/adhere-util';\nimport * as turf from '@turf/turf';\nimport { ActionEvents, ActionStatus, ActionType, SelectType, } from '../types';\nimport DrawAction from './DrawAction';\n/**\n * PolygonAction\n * @class PolygonAction\n * @classdesc  - 多边形选取\n * @remark: 一个start - end的周期中只能绘制一个多边形\n */\nvar PolygonDrawAction = /** @class */ (function (_super) {\n    __extends(PolygonDrawAction, _super);\n    /**\n     * constructor\n     */\n    function PolygonDrawAction() {\n        var _this = _super.call(this) || this;\n        // 开始点\n        _this.startPoint = null;\n        // 点的集合\n        _this.pointStack = [];\n        _this.isMove = false;\n        _this.onCanvasClick = _this.onCanvasClick.bind(_this);\n        _this.onCanvasMousemove = _this.onCanvasMousemove.bind(_this);\n        _this.onCanvasDbClick = _this.onCanvasDbClick.bind(_this);\n        return _this;\n    }\n    /**\n     * booleanPointInData\n     * @description 判断点是否在\n     * @param point\n     * @param data\n     */\n    PolygonDrawAction.booleanPointInData = function (point, data) {\n        var points = __spreadArray([], data.data, true);\n        points.push(points[0]);\n        var pt = turf.point([point.x, point.y]);\n        var poly = turf.polygon([points.map(function (point) { return [point.x, point.y]; })]);\n        return turf.booleanPointInPolygon(pt, poly);\n    };\n    /**\n     * onCanvasClick\n     * @param e\n     */\n    PolygonDrawAction.prototype.onCanvasClick = function (e) {\n        e.stopPropagation();\n        if (!this.context)\n            return;\n        var canvasEl = this.context.getCanvasEl();\n        if (!canvasEl)\n            return;\n        // 第一次\n        if (!this.startPoint) {\n            canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.addEventListener('mousemove', this.onCanvasMousemove);\n            canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.addEventListener('dblclick', this.onCanvasDbClick);\n            this.startPoint = BaseUtil.clientToCtxPoint({\n                event: e,\n                rect: canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.getBoundingClientRect(),\n            });\n            if (!this.startPoint)\n                return;\n            this.pointStack.push(this.startPoint);\n            // 触发开始事件\n            this.trigger(ActionEvents.DrawStart, {\n                selectType: SelectType.Polygon,\n                actionType: ActionType.Draw,\n            });\n        }\n        else {\n            // 不是第一次\n            // 画一条直线\n            // 当前点\n            var curPoint = BaseUtil.clientToCtxPoint({\n                event: e,\n                rect: canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.getBoundingClientRect(),\n            });\n            this.drawLine(this.startPoint, curPoint);\n            this.startPoint = curPoint;\n            if (this.startPoint) {\n                this.pointStack.push(this.startPoint);\n            }\n        }\n    };\n    /**\n     * onCanvasMousemove\n     * @param e\n     */\n    PolygonDrawAction.prototype.onCanvasMousemove = function (e) {\n        if (!this.context)\n            return;\n        if (!this.startPoint)\n            return;\n        var canvasEl = this.context.getCanvasEl();\n        if (!canvasEl)\n            return;\n        this.isMove = true;\n        // 如果有startPoint,擦除绘制直线\n        this.context.clearDraw();\n        // 绘制历史数据\n        this.context.drawHistoryData();\n        // 绘制stack数据\n        this.drawStack();\n        // drawLine\n        this.drawLine(this.startPoint, BaseUtil.clientToCtxPoint({\n            event: e,\n            rect: canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.getBoundingClientRect(),\n        }));\n    };\n    /**\n     * onCanvasDbClick - 结束绘制\n     */\n    PolygonDrawAction.prototype.onCanvasDbClick = function (e) {\n        if (!this.isMove)\n            return;\n        this.end();\n        e.stopPropagation();\n    };\n    /**\n     * drawStack\n     */\n    PolygonDrawAction.prototype.drawStack = function () {\n        var pointStack = this.pointStack;\n        if (pointStack.length <= 1)\n            return;\n        var index = 0;\n        do {\n            this.drawLine(pointStack[index], pointStack[index + 1]);\n            index++;\n        } while (index !== pointStack.length - 1);\n    };\n    /**\n     * fill\n     */\n    PolygonDrawAction.prototype.fill = function () {\n        if (!this.context)\n            return;\n        var pointStack = this.pointStack;\n        var ctx = this.context.getCtx();\n        if (!ctx)\n            return;\n        if (pointStack.length <= 1)\n            return;\n        ctx === null || ctx === void 0 ? void 0 : ctx.beginPath();\n        ctx.lineWidth = this.style.lineWidth;\n        ctx.lineJoin = this.style.lineJoin;\n        ctx.lineCap = this.style.lineCap;\n        this.style.lineDash && ctx.setLineDash(this.style.lineDash);\n        ctx.lineDashOffset = this.style.lineDashOffset;\n        ctx.strokeStyle = this.style.strokeStyle;\n        ctx.fillStyle = this.style.fillStyle;\n        ctx.globalAlpha = this.style.globalAlpha;\n        for (var i = 0; i < pointStack.length; i++) {\n            var point = pointStack[i];\n            if (i === 0) {\n                ctx === null || ctx === void 0 ? void 0 : ctx.moveTo(point.x, point.y);\n            }\n            else {\n                ctx === null || ctx === void 0 ? void 0 : ctx.lineTo(point.x, point.y);\n            }\n        }\n        ctx.closePath();\n        ctx.stroke();\n        ctx.fill();\n    };\n    /**\n     * drawLine\n     * @param sP\n     * @param eP\n     */\n    PolygonDrawAction.prototype.drawLine = function (sP, eP) {\n        if (!this.context)\n            return;\n        var style = this.style;\n        var ctx = this.context.getCtx();\n        if (!ctx)\n            return;\n        ctx.beginPath();\n        ctx.moveTo(sP.x, sP.y);\n        ctx.lineTo(eP.x, eP.y);\n        ctx.strokeStyle = style.strokeStyle;\n        style.lineDash && ctx.setLineDash(style.lineDash);\n        ctx.lineWidth = style.lineWidth / 2;\n        ctx.lineCap = style.lineCap;\n        ctx.lineJoin = style.lineJoin;\n        ctx.lineDashOffset = style.lineDashOffset;\n        ctx.closePath();\n        ctx.stroke();\n    };\n    /**\n     * draw\n     * @description\n     * @param ctx\n     * @param data\n     */\n    PolygonDrawAction.draw = function (ctx, data) {\n        if (!ctx || !data)\n            return;\n        this.drawHistoryPath(ctx, data /*data.data as IPoint[]*/);\n    };\n    /**\n     * drawHistoryPath - 绘制历史数据\n     * @param ctx\n     * @param data\n     */\n    PolygonDrawAction.drawHistoryPath = function (ctx, data /*data: IPoint[] = []*/) {\n        ctx.beginPath();\n        if (data.style) {\n            // 设置上下文属性\n            ctx.lineWidth = data.style.lineWidth;\n            ctx.lineJoin = data.style.lineJoin;\n            ctx.lineCap = data.style.lineCap;\n            data.style.lineDash && ctx.setLineDash(data.style.lineDash);\n            ctx.lineDashOffset = data.style.lineDashOffset;\n            ctx.strokeStyle = data.style.strokeStyle;\n            ctx.fillStyle = data.style.fillStyle;\n            ctx.globalAlpha = data.style.globalAlpha || 1;\n        }\n        ((data === null || data === void 0 ? void 0 : data.data) || []).forEach(function (point, index) {\n            if (index === 0) {\n                ctx.moveTo(point.x, point.y);\n            }\n            else {\n                ctx.lineTo(point.x, point.y);\n            }\n        });\n        ctx.closePath();\n        ctx.stroke();\n        ctx.fill();\n    };\n    /**\n     * start - 开始\n     * @param style\n     */\n    PolygonDrawAction.prototype.start = function (style) {\n        if (!this.context || [ActionStatus.Running, ActionStatus.Destroy].includes(this.status))\n            return;\n        var context = this.context;\n        if (!context)\n            return;\n        var canvasEl = context.getCanvasEl();\n        if (!canvasEl)\n            return;\n        _super.prototype.start.call(this, style);\n        style && (this.style = style);\n        // 触发开始之前事件\n        this.trigger(ActionEvents.DrawBeforeStart, {\n            selectType: SelectType.Polygon,\n            actionType: ActionType.Draw,\n        });\n        // 注册事件\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.addEventListener('mouseup', this.onCanvasClick);\n        // 修改状态\n        this.status = ActionStatus.Running;\n    };\n    /**\n     * end - 结束\n     */\n    PolygonDrawAction.prototype.end = function () {\n        // 结束\n        var context = this.context;\n        if (!context) {\n            _super.prototype.end.call(this);\n            return;\n        }\n        var canvasEl = context.getCanvasEl();\n        if (!canvasEl) {\n            _super.prototype.end.call(this);\n            return;\n        }\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mouseup', this.onCanvasClick);\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mousemove', this.onCanvasMousemove);\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('dblclick', this.onCanvasDbClick);\n        context.clearDraw();\n        context.drawHistoryData();\n        this.fill();\n        this.status = ActionStatus.End;\n        var data = {\n            id: BaseUtil.uuid(),\n            type: SelectType.Polygon,\n            data: __spreadArray([], this.pointStack, true),\n            style: this.style,\n        };\n        this.startPoint = null;\n        this.pointStack = [];\n        this.isMove = false;\n        context.addHistoryData(data);\n        this.trigger(ActionEvents.DrawEnd, {\n            selectType: SelectType.Polygon,\n            actionType: ActionType.Draw,\n            data: data,\n        });\n        _super.prototype.end.call(this);\n    };\n    /**\n     * destroy\n     */\n    PolygonDrawAction.prototype.destroy = function () {\n        var context = this.context;\n        if (!context) {\n            _super.prototype.destroy.call(this);\n            return;\n        }\n        var canvasEl = context.getCanvasEl();\n        if (!canvasEl) {\n            _super.prototype.destroy.call(this);\n            return;\n        }\n        // 如果是运行状态则删除之前的绘制\n        if (this.status === ActionStatus.Running) {\n            context.clearDraw();\n            context.drawHistoryData();\n        }\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mouseup', this.onCanvasClick);\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mousemove', this.onCanvasMousemove);\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('dblclick', this.onCanvasDbClick);\n        this.startPoint = null;\n        this.pointStack = [];\n        this.isMove = false;\n        this.status = ActionStatus.Destroy;\n        this.trigger(ActionEvents.Destroy, {\n            selectType: SelectType.Polygon,\n            actionType: ActionType.Draw,\n        });\n        _super.prototype.destroy.call(this);\n    };\n    return PolygonDrawAction;\n}(DrawAction));\nexport default PolygonDrawAction;\n"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__spreadArray","to","from","pack","arguments","length","ar","i","l","slice","concat","BaseUtil","turf","ActionEvents","ActionStatus","ActionType","SelectType","DrawAction","PolygonDrawAction","_super","_this","startPoint","pointStack","isMove","onCanvasClick","bind","onCanvasMousemove","onCanvasDbClick","booleanPointInData","point","data","points","push","pt","x","y","poly","polygon","map","booleanPointInPolygon","e","canvasEl","curPoint","stopPropagation","context","getCanvasEl","clientToCtxPoint","event","rect","getBoundingClientRect","drawLine","addEventListener","trigger","DrawStart","selectType","Polygon","actionType","Draw","clearDraw","drawHistoryData","drawStack","end","index","fill","ctx","getCtx","beginPath","lineWidth","style","lineJoin","lineCap","lineDash","setLineDash","lineDashOffset","strokeStyle","fillStyle","globalAlpha","moveTo","lineTo","closePath","stroke","sP","eP","draw","drawHistoryPath","forEach","start","Running","Destroy","includes","status","DrawBeforeStart","removeEventListener","End","id","uuid","type","addHistoryData","DrawEnd","destroy"],"mappings":"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"}