{"version":3,"file":"TreeAutoComplete.js","sources":["TreeAutoComplete.js"],"sourcesContent":["import _TreeSelect from \"antd/es/tree-select\";\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { useUpdateEffect } from 'ahooks';\nimport classNames from 'classnames';\nimport debounce from 'lodash.debounce';\nimport React, { memo, useCallback, useMemo, useRef, useState } from 'react';\nimport Util from '@baifendian/adhere-util';\nimport useCommon from './useCommon';\nvar treeTransformConfig = {\n  keyAttr: 'value',\n  titleAttr: 'title',\n  parentIdAttr: 'pId',\n  rootParentId: 0\n};\n/**\n * TreeAutoComplete\n */\nvar TreeAutoComplete = /*#__PURE__*/memo(function (_a) {\n  var classNameWrap = _a.classNameWrap,\n    styleWrap = _a.styleWrap,\n    renderLoading = _a.renderLoading,\n    debounceTimeout = _a.debounceTimeout,\n    loadData = _a.loadData,\n    treeData = _a.treeData,\n    emptyContent = _a.emptyContent,\n    children = _a.children,\n    treeDataSimpleMode = _a.treeDataSimpleMode,\n    treeSelectProps = __rest(_a, [\"classNameWrap\", \"styleWrap\", \"renderLoading\", \"debounceTimeout\", \"loadData\", \"treeData\", \"emptyContent\", \"children\", \"treeDataSimpleMode\"]);\n  var _b = useState({}),\n    paths = _b[0],\n    setPaths = _b[1];\n  var onSelectChangeStartTime = useRef(0);\n  var _c = useCommon({\n      renderLoading: renderLoading,\n      emptyContent: emptyContent,\n      loadData: loadData\n    }),\n    defaultDebounceTimeout = _c.defaultDebounceTimeout,\n    selectorPrefix = _c.selectorPrefix,\n    fetchLoading = _c.fetchLoading,\n    empty = _c.empty,\n    fetching = _c.fetching,\n    open = _c.open,\n    setOpen = _c.setOpen,\n    onClear = _c.onClear,\n    onInputMemo = _c.onInputMemo;\n  function getPathsByValues(_values) {\n    var _targetValues = Array.isArray(_values) ? _values : [_values];\n    return _targetValues.reduce(function (result, _id) {\n      var node = targetFlatTreeData.find(function (t) {\n        return t.value === _id;\n      });\n      result[_id] = __spreadArray(__spreadArray([], Util.getAncestor(targetFlatTreeData, node, treeTransformConfig), true), [node], false);\n      return result;\n    }, {});\n  }\n  /**\n   * onSelectChange\n   * @description 从下方组件触发的\n   * @param _values\n   * @param label\n   * @param extra\n   */\n  function onSelectChange(_values, label, extra) {\n    var _a, _b;\n    if (!extra.triggerNode) {\n      setPaths({});\n      (_a = treeSelectProps.onChange) === null || _a === void 0 ? void 0 : _a.call(treeSelectProps, _values, label, extra);\n      return;\n    }\n    setPaths(getPathsByValues(_values));\n    // @ts-ignore\n    (_b = treeSelectProps.onChange) === null || _b === void 0 ? void 0 : _b.call(treeSelectProps, _values);\n    if (isMultiple) {\n      onSelectChangeStartTime.current = Date.now();\n    } else {\n      // 单选\n      setOpen(false);\n    }\n  }\n  var onInput = useCallback(debounce(function (e) {\n    var currentTime = Date.now();\n    if (['ant-checkbox-input'].some(function (className) {\n      return e.target.className.indexOf(className) !== -1;\n    })) {\n      return;\n    }\n    if (isMultiple && onSelectChangeStartTime.current !== 0 && currentTime - onSelectChangeStartTime.current <= 400) {\n      onSelectChangeStartTime.current = 0;\n      return;\n    }\n    onSelectChangeStartTime.current = 0;\n    var _kw = e.target.value.trim();\n    onInputMemo(_kw);\n  }, debounceTimeout !== null && debounceTimeout !== void 0 ? debounceTimeout : defaultDebounceTimeout), [debounceTimeout]);\n  var isChecked = useMemo(function () {\n    return 'treeCheckable' in treeSelectProps ? !!treeSelectProps.treeCheckable : false;\n  }, [treeSelectProps.treeCheckable]);\n  var isMultiple = useMemo(function () {\n    return isChecked || ('multiple' in treeSelectProps ? !!treeSelectProps.multiple : false);\n  }, [isChecked, treeSelectProps.multiple]);\n  var flatTreeData = useMemo(function () {\n    return treeDataSimpleMode ? treeData : Util.treeToArray(treeData, {\n      parentIdAttr: treeTransformConfig.parentIdAttr,\n      rootParentId: treeTransformConfig.rootParentId\n    }, treeTransformConfig.keyAttr);\n  }, [treeData]);\n  var flatPathData = useMemo(function () {\n    return Object.keys(paths).map(function (_k) {\n      return paths[_k];\n    }).flat();\n  }, [paths]);\n  /**\n   * allTreeData\n   * @description 最终的数据\n   */\n  var targetTreeData = useMemo(function () {\n    // treeData\n    if (!treeDataSimpleMode) {\n      var _allFlatTreeData_1 = __spreadArray(__spreadArray([], flatTreeData !== null && flatTreeData !== void 0 ? flatTreeData : [], true), flatPathData !== null && flatPathData !== void 0 ? flatPathData : [], true);\n      var allFlatTreeDataKeys = _allFlatTreeData_1.map(function (_a) {\n        var value = _a.value;\n        return value;\n      });\n      var distinctKeys = Array.from(new Set(allFlatTreeDataKeys));\n      _allFlatTreeData_1 = distinctKeys.map(function (_value) {\n        return _allFlatTreeData_1.find(function (_option) {\n          return _option.value === _value;\n        });\n      });\n      return Util.completionIncompleteFlatArr(__spreadArray(__spreadArray([], flatTreeData !== null && flatTreeData !== void 0 ? flatTreeData : [], true), flatPathData !== null && flatPathData !== void 0 ? flatPathData : [], true), _allFlatTreeData_1, treeTransformConfig);\n    }\n    // flatTreeData\n    else {\n      var _allFlatTreeData_2 = __spreadArray(__spreadArray([], treeData !== null && treeData !== void 0 ? treeData : [], true), flatPathData !== null && flatPathData !== void 0 ? flatPathData : [], true);\n      var allFlatTreeDataKeys = _allFlatTreeData_2.map(function (_a) {\n        var value = _a.value;\n        return value;\n      });\n      var distinctKeys = Array.from(new Set(allFlatTreeDataKeys));\n      return Util.treeToArray(Util.completionIncompleteFlatArr(__spreadArray(__spreadArray([], treeData !== null && treeData !== void 0 ? treeData : [], true), flatPathData !== null && flatPathData !== void 0 ? flatPathData : [], true), distinctKeys.map(function (_value) {\n        return _allFlatTreeData_2.find(function (_option) {\n          return _option.value === _value;\n        });\n      }), treeTransformConfig), {\n        parentIdAttr: treeTransformConfig.parentIdAttr,\n        rootParentId: treeTransformConfig.rootParentId\n      }, treeTransformConfig.keyAttr);\n    }\n  }, [treeData, flatTreeData, paths, treeSelectProps.value]);\n  var targetFlatTreeData = useMemo(function () {\n    return !!treeDataSimpleMode ? targetTreeData : Util.treeToArray(targetTreeData, {\n      parentIdAttr: treeTransformConfig.parentIdAttr,\n      rootParentId: treeTransformConfig.rootParentId\n    }, treeTransformConfig.keyAttr);\n  }, [treeDataSimpleMode, targetTreeData]);\n  useUpdateEffect(function () {\n    var _a;\n    var pathsKeys = Object.keys(paths);\n    var targetValue = (_a = treeSelectProps.value) !== null && _a !== void 0 ? _a : treeSelectProps.defaultValue;\n    // 不在paths里的values，才需要进行路径设置\n    var values = (Array.isArray(targetValue) ? targetValue : [targetValue]).filter(function (_value) {\n      return !pathsKeys.includes(_value);\n    });\n    if (values.length) {\n      setPaths(__assign(__assign({}, paths), getPathsByValues(values)));\n    }\n  }, [treeSelectProps.defaultValue, treeSelectProps.value, paths, targetFlatTreeData]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(selectorPrefix, classNameWrap !== null && classNameWrap !== void 0 ? classNameWrap : ''),\n    style: styleWrap !== null && styleWrap !== void 0 ? styleWrap : {}\n  }, /*#__PURE__*/React.createElement(_TreeSelect, __assign({\n    showSearch: true,\n    allowClear: true,\n    // @ts-ignore\n    // filterOption={false}\n    filterTreeNode: false,\n    open: open,\n    treeData: targetTreeData,\n    // onSearch={onInput}\n    // @ts-ignore\n    onInput: onInput,\n    onClear: onClear,\n    dropdownRender: function dropdownRender(originNode) {\n      var _a;\n      if (fetching) return fetchLoading;\n      return !!(targetTreeData === null || targetTreeData === void 0 ? void 0 : targetTreeData.length) ? (_a = children === null || children === void 0 ? void 0 : children({\n        originNode: originNode,\n        treeDataSimpleMode: treeDataSimpleMode,\n        value: treeSelectProps.value,\n        onChange: function onChange() {\n          var params = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n            params[_i] = arguments[_i];\n          }\n          return onSelectChange.apply(void 0, params);\n        },\n        treeData: targetTreeData !== null && targetTreeData !== void 0 ? targetTreeData : [],\n        loading: fetching\n      })) !== null && _a !== void 0 ? _a : originNode : empty;\n    },\n    onDropdownVisibleChange: setOpen\n  }, treeSelectProps, {\n    treeCheckable: false,\n    treeDataSimpleMode: !!treeDataSimpleMode,\n    onChange: function onChange() {\n      var params = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        params[_i] = arguments[_i];\n      }\n      return onSelectChange.apply(void 0, params);\n    }\n  })));\n});\nTreeAutoComplete.displayName = 'TreeAutoComplete';\nexport default TreeAutoComplete;"],"names":["_TreeSelect","__assign","this","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__spreadArray","to","from","pack","ar","l","Array","slice","concat","useUpdateEffect","classNames","debounce","React","memo","useCallback","useMemo","useRef","useState","Util","useCommon","treeTransformConfig","keyAttr","titleAttr","parentIdAttr","rootParentId","TreeAutoComplete","_a","classNameWrap","styleWrap","renderLoading","debounceTimeout","loadData","treeData","emptyContent","children","treeDataSimpleMode","treeSelectProps","_b","paths","setPaths","onSelectChangeStartTime","_c","defaultDebounceTimeout","selectorPrefix","fetchLoading","empty","fetching","open","setOpen","onClear","onInputMemo","getPathsByValues","_values","isArray","reduce","result","_id","node","targetFlatTreeData","find","value","getAncestor","onSelectChange","label","extra","triggerNode","onChange","isMultiple","current","Date","now","onInput","currentTime","some","className","target","_kw","trim","isChecked","treeCheckable","multiple","flatTreeData","treeToArray","flatPathData","keys","map","_k","flat","targetTreeData","_allFlatTreeData_2","allFlatTreeDataKeys","distinctKeys","_allFlatTreeData_1","Set","completionIncompleteFlatArr","_value","_option","pathsKeys","targetValue","defaultValue","values","filter","includes","createElement","style","showSearch","allowClear","filterTreeNode","dropdownRender","originNode","params","_i","loading","onDropdownVisibleChange","displayName"],"mappings":"OAAOA,gBAAiB,sBACxB,IAAIC,SAAWC,MAAQA,KAAKD,UAAY,WAQtC,OAPAA,SAAWE,OAAOC,QAAU,SAAUC,GACpC,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,CAAC,GAE/C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,CAAC,IAAGN,EAAEM,GAAKL,EAAEK,IAE5E,OAAON,CACT,GACgBU,MAAMb,KAAMO,SAAS,CACvC,EACIO,OAASd,MAAQA,KAAKc,QAAU,SAAUV,EAAGW,GAC/C,IAAIZ,EAAI,GACR,IAASM,KAAKL,EAAOH,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,CAAC,GAAKM,EAAEC,QAAQP,CAAC,EAAI,IAAGN,EAAEM,GAAKL,EAAEK,IAC9F,GAAS,MAALL,GAAqD,YAAxC,OAAOH,OAAOgB,sBAAsC,IAAK,IAAIZ,EAAI,EAAGI,EAAIR,OAAOgB,sBAAsBb,CAAC,EAAGC,EAAII,EAAED,OAAQH,CAAC,GACnIU,EAAEC,QAAQP,EAAEJ,EAAE,EAAI,GAAKJ,OAAOS,UAAUQ,qBAAqBN,KAAKR,EAAGK,EAAEJ,EAAE,IAAGF,EAAEM,EAAEJ,IAAMD,EAAEK,EAAEJ,KAEhG,OAAOF,CACT,EACIgB,cAAgBnB,MAAQA,KAAKmB,eAAiB,SAAUC,EAAIC,EAAMC,GACpE,GAAIA,GAA6B,IAArBf,UAAUC,OAAc,IAAK,IAA4Be,EAAxBlB,EAAI,EAAGmB,EAAIH,EAAKb,OAAYH,EAAImB,EAAGnB,CAAC,GAC3EkB,CAAAA,GAAQlB,KAAKgB,KACVE,EAAAA,GAASE,MAAMf,UAAUgB,MAAMd,KAAKS,EAAM,EAAGhB,CAAC,GAChDA,GAAKgB,EAAKhB,IAGjB,OAAOe,EAAGO,OAAOJ,GAAME,MAAMf,UAAUgB,MAAMd,KAAKS,CAAI,CAAC,CACzD,SACSO,eAA+B,KAAR,gBACzBC,eAAgB,oBAChBC,aAAc,yBACdC,OAASC,KAAMC,YAAaC,QAASC,OAAQC,QAAuB,KAAP,eAC7DC,SAAU,iCACVC,cAAe,cACtB,IAAIC,oBAAsB,CACxBC,QAAS,QACTC,UAAW,QACXC,aAAc,MACdC,aAAc,CAChB,EAIIC,iBAAgCZ,KAAK,SAAUa,GACjD,IAAIC,EAAgBD,EAAGC,cACrBC,EAAYF,EAAGE,UACfC,EAAgBH,EAAGG,cACnBC,EAAkBJ,EAAGI,gBACrBC,EAAWL,EAAGK,SACdC,EAAWN,EAAGM,SACdC,EAAeP,EAAGO,aAClBC,EAAWR,EAAGQ,SACdC,EAAqBT,EAAGS,mBACxBC,EAAkBzC,OAAO+B,EAAI,CAAC,gBAAiB,YAAa,gBAAiB,kBAAmB,WAAY,WAAY,eAAgB,WAAY,qBAAqB,EACvKW,EAAKpB,SAAS,EAAE,EAClBqB,EAAQD,EAAG,GACXE,EAAWF,EAAG,GACZG,EAA0BxB,OAAO,CAAC,EAClCyB,EAAKtB,UAAU,CACfU,cAAeA,EACfI,aAAcA,EACdF,SAAUA,CACZ,CAAC,EACDW,EAAyBD,EAAGC,uBAC5BC,EAAiBF,EAAGE,eACpBC,EAAeH,EAAGG,aAClBC,EAAQJ,EAAGI,MACXC,EAAWL,EAAGK,SACdC,EAAON,EAAGM,KACVC,EAAUP,EAAGO,QACbC,EAAUR,EAAGQ,QACbC,EAAcT,EAAGS,YACnB,SAASC,EAAiBC,GAExB,OADoB9C,MAAM+C,QAAQD,CAAO,EAAIA,EAAU,CAACA,IACnCE,OAAO,SAAUC,EAAQC,GAC5C,IAAIC,EAAOC,EAAmBC,KAAK,SAAU3E,GAC3C,OAAOA,EAAE4E,QAAUJ,CACrB,CAAC,EAED,OADAD,EAAOC,GAAOxD,cAAcA,cAAc,GAAIkB,KAAK2C,YAAYH,EAAoBD,EAAMrC,mBAAmB,EAAG,CAAA,CAAI,EAAG,CAACqC,GAAO,CAAA,CAAK,EAC5HF,CACT,EAAG,EAAE,CACP,CAQA,SAASO,EAAeV,EAASW,EAAOC,GACtC,IAAQ3B,EACH2B,EAAMC,aAKX1B,EAASY,EAAiBC,CAAO,CAAC,EAElC,OAACf,EAAKD,EAAgB8B,WAA+C7B,EAAG5C,KAAK2C,EAAiBgB,CAAO,EACjGe,EACF3B,EAAwB4B,QAAUC,KAAKC,IAAI,EAG3CtB,EAAQ,CAAA,CAAK,IAXbT,EAAS,EAAE,EACX,OAACb,EAAKU,EAAgB8B,WAA+CxC,EAAGjC,KAAK2C,EAAiBgB,EAASW,EAAOC,CAAK,EAYvH,CACA,IAAIO,EAAUzD,YAAYH,SAAS,SAAUf,GAC3C,IAAI4E,EAAcH,KAAKC,IAAI,EACvB,CAAC,sBAAsBG,KAAK,SAAUC,GACxC,MAAiD,CAAC,IAA3C9E,EAAE+E,OAAOD,UAAU7E,QAAQ6E,CAAS,CAC7C,CAAC,IAGGP,GAAkD,IAApC3B,EAAwB4B,SAAiBI,EAAchC,EAAwB4B,SAAW,IAC1G5B,EAAwB4B,QAAU,GAGpC5B,EAAwB4B,QAAU,EAC9BQ,EAAMhF,EAAE+E,OAAOf,MAAMiB,KAAK,EAC9B3B,EAAY0B,CAAG,GACjB,EAAG9C,MAAAA,EAAyDA,EAAkBY,CAAsB,EAAG,CAACZ,EAAgB,EACpHgD,EAAY/D,QAAQ,WACtB,MAAO,kBAAmBqB,GAAkB,CAAC,CAACA,EAAgB2C,aAChE,EAAG,CAAC3C,EAAgB2C,cAAc,EAC9BZ,EAAapD,QAAQ,WACvB,OAAO+D,GAAc,aAAc1C,GAAkB,CAAC,CAACA,EAAgB4C,QACzE,EAAG,CAACF,EAAW1C,EAAgB4C,SAAS,EACpCC,EAAelE,QAAQ,WACzB,OAAOoB,EAAqBH,EAAWd,KAAKgE,YAAYlD,EAAU,CAChET,aAAcH,oBAAoBG,aAClCC,aAAcJ,oBAAoBI,YACpC,EAAGJ,oBAAoBC,OAAO,CAChC,EAAG,CAACW,EAAS,EACTmD,EAAepE,QAAQ,WACzB,OAAOjC,OAAOsG,KAAK9C,CAAK,EAAE+C,IAAI,SAAUC,GACtC,OAAOhD,EAAMgD,EACf,CAAC,EAAEC,KAAK,CACV,EAAG,CAACjD,EAAM,EAKNkD,EAAiBzE,QAAQ,WAE3B,IAgBM0E,EAdAC,EAIAC,EACJC,EAPF,OAAKzD,GAiBCuD,GADAD,EAAqBzF,cAAcA,cAAc,GAAIgC,MAAAA,EAA2CA,EAAW,GAAI,CAAA,CAAI,EAAGmD,MAAAA,EAAmDA,EAAe,GAAI,CAAA,CAAI,GACvJE,IAAI,SAAU3D,GAEzD,OADYA,EAAGkC,KAEjB,CAAC,EACG+B,EAAerF,MAAMJ,KAAK,IAAI2F,IAAIH,CAAmB,CAAC,EACnDxE,KAAKgE,YAAYhE,KAAK4E,4BAA4B9F,cAAcA,cAAc,GAAIgC,MAAAA,EAA2CA,EAAW,GAAI,CAAA,CAAI,EAAGmD,MAAAA,EAAmDA,EAAe,GAAI,CAAA,CAAI,EAAGQ,EAAaN,IAAI,SAAUU,GAChQ,OAAON,EAAmB9B,KAAK,SAAUqC,GACvC,OAAOA,EAAQpC,QAAUmC,CAC3B,CAAC,CACH,CAAC,EAAG3E,mBAAmB,EAAG,CACxBG,aAAcH,oBAAoBG,aAClCC,aAAcJ,oBAAoBI,YACpC,EAAGJ,oBAAoBC,OAAO,IA3B1BqE,GAAsBE,EADD5F,cAAcA,cAAc,GAAIiF,MAAAA,EAAmDA,EAAe,GAAI,CAAA,CAAI,EAAGE,MAAAA,EAAmDA,EAAe,GAAI,CAAA,CAAI,GACnKE,IAAI,SAAU3D,GAEzD,OADYA,EAAGkC,KAEjB,CAAC,EAEDgC,GAAqBD,EADFrF,MAAMJ,KAAK,IAAI2F,IAAIH,CAAmB,CAAC,GACxBL,IAAI,SAAUU,GAC9C,OAAOH,EAAmBjC,KAAK,SAAUqC,GACvC,OAAOA,EAAQpC,QAAUmC,CAC3B,CAAC,CACH,CAAC,EACM7E,KAAK4E,4BAA4B9F,cAAcA,cAAc,GAAIiF,MAAAA,EAAmDA,EAAe,GAAI,CAAA,CAAI,EAAGE,MAAAA,EAAmDA,EAAe,GAAI,CAAA,CAAI,EAAGS,EAAoBxE,mBAAmB,EAmB7Q,EAAG,CAACY,EAAUiD,EAAc3C,EAAOF,EAAgBwB,MAAM,EACrDF,EAAqB3C,QAAQ,WAC/B,OAASoB,EAAqBqD,EAAiBtE,KAAKgE,YAAYM,EAAgB,CAC9EjE,aAAcH,oBAAoBG,aAClCC,aAAcJ,oBAAoBI,YACpC,EAAGJ,oBAAoBC,OAAO,CAChC,EAAG,CAACc,EAAoBqD,EAAe,EAavC,OAZA/E,gBAAgB,WACd,IACIwF,EAAYnH,OAAOsG,KAAK9C,CAAK,EAC7B4D,EAAc,OAACxE,EAAKU,EAAgBwB,OAAmClC,EAAKU,EAAgB+D,aAE5FC,GAAU9F,MAAM+C,QAAQ6C,CAAW,EAAIA,EAAc,CAACA,IAAcG,OAAO,SAAUN,GACvF,MAAO,CAACE,EAAUK,SAASP,CAAM,CACnC,CAAC,EACGK,EAAO/G,QACTkD,EAAS3D,SAASA,SAAS,GAAI0D,CAAK,EAAGa,EAAiBiD,CAAM,CAAC,CAAC,CAEpE,EAAG,CAAChE,EAAgB+D,aAAc/D,EAAgBwB,MAAOtB,EAAOoB,EAAmB,EAC/D9C,MAAM2F,cAAc,MAAO,CAC7C7B,UAAWhE,WAAWiC,EAAgBhB,MAAAA,EAAqDA,EAAgB,EAAE,EAC7G6E,MAAO5E,MAAAA,EAA6CA,EAAY,EAClE,EAAgBhB,MAAM2F,cAAc5H,YAAaC,SAAS,CACxD6H,WAAY,CAAA,EACZC,WAAY,CAAA,EAGZC,eAAgB,CAAA,EAChB5D,KAAMA,EACNf,SAAUwD,EAGVjB,QAASA,EACTtB,QAASA,EACT2D,eAAgB,SAAwBC,GACtC,IAAInF,EACJ,OAAIoB,EAAiBF,EACX4C,MAAAA,GAAgEA,EAAenG,OAAU,OAACqC,EAAKQ,MAAAA,EAA2C,KAAA,EAASA,EAAS,CACpK2E,WAAYA,EACZ1E,mBAAoBA,EACpByB,MAAOxB,EAAgBwB,MACvBM,SAAU,WAER,IADA,IAAI4C,EAAS,GACJC,EAAK,EAAGA,EAAK3H,UAAUC,OAAQ0H,CAAE,GACxCD,EAAOC,GAAM3H,UAAU2H,GAEzB,OAAOjD,EAAepE,MAAM,KAAA,EAAQoH,CAAM,CAC5C,EACA9E,SAAUwD,MAAAA,EAAuDA,EAAiB,GAClFwB,QAASlE,CACX,CAAC,GAA+BpB,EAAKmF,EAAahE,CACpD,EACAoE,wBAAyBjE,CAC3B,EAAGZ,EAAiB,CAClB2C,cAAe,CAAA,EACf5C,mBAAoB,CAAC,CAACA,EACtB+B,SAAU,WAER,IADA,IAAI4C,EAAS,GACJC,EAAK,EAAGA,EAAK3H,UAAUC,OAAQ0H,CAAE,GACxCD,EAAOC,GAAM3H,UAAU2H,GAEzB,OAAOjD,EAAepE,MAAM,KAAA,EAAQoH,CAAM,CAC5C,CACF,CAAC,CAAC,CAAC,CACL,CAAC,EACDrF,iBAAiByF,YAAc,kCAChBzF"}