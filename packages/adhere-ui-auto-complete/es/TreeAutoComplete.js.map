{"version":3,"file":"TreeAutoComplete.js","sources":["TreeAutoComplete.js"],"sourcesContent":["import _TreeSelect from \"antd/es/tree-select\";\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { useUpdateEffect } from 'ahooks';\nimport classNames from 'classnames';\nimport debounce from 'lodash.debounce';\nimport React, { memo, useCallback, useMemo, useRef, useState } from 'react';\nimport Util from '@baifendian/adhere-util';\nimport useCommon from './useCommon';\nvar treeTransformConfig = {\n  keyAttr: 'value',\n  titleAttr: 'title',\n  parentIdAttr: 'pId',\n  rootParentId: 0\n};\n/**\n * TreeAutoComplete\n */\nvar TreeAutoComplete = /*#__PURE__*/memo(function (_a) {\n  var _b;\n  var classNameWrap = _a.classNameWrap,\n    styleWrap = _a.styleWrap,\n    renderLoading = _a.renderLoading,\n    debounceTimeout = _a.debounceTimeout,\n    loadData = _a.loadData,\n    treeData = _a.treeData,\n    defaultTreeData = _a.defaultTreeData,\n    emptyContent = _a.emptyContent,\n    children = _a.children,\n    treeDataSimpleMode = _a.treeDataSimpleMode,\n    treeSelectProps = __rest(_a, [\"classNameWrap\", \"styleWrap\", \"renderLoading\", \"debounceTimeout\", \"loadData\", \"treeData\", \"defaultTreeData\", \"emptyContent\", \"children\", \"treeDataSimpleMode\"]);\n  var _c = useState(defaultTreeData ? (_b = {}, _b[defaultTreeData.key] = defaultTreeData.value, _b) : {}),\n    selectTreeData = _c[0],\n    setSelectTreeData = _c[1];\n  var onSelectChangeStartTime = useRef(0);\n  var _d = useCommon({\n      renderLoading: renderLoading,\n      emptyContent: emptyContent,\n      loadData: loadData\n    }),\n    defaultDebounceTimeout = _d.defaultDebounceTimeout,\n    selectorPrefix = _d.selectorPrefix,\n    fetchLoading = _d.fetchLoading,\n    empty = _d.empty,\n    fetching = _d.fetching,\n    open = _d.open,\n    setOpen = _d.setOpen,\n    onClear = _d.onClear,\n    onInputMemo = _d.onInputMemo;\n  /**\n   * onSelectChange\n   * @description 从下方组件触发的\n   * @param _values\n   * @param label\n   * @param extra\n   */\n  function onSelectChange(_values, label, extra) {\n    var _a, _b;\n    if (!extra.triggerNode) {\n      setSelectTreeData({});\n      (_a = treeSelectProps.onChange) === null || _a === void 0 ? void 0 : _a.call(treeSelectProps, _values, label, extra);\n      return;\n    }\n    setSelectTreeData(function () {\n      var _targetValues = Array.isArray(_values) ? _values : [_values];\n      return _targetValues.reduce(function (result, _id) {\n        var node = flatTargetTreeData.find(function (t) {\n          return t.value === _id;\n        });\n        result[_id] = __spreadArray(__spreadArray([], Util.getAncestor(flatTargetTreeData, node, treeTransformConfig), true), [node], false);\n        return result;\n      }, {});\n    });\n    // @ts-ignore\n    (_b = treeSelectProps.onChange) === null || _b === void 0 ? void 0 : _b.call(treeSelectProps, _values);\n    if (isMultiple) {\n      onSelectChangeStartTime.current = Date.now();\n    } else {\n      // 单选\n      setOpen(false);\n    }\n  }\n  var onInput = useCallback(debounce(function (e) {\n    var currentTime = Date.now();\n    if (['ant-checkbox-input'].some(function (className) {\n      return e.target.className.indexOf(className) !== -1;\n    })) {\n      return;\n    }\n    if (isMultiple && onSelectChangeStartTime.current !== 0 && currentTime - onSelectChangeStartTime.current <= 400) {\n      onSelectChangeStartTime.current = 0;\n      return;\n    }\n    onSelectChangeStartTime.current = 0;\n    var _kw = e.target.value.trim();\n    onInputMemo(_kw);\n  }, debounceTimeout !== null && debounceTimeout !== void 0 ? debounceTimeout : defaultDebounceTimeout), [debounceTimeout]);\n  var isChecked = useMemo(function () {\n    return 'treeCheckable' in treeSelectProps ? !!treeSelectProps.treeCheckable : false;\n  }, [treeSelectProps.treeCheckable]);\n  var isMultiple = useMemo(function () {\n    return isChecked || ('multiple' in treeSelectProps ? !!treeSelectProps.multiple : false);\n  }, [isChecked, treeSelectProps.multiple]);\n  var flatTreeData = useMemo(function () {\n    return Util.treeToArray(treeData, {\n      parentIdAttr: treeTransformConfig.parentIdAttr,\n      rootParentId: treeTransformConfig.rootParentId\n    }, treeTransformConfig.keyAttr);\n  }, [treeData]);\n  var flatDefaultTreeData = useMemo(function () {\n    var _a;\n    return Util.treeToArray((_a = defaultTreeData === null || defaultTreeData === void 0 ? void 0 : defaultTreeData.value) !== null && _a !== void 0 ? _a : [], {\n      parentIdAttr: treeTransformConfig.parentIdAttr,\n      rootParentId: treeTransformConfig.rootParentId\n    }, treeTransformConfig.keyAttr);\n  }, [defaultTreeData]);\n  var flatDefaultTreeDataFilter = useMemo(function () {\n    var _a;\n    if (!treeDataSimpleMode) {\n      return flatDefaultTreeData.filter(function (t) {\n        return (isMultiple ? treeSelectProps.value : [treeSelectProps.value]).includes(t.value);\n      });\n    } else {\n      return ((_a = defaultTreeData === null || defaultTreeData === void 0 ? void 0 : defaultTreeData.value) !== null && _a !== void 0 ? _a : []).filter(function (t) {\n        return (isMultiple ? treeSelectProps.value : [treeSelectProps.value]).includes(t.value);\n      });\n    }\n  }, [treeDataSimpleMode, defaultTreeData, treeSelectProps.value, flatDefaultTreeData]);\n  var flatSelectTreeData = useMemo(function () {\n    return Object.keys(selectTreeData).map(function (_k) {\n      return selectTreeData[_k];\n    }).flat();\n  }, [selectTreeData]);\n  /**\n   * targetTreeData\n   * @description 最终的数据\n   */\n  var targetTreeData = useMemo(function () {\n    var _a;\n    /*\n     *  if(正常) {\n     *    treeData需要拉平\n     *    defaultTreeData获取拉平后的路径，且在props.value中\n     *\n     *    treeData + defaultTreeData 去重\n     *\n     *    转换成正常\n     *  } else {\n     *     defaultTreeData过滤出在props.value中\n     *\n     *     treeData + defaultTreeData 去重\n     *  }\n     * */\n    // treeData\n    if (!treeDataSimpleMode) {\n      var allFlatTreeData_1 = __spreadArray(__spreadArray(__spreadArray([], flatTreeData !== null && flatTreeData !== void 0 ? flatTreeData : [], true), flatDefaultTreeDataFilter !== null && flatDefaultTreeDataFilter !== void 0 ? flatDefaultTreeDataFilter : [], true), flatSelectTreeData !== null && flatSelectTreeData !== void 0 ? flatSelectTreeData : [], true);\n      var allFlatTreeDataKeys = allFlatTreeData_1.map(function (_a) {\n        var value = _a.value;\n        return value;\n      });\n      var distinctKeys = Array.from(new Set(allFlatTreeDataKeys));\n      allFlatTreeData_1 = distinctKeys.map(function (_value) {\n        return allFlatTreeData_1.find(function (_option) {\n          return _option.value === _value;\n        });\n      });\n      return Util.completionIncompleteFlatArr(__spreadArray(__spreadArray(__spreadArray([], flatTreeData !== null && flatTreeData !== void 0 ? flatTreeData : [], true), flatDefaultTreeData !== null && flatDefaultTreeData !== void 0 ? flatDefaultTreeData : [], true), flatSelectTreeData !== null && flatSelectTreeData !== void 0 ? flatSelectTreeData : [], true), allFlatTreeData_1, treeTransformConfig);\n    }\n    // flatTreeData\n    else {\n      var allFlatTreeData_2 = __spreadArray(__spreadArray(__spreadArray([], treeData !== null && treeData !== void 0 ? treeData : [], true), flatDefaultTreeDataFilter !== null && flatDefaultTreeDataFilter !== void 0 ? flatDefaultTreeDataFilter : [], true), flatSelectTreeData !== null && flatSelectTreeData !== void 0 ? flatSelectTreeData : [], true);\n      var allFlatTreeDataKeys = allFlatTreeData_2.map(function (_a) {\n        var value = _a.value;\n        return value;\n      });\n      var distinctKeys = Array.from(new Set(allFlatTreeDataKeys));\n      return Util.treeToArray(Util.completionIncompleteFlatArr(__spreadArray(__spreadArray(__spreadArray([], treeData !== null && treeData !== void 0 ? treeData : [], true), (_a = defaultTreeData === null || defaultTreeData === void 0 ? void 0 : defaultTreeData.value) !== null && _a !== void 0 ? _a : [], true), flatSelectTreeData !== null && flatSelectTreeData !== void 0 ? flatSelectTreeData : [], true), distinctKeys.map(function (_value) {\n        return allFlatTreeData_2.find(function (_option) {\n          return _option.value === _value;\n        });\n      }), treeTransformConfig), {\n        parentIdAttr: treeTransformConfig.parentIdAttr,\n        rootParentId: treeTransformConfig.rootParentId\n      }, treeTransformConfig.keyAttr);\n    }\n  }, [treeData, defaultTreeData, flatDefaultTreeDataFilter, flatDefaultTreeData, flatTreeData, selectTreeData, treeSelectProps.value]);\n  var flatTargetTreeData = useMemo(function () {\n    return !!treeDataSimpleMode ? targetTreeData : Util.treeToArray(targetTreeData, {\n      parentIdAttr: treeTransformConfig.parentIdAttr,\n      rootParentId: treeTransformConfig.rootParentId\n    }, treeTransformConfig.keyAttr);\n  }, [treeDataSimpleMode, targetTreeData]);\n  useUpdateEffect(function () {\n    var _a;\n    setSelectTreeData(defaultTreeData ? (_a = {}, _a[defaultTreeData.key] = defaultTreeData.value, _a) : {});\n  }, [defaultTreeData]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(selectorPrefix, classNameWrap !== null && classNameWrap !== void 0 ? classNameWrap : ''),\n    style: styleWrap !== null && styleWrap !== void 0 ? styleWrap : {}\n  }, /*#__PURE__*/React.createElement(_TreeSelect, __assign({\n    showSearch: true,\n    allowClear: true,\n    // @ts-ignore\n    // filterOption={false}\n    filterTreeNode: false,\n    open: open,\n    treeData: targetTreeData,\n    // onSearch={onInput}\n    // @ts-ignore\n    onInput: onInput,\n    onClear: onClear,\n    dropdownRender: function dropdownRender(originNode) {\n      var _a;\n      if (fetching) return fetchLoading;\n      return !!(targetTreeData === null || targetTreeData === void 0 ? void 0 : targetTreeData.length) ? (_a = children === null || children === void 0 ? void 0 : children({\n        originNode: originNode,\n        treeDataSimpleMode: treeDataSimpleMode,\n        value: treeSelectProps.value,\n        onChange: function onChange() {\n          var params = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n            params[_i] = arguments[_i];\n          }\n          return onSelectChange.apply(void 0, params);\n        },\n        treeData: targetTreeData !== null && targetTreeData !== void 0 ? targetTreeData : [],\n        loading: fetching\n      })) !== null && _a !== void 0 ? _a : originNode : empty;\n    },\n    onDropdownVisibleChange: setOpen\n  }, treeSelectProps, {\n    treeDataSimpleMode: !!treeDataSimpleMode,\n    onChange: function onChange() {\n      var params = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        params[_i] = arguments[_i];\n      }\n      return onSelectChange.apply(void 0, params);\n    }\n  })));\n});\nTreeAutoComplete.displayName = 'TreeAutoComplete';\nexport default TreeAutoComplete;"],"names":["_TreeSelect","__assign","this","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__spreadArray","to","from","pack","ar","l","Array","slice","concat","useUpdateEffect","classNames","debounce","React","memo","useCallback","useMemo","useRef","useState","Util","useCommon","treeTransformConfig","keyAttr","titleAttr","parentIdAttr","rootParentId","TreeAutoComplete","_a","classNameWrap","styleWrap","renderLoading","debounceTimeout","loadData","treeData","defaultTreeData","emptyContent","children","treeDataSimpleMode","treeSelectProps","_c","_b","key","value","selectTreeData","setSelectTreeData","onSelectChangeStartTime","_d","defaultDebounceTimeout","selectorPrefix","fetchLoading","empty","fetching","open","setOpen","onClear","onInputMemo","onSelectChange","_values","label","extra","triggerNode","isArray","reduce","result","_id","node","flatTargetTreeData","find","getAncestor","onChange","isMultiple","current","Date","now","onInput","currentTime","some","className","target","_kw","trim","isChecked","treeCheckable","multiple","flatTreeData","treeToArray","flatDefaultTreeData","flatDefaultTreeDataFilter","filter","includes","flatSelectTreeData","keys","map","_k","flat","targetTreeData","allFlatTreeData_2","allFlatTreeDataKeys","distinctKeys","allFlatTreeData_1","Set","completionIncompleteFlatArr","_value","_option","createElement","style","showSearch","allowClear","filterTreeNode","dropdownRender","originNode","params","_i","loading","onDropdownVisibleChange","displayName"],"mappings":"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"}