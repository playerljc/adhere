{"version":3,"file":"useChecked.js","sources":["useChecked.js"],"sourcesContent":["\"use strict\";\n\nvar __importDefault = void 0 && (void 0).__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar adhere_util_1 = __importDefault(require(\"@baifendian/adhere-util\"));\n/**\n * useChecked\n */\nfunction useChecked() {\n  function targetChildren(children) {\n    var _a;\n    return (_a = children === null || children === void 0 ? void 0 : children.filter(function (node) {\n      if (!('checkable' in node)) return true;\n      return node.checkable;\n    })) === null || _a === void 0 ? void 0 : _a.filter(function (node) {\n      if (!('disabled' in node)) return true;\n      return !node.disabled;\n    });\n  }\n  /**\n   * getChildrenKeys\n   * @description 递归获取所有子节点的key\n   * @param {TreeDataItem} node 触发时候的节点数据\n   * @return {string[]}\n   */\n  function getChildrenKeys(node) {\n    var _a;\n    var keys = [node.key];\n    var children = targetChildren((_a = node.children) !== null && _a !== void 0 ? _a : []);\n    if (children) {\n      children.forEach(function (child) {\n        keys = keys.concat(getChildrenKeys(child));\n      });\n    }\n    return keys;\n  }\n  /**\n   * getDefaultCheckedKeysWithCheckStrictly\n   * @description 获取受控状态下的defaultCheckedKeys\n   * @param {TreeData} treeData\n   * @param {string[]} defaultCheckedKeys\n   * @return {string[]}\n   */\n  function getDefaultCheckedKeysWithCheckStrictly(treeData, defaultCheckedKeys) {\n    var checkedKeys = [];\n    function up(_a) {\n      var key = _a.key,\n        checkedKeys = _a.checkedKeys,\n        parentId = _a.parentId,\n        childrenData = _a.childrenData;\n      var childrenKeys = childrenData === null || childrenData === void 0 ? void 0 : childrenData.filter(function (_a) {\n        var itemKey = _a.key;\n        return itemKey !== key;\n      }).map(function (_a) {\n        var key = _a.key;\n        return key;\n      });\n      var selfChecked;\n      selfChecked = childrenKeys.every(function (key) {\n        return checkedKeys.includes(key);\n      });\n      if (selfChecked) {\n        if (!checkedKeys.includes(parentId)) {\n          checkedKeys.push(parentId);\n        }\n      }\n      // @ts-ignore\n      var parentNodeData = adhere_util_1.default.findParentNodeByKey(treeData, parentId, {\n        keyAttr: 'key'\n      });\n      if (parentNodeData) {\n        up({\n          key: parentId,\n          checkedKeys: checkedKeys,\n          parentId: parentNodeData.key,\n          childrenData: targetChildren(parentNodeData.children)\n        });\n      }\n    }\n    defaultCheckedKeys.forEach(function (checkedKey) {\n      checkedKeys.push(checkedKey);\n      // @ts-ignore\n      var parentNodeData = adhere_util_1.default.findParentNodeByKey(treeData, checkedKey, {\n        keyAttr: 'key'\n      });\n      if (parentNodeData) {\n        up({\n          key: checkedKey,\n          checkedKeys: checkedKeys,\n          parentId: parentNodeData.key,\n          childrenData: targetChildren(parentNodeData.children)\n        });\n      }\n    });\n    return checkedKeys;\n  }\n  /**\n   * updateParentChecked\n   * @description 向上处理\n   * @param {string} key 触发checked的节点key\n   * @param {boolean} checked 触发的时候选中状态\n   * @param {string[]} checkedKeys 存放所有checked的keys\n   * @param {string} parentId key的父亲key\n   * @param {TreeDataItem[]} childrenData key父亲的孩子\n   * @param {updateParentChecked} next updateParentChecked\n   */\n  function updateParentChecked(_a) {\n    // console.log('key', key);\n    // console.log('parentId', parentId);\n    // console.log('childrenData', childrenData);\n    // console.log('checked', checked);\n    var key = _a.key,\n      checked = _a.checked,\n      checkedKeys = _a.checkedKeys,\n      parentId = _a.parentId,\n      childrenData = _a.childrenData,\n      next = _a.next;\n    var selfChecked = false;\n    var targetChildrenData = targetChildren(childrenData);\n    if (checked) {\n      var childrenKeys = targetChildrenData === null || targetChildrenData === void 0 ? void 0 : targetChildrenData.filter(function (_a) {\n        var itemKey = _a.key;\n        return itemKey !== key;\n      }).map(function (_a) {\n        var key = _a.key;\n        return key;\n      });\n      selfChecked = childrenKeys.every(function (key) {\n        return checkedKeys.includes(key);\n      });\n      if (selfChecked) {\n        if (!checkedKeys.includes(parentId)) {\n          checkedKeys.push(parentId);\n        }\n      }\n    } else {\n      if (checkedKeys.includes(parentId)) {\n        checkedKeys.splice(checkedKeys.findIndex(function (itemKey) {\n          return itemKey === parentId;\n        }), 1);\n      }\n    }\n    // 调用parent的updateParentChecked\n    next === null || next === void 0 ? void 0 : next({\n      key: parentId,\n      checked: selfChecked,\n      checkedKeys: checkedKeys\n    });\n  }\n  /**\n   * handleCheck\n   * @description 处理选中逻辑\n   * @param {TreeDataItem} node 触发的节点nodeData\n   * @param {boolean} checked 触发的时候选中状态\n   * @param {string[]} checkedKeys 存放所有checked的keys\n   * @param {boolean} checkStrictly 是否受控\n   * @param {updateParentChecked} next\n   */\n  function handleCheck(_a) {\n    var node = _a.node,\n      checked = _a.checked,\n      checkedKeys = _a.checkedKeys,\n      checkStrictly = _a.checkStrictly,\n      next = _a.next;\n    // 不受控\n    if (!checkStrictly) {\n      if (checked) {\n        if (!checkedKeys.includes(node.key)) {\n          checkedKeys.push(node.key);\n        }\n      } else {\n        if (checkedKeys.includes(node.key)) {\n          checkedKeys.splice(checkedKeys.indexOf(node.key), 1);\n        }\n      }\n      return;\n    }\n    // 获取当前节点子孙的keys\n    var childrenKeys = getChildrenKeys(node);\n    if (checked) {\n      // 添加当前节点及其子节点\n      childrenKeys.forEach(function (key) {\n        if (!checkedKeys.includes(key)) {\n          checkedKeys.push(key);\n        }\n      });\n    } else {\n      // 移除当前节点及其子节点\n      childrenKeys.forEach(function (key) {\n        var index = checkedKeys.indexOf(key);\n        if (index > -1) {\n          checkedKeys.splice(index, 1);\n        }\n      });\n    }\n    // 更新父节点的状态\n    next === null || next === void 0 ? void 0 : next({\n      key: node.key,\n      checked: checked,\n      checkedKeys: checkedKeys\n    });\n  }\n  /**\n   * existsCheckableNodeInParentChildren\n   * @description 在parentChildren中是否存在checkable的节点\n   * @param children\n   */\n  function existsCheckableNodeInParentChildren(children) {\n    if (!children) return false;\n    return children === null || children === void 0 ? void 0 : children.some(function (node) {\n      if (!('checkable' in node)) return true;\n      return !!node.checkable;\n    });\n  }\n  return {\n    handleCheck: handleCheck,\n    updateParentChecked: updateParentChecked,\n    existsCheckableNodeInParentChildren: existsCheckableNodeInParentChildren,\n    getDefaultCheckedKeysWithCheckStrictly: getDefaultCheckedKeysWithCheckStrictly\n  };\n}\nexports.default = useChecked;"],"names":["__importDefault","mod","__esModule","default","adhere_util_1","Object","defineProperty","exports","value","require","useChecked","targetChildren","children","_a","filter","node","checkable","disabled","handleCheck","checked","checkedKeys","checkStrictly","next","childrenKeys","getChildrenKeys","keys","key","forEach","child","concat","includes","push","index","indexOf","splice","updateParentChecked","parentId","childrenData","selfChecked","targetChildrenData","map","every","findIndex","itemKey","existsCheckableNodeInParentChildren","some","getDefaultCheckedKeysWithCheckStrictly","treeData","defaultCheckedKeys","checkedKey","parentNodeData","findParentNodeByKey","keyAttr","up"],"mappings":"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"}