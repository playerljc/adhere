{"version":3,"file":"Tree.js","sources":["Tree.js"],"sourcesContent":["import _SearchBar from \"antd-mobile/es/components/search-bar\";\nimport _ErrorBlock from \"antd-mobile/es/components/error-block\";\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport { useLatest, useUpdateEffect } from 'ahooks';\nimport classNames from 'classnames';\nimport React, { memo, useContext, useMemo, useState } from 'react';\nimport ConfigProvider from '@baifendian/adhere-ui-configprovider';\nimport Hooks from '@baifendian/adhere-ui-hooks';\nimport Space from '@baifendian/adhere-ui-space';\nimport Util from '@baifendian/adhere-util';\nimport Intl from '@baifendian/adhere-util-intl';\nimport { DEFAULT_CHECKBOX_GAP, DEFAULT_CHECKBOX_WIDTH, DEFAULT_CHECKSTRICTLY, DEFAULT_FILTER_KEY, DEFAULT_ICON_GAP, DEFAULT_INDENT, DEFAULT_MULTIPLE, DEFAULT_ROW_GAP, DEFAULT_SHOW_SEARCH, DEFAULT_SIZE, DEFAULT_TITLE_GAP, DEFAULT_TREE_CHECKABLE, DEFAULT_TREE_UTIL_CONFIG } from './Constant';\nimport TreeContext from './TreeContext';\nimport TreeNode from './TreeNode';\nimport TreeNodeContext from './TreeNodeContext';\nimport TreeSelect from './TreeSelect';\nimport useChecked from './useChecked';\nimport useUtil from './useUtil';\nvar selectorPrefix = 'adhere-mobile-ui-tree';\nvar usePropToState = Hooks.usePropToState;\n/**\n * Tree\n * @description Tree\n */\nvar InternalTree = /*#__PURE__*/memo(function (_a) {\n  var _b;\n  var className = _a.className,\n    style = _a.style,\n    treeData = _a.treeData,\n    expandAll = _a.expandAll,\n    expandedKeys = _a.expandedKeys,\n    selectedKeys = _a.selectedKeys,\n    switcherIcon = _a.switcherIcon,\n    titleRender = _a.titleRender,\n    icon = _a.icon,\n    renderEmpty = _a.renderEmpty,\n    size = _a.size,\n    checkable = _a.checkable,\n    checkedKeys = _a.checkedKeys,\n    multiple = _a.multiple,\n    checkStrictly = _a.checkStrictly,\n    treeDataSimpleMode = _a.treeDataSimpleMode,\n    loadData = _a.loadData,\n    loadedKeys = _a.loadedKeys,\n    showSearch = _a.showSearch,\n    filterKey = _a.filterKey,\n    // 行距(如果指定行距则size不起作用)\n    globalRowGap = _a.rowGap,\n    // checkbox的宽度(默认是20px)\n    checkboxWidth = _a.checkboxWidth,\n    // checkbox的间距\n    checkboxGap = _a.checkboxGap,\n    // title元素的间距\n    titleGap = _a.titleGap,\n    // icon的间距\n    iconGap = _a.iconGap,\n    // 缩进\n    indent = _a.indent,\n    onSelect = _a.onSelect,\n    onExpand = _a.onExpand,\n    onCheck = _a.onCheck;\n  var media = useContext(ConfigProvider.Context).media;\n  var _c = useUtil(),\n    omitDisabledKeys = _c.omitDisabledKeys,\n    getValueWithUnit = _c.getValueWithUnit,\n    checkTreeDataSimpleModeFromObject = _c.checkTreeDataSimpleModeFromObject;\n  var _d = useChecked(),\n    getDefaultCheckedKeysWithCheckStrictly = _d.getDefaultCheckedKeysWithCheckStrictly,\n    existsCheckableNodeInParentChildren = _d.existsCheckableNodeInParentChildren;\n  // 是否使用简单数据\n  var targetTreeDataSimpleMode = useMemo(function () {\n    if (Util.isBoolean(treeDataSimpleMode) || Util.isObject(treeDataSimpleMode)) {\n      return treeDataSimpleMode;\n    }\n    return false;\n  }, [treeDataSimpleMode]);\n  // Tree的密度\n  var targetSize = useMemo(function () {\n    return size !== null && size !== void 0 ? size : DEFAULT_SIZE;\n  }, [size]);\n  // 整个Tree是否是可勾选的Tree\n  var targetCheckable = useMemo(function () {\n    if (Util.isEmpty(checkable)) return DEFAULT_TREE_CHECKABLE;\n    return checkable;\n  }, [checkable]);\n  // 是否可以选中多个节点\n  var targetMultiple = useMemo(function () {\n    if (Util.isEmpty(multiple)) return DEFAULT_MULTIPLE;\n    return multiple;\n  }, [multiple]);\n  // checkbox是否受控\n  var targetCheckStrictly = useMemo(function () {\n    if (Util.isEmpty(checkStrictly)) return DEFAULT_CHECKSTRICTLY;\n    return checkStrictly;\n  }, [checkStrictly]);\n  // 是否进行了查询\n  var _e = useState(false),\n    isSearching = _e[0],\n    setIsSearching = _e[1];\n  // 查询的关键字\n  var _f = useState(''),\n    kw = _f[0],\n    setKw = _f[1];\n  // 是否可以进行搜索\n  var targetShowSearch = useMemo(function () {\n    if (Util.isEmpty(showSearch)) return DEFAULT_SHOW_SEARCH;\n    return showSearch;\n  }, [showSearch]);\n  // 搜索的key\n  var targetFilterKey = useMemo(function () {\n    if (Util.isEmpty(filterKey)) return DEFAULT_FILTER_KEY;\n    return filterKey;\n  }, [filterKey]);\n  // Tree的数据\n  var defaultTreeData = useMemo(function () {\n    var _targetTreeData = treeData !== null && treeData !== void 0 ? treeData : [];\n    if (Util.isBoolean(targetTreeDataSimpleMode)) {\n      if (targetTreeDataSimpleMode) {\n        // @ts-ignore\n        _targetTreeData = Util.arrayToAntdTreeSelect(_targetTreeData, DEFAULT_TREE_UTIL_CONFIG);\n      }\n    } else if (Util.isObject(targetTreeDataSimpleMode) && checkTreeDataSimpleModeFromObject(targetTreeDataSimpleMode)) {\n      _targetTreeData = Util.arrayToAntdTreeSelect(\n      // @ts-ignore\n      _targetTreeData, targetTreeDataSimpleMode);\n    }\n    var _treeData = _targetTreeData !== null && _targetTreeData !== void 0 ? _targetTreeData : [];\n    if (!isSearching) return _treeData;\n    if (!kw) return _treeData;\n    // @ts-ignore\n    return Util.filterTree(_treeData, kw, __assign(__assign({}, DEFAULT_TREE_UTIL_CONFIG), {\n      filterAttr: targetFilterKey,\n      titleAttr: targetFilterKey\n    }));\n  }, [kw, isSearching, targetTreeDataSimpleMode, treeData]);\n  var _g = usePropToState(defaultTreeData),\n    targetTreeData = _g[0],\n    setTargetTreeData = _g[1];\n  // 展开的keys\n  var defaultExpandedKeys = useMemo(function () {\n    return expandedKeys !== null && expandedKeys !== void 0 ? expandedKeys : [];\n  }, [expandedKeys]);\n  var _h = usePropToState(defaultExpandedKeys),\n    targetExpandedKeys = _h[0],\n    setTargetExpandedKeys = _h[1];\n  // 选择的keys\n  var defaultSelectedKeys = useMemo(\n  // 排除不可用的节点keys\n  function () {\n    return omitDisabledKeys(targetTreeData, selectedKeys !== null && selectedKeys !== void 0 ? selectedKeys : []);\n  }, [selectedKeys]);\n  var _j = usePropToState(defaultSelectedKeys),\n    targetSelectedKeys = _j[0],\n    setTargetSelectedKeys = _j[1];\n  // 勾选的keys\n  var defaultCheckedKeys = useMemo(function () {\n    var _defaultCheckedKeys = omitDisabledKeys(targetTreeData, checkedKeys !== null && checkedKeys !== void 0 ? checkedKeys : []).filter(function (t) {\n      return !!t;\n    });\n    // 如果是受控\n    if (targetCheckStrictly) {\n      return getDefaultCheckedKeysWithCheckStrictly(targetTreeData, _defaultCheckedKeys);\n    }\n    return _defaultCheckedKeys;\n  }, [checkedKeys, targetCheckStrictly]);\n  var _k = usePropToState(defaultCheckedKeys),\n    targetCheckedKeys = _k[0],\n    setTargetCheckedKeys = _k[1];\n  var latestCheckedKeysRef = useLatest(targetCheckedKeys);\n  useUpdateEffect(function () {\n    var _a;\n    var _defaultCheckedKeys = omitDisabledKeys(targetTreeData, (_a = latestCheckedKeysRef.current) !== null && _a !== void 0 ? _a : []).filter(function (t) {\n      return !!t;\n    });\n    // 如果是受控\n    if (targetCheckStrictly) {\n      setTargetCheckedKeys(getDefaultCheckedKeysWithCheckStrictly(targetTreeData, _defaultCheckedKeys));\n    } else {\n      setTargetCheckedKeys(_defaultCheckedKeys);\n    }\n  }, [targetTreeData, targetCheckStrictly]);\n  // 异步加载的keys\n  var defaultLoadedKeys = useMemo(\n  // 排除不可用的节点keys\n  function () {\n    return omitDisabledKeys(targetTreeData, loadedKeys !== null && loadedKeys !== void 0 ? loadedKeys : []).filter(function (t) {\n      return !!t;\n    });\n  }, [targetTreeData, loadedKeys]);\n  var _l = usePropToState(defaultLoadedKeys),\n    targetLoadedKeys = _l[0],\n    setTargetLoadedKeys = _l[1];\n  var latestLoadedKeysRef = useLatest(targetLoadedKeys);\n  useUpdateEffect(function () {\n    var _a;\n    setTargetLoadedKeys(omitDisabledKeys(targetTreeData, (_a = latestLoadedKeysRef.current) !== null && _a !== void 0 ? _a : []).filter(function (t) {\n      return !!t;\n    }));\n  }, [targetTreeData]);\n  var targetCheckboxWidth = useMemo(function () {\n    return getValueWithUnit(checkboxWidth !== null && checkboxWidth !== void 0 ? checkboxWidth : DEFAULT_CHECKBOX_WIDTH, media);\n  }, [checkboxWidth, media]);\n  var targetCheckboxGap = useMemo(function () {\n    return getValueWithUnit(checkboxGap !== null && checkboxGap !== void 0 ? checkboxGap : DEFAULT_CHECKBOX_GAP, media);\n  }, [checkboxGap, media]);\n  var targetTitleGap = useMemo(function () {\n    return getValueWithUnit(titleGap !== null && titleGap !== void 0 ? titleGap : DEFAULT_TITLE_GAP, media);\n  }, [titleGap, media]);\n  var targetIconGap = useMemo(function () {\n    return getValueWithUnit(iconGap !== null && iconGap !== void 0 ? iconGap : DEFAULT_ICON_GAP, media);\n  }, [iconGap, media]);\n  var targetIndent = useMemo(function () {\n    return getValueWithUnit(indent !== null && indent !== void 0 ? indent : DEFAULT_INDENT, media);\n  }, [indent, media]);\n  // 行的间距\n  var rowGap = useMemo(function () {\n    return globalRowGap !== null && globalRowGap !== void 0 ? globalRowGap : new Map([['small', 5], ['middle', 15], ['large', 25]]).get(targetSize);\n  }, [targetSize, globalRowGap]);\n  // children elements\n  var treeChildrenElements = useMemo(function () {\n    return targetTreeData.map(function (_treeNodeData) {\n      return /*#__PURE__*/React.createElement(TreeNodeContext.Provider, {\n        value: {\n          existsCheckableNodeInParentChildren: function () {\n            return existsCheckableNodeInParentChildren(_treeNodeData.children);\n          }\n        }\n      }, /*#__PURE__*/React.createElement(TreeNode, __assign({\n        level: 0,\n        id: _treeNodeData[DEFAULT_TREE_UTIL_CONFIG.keyAttr]\n      }, _treeNodeData)));\n    });\n  }, [targetTreeData, switcherIcon, titleRender]);\n  // 是否为空\n  var isEmpty = useMemo(function () {\n    return !treeChildrenElements.length;\n  }, [treeChildrenElements]);\n  // contextProvider\n  var contextProviderValue = useMemo(function () {\n    return {\n      expandedKeys: function () {\n        return targetExpandedKeys;\n      },\n      selectedKeys: function () {\n        return targetSelectedKeys;\n      },\n      checkedKeys: function () {\n        return targetCheckedKeys;\n      },\n      loadedKeys: function () {\n        return targetLoadedKeys;\n      },\n      setSelectedKeys: setTargetSelectedKeys,\n      setExpandedKeys: setTargetExpandedKeys,\n      setCheckedKeys: setTargetCheckedKeys,\n      setLoadedKeys: setTargetLoadedKeys,\n      setTreeData: setTargetTreeData,\n      loadData: loadData,\n      size: function () {\n        return targetSize;\n      },\n      rowGap: function () {\n        return rowGap !== null && rowGap !== void 0 ? rowGap : DEFAULT_ROW_GAP;\n      },\n      multiple: function () {\n        return targetMultiple;\n      },\n      checkable: function () {\n        return targetCheckable;\n      },\n      treeData: function () {\n        return treeData;\n      },\n      checkStrictly: function () {\n        return targetCheckStrictly;\n      },\n      teeDataSimpleMode: function () {\n        return targetTreeDataSimpleMode;\n      },\n      icon: icon,\n      checkboxWidth: function () {\n        return targetCheckboxWidth;\n      },\n      checkboxGap: function () {\n        return targetCheckboxGap;\n      },\n      titleGap: function () {\n        return targetTitleGap;\n      },\n      iconGap: function () {\n        return targetIconGap;\n      },\n      indent: function () {\n        return targetIndent;\n      },\n      titleRender: titleRender,\n      switcherIcon: switcherIcon,\n      onSelect: onSelect,\n      onExpand: onExpand,\n      onCheck: onCheck\n    };\n  }, [targetExpandedKeys, targetSelectedKeys, targetCheckedKeys, targetLoadedKeys, rowGap, targetSize, targetMultiple, targetCheckable, treeData, loadData, checkStrictly, icon, targetCheckboxWidth, targetCheckboxGap, targetTitleGap, targetIconGap, targetIndent, titleRender, switcherIcon, onSelect, onExpand, onCheck]);\n  var treeElement = /*#__PURE__*/React.createElement(TreeContext.Provider, {\n    value: contextProviderValue\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: classNames(selectorPrefix, className),\n    style: style !== null && style !== void 0 ? style : {}\n  }, /*#__PURE__*/React.createElement(Space.Group, {\n    direction: \"vertical\",\n    size: rowGap\n  }, isEmpty && /*#__PURE__*/React.createElement(\"li\", null, (_b = renderEmpty === null || renderEmpty === void 0 ? void 0 : renderEmpty()) !== null && _b !== void 0 ? _b : /*#__PURE__*/React.createElement(_ErrorBlock, {\n    status: \"empty\"\n  })), !isEmpty && treeChildrenElements)));\n  function onSearch() {\n    setIsSearching(true);\n  }\n  function onClear() {\n    setKw('');\n    setIsSearching(false);\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, targetShowSearch && ( /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(\"\".concat(selectorPrefix, \"-wrapper\"))\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(\"\".concat(selectorPrefix, \"-search\"))\n  }, /*#__PURE__*/React.createElement(_SearchBar, {\n    placeholder: Intl.v('请输入'),\n    showCancelButton: true,\n    value: kw,\n    onChange: setKw,\n    onSearch: onSearch,\n    onClear: onClear\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(\"\".concat(selectorPrefix, \"-body\"))\n  }, treeElement))), !targetShowSearch && treeElement);\n});\nvar Tree = InternalTree;\nTree.TreeSelect = TreeSelect;\nTree.displayName = 'Tree';\nexport default Tree;"],"names":["_SearchBar","_ErrorBlock","__assign","this","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","useLatest","useUpdateEffect","classNames","React","memo","useContext","useMemo","useState","ConfigProvider","Hooks","Space","Util","Intl","DEFAULT_CHECKBOX_GAP","DEFAULT_CHECKBOX_WIDTH","DEFAULT_CHECKSTRICTLY","DEFAULT_FILTER_KEY","DEFAULT_ICON_GAP","DEFAULT_INDENT","DEFAULT_MULTIPLE","DEFAULT_ROW_GAP","DEFAULT_SHOW_SEARCH","DEFAULT_SIZE","DEFAULT_TITLE_GAP","DEFAULT_TREE_CHECKABLE","DEFAULT_TREE_UTIL_CONFIG","TreeContext","TreeNode","TreeNodeContext","TreeSelect","useChecked","useUtil","selectorPrefix","usePropToState","InternalTree","_a","className","style","treeData","expandedKeys","expandAll","selectedKeys","switcherIcon","titleRender","icon","renderEmpty","size","checkable","checkedKeys","multiple","checkStrictly","treeDataSimpleMode","loadData","loadedKeys","showSearch","filterKey","globalRowGap","rowGap","checkboxWidth","checkboxGap","titleGap","iconGap","indent","onSelect","onExpand","onCheck","media","Context","_c","omitDisabledKeys","getValueWithUnit","checkTreeDataSimpleModeFromObject","_d","getDefaultCheckedKeysWithCheckStrictly","existsCheckableNodeInParentChildren","targetTreeDataSimpleMode","isBoolean","isObject","targetSize","targetCheckable","isEmpty","targetMultiple","targetCheckStrictly","_e","isSearching","setIsSearching","_f","kw","setKw","targetShowSearch","targetFilterKey","defaultTreeData","_targetTreeData","_treeData","arrayToAntdTreeSelect","filterTree","filterAttr","titleAttr","_g","targetTreeData","setTargetTreeData","defaultExpandedKeys","_h","targetExpandedKeys","setTargetExpandedKeys","defaultSelectedKeys","_j","targetSelectedKeys","setTargetSelectedKeys","defaultCheckedKeys","_defaultCheckedKeys","filter","_k","targetCheckedKeys","setTargetCheckedKeys","latestCheckedKeysRef","defaultLoadedKeys","current","_l","targetLoadedKeys","setTargetLoadedKeys","latestLoadedKeysRef","targetCheckboxWidth","targetCheckboxGap","targetTitleGap","targetIconGap","targetIndent","Map","get","treeChildrenElements","map","_treeNodeData","createElement","Provider","value","children","level","id","keyAttr","contextProviderValue","setSelectedKeys","setExpandedKeys","setCheckedKeys","setLoadedKeys","setTreeData","teeDataSimpleMode","treeElement","Group","direction","_b","status","Fragment","concat","placeholder","v","showCancelButton","onChange","onSearch","onClear","Tree","displayName"],"mappings":"OAAOA,eAAgB,8CAChBC,gBAAiB,wCACxB,IAAIC,SAAWC,MAAQA,KAAKD,UAAY,WAQtC,OAPAA,SAAWE,OAAOC,QAAU,SAAUC,GACpC,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,CAAC,GAE/C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,CAAC,IAAGN,EAAEM,GAAKL,EAAEK,IAE5E,OAAON,CACT,GACgBU,MAAMb,KAAMO,SAAS,CACvC,SACSO,UAAWC,eAA+B,KAAR,gBACpCC,eAAgB,oBAChBC,OAASC,KAAMC,WAAYC,QAASC,QAAuB,KAAP,eACpDC,mBAAoB,8CACpBC,UAAW,qCACXC,UAAW,qCACXC,SAAU,iCACVC,SAAU,sCACRC,qBAAsBC,uBAAwBC,sBAAuBC,mBAAoBC,iBAAkBC,eAAgBC,iBAAkBC,gBAAiBC,oBAAqBC,aAAcC,kBAAmBC,uBAAwBC,wBAA4C,KAAZ,oBAC9QC,gBAAiB,uBACjBC,aAAc,oBACdC,oBAAqB,2BACrBC,eAAgB,sBAChBC,eAAgB,sBAChBC,YAAa,YACpB,IAAIC,eAAiB,wBACjBC,eAAiBxB,MAAMwB,eAKvBC,aAA4B9B,KAAK,SAAU+B,GAC7C,IACIC,EAAYD,EAAGC,UACjBC,EAAQF,EAAGE,MACXC,EAAWH,EAAGG,SAEdC,GADYJ,EAAGK,UACAL,EAAGI,cAClBE,EAAeN,EAAGM,aAClBC,EAAeP,EAAGO,aAClBC,EAAcR,EAAGQ,YACjBC,EAAOT,EAAGS,KACVC,EAAcV,EAAGU,YACjBC,EAAOX,EAAGW,KACVC,EAAYZ,EAAGY,UACfC,EAAcb,EAAGa,YACjBC,EAAWd,EAAGc,SACdC,EAAgBf,EAAGe,cACnBC,EAAqBhB,EAAGgB,mBACxBC,EAAWjB,EAAGiB,SACdC,EAAalB,EAAGkB,WAChBC,EAAanB,EAAGmB,WAChBC,EAAYpB,EAAGoB,UAEfC,EAAerB,EAAGsB,OAElBC,EAAgBvB,EAAGuB,cAEnBC,EAAcxB,EAAGwB,YAEjBC,EAAWzB,EAAGyB,SAEdC,EAAU1B,EAAG0B,QAEbC,EAAS3B,EAAG2B,OACZC,EAAW5B,EAAG4B,SACdC,EAAW7B,EAAG6B,SACdC,EAAU9B,EAAG8B,QACXC,EAAQ7D,WAAWG,eAAe2D,OAAO,EAAED,MAC3CE,EAAKrC,QAAQ,EACfsC,EAAmBD,EAAGC,iBACtBC,EAAmBF,EAAGE,iBACtBC,EAAoCH,EAAGG,kCACrCC,EAAK1C,WAAW,EAClB2C,EAAyCD,EAAGC,uCAC5CC,EAAsCF,EAAGE,oCAEvCC,EAA2BrE,QAAQ,WACrC,MAAIK,EAAAA,CAAAA,KAAKiE,UAAUzB,CAAkB,GAAKxC,CAAAA,KAAKkE,SAAS1B,CAAkB,IACjEA,CAGX,EAAG,CAACA,EAAmB,EAEnB2B,EAAaxE,QAAQ,WACvB,OAAOwC,MAAAA,EAAmCA,EAAOxB,YACnD,EAAG,CAACwB,EAAK,EAELiC,EAAkBzE,QAAQ,WAC5B,OAAIK,KAAKqE,QAAQjC,CAAS,EAAUvB,uBAC7BuB,CACT,EAAG,CAACA,EAAU,EAEVkC,EAAiB3E,QAAQ,WAC3B,OAAIK,KAAKqE,QAAQ/B,CAAQ,EAAU9B,iBAC5B8B,CACT,EAAG,CAACA,EAAS,EAETiC,EAAsB5E,QAAQ,WAChC,OAAIK,KAAKqE,QAAQ9B,CAAa,EAAUnC,sBACjCmC,CACT,EAAG,CAACA,EAAc,EAEdiC,EAAK5E,SAAS,CAAA,CAAK,EACrB6E,EAAcD,EAAG,GACjBE,EAAiBF,EAAG,GAElBG,EAAK/E,SAAS,EAAE,EAClBgF,EAAKD,EAAG,GACRE,EAAQF,EAAG,GAETG,EAAmBnF,QAAQ,WAC7B,OAAIK,KAAKqE,QAAQ1B,CAAU,EAAUjC,oBAC9BiC,CACT,EAAG,CAACA,EAAW,EAEXoC,EAAkBpF,QAAQ,WAC5B,OAAIK,KAAKqE,QAAQzB,CAAS,EAAUvC,mBAC7BuC,CACT,EAAG,CAACA,EAAU,EAEVoC,EAAkBrF,QAAQ,WAC5B,IAAIsF,EAAkBtD,MAAAA,EAA2CA,EAAW,GAWxEuD,GAVAlF,KAAKiE,UAAUD,CAAwB,EACrCA,IAEFiB,EAAkBjF,KAAKmF,sBAAsBF,EAAiBnE,wBAAwB,GAE/Ed,KAAKkE,SAASF,CAAwB,GAAKJ,EAAkCI,CAAwB,IAC9GiB,EAAkBjF,KAAKmF,sBAEvBF,EAAiBjB,CAAwB,GAE3BiB,MAAAA,EAAyDA,EAAkB,IAC3F,OAAKR,GACAG,EAEE5E,KAAKoF,WAAWF,EAAWN,EAAItG,SAASA,SAAS,GAAIwC,wBAAwB,EAAG,CACrFuE,WAAYN,EACZO,UAAWP,CACb,CAAC,CAAC,EANuBG,CAO3B,EAAG,CAACN,EAAIH,EAAaT,EAA0BrC,EAAS,EACpD4D,EAAKjE,eAAe0D,CAAe,EACrCQ,EAAiBD,EAAG,GACpBE,EAAoBF,EAAG,GAErBG,EAAsB/F,QAAQ,WAChC,OAAOiC,MAAAA,EAAmDA,EAAe,EAC3E,EAAG,CAACA,EAAa,EACb+D,EAAKrE,eAAeoE,CAAmB,EACzCE,EAAqBD,EAAG,GACxBE,GAAwBF,EAAG,GAEzBG,EAAsBnG,QAE1B,WACE,OAAO+D,EAAiB8B,EAAgB1D,MAAAA,EAAmDA,EAAe,EAAE,CAC9G,EAAG,CAACA,EAAa,EACbiE,EAAKzE,eAAewE,CAAmB,EACzCE,GAAqBD,EAAG,GACxBE,GAAwBF,EAAG,GAEzBG,EAAqBvG,QAAQ,WAC/B,IAAIwG,EAAsBzC,EAAiB8B,EAAgBnD,MAAAA,EAAiDA,EAAc,EAAE,EAAE+D,OAAO,SAAU1H,GAC7I,MAAO,CAAC,CAACA,CACX,CAAC,EAED,OAAI6F,EACKT,EAAuC0B,EAAgBW,CAAmB,EAE5EA,CACT,EAAG,CAAC9D,EAAakC,EAAoB,EACjC8B,EAAK/E,eAAe4E,CAAkB,EACxCI,EAAoBD,EAAG,GACvBE,GAAuBF,EAAG,GACxBG,GAAuBnH,UAAUiH,CAAiB,EAclDG,GAbJnH,gBAAgB,WACd,IACI6G,EAAsBzC,EAAiB8B,EAAgB,OAAChE,EAAKgF,GAAqBE,SAAqClF,EAAK,EAAE,EAAE4E,OAAO,SAAU1H,GACnJ,MAAO,CAAC,CAACA,CACX,CAAC,EAGC6H,GADEhC,EACmBT,EAAuC0B,EAAgBW,CAAmB,EAE1EA,CAF2E,CAIpG,EAAG,CAACX,EAAgBjB,EAAoB,EAEhB5E,QAExB,WACE,OAAO+D,EAAiB8B,EAAgB9C,MAAAA,EAA+CA,EAAa,EAAE,EAAE0D,OAAO,SAAU1H,GACvH,MAAO,CAAC,CAACA,CACX,CAAC,CACH,EAAG,CAAC8G,EAAgB9C,EAAW,GAC3BiE,EAAKrF,eAAemF,CAAiB,EACvCG,EAAmBD,EAAG,GACtBE,GAAsBF,EAAG,GACvBG,GAAsBzH,UAAUuH,CAAgB,EAOhDG,IANJzH,gBAAgB,WACd,IAAIkC,EACJqF,GAAoBnD,EAAiB8B,EAAgB,OAAChE,EAAKsF,GAAoBJ,SAAqClF,EAAK,EAAE,EAAE4E,OAAO,SAAU1H,GAC5I,MAAO,CAAC,CAACA,CACX,CAAC,CAAC,CACJ,EAAG,CAAC8G,EAAe,EACO7F,QAAQ,WAChC,OAAOgE,EAAiBZ,MAAAA,EAAqDA,EAAgB5C,uBAAwBoD,CAAK,CAC5H,EAAG,CAACR,EAAeQ,EAAM,GACrByD,GAAoBrH,QAAQ,WAC9B,OAAOgE,EAAiBX,MAAAA,EAAiDA,EAAc9C,qBAAsBqD,CAAK,CACpH,EAAG,CAACP,EAAaO,EAAM,EACnB0D,GAAiBtH,QAAQ,WAC3B,OAAOgE,EAAiBV,MAAAA,EAA2CA,EAAWrC,kBAAmB2C,CAAK,CACxG,EAAG,CAACN,EAAUM,EAAM,EAChB2D,GAAgBvH,QAAQ,WAC1B,OAAOgE,EAAiBT,MAAAA,EAAyCA,EAAU5C,iBAAkBiD,CAAK,CACpG,EAAG,CAACL,EAASK,EAAM,EACf4D,GAAexH,QAAQ,WACzB,OAAOgE,EAAiBR,MAAAA,EAAuCA,EAAS5C,eAAgBgD,CAAK,CAC/F,EAAG,CAACJ,EAAQI,EAAM,EAEdT,EAASnD,QAAQ,WACnB,OAAOkD,MAAAA,EAAmDA,EAAe,IAAIuE,IAAI,CAAC,CAAC,QAAS,GAAI,CAAC,SAAU,IAAK,CAAC,QAAS,IAAI,EAAEC,IAAIlD,CAAU,CAChJ,EAAG,CAACA,EAAYtB,EAAa,EAEzByE,EAAuB3H,QAAQ,WACjC,OAAO6F,EAAe+B,IAAI,SAAUC,GAClC,OAAoBhI,MAAMiI,cAAcxG,gBAAgByG,SAAU,CAChEC,MAAO,CACL5D,oCAAqC,WACnC,OAAOA,EAAoCyD,EAAcI,QAAQ,CACnE,CACF,CACF,EAAgBpI,MAAMiI,cAAczG,SAAU1C,SAAS,CACrDuJ,MAAO,EACPC,GAAIN,EAAc1G,yBAAyBiH,QAC7C,EAAGP,CAAa,CAAC,CAAC,CACpB,CAAC,CACH,EAAG,CAAChC,EAAgBzD,EAAcC,EAAY,EAE1CqC,EAAU1E,QAAQ,WACpB,MAAO,CAAC2H,EAAqBvI,MAC/B,EAAG,CAACuI,EAAqB,EAErBU,EAAuBrI,QAAQ,WACjC,MAAO,CACLiC,aAAc,WACZ,OAAOgE,CACT,EACA9D,aAAc,WACZ,OAAOkE,EACT,EACA3D,YAAa,WACX,OAAOiE,CACT,EACA5D,WAAY,WACV,OAAOkE,CACT,EACAqB,gBAAiBhC,GACjBiC,gBAAiBrC,GACjBsC,eAAgB5B,GAChB6B,cAAevB,GACfwB,YAAa5C,EACbhD,SAAUA,EACVN,KAAM,WACJ,OAAOgC,CACT,EACArB,OAAQ,WACN,OAAOA,MAAAA,EAAuCA,EAASrC,eACzD,EACA6B,SAAU,WACR,OAAOgC,CACT,EACAlC,UAAW,WACT,OAAOgC,CACT,EACAzC,SAAU,WACR,OAAOA,CACT,EACAY,cAAe,WACb,OAAOgC,CACT,EACA+D,kBAAmB,WACjB,OAAOtE,CACT,EACA/B,KAAMA,EACNc,cAAe,WACb,OAAOgE,EACT,EACA/D,YAAa,WACX,OAAOgE,EACT,EACA/D,SAAU,WACR,OAAOgE,EACT,EACA/D,QAAS,WACP,OAAOgE,EACT,EACA/D,OAAQ,WACN,OAAOgE,EACT,EACAnF,YAAaA,EACbD,aAAcA,EACdqB,SAAUA,EACVC,SAAUA,EACVC,QAASA,CACX,CACF,EAAG,CAACsC,EAAoBI,GAAoBM,EAAmBM,EAAkB9D,EAAQqB,EAAYG,EAAgBF,EAAiBzC,EAAUc,EAAUF,EAAeN,EAAM8E,GAAqBC,GAAmBC,GAAgBC,GAAeC,GAAcnF,EAAaD,EAAcqB,EAAUC,EAAUC,EAAQ,EACvTiF,EAA2B/I,MAAMiI,cAAc1G,YAAY2G,SAAU,CACvEC,MAAOK,CACT,EAAgBxI,MAAMiI,cAAc,KAAM,CACxChG,UAAWlC,WAAW8B,eAAgBI,CAAS,EAC/CC,MAAOA,MAAAA,EAAqCA,EAAQ,EACtD,EAAgBlC,MAAMiI,cAAc1H,MAAMyI,MAAO,CAC/CC,UAAW,WACXtG,KAAMW,CACR,EAAGuB,GAAwB7E,MAAMiI,cAAc,KAAM,KAAM,OAACiB,EAAKxG,MAAAA,EAAiD,KAAA,EAASA,EAAY,GAA+BwG,EAAkBlJ,MAAMiI,cAAcpJ,YAAa,CACvNsK,OAAQ,OACV,CAAC,CAAC,EAAG,CAACtE,GAAWiD,CAAoB,CAAC,CAAC,EAQvC,OAAoB9H,MAAMiI,cAAcjI,MAAMoJ,SAAU,KAAM9D,GAAmCtF,MAAMiI,cAAc,MAAO,CAC1HhG,UAAWlC,WAAW,GAAGsJ,OAAOxH,eAAgB,UAAU,CAAC,CAC7D,EAAgB7B,MAAMiI,cAAc,MAAO,CACzChG,UAAWlC,WAAW,GAAGsJ,OAAOxH,eAAgB,SAAS,CAAC,CAC5D,EAAgB7B,MAAMiI,cAAcrJ,WAAY,CAC9C0K,YAAa7I,KAAK8I,EAAE,KAAK,EACzBC,iBAAkB,CAAA,EAClBrB,MAAO/C,EACPqE,SAAUpE,EACVqE,SAhBF,WACExE,EAAe,CAAA,CAAI,CACrB,EAeEyE,QAdF,WACEtE,EAAM,EAAE,EACRH,EAAe,CAAA,CAAK,CACtB,CAYA,CAAC,CAAC,EAAgBlF,MAAMiI,cAAc,MAAO,CAC3ChG,UAAWlC,WAAW,GAAGsJ,OAAOxH,eAAgB,OAAO,CAAC,CAC1D,EAAGkH,CAAW,CAAE,EAAG,CAACzD,GAAoByD,CAAW,CACrD,CAAC,EACGa,KAAO7H,aACX6H,KAAKlI,WAAaA,WAClBkI,KAAKC,YAAc,sBACJD"}