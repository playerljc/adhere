{"version":3,"file":"Tree.js","sources":["Tree.js"],"sourcesContent":["import _ErrorBlock from \"antd-mobile/es/components/error-block\";\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport classNames from 'classnames';\nimport React, { memo, useContext, useMemo } from 'react';\nimport ConfigProvider from '@baifendian/adhere-ui-configprovider';\nimport Hooks from '@baifendian/adhere-ui-hooks';\nimport Space from '@baifendian/adhere-ui-space';\nimport Util from '@baifendian/adhere-util';\nimport { DEFAULT_CHECKBOX_GAP, DEFAULT_CHECKBOX_WIDTH, DEFAULT_CHECKSTRICTLY, DEFAULT_ICON_GAP, DEFAULT_INDENT, DEFAULT_MULTIPLE, DEFAULT_SIZE, DEFAULT_TITLE_GAP, DEFAULT_TREE_CHECKABLE } from './Constant';\nimport TreeContext from './TreeContext';\nimport TreeNode from './TreeNode';\nimport TreeNodeContext from './TreeNodeContext';\nimport useChecked from './useChecked';\nimport useUtil from './useUtil';\nvar selectorPrefix = 'adhere-mobile-ui-tree';\nvar usePropToState = Hooks.usePropToState;\n/**\n * Tree\n * @description Tree\n */\nvar Tree = /*#__PURE__*/memo(function (_a) {\n  var _b;\n  var className = _a.className,\n    style = _a.style,\n    treeData = _a.treeData,\n    expandAll = _a.expandAll,\n    expandedKeys = _a.expandedKeys,\n    selectedKeys = _a.selectedKeys,\n    switcherIcon = _a.switcherIcon,\n    titleRender = _a.titleRender,\n    icon = _a.icon,\n    renderEmpty = _a.renderEmpty,\n    size = _a.size,\n    checkable = _a.checkable,\n    checkedKeys = _a.checkedKeys,\n    multiple = _a.multiple,\n    checkStrictly = _a.checkStrictly,\n    loadData = _a.loadData,\n    loadedKeys = _a.loadedKeys,\n    // 行距(如果指定行距则size不起作用)\n    globalRowGap = _a.rowGap,\n    // checkbox的宽度(默认是20px)\n    checkboxWidth = _a.checkboxWidth,\n    // checkbox的间距\n    checkboxGap = _a.checkboxGap,\n    // title元素的间距\n    titleGap = _a.titleGap,\n    // icon的间距\n    iconGap = _a.iconGap,\n    // 缩进\n    indent = _a.indent,\n    onSelect = _a.onSelect,\n    onExpand = _a.onExpand,\n    onCheck = _a.onCheck;\n  var media = useContext(ConfigProvider.Context).media;\n  var _c = useUtil(),\n    omitDisabledKeys = _c.omitDisabledKeys,\n    getValueWithUnit = _c.getValueWithUnit;\n  var _d = useChecked(),\n    getDefaultCheckedKeysWithCheckStrictly = _d.getDefaultCheckedKeysWithCheckStrictly,\n    existsCheckableNodeInParentChildren = _d.existsCheckableNodeInParentChildren;\n  // Tree的密度\n  var targetSize = useMemo(function () {\n    return size !== null && size !== void 0 ? size : DEFAULT_SIZE;\n  }, [size]);\n  // 整个Tree是否是可勾选的Tree\n  var targetCheckable = useMemo(function () {\n    if (Util.isEmpty(checkable)) return DEFAULT_TREE_CHECKABLE;\n    return checkable;\n  }, [checkable]);\n  // 是否可以选中多个节点\n  var targetMultiple = useMemo(function () {\n    if (Util.isEmpty(multiple)) return DEFAULT_MULTIPLE;\n    return multiple;\n  }, [multiple]);\n  // checkbox是否受控\n  var targetCheckStrictly = useMemo(function () {\n    if (Util.isEmpty(checkStrictly)) return DEFAULT_CHECKSTRICTLY;\n    return checkStrictly;\n  }, [checkStrictly]);\n  // Tree的数据\n  var targetTreeData = useMemo(function () {\n    return treeData !== null && treeData !== void 0 ? treeData : [];\n  }, [treeData]);\n  // 展开的keys\n  var defaultExpandedKeys = useMemo(function () {\n    return expandedKeys !== null && expandedKeys !== void 0 ? expandedKeys : [];\n  }, [expandedKeys]);\n  var _e = usePropToState(defaultExpandedKeys),\n    targetExpandedKeys = _e[0],\n    setTargetExpandedKeys = _e[1];\n  // 选择的keys\n  var defaultSelectedKeys = useMemo(\n  // 排除不可用的节点keys\n  function () {\n    return omitDisabledKeys(targetTreeData, selectedKeys !== null && selectedKeys !== void 0 ? selectedKeys : []);\n  }, [selectedKeys]);\n  var _f = usePropToState(defaultSelectedKeys),\n    targetSelectedKeys = _f[0],\n    setTargetSelectedKeys = _f[1];\n  // 勾选的keys\n  var defaultCheckedKeys = useMemo(function () {\n    var _defaultCheckedKeys = omitDisabledKeys(targetTreeData, checkedKeys !== null && checkedKeys !== void 0 ? checkedKeys : []);\n    // 如果是受控\n    if (targetCheckStrictly) {\n      return getDefaultCheckedKeysWithCheckStrictly(targetTreeData, _defaultCheckedKeys);\n    }\n    return _defaultCheckedKeys;\n  }, [checkedKeys, targetCheckStrictly]);\n  var _g = usePropToState(defaultCheckedKeys),\n    targetCheckedKeys = _g[0],\n    setTargetCheckedKeys = _g[1];\n  // 异步加载的keys\n  var defaultLoadedKeys = useMemo(\n  // 排除不可用的节点keys\n  function () {\n    return omitDisabledKeys(targetTreeData, loadedKeys !== null && loadedKeys !== void 0 ? loadedKeys : []);\n  }, [loadedKeys]);\n  var _h = usePropToState(defaultLoadedKeys),\n    targetLoadedKeys = _h[0],\n    setTargetLoadedKeys = _h[1];\n  var targetCheckboxWidth = useMemo(function () {\n    return getValueWithUnit(checkboxWidth !== null && checkboxWidth !== void 0 ? checkboxWidth : DEFAULT_CHECKBOX_WIDTH, media);\n  }, [checkboxWidth, media]);\n  var targetCheckboxGap = useMemo(function () {\n    return getValueWithUnit(checkboxGap !== null && checkboxGap !== void 0 ? checkboxGap : DEFAULT_CHECKBOX_GAP, media);\n  }, [checkboxGap, media]);\n  var targetTitleGap = useMemo(function () {\n    return getValueWithUnit(titleGap !== null && titleGap !== void 0 ? titleGap : DEFAULT_TITLE_GAP, media);\n  }, [titleGap, media]);\n  var targetIconGap = useMemo(function () {\n    return getValueWithUnit(iconGap !== null && iconGap !== void 0 ? iconGap : DEFAULT_ICON_GAP, media);\n  }, [iconGap, media]);\n  var targetIndent = useMemo(function () {\n    return getValueWithUnit(indent !== null && indent !== void 0 ? indent : DEFAULT_INDENT, media);\n  }, [indent, media]);\n  // 行的间距\n  var rowGap = useMemo(function () {\n    return globalRowGap !== null && globalRowGap !== void 0 ? globalRowGap : new Map([['small', 5], ['middle', 15], ['large', 25]]).get(targetSize);\n  }, [targetSize, globalRowGap]);\n  // children elements\n  var treeChildrenElements = useMemo(function () {\n    return targetTreeData.map(function (_treeNodeData) {\n      return /*#__PURE__*/React.createElement(TreeNodeContext.Provider, {\n        value: {\n          existsCheckableNodeInParentChildren: function () {\n            return existsCheckableNodeInParentChildren(_treeNodeData.children);\n          }\n        }\n      }, /*#__PURE__*/React.createElement(TreeNode, __assign({\n        level: 0,\n        id: _treeNodeData.key\n      }, _treeNodeData)));\n    });\n  }, [targetTreeData, switcherIcon, titleRender]);\n  // 是否微空\n  var isEmpty = useMemo(function () {\n    return !treeChildrenElements.length;\n  }, [treeChildrenElements]);\n  // contextProvider\n  var contextProviderValue = useMemo(function () {\n    return {\n      expandedKeys: function () {\n        return targetExpandedKeys;\n      },\n      selectedKeys: function () {\n        return targetSelectedKeys;\n      },\n      checkedKeys: function () {\n        return targetCheckedKeys;\n      },\n      loadedKeys: function () {\n        return targetLoadedKeys;\n      },\n      setSelectedKeys: setTargetSelectedKeys,\n      setExpandedKeys: setTargetExpandedKeys,\n      setCheckedKeys: setTargetCheckedKeys,\n      setLoadedKeys: setTargetLoadedKeys,\n      loadData: loadData,\n      size: function () {\n        return targetSize;\n      },\n      rowGap: function () {\n        return rowGap !== null && rowGap !== void 0 ? rowGap : 15;\n      },\n      multiple: function () {\n        return targetMultiple;\n      },\n      checkable: function () {\n        return targetCheckable;\n      },\n      treeData: function () {\n        return treeData;\n      },\n      checkStrictly: function () {\n        return targetCheckStrictly;\n      },\n      icon: icon,\n      checkboxWidth: function () {\n        return targetCheckboxWidth;\n      },\n      checkboxGap: function () {\n        return targetCheckboxGap;\n      },\n      titleGap: function () {\n        return targetTitleGap;\n      },\n      iconGap: function () {\n        return targetIconGap;\n      },\n      indent: function () {\n        return targetIndent;\n      },\n      titleRender: titleRender,\n      switcherIcon: switcherIcon,\n      onSelect: onSelect,\n      onExpand: onExpand,\n      onCheck: onCheck\n    };\n  }, [targetExpandedKeys, targetSelectedKeys, targetCheckedKeys, targetLoadedKeys, rowGap, targetSize, targetMultiple, targetCheckable, treeData, loadData, checkStrictly, icon, targetCheckboxWidth, targetCheckboxGap, targetTitleGap, targetIconGap, targetIndent, titleRender, switcherIcon, onSelect, onExpand, onCheck]);\n  return /*#__PURE__*/React.createElement(TreeContext.Provider, {\n    value: contextProviderValue\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: classNames(selectorPrefix, className),\n    style: style !== null && style !== void 0 ? style : {}\n  }, /*#__PURE__*/React.createElement(Space.Group, {\n    direction: \"vertical\",\n    size: rowGap\n  }, isEmpty && /*#__PURE__*/React.createElement(\"li\", null, (_b = renderEmpty === null || renderEmpty === void 0 ? void 0 : renderEmpty()) !== null && _b !== void 0 ? _b : /*#__PURE__*/React.createElement(_ErrorBlock, {\n    status: \"empty\"\n  })), !isEmpty && treeChildrenElements)));\n});\nTree.displayName = 'Tree';\nexport default Tree;"],"names":["_ErrorBlock","__assign","this","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","classNames","React","memo","useContext","useMemo","ConfigProvider","Hooks","Space","Util","DEFAULT_CHECKBOX_GAP","DEFAULT_CHECKBOX_WIDTH","DEFAULT_CHECKSTRICTLY","DEFAULT_ICON_GAP","DEFAULT_INDENT","DEFAULT_MULTIPLE","DEFAULT_SIZE","DEFAULT_TITLE_GAP","DEFAULT_TREE_CHECKABLE","TreeContext","TreeNode","TreeNodeContext","useChecked","useUtil","selectorPrefix","usePropToState","Tree","_a","className","style","treeData","expandedKeys","expandAll","selectedKeys","switcherIcon","titleRender","icon","renderEmpty","size","checkable","checkedKeys","multiple","checkStrictly","loadData","loadedKeys","globalRowGap","rowGap","checkboxWidth","checkboxGap","titleGap","iconGap","indent","onSelect","onExpand","onCheck","media","Context","_c","omitDisabledKeys","getValueWithUnit","_d","getDefaultCheckedKeysWithCheckStrictly","existsCheckableNodeInParentChildren","targetSize","targetCheckable","isEmpty","targetMultiple","targetCheckStrictly","targetTreeData","defaultExpandedKeys","_e","targetExpandedKeys","setTargetExpandedKeys","defaultSelectedKeys","_f","targetSelectedKeys","setTargetSelectedKeys","defaultCheckedKeys","_defaultCheckedKeys","_g","targetCheckedKeys","setTargetCheckedKeys","defaultLoadedKeys","_h","targetLoadedKeys","setTargetLoadedKeys","targetCheckboxWidth","targetCheckboxGap","targetTitleGap","targetIconGap","targetIndent","Map","get","treeChildrenElements","map","_treeNodeData","createElement","Provider","value","children","level","id","key","contextProviderValue","setSelectedKeys","setExpandedKeys","setCheckedKeys","setLoadedKeys","Group","direction","_b","status","displayName"],"mappings":"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"}