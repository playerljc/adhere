import _AddOutline from"antd-mobile-icons/es/AddOutline";import _MinusOutline from"antd-mobile-icons/es/MinusOutline";import _Checkbox from"antd-mobile/es/components/checkbox";var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var c in t=arguments[n])Object.prototype.hasOwnProperty.call(t,c)&&(e[c]=t[c]);return e}).apply(this,arguments)},__spreadArray=this&&this.__spreadArray||function(e,t,n){if(n||2===arguments.length)for(var r,c=0,a=t.length;c<a;c++)!r&&c in t||((r=r||Array.prototype.slice.call(t,0,c))[c]=t[c]);return e.concat(r||Array.prototype.slice.call(t))};import classNames from"classnames";import React,{memo,useContext,useMemo}from"react";import Space from"@baifendian/adhere-ui-space";import{DEFAULT_DISABLED,DEFAULT_SELECTABLE,DEFAULT_TREE_NODE_CHECKABLE}from"./Constant";import TreeContext from"./TreeContext";import TreeNodeContext from"./TreeNodeContext";import useChecked from"./useChecked";var selectorPrefix="adhere-mobile-ui-tree-node",TreeNode=memo(function(e){var r=e.id,t=e.level,n=(e.isLeaf,e.icon),c=e.title,a=e.checkable,o=e.disabled,l=e.selectable,i=e.children,s=e.titleRender,e=useContext(TreeContext),u=e.setSelectedKeys,d=e.setExpandedKeys,m=e.setCheckedKeys,f=e.selectedKeys,p=e.expandedKeys,h=e.checkedKeys,E=e.rowGap,_=e.size,k=e.multiple,e=e.checkable,x=useContext(TreeNodeContext).updateParentChecked,y=useMemo(function(){return null==o?DEFAULT_DISABLED:o},[o]),C=useMemo(function(){return null==l?DEFAULT_SELECTABLE:l},[l]),A=useMemo(function(){return null==a?DEFAULT_TREE_NODE_CHECKABLE:a},[a]),v=useMemo(function(){return null!=i?i:[]},[i]),N=useMemo(function(){return!!v.length},[v]),T=useChecked(),b=T.handleCheck,R=T.updateParentChecked,T=useMemo(function(){return v.map(function(e){return React.createElement(TreeNodeContext.Provider,{value:{updateParentChecked:function(e){var t=e.key,n=e.checked,e=e.checkedKeys;R({key:t,checked:n,checkedKeys:e,childrenData:v,parentId:r,next:x})}}},React.createElement(TreeNode,__assign({level:t+1,icon:n,titleRender:s,id:e.key},e)))})},[v]),L=useMemo(function(){return h().includes(r)},[h(),r]),P=p().includes(r),D=f().includes(r);return React.createElement("li",{key:r,className:classNames(selectorPrefix,"".concat(selectorPrefix,"-").concat(_()),((p={})["".concat(selectorPrefix,"-disabled")]=y,p))},React.createElement(Space.Group,{direction:"vertical",size:E()},React.createElement("div",{className:"".concat(selectorPrefix,"-info")},e()&&A&&React.createElement("span",{className:classNames("".concat(selectorPrefix,"-info-checkbox"))},React.createElement(_Checkbox,{value:r,checked:L,disabled:y,onChange:function(e){var t=h();b({checkedKeys:t,checked:e,node:{key:r,children:i},next:x}),m(__spreadArray([],t,!0))}})),N&&React.createElement("span",{className:"".concat(selectorPrefix,"-info-expanded"),onClick:function(){d(P?function(e){return(null!=e?e:[]).filter(function(e){return e!==r})}:function(e){return __spreadArray(__spreadArray([],null!=e?e:[],!0),[r],!1)})}},P&&(null!=(f=null==n?void 0:n(P))?f:React.createElement(_MinusOutline,null)),!P&&(null!=(_=null==n?void 0:n(P))?_:React.createElement(_AddOutline,null))),React.createElement("span",{className:classNames("".concat(selectorPrefix,"-info-title"),((p={})["".concat(selectorPrefix,"-info-title-selected")]=C&&D,p)),onClick:function(){if(C)return k()?D?void u(function(e){return(null!=e?e:[]).filter(function(e){return e!==r})}):void u(function(e){return __spreadArray(__spreadArray([],null!=e?e:[],!0),[r],!1)}):void u(D?[]:[r])}},null!=(e=null==s?void 0:s({key:r,title:c,disabled:o,selectable:l,checkable:a,children:i}))?e:c)),N&&P&&React.createElement("ul",{className:"".concat(selectorPrefix,"-children")},React.createElement(Space.Group,{direction:"vertical",size:E()},T))))});TreeNode.displayName="TreeNode";export default TreeNode;
//# sourceMappingURL=TreeNode.js.map
