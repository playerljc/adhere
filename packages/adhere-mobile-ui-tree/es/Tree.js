import _SearchBar from"antd-mobile/es/components/search-bar";import _ErrorBlock from"antd-mobile/es/components/error-block";var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};import classNames from"classnames";import React,{memo,useContext,useMemo,useState}from"react";import ConfigProvider from"@baifendian/adhere-ui-configprovider";import Hooks from"@baifendian/adhere-ui-hooks";import Space from"@baifendian/adhere-ui-space";import Util from"@baifendian/adhere-util";import Intl from"@baifendian/adhere-util-intl";import{DEFAULT_CHECKBOX_GAP,DEFAULT_CHECKBOX_WIDTH,DEFAULT_CHECKSTRICTLY,DEFAULT_FILTER_KEY,DEFAULT_ICON_GAP,DEFAULT_INDENT,DEFAULT_MULTIPLE,DEFAULT_ROW_GAP,DEFAULT_SHOW_SEARCH,DEFAULT_SIZE,DEFAULT_TITLE_GAP,DEFAULT_TREE_CHECKABLE,DEFAULT_TREE_UTIL_CONFIG}from"./Constant";import TreeContext from"./TreeContext";import TreeNode from"./TreeNode";import TreeNodeContext from"./TreeNodeContext";import TreeSelect from"./TreeSelect";import useChecked from"./useChecked";import useUtil from"./useUtil";var selectorPrefix="adhere-mobile-ui-tree",usePropToState=Hooks.usePropToState,InternalTree=memo(function(e){var t=e.className,n=e.style,r=e.treeData,o=(e.expandAll,e.expandedKeys),a=e.selectedKeys,i=e.switcherIcon,c=e.titleRender,u=e.icon,l=e.renderEmpty,s=e.size,m=e.checkable,E=e.checkedKeys,f=e.multiple,d=e.checkStrictly,T=e.loadData,p=e.loadedKeys,_=e.showSearch,h=e.filterKey,C=e.rowGap,A=e.checkboxWidth,L=e.checkboxGap,U=e.titleGap,D=e.iconGap,y=e.indent,v=e.onSelect,G=e.onExpand,g=e.onCheck,S=useContext(ConfigProvider.Context).media,e=useUtil(),F=e.omitDisabledKeys,I=e.getValueWithUnit,e=useChecked(),H=e.getDefaultCheckedKeysWithCheckStrictly,O=e.existsCheckableNodeInParentChildren,P=useMemo(function(){return null!=s?s:DEFAULT_SIZE},[s]),B=useMemo(function(){return Util.isEmpty(m)?DEFAULT_TREE_CHECKABLE:m},[m]),W=useMemo(function(){return Util.isEmpty(f)?DEFAULT_MULTIPLE:f},[f]),R=useMemo(function(){return Util.isEmpty(d)?DEFAULT_CHECKSTRICTLY:d},[d]),e=useState(!1),w=e[0],X=e[1],e=useState(""),k=e[0],Y=e[1],e=useMemo(function(){return Util.isEmpty(_)?DEFAULT_SHOW_SEARCH:_},[_]),z=useMemo(function(){return Util.isEmpty(h)?DEFAULT_FILTER_KEY:h},[h]),x=useMemo(function(){var e=null!=r?r:[];return w&&k?Util.filterTree(e,k,__assign(__assign({},DEFAULT_TREE_UTIL_CONFIG),{filterAttr:z,titleAttr:z})):e},[k,w,r]),N=useMemo(function(){return null!=o?o:[]},[o]),N=usePropToState(N),j=N[0],Z=N[1],N=useMemo(function(){return F(x,null!=a?a:[])},[a]),N=usePropToState(N),V=N[0],q=N[1],N=useMemo(function(){var e=F(x,null!=E?E:[]);return R?H(x,e):e},[E,R]),N=usePropToState(N),J=N[0],Q=N[1],N=useMemo(function(){return F(x,null!=p?p:[])},[p]),N=usePropToState(N),$=N[0],ee=N[1],te=useMemo(function(){return I(null!=A?A:DEFAULT_CHECKBOX_WIDTH,S)},[A,S]),ne=useMemo(function(){return I(null!=L?L:DEFAULT_CHECKBOX_GAP,S)},[L,S]),re=useMemo(function(){return I(null!=U?U:DEFAULT_TITLE_GAP,S)},[U,S]),oe=useMemo(function(){return I(null!=D?D:DEFAULT_ICON_GAP,S)},[D,S]),ae=useMemo(function(){return I(null!=y?y:DEFAULT_INDENT,S)},[y,S]),K=useMemo(function(){return null!=C?C:new Map([["small",5],["middle",15],["large",25]]).get(P)},[P,C]),M=useMemo(function(){return x.map(function(e){return React.createElement(TreeNodeContext.Provider,{value:{existsCheckableNodeInParentChildren:function(){return O(e.children)}}},React.createElement(TreeNode,__assign({level:0,id:e.key},e)))})},[x,i,c]),N=useMemo(function(){return!M.length},[M]),b=useMemo(function(){return{expandedKeys:function(){return j},selectedKeys:function(){return V},checkedKeys:function(){return J},loadedKeys:function(){return $},setSelectedKeys:q,setExpandedKeys:Z,setCheckedKeys:Q,setLoadedKeys:ee,loadData:T,size:function(){return P},rowGap:function(){return null!=K?K:DEFAULT_ROW_GAP},multiple:function(){return W},checkable:function(){return B},treeData:function(){return r},checkStrictly:function(){return R},icon:u,checkboxWidth:function(){return te},checkboxGap:function(){return ne},titleGap:function(){return re},iconGap:function(){return oe},indent:function(){return ae},titleRender:c,switcherIcon:i,onSelect:v,onExpand:G,onCheck:g}},[j,V,J,$,K,P,W,B,r,T,d,u,te,ne,re,oe,ae,c,i,v,G,g]),t=React.createElement(TreeContext.Provider,{value:b},React.createElement("ul",{className:classNames(selectorPrefix,t),style:null!=n?n:{}},React.createElement(Space.Group,{direction:"vertical",size:K},N&&React.createElement("li",null,null!=(b=null==l?void 0:l())?b:React.createElement(_ErrorBlock,{status:"empty"})),!N&&M)));return React.createElement(React.Fragment,null,e&&React.createElement("div",{className:classNames("".concat(selectorPrefix,"-wrapper"))},React.createElement("div",{className:classNames("".concat(selectorPrefix,"-search"))},React.createElement(_SearchBar,{placeholder:Intl.v("请输入"),showCancelButton:!0,value:k,onChange:Y,onSearch:function(){X(!0)},onClear:function(){Y(""),X(!1)}})),React.createElement("div",{className:classNames("".concat(selectorPrefix,"-body"))},t)),!e&&t)}),Tree=InternalTree;Tree.TreeSelect=TreeSelect,Tree.displayName="Tree";export default Tree;
//# sourceMappingURL=Tree.js.map
