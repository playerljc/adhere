{"version":3,"file":"CircleModifyAction.js","sources":["vector/interaction/modify/CircleModifyAction.js"],"sourcesContent":["\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// @ts-ignore\r\nvar adhere_util_1 = __importDefault(require(\"@baifendian/adhere-util\"));\r\nvar types_1 = require(\"../types\");\r\nvar ModifyAction_1 = __importDefault(require(\"./ModifyAction\"));\r\nvar CircleDrawAction_1 = __importDefault(require(\"../draw/CircleDrawAction\"));\r\nvar DefaultMoveGemStyle_1 = __importDefault(require(\"../DefaultMoveGemStyle\"));\r\n/**\r\n * CircleModifyAction\r\n * @class CircleModifyAction\r\n * @classdesc - 圆形修改\r\n * @remark:\r\n */\r\nvar CircleModifyAction = /** @class */ (function (_super) {\r\n    __extends(CircleModifyAction, _super);\r\n    function CircleModifyAction(data) {\r\n        var _this = _super.call(this, data) || this;\r\n        _this.ResizeCursorMapping = new Map([\r\n            [0, 'ns-resize'],\r\n            [1, 'ew-resize'],\r\n            [2, 'ns-resize'],\r\n            [3, 'ew-resize'],\r\n        ]);\r\n        return _this;\r\n    }\r\n    /**\r\n     * drawAnchors\r\n     * circle有4个anchor，上，下，左，右\r\n     */\r\n    CircleModifyAction.prototype.drawAnchors = function () {\r\n        var _a, _b;\r\n        // TODO: 修改1\r\n        if (!this.context)\r\n            return;\r\n        var ctx = this.context.getCtx();\r\n        if (!ctx)\r\n            return;\r\n        var _c = CircleDrawAction_1.default.transformOriginToReal(this.context, (_b = (_a = this === null || this === void 0 ? void 0 : this.data) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.data), center = _c.center, radius = _c.radius;\r\n        // 顺时针，上，右，下，左\r\n        var circleAnchorPoints = [\r\n            {\r\n                x: center.x,\r\n                y: center.y - radius,\r\n            },\r\n            {\r\n                x: center.x + radius,\r\n                y: center.y,\r\n            },\r\n            {\r\n                x: center.x,\r\n                y: center.y + radius,\r\n            },\r\n            {\r\n                x: center.x - radius,\r\n                y: center.y,\r\n            },\r\n        ];\r\n        for (var i = 0; i < circleAnchorPoints.length; i++) {\r\n            var point = circleAnchorPoints[i];\r\n            ctx.beginPath();\r\n            this.setAnchorCircleStyle();\r\n            ctx.ellipse(point.x, point.y, this.anchorRadius, this.anchorRadius, (45 * Math.PI) / 180, 0, 2 * Math.PI);\r\n            ctx.stroke();\r\n            ctx.fill();\r\n        }\r\n    };\r\n    /**\r\n     * getPointInAnchor\r\n     * @param targetPoint\r\n     * @return IPoint | null\r\n     */\r\n    CircleModifyAction.prototype.getPointInAnchor = function (targetPoint) {\r\n        var _a, _b;\r\n        // TODO: 修改2\r\n        if (!this.data)\r\n            return null;\r\n        var point = null;\r\n        var index = -1;\r\n        var _c = CircleDrawAction_1.default.transformOriginToReal(this.context, (_b = (_a = this === null || this === void 0 ? void 0 : this.data) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.data), center = _c.center, radius = _c.radius;\r\n        // 顺时针，上，右，下，左\r\n        var circleAnchorPoints = [\r\n            {\r\n                x: center.x,\r\n                y: center.y - radius,\r\n            },\r\n            {\r\n                x: center.x + radius,\r\n                y: center.y,\r\n            },\r\n            {\r\n                x: center.x,\r\n                y: center.y + radius,\r\n            },\r\n            {\r\n                x: center.x - radius,\r\n                y: center.y,\r\n            },\r\n        ];\r\n        for (var i = 0; i < circleAnchorPoints.length; i++) {\r\n            var center_1 = circleAnchorPoints[i];\r\n            var radius_1 = this.anchorRadius + this.anchorLineWidth;\r\n            if (adhere_util_1.default.isPointInCircle(targetPoint, { center: center_1, radius: radius_1 })) {\r\n                point = center_1;\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n        if (point && index !== -1) {\r\n            return {\r\n                point: point,\r\n                index: index,\r\n            };\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * setResizeCursorByIndex\r\n     * @param index\r\n     */\r\n    CircleModifyAction.prototype.setResizeCursorByIndex = function (index) {\r\n        if (!this.context)\r\n            return;\r\n        var canvasEl = this.context.getCanvasEl();\r\n        var assistCanvasEl = this.context.getAssistCanvasEl();\r\n        if (!canvasEl || !assistCanvasEl)\r\n            return;\r\n        canvasEl.style.cursor = assistCanvasEl.style.cursor = this.ResizeCursorMapping.get(index);\r\n    };\r\n    /**\r\n     * drawModify\r\n     * @param targetPixel\r\n     */\r\n    CircleModifyAction.prototype.drawModify = function (targetPixel) {\r\n        // TODO: 修改3\r\n        var context = this.context;\r\n        var ctx = context === null || context === void 0 ? void 0 : context.getCtx();\r\n        if (!context || !ctx || !this.data || !this.startPoint)\r\n            return;\r\n        // canvasHistory需要修改 需要修改半径\r\n        var data = context.getHistoryDataById(this.data.data.id);\r\n        if (!data)\r\n            return;\r\n        // 中心点和startPoint的距离就是半径\r\n        var center = data.data.center;\r\n        // 原始值\r\n        // 坐标\r\n        // 实际距离\r\n        // @ts-ignore\r\n        var centerPixel = context.pointToPixel(center);\r\n        // 两点间距离(圆的中心点和targetPoint)之间的距离\r\n        data.data.radius = context.distanceToActual(adhere_util_1.default.getDistanceByBetweenPoint({ p1: centerPixel, p2: targetPixel }));\r\n        this.data.data = __assign({}, data);\r\n        context.clearDraw();\r\n        context.drawHistoryData();\r\n        this.drawAnchors();\r\n    };\r\n    /**\r\n     * drawMove\r\n     * @param startPixel\r\n     * @param targetPixel\r\n     */\r\n    CircleModifyAction.prototype.drawMove = function (startPixel, targetPixel) {\r\n        // TODO: 修改4\r\n        var context = this.context;\r\n        var ctx = context === null || context === void 0 ? void 0 : context.getCtx();\r\n        if (!context || !ctx || !this.data)\r\n            return;\r\n        var data = context.getHistoryDataById(this.data.data.id);\r\n        if (!data)\r\n            return;\r\n        var startPoint = context.pixelToPoint(startPixel);\r\n        var targetPoint = context.pixelToPoint(targetPixel);\r\n        var offsetX = targetPoint.x - startPoint.x;\r\n        var offsetY = targetPoint.y - startPoint.y;\r\n        data.data.center.x += offsetX;\r\n        data.data.center.y += offsetY;\r\n        this.data.data = __assign({}, data);\r\n        context.clearDraw();\r\n        context.drawHistoryData();\r\n        this.drawAnchors();\r\n    };\r\n    /**\r\n     * getSelectType\r\n     */\r\n    CircleModifyAction.prototype.getSelectType = function () {\r\n        return types_1.SelectType.Circle;\r\n    };\r\n    /**\r\n     * isCanMove\r\n     * @param targetPixel\r\n     */\r\n    CircleModifyAction.prototype.isCanMove = function (targetPixel) {\r\n        var _a, _b;\r\n        // TODO: 修改5\r\n        if (!this.data)\r\n            return false;\r\n        var _c = (_b = (_a = this === null || this === void 0 ? void 0 : this.data) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.data, center = _c.center, radius = _c.radius;\r\n        var inCircle = adhere_util_1.default.isPointInCircle(targetPixel, CircleDrawAction_1.default.transformOriginToReal(this.context, {\r\n            center: center,\r\n            radius: radius,\r\n        }));\r\n        return inCircle && !this.getPointInAnchor(targetPixel);\r\n    };\r\n    /**\r\n     * drawMoveGeometry\r\n     * @description 绘制移动时的几何图形\r\n     */\r\n    // @ts-ignore\r\n    CircleModifyAction.prototype.drawMoveGeometry = function () {\r\n        if (!this.context || !this.data)\r\n            return;\r\n        CircleDrawAction_1.default.draw(this.context, this.context.getAssistCtx(), this.data);\r\n    };\r\n    /**\r\n     * drawMoveGeometry\r\n     * @description 绘制移动时的几何图形\r\n     * @param startPixel\r\n     * @param targetPixel\r\n     */\r\n    // @ts-ignore\r\n    CircleModifyAction.prototype.drawMoveGeometry = function (startPixel, targetPixel) {\r\n        // TODO: 修改6\r\n        if (!this.context || !this.data || !startPixel || !targetPixel)\r\n            return;\r\n        var srcData = __assign({}, this.data.data);\r\n        srcData.data = __assign(__assign({}, srcData.data), { center: __assign({}, srcData.data.center) });\r\n        var startPoint = this.context.pixelToPoint(startPixel);\r\n        var targetPoint = this.context.pixelToPoint(targetPixel);\r\n        var offsetX = targetPoint.x - startPoint.x;\r\n        var offsetY = targetPoint.y - startPoint.y;\r\n        if (srcData.data && srcData.data.center) {\r\n            srcData.data.center.x += offsetX;\r\n            srcData.data.center.y += offsetY;\r\n            if (srcData.style) {\r\n                srcData.style.globalAlpha = DefaultMoveGemStyle_1.default.globalAlpha;\r\n                srcData.style.strokeStyle = DefaultMoveGemStyle_1.default.strokeStyle;\r\n                srcData.style.lineWidth = DefaultMoveGemStyle_1.default.lineWidth;\r\n                srcData.style.lineDash = DefaultMoveGemStyle_1.default.lineDash;\r\n                srcData.style.lineDashOffset = DefaultMoveGemStyle_1.default.lineDashOffset;\r\n            }\r\n            CircleDrawAction_1.default.draw(this.context, this.context.getAssistCtx(), srcData);\r\n        }\r\n    };\r\n    return CircleModifyAction;\r\n}(ModifyAction_1.default));\r\nexports.default = CircleModifyAction;\r\n"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__importDefault","mod","__esModule","default","defineProperty","exports","value","adhere_util_1","require","types_1","ModifyAction_1","CircleDrawAction_1","DefaultMoveGemStyle_1","CircleModifyAction","_super","data","_this","ResizeCursorMapping","Map","drawAnchors","context","ctx","getCtx","_c","transformOriginToReal","_b","_a","center","radius","circleAnchorPoints","x","y","point","beginPath","setAnchorCircleStyle","ellipse","anchorRadius","Math","PI","stroke","fill","getPointInAnchor","targetPoint","index","center_1","radius_1","anchorLineWidth","isPointInCircle","setResizeCursorByIndex","canvasEl","assistCanvasEl","getCanvasEl","getAssistCanvasEl","style","cursor","get","drawModify","targetPixel","startPoint","getHistoryDataById","id","centerPixel","pointToPixel","distanceToActual","getDistanceByBetweenPoint","p1","p2","clearDraw","drawHistoryData","drawMove","startPixel","pixelToPoint","offsetX","offsetY","getSelectType","SelectType","Circle","isCanMove","drawMoveGeometry","draw","getAssistCtx","srcData","globalAlpha","strokeStyle","lineWidth","lineDash","lineDashOffset"],"mappings":"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"}