import BaseUtil from"@baifendian/adhere-util/lib/base";import{GeoJSONType}from"../types";import PointGeometry from"../geom/PointGeometry";import MulitPointGeometry from"../geom/MulitPointGeometry";import LineStringGeometry from"../geom/LineStringGeometry";import MulitLineStringGeometry from"../geom/MulitLineStringGeometry";import PolygonGeometry from"../geom/PolygonGeometry";import MulitPolygonGeometry from"../geom/MulitPolygonGeometry";export default{parse:function(e,r){var t=[];return function t(o,e,n){var i=null;o.type===GeoJSONType.Point?((i=e(new PointGeometry({lng:o.coordinates[0],lat:o.coordinates[1]}))).setId(BaseUtil.uuid()),n.push(i)):o.type===GeoJSONType.MultiPoint?((i=e(new MulitPointGeometry(o.coordinates.map(function(e){return{lng:e[0],lat:e[1]}})))).setId(BaseUtil.uuid()),n.push(i)):o.type===GeoJSONType.LineString?((i=e(new LineStringGeometry({point1:{lng:o.coordinates[0][0],lat:o.coordinates[0][1]},point2:{lng:o.coordinates[1][0],lat:o.coordinates[1][1]}}))).setId(BaseUtil.uuid()),n.push(i)):o.type===GeoJSONType.MultiLineString?((i=e(new MulitLineStringGeometry(o.coordinates.map(function(e){return{point1:{lng:e[0][0],lat:e[0][1]},point2:{lng:e[1][0],lat:e[1][1]}}})))).setId(BaseUtil.uuid()),n.push(i)):o.type===GeoJSONType.Polygon?((i=e(new PolygonGeometry(o.coordinates.map(function(e){return{lng:e[0],lat:e[1]}})))).setId(BaseUtil.uuid()),n.push(i)):o.type===GeoJSONType.MultiPolygon?((i=e(new MulitPolygonGeometry(o.coordinates.map(function(e){return e.map(function(e){return{lng:e[0],lat:e[1]}})})))).setId(BaseUtil.uuid()),n.push(i)):o.type===GeoJSONType.GeometryCollection?o.geometries.forEach(function(e){t(e,r,n)}):o.type===GeoJSONType.Feature?t(o.geometry,function(e){return(e=r(e)).setId(o.id),e.setProperties(o.properties),e},n):o.type===GeoJSONType.FeatureCollection&&o.features.forEach(function(e){t(e,r,n)})}(e,r,t),t},stringify:function(e){function i(e){e=e.getCoordinates();return[e.lng,e.lat]}function r(e){return e.getCoordinates().map(function(e){return[e.lng,e.lat]})}function u(e){e=e.getCoordinates();return[[e.point1.lng,e.point1.lat],[e.point2.lng,e.point2.lat]]}function p(e){return e.getCoordinates().map(function(e){return[[e.point1.lng,e.point1.lat],[e.point2.lng,e.point2.lat]]})}function l(e){return e.getCoordinates().map(function(e){return[e.lng,e.lat]})}function a(e){return e.getCoordinates().map(function(e){return e.map(function(e){return[e.lng,e.lat]})})}var t,y={type:GeoJSONType.FeatureCollection,features:[]},g=[];for(t in GeoJSONType)g.push(t);return e.forEach(function(e){var t,o,n=e.getGeometry().getType();g.includes(n)&&y.features.push({type:GeoJSONType.Feature,geometry:{type:n,coordinates:(t=e.getGeometry(),o=new Map([[GeoJSONType.Point,i],[GeoJSONType.MultiPoint,r],[GeoJSONType.LineString,u],[GeoJSONType.MultiLineString,p],[GeoJSONType.Polygon,l],[GeoJSONType.MultiPolygon,a]]),n=t.getType(),o.get(n)(t))},id:e.getId(),properties:e.getProperties()})}),y}};
//# sourceMappingURL=GeoJSONFormat.js.map
