"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}},adhere_util_1=(Object.defineProperty(exports,"__esModule",{value:!0}),__importDefault(require("@baifendian/adhere-util"))),LineStringGeometry_1=__importDefault(require("../geom/LineStringGeometry")),MultiLineStringGeometry_1=__importDefault(require("../geom/MultiLineStringGeometry")),MultiPointGeometry_1=__importDefault(require("../geom/MultiPointGeometry")),MultiPolygonGeometry_1=__importDefault(require("../geom/MultiPolygonGeometry")),PointGeometry_1=__importDefault(require("../geom/PointGeometry")),PolygonGeometry_1=__importDefault(require("../geom/PolygonGeometry")),types_1=require("../types");exports.default={parse:function(e,i){var t=[];return function t(o,e,n){var r=null;o.type===types_1.GeoJSONType.Point?((r=e(new PointGeometry_1.default({lng:o.coordinates[0],lat:o.coordinates[1]}))).setId(adhere_util_1.default.uuid()),n.push(r)):o.type===types_1.GeoJSONType.MultiPoint?((r=e(new MultiPointGeometry_1.default(o.coordinates.map(function(e){return{lng:e[0],lat:e[1]}})))).setId(adhere_util_1.default.uuid()),n.push(r)):o.type===types_1.GeoJSONType.LineString?((r=e(new LineStringGeometry_1.default({point1:{lng:o.coordinates[0][0],lat:o.coordinates[0][1]},point2:{lng:o.coordinates[1][0],lat:o.coordinates[1][1]}}))).setId(adhere_util_1.default.uuid()),n.push(r)):o.type===types_1.GeoJSONType.MultiLineString?((r=e(new MultiLineStringGeometry_1.default(o.coordinates.map(function(e){return{point1:{lng:e[0][0],lat:e[0][1]},point2:{lng:e[1][0],lat:e[1][1]}}})))).setId(adhere_util_1.default.uuid()),n.push(r)):o.type===types_1.GeoJSONType.Polygon?((r=e(new PolygonGeometry_1.default(o.coordinates.map(function(e){return{lng:e[0],lat:e[1]}})))).setId(adhere_util_1.default.uuid()),n.push(r)):o.type===types_1.GeoJSONType.MultiPolygon?((r=e(new MultiPolygonGeometry_1.default(o.coordinates.map(function(e){return e.map(function(e){return{lng:e[0],lat:e[1]}})})))).setId(adhere_util_1.default.uuid()),n.push(r)):o.type===types_1.GeoJSONType.GeometryCollection?o.geometries.forEach(function(e){t(e,i,n)}):o.type===types_1.GeoJSONType.Feature?t(o.geometry,function(e){return(e=i(e)).setId(o.id),e.setProperties(o.properties),e},n):o.type===types_1.GeoJSONType.FeatureCollection&&o.features.forEach(function(e){t(e,i,n)})}(e,i,t),t},stringify:function(e){function r(e){e=e.getCoordinates();return[e.lng,e.lat]}function i(e){return e.getCoordinates().map(function(e){return[e.lng,e.lat]})}function u(e){e=e.getCoordinates();return[[e.point1.lng,e.point1.lat],[e.point2.lng,e.point2.lat]]}function p(e){return e.getCoordinates().map(function(e){return[[e.point1.lng,e.point1.lat],[e.point2.lng,e.point2.lat]]})}function l(e){return e.getCoordinates().map(function(e){return[e.lng,e.lat]})}function a(e){return e.getCoordinates().map(function(e){return e.map(function(e){return[e.lng,e.lat]})})}var t,y={type:types_1.GeoJSONType.FeatureCollection,features:[]},s=[];for(t in types_1.GeoJSONType)s.push(t);return e.forEach(function(e){var t,o,n=e.getGeometry().getType();s.includes(n)&&y.features.push({type:types_1.GeoJSONType.Feature,geometry:{type:n,coordinates:(n=e.getGeometry(),t=new Map([[types_1.GeoJSONType.Point,r],[types_1.GeoJSONType.MultiPoint,i],[types_1.GeoJSONType.LineString,u],[types_1.GeoJSONType.MultiLineString,p],[types_1.GeoJSONType.Polygon,l],[types_1.GeoJSONType.MultiPolygon,a]]),o=n.getType(),t.get(o)(n))},id:e.getId(),properties:e.getProperties()})}),y}};
//# sourceMappingURL=GeoJSONFormat.js.map
