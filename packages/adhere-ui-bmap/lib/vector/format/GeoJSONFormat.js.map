{"version":3,"file":"GeoJSONFormat.js","sources":["vector/format/GeoJSONFormat.js"],"sourcesContent":["\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar adhere_util_1 = __importDefault(require(\"@baifendian/adhere-util\"));\r\nvar LineStringGeometry_1 = __importDefault(require(\"../geom/LineStringGeometry\"));\r\nvar MulitLineStringGeometry_1 = __importDefault(require(\"../geom/MulitLineStringGeometry\"));\r\nvar MulitPointGeometry_1 = __importDefault(require(\"../geom/MulitPointGeometry\"));\r\nvar MulitPolygonGeometry_1 = __importDefault(require(\"../geom/MulitPolygonGeometry\"));\r\nvar PointGeometry_1 = __importDefault(require(\"../geom/PointGeometry\"));\r\nvar PolygonGeometry_1 = __importDefault(require(\"../geom/PolygonGeometry\"));\r\nvar types_1 = require(\"../types\");\r\nexports.default = {\r\n    /**\r\n     * parse - GeoJSON转IFeature[]\r\n     * @param geoJSON\r\n     * @param onForeachGeom\r\n     */\r\n    parse: function (geoJSON, onForeachGeom) {\r\n        /**\r\n         * Recursion\r\n         * @param node\r\n         * @param handler\r\n         * @param features\r\n         * @constructor\r\n         */\r\n        function Recursion(node, handler, features) {\r\n            var feature = null;\r\n            /**\r\n             * Point\r\n             * MultiPoint\r\n             * LineString\r\n             * MultiLineString\r\n             * Polygon\r\n             * MultiPolygon\r\n             * GeometryCollection\r\n             * Feature\r\n             * FeatureCollection\r\n             */\r\n            if (node.type === types_1.GeoJSONType.Point) {\r\n                var geom = new PointGeometry_1.default({\r\n                    lng: node.coordinates[0],\r\n                    lat: node.coordinates[1],\r\n                });\r\n                feature = handler(geom);\r\n                feature.setId(adhere_util_1.default.uuid());\r\n                features.push(feature);\r\n            }\r\n            else if (node.type === types_1.GeoJSONType.MultiPoint) {\r\n                var geom = new MulitPointGeometry_1.default(node.coordinates.map(function (coordinate) { return ({\r\n                    lng: coordinate[0],\r\n                    lat: coordinate[1],\r\n                }); }));\r\n                feature = handler(geom);\r\n                feature.setId(adhere_util_1.default.uuid());\r\n                features.push(feature);\r\n            }\r\n            else if (node.type === types_1.GeoJSONType.LineString) {\r\n                var geom = new LineStringGeometry_1.default({\r\n                    point1: {\r\n                        lng: node.coordinates[0][0],\r\n                        lat: node.coordinates[0][1],\r\n                    },\r\n                    point2: {\r\n                        lng: node.coordinates[1][0],\r\n                        lat: node.coordinates[1][1],\r\n                    },\r\n                });\r\n                feature = handler(geom);\r\n                feature.setId(adhere_util_1.default.uuid());\r\n                features.push(feature);\r\n            }\r\n            else if (node.type === types_1.GeoJSONType.MultiLineString) {\r\n                var geom = new MulitLineStringGeometry_1.default(node.coordinates.map(function (coordinate) { return ({\r\n                    point1: {\r\n                        lng: coordinate[0][0],\r\n                        lat: coordinate[0][1],\r\n                    },\r\n                    point2: {\r\n                        lng: coordinate[1][0],\r\n                        lat: coordinate[1][1],\r\n                    },\r\n                }); }));\r\n                feature = handler(geom);\r\n                feature.setId(adhere_util_1.default.uuid());\r\n                features.push(feature);\r\n            }\r\n            else if (node.type === types_1.GeoJSONType.Polygon) {\r\n                var geom = new PolygonGeometry_1.default(node.coordinates.map(function (coordinate) { return ({\r\n                    lng: coordinate[0],\r\n                    lat: coordinate[1],\r\n                }); }));\r\n                feature = handler(geom);\r\n                feature.setId(adhere_util_1.default.uuid());\r\n                features.push(feature);\r\n            }\r\n            else if (node.type === types_1.GeoJSONType.MultiPolygon) {\r\n                var geom = new MulitPolygonGeometry_1.default(node.coordinates.map(function (coordinate) {\r\n                    return coordinate.map(function (p) { return ({\r\n                        lng: p[0],\r\n                        lat: p[1],\r\n                    }); });\r\n                }));\r\n                feature = handler(geom);\r\n                feature.setId(adhere_util_1.default.uuid());\r\n                features.push(feature);\r\n            }\r\n            else if (node.type === types_1.GeoJSONType.GeometryCollection) {\r\n                node.geometries.forEach(function (geom) {\r\n                    Recursion(geom, onForeachGeom, features);\r\n                });\r\n            }\r\n            else if (node.type === types_1.GeoJSONType.Feature) {\r\n                Recursion(node.geometry, function (g) {\r\n                    var f = onForeachGeom(g);\r\n                    f.setId(node.id);\r\n                    f.setProperties(node.properties);\r\n                    return f;\r\n                }, features);\r\n            }\r\n            else if (node.type === types_1.GeoJSONType.FeatureCollection) {\r\n                node.features.forEach(function (feature) {\r\n                    Recursion(feature, onForeachGeom, features);\r\n                });\r\n            }\r\n        }\r\n        var features = [];\r\n        Recursion(geoJSON, onForeachGeom, features);\r\n        return features;\r\n    },\r\n    /**\r\n     * stringify - features转GeoJSON\r\n     * @param features\r\n     * @return GeoJSONNode\r\n     */\r\n    stringify: function (features) {\r\n        function getCoordinatesByType(geometry) {\r\n            var mapping = new Map([\r\n                [types_1.GeoJSONType.Point, getPointCoordinates],\r\n                [types_1.GeoJSONType.MultiPoint, getMulitPointCoordinates],\r\n                [types_1.GeoJSONType.LineString, getLineStringCoordinates],\r\n                [types_1.GeoJSONType.MultiLineString, getMulitLineStringCoordinates],\r\n                [types_1.GeoJSONType.Polygon, getPolygonCoordinates],\r\n                [types_1.GeoJSONType.MultiPolygon, getMulitPolygonCoordinates],\r\n            ]);\r\n            var type = geometry.getType();\r\n            // @ts-ignore\r\n            return mapping.get(type)(geometry);\r\n        }\r\n        function getPointCoordinates(geometry) {\r\n            var coordinates = geometry.getCoordinates();\r\n            return [coordinates.lng, coordinates.lat];\r\n        }\r\n        function getMulitPointCoordinates(geometry) {\r\n            var coordinates = geometry.getCoordinates();\r\n            return coordinates.map(function (coordinate) { return [coordinate.lng, coordinate.lat]; });\r\n        }\r\n        function getLineStringCoordinates(geometry) {\r\n            var coordinates = geometry.getCoordinates();\r\n            return [\r\n                [coordinates.point1.lng, coordinates.point1.lat],\r\n                [coordinates.point2.lng, coordinates.point2.lat],\r\n            ];\r\n        }\r\n        function getMulitLineStringCoordinates(geometry) {\r\n            var coordinates = geometry.getCoordinates();\r\n            return coordinates.map(function (coordinate) { return [\r\n                [coordinate.point1.lng, coordinate.point1.lat],\r\n                [coordinate.point2.lng, coordinate.point2.lat],\r\n            ]; });\r\n        }\r\n        function getPolygonCoordinates(geometry) {\r\n            var coordinates = geometry.getCoordinates();\r\n            return coordinates.map(function (coordinate) { return [coordinate.lng, coordinate.lat]; });\r\n        }\r\n        function getMulitPolygonCoordinates(geometry) {\r\n            var coordinates = geometry.getCoordinates();\r\n            return coordinates.map(function (coordinate) { return coordinate.map(function (p) { return [p.lng, p.lat]; }); });\r\n        }\r\n        var geoJSON = {\r\n            type: types_1.GeoJSONType.FeatureCollection,\r\n            features: [],\r\n        };\r\n        var filterType = [];\r\n        for (var key in types_1.GeoJSONType) {\r\n            filterType.push(key);\r\n        }\r\n        features.forEach(function (feature) {\r\n            var type = feature.getGeometry().getType();\r\n            if (filterType.includes(type)) {\r\n                geoJSON.features.push({\r\n                    type: types_1.GeoJSONType.Feature,\r\n                    geometry: {\r\n                        // @ts-ignore\r\n                        type: type,\r\n                        coordinates: getCoordinatesByType(feature.getGeometry()),\r\n                    },\r\n                    id: feature.getId(),\r\n                    properties: feature.getProperties(),\r\n                });\r\n            }\r\n        });\r\n        return geoJSON;\r\n    },\r\n};\r\n"],"names":["__importDefault","this","mod","__esModule","default","adhere_util_1","Object","defineProperty","exports","value","require","LineStringGeometry_1","MulitLineStringGeometry_1","MulitPointGeometry_1","MulitPolygonGeometry_1","PointGeometry_1","PolygonGeometry_1","types_1","parse","geoJSON","onForeachGeom","features","Recursion","node","handler","feature","type","GeoJSONType","Point","lng","coordinates","lat","setId","uuid","push","MultiPoint","map","coordinate","LineString","point1","point2","MultiLineString","Polygon","MultiPolygon","p","GeometryCollection","geometries","forEach","geom","Feature","geometry","g","f","id","setProperties","properties","FeatureCollection","stringify","getPointCoordinates","getCoordinates","getMulitPointCoordinates","getLineStringCoordinates","getMulitLineStringCoordinates","getPolygonCoordinates","getMulitPolygonCoordinates","key","filterType","mapping","getGeometry","getType","includes","Map","get","getId","getProperties"],"mappings":"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"}