{"version":3,"file":"RadiusRectGeometry.js","sources":["vector/geom/RadiusRectGeometry.js"],"sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __importDefault(require(\"../../util\"));\nvar GeometryStyle_1 = __importDefault(require(\"../style/GeometryStyle\"));\nvar types_1 = require(\"../types\");\nvar RectGeometry_1 = __importDefault(require(\"./RectGeometry\"));\n/**\n * RadiusRectGeometry\n * @class RadiusRectGeometry\n * @classdesc 圆角矩形\n */\nvar RadiusRectGeometry = /** @class */ (function (_super) {\n    __extends(RadiusRectGeometry, _super);\n    function RadiusRectGeometry(coordinates) {\n        var _this = _super.call(this, coordinates) || this;\n        _this.coordinates = coordinates;\n        return _this;\n    }\n    RadiusRectGeometry.prototype.getType = function () {\n        return types_1.GeometryType.RadiusRect;\n    };\n    /**\n     * drawRadiusRect\n     * @param ctx\n     * @param style\n     * @param coordinates\n     * @param isScale\n     * @param map\n     */\n    RadiusRectGeometry.drawRadiusRect = function (_a) {\n        var ctx = _a.ctx, style = _a.style, coordinates = _a.coordinates, map = _a.map, isScale = _a.isScale;\n        var targetStyle = __assign(__assign({}, GeometryStyle_1.default), (style !== null && style !== void 0 ? style : {}));\n        ctx.save();\n        ctx.beginPath();\n        ctx.lineWidth = targetStyle.lineWidth;\n        ctx.lineJoin = targetStyle.lineJoin;\n        ctx.lineCap = targetStyle.lineCap;\n        ctx.setLineDash(targetStyle.lineDash);\n        ctx.lineDashOffset = targetStyle.lineDashOffset;\n        ctx.strokeStyle = targetStyle.strokeStyle;\n        ctx.fillStyle = targetStyle.fillStyle;\n        var leftTop = coordinates.leftTop, width = coordinates.width, height = coordinates.height, radius = coordinates.radius;\n        // @ts-ignore\n        var pixel = map.pointToPixel(new BMap.Point(leftTop.lng, leftTop.lat));\n        // 比例尺\n        var scale = util_1.default.getScale(map);\n        // 实际的宽度(图上距离)\n        var realWidth = width;\n        // 实际的高度(图上距离)\n        var realHeight = height;\n        // 实际的圆角半径\n        var realRadius = radius;\n        if (isScale) {\n            realWidth = scale * width;\n            realHeight = scale * height;\n            realRadius = scale * radius;\n        }\n        var prePoint;\n        // 圆角1\n        ctx.moveTo(pixel.x, pixel.y + realRadius);\n        ctx.arcTo(pixel.x, pixel.y, pixel.x + realRadius, pixel.y, realRadius);\n        // 直线1\n        ctx.lineTo(pixel.x + realWidth - realRadius, pixel.y);\n        prePoint = { x: pixel.x + realWidth - realRadius, y: pixel.y };\n        // 圆角2\n        ctx.arcTo(prePoint.x + realRadius, pixel.y, prePoint.x + realRadius, pixel.y + realRadius, realRadius);\n        prePoint = { x: prePoint.x + realRadius, y: pixel.y + realRadius };\n        // 直线2\n        ctx.lineTo(prePoint.x, prePoint.y + (realHeight - 2 * realRadius));\n        prePoint = { x: prePoint.x, y: prePoint.y + (realHeight - 2 * realRadius) };\n        // 圆角3\n        ctx.arcTo(prePoint.x, prePoint.y + realRadius, prePoint.x - realRadius, prePoint.y + realRadius, realRadius);\n        prePoint = { x: prePoint.x - realRadius, y: prePoint.y + realRadius };\n        // 直线3\n        ctx.lineTo(prePoint.x - (realWidth - 2 * realRadius), prePoint.y);\n        prePoint = { x: prePoint.x - (realWidth - 2 * realRadius), y: prePoint.y };\n        // 圆角4\n        ctx.arcTo(prePoint.x - realRadius, prePoint.y, prePoint.x - realRadius, prePoint.y - realRadius, realRadius);\n        prePoint = { x: prePoint.x - realRadius, y: prePoint.y - realRadius };\n        // 直线4\n        ctx.lineTo(prePoint.x, prePoint.y - (realHeight - realRadius * 2));\n        ctx.stroke();\n        ctx.fill();\n        ctx.restore();\n    };\n    RadiusRectGeometry.prototype.draw = function (ctx, style) {\n        RadiusRectGeometry.drawRadiusRect({\n            ctx: ctx,\n            style: style,\n            coordinates: this.coordinates,\n            map: this.getMap(),\n            isScale: true,\n        });\n    };\n    return RadiusRectGeometry;\n}(RectGeometry_1.default));\nexports.default = RadiusRectGeometry;\n"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__assign","assign","t","s","i","n","arguments","length","apply","__importDefault","mod","__esModule","default","util_1","defineProperty","exports","value","require","GeometryStyle_1","types_1","RectGeometry_1","RadiusRectGeometry","_super","coordinates","_this","getType","GeometryType","RadiusRect","drawRadiusRect","_a","ctx","style","map","isScale","targetStyle","leftTop","save","beginPath","lineWidth","lineJoin","lineCap","setLineDash","lineDash","lineDashOffset","strokeStyle","fillStyle","width","height","radius","pixel","pointToPixel","BMap","Point","lng","lat","scale","getScale","realWidth","realHeight","realRadius","moveTo","x","y","arcTo","lineTo","prePoint","stroke","fill","restore","draw","getMap"],"mappings":"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"}