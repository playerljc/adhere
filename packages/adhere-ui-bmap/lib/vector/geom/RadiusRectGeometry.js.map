{"version":3,"file":"RadiusRectGeometry.js","sources":["vector/geom/RadiusRectGeometry.js"],"sourcesContent":["\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar util_1 = __importDefault(require(\"../../util\"));\r\nvar GeometryStyle_1 = __importDefault(require(\"../style/GeometryStyle\"));\r\nvar types_1 = require(\"../types\");\r\nvar RectGeometry_1 = __importDefault(require(\"./RectGeometry\"));\r\n/**\r\n * RadiusRectGeometry\r\n * @class RadiusRectGeometry\r\n * @classdesc 圆角矩形\r\n */\r\nvar RadiusRectGeometry = /** @class */ (function (_super) {\r\n    __extends(RadiusRectGeometry, _super);\r\n    function RadiusRectGeometry(coordinates) {\r\n        var _this = _super.call(this, coordinates) || this;\r\n        _this.coordinates = coordinates;\r\n        return _this;\r\n    }\r\n    RadiusRectGeometry.prototype.getType = function () {\r\n        return types_1.GeometryType.RadiusRect;\r\n    };\r\n    /**\r\n     * drawRadiusRect\r\n     * @param ctx\r\n     * @param style\r\n     * @param coordinates\r\n     * @param isScale\r\n     * @param map\r\n     */\r\n    RadiusRectGeometry.drawRadiusRect = function (_a) {\r\n        var ctx = _a.ctx, style = _a.style, coordinates = _a.coordinates, map = _a.map, isScale = _a.isScale;\r\n        var targetStyle = __assign(__assign({}, GeometryStyle_1.default), (style || {}));\r\n        ctx.save();\r\n        ctx.beginPath();\r\n        ctx.lineWidth = targetStyle.lineWidth;\r\n        ctx.lineJoin = targetStyle.lineJoin;\r\n        ctx.lineCap = targetStyle.lineCap;\r\n        ctx.setLineDash(targetStyle.lineDash);\r\n        ctx.lineDashOffset = targetStyle.lineDashOffset;\r\n        ctx.strokeStyle = targetStyle.strokeStyle;\r\n        ctx.fillStyle = targetStyle.fillStyle;\r\n        var leftTop = coordinates.leftTop, width = coordinates.width, height = coordinates.height, radius = coordinates.radius;\r\n        // @ts-ignore\r\n        var pixel = map.pointToPixel(new BMap.Point(leftTop.lng, leftTop.lat));\r\n        // 比例尺\r\n        var scale = util_1.default.getScale(map);\r\n        // 实际的宽度(图上距离)\r\n        var realWidth = width;\r\n        // 实际的高度(图上距离)\r\n        var realHeight = height;\r\n        // 实际的圆角半径\r\n        var realRadius = radius;\r\n        if (isScale) {\r\n            realWidth = scale * width;\r\n            realHeight = scale * height;\r\n            realRadius = scale * radius;\r\n        }\r\n        var prePoint;\r\n        // 圆角1\r\n        ctx.moveTo(pixel.x, pixel.y + realRadius);\r\n        ctx.arcTo(pixel.x, pixel.y, pixel.x + realRadius, pixel.y, realRadius);\r\n        // 直线1\r\n        ctx.lineTo(pixel.x + realWidth - realRadius, pixel.y);\r\n        prePoint = { x: pixel.x + realWidth - realRadius, y: pixel.y };\r\n        // 圆角2\r\n        ctx.arcTo(prePoint.x + realRadius, pixel.y, prePoint.x + realRadius, pixel.y + realRadius, realRadius);\r\n        prePoint = { x: prePoint.x + realRadius, y: pixel.y + realRadius };\r\n        // 直线2\r\n        ctx.lineTo(prePoint.x, prePoint.y + (realHeight - 2 * realRadius));\r\n        prePoint = { x: prePoint.x, y: prePoint.y + (realHeight - 2 * realRadius) };\r\n        // 圆角3\r\n        ctx.arcTo(prePoint.x, prePoint.y + realRadius, prePoint.x - realRadius, prePoint.y + realRadius, realRadius);\r\n        prePoint = { x: prePoint.x - realRadius, y: prePoint.y + realRadius };\r\n        // 直线3\r\n        ctx.lineTo(prePoint.x - (realWidth - 2 * realRadius), prePoint.y);\r\n        prePoint = { x: prePoint.x - (realWidth - 2 * realRadius), y: prePoint.y };\r\n        // 圆角4\r\n        ctx.arcTo(prePoint.x - realRadius, prePoint.y, prePoint.x - realRadius, prePoint.y - realRadius, realRadius);\r\n        prePoint = { x: prePoint.x - realRadius, y: prePoint.y - realRadius };\r\n        // 直线4\r\n        ctx.lineTo(prePoint.x, prePoint.y - (realHeight - realRadius * 2));\r\n        ctx.stroke();\r\n        ctx.fill();\r\n        ctx.restore();\r\n    };\r\n    RadiusRectGeometry.prototype.draw = function (ctx, style) {\r\n        RadiusRectGeometry.drawRadiusRect({\r\n            ctx: ctx,\r\n            style: style,\r\n            coordinates: this.coordinates,\r\n            map: this.getMap(),\r\n            isScale: true,\r\n        });\r\n    };\r\n    return RadiusRectGeometry;\r\n}(RectGeometry_1.default));\r\nexports.default = RadiusRectGeometry;\r\n"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__importDefault","mod","__esModule","default","util_1","defineProperty","exports","value","require","GeometryStyle_1","types_1","RectGeometry_1","RadiusRectGeometry","_super","coordinates","_this","getType","GeometryType","RadiusRect","drawRadiusRect","_a","ctx","style","map","isScale","targetStyle","leftTop","save","beginPath","lineWidth","lineJoin","lineCap","setLineDash","lineDash","lineDashOffset","strokeStyle","fillStyle","width","height","radius","pixel","pointToPixel","BMap","Point","lng","lat","scale","getScale","realWidth","realHeight","realRadius","moveTo","x","y","arcTo","lineTo","prePoint","stroke","fill","restore","draw","getMap"],"mappings":"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"}