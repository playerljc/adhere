{"version":3,"file":"PointGeometry.js","sources":["vector/geom/PointGeometry.js"],"sourcesContent":["\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ImageCache_1 = __importDefault(require(\"../ImageCache\"));\r\nvar GeometryStyle_1 = __importDefault(require(\"../style/GeometryStyle\"));\r\nvar types_1 = require(\"../types\");\r\nvar CircleGeometry_1 = __importDefault(require(\"./CircleGeometry\"));\r\nvar Geometry_1 = __importDefault(require(\"./Geometry\"));\r\nvar LeafGeometry_1 = __importDefault(require(\"./LeafGeometry\"));\r\nvar RadiusRectGeometry_1 = __importDefault(require(\"./RadiusRectGeometry\"));\r\nvar RectGeometry_1 = __importDefault(require(\"./RectGeometry\"));\r\nvar RegularPolygonGeometry_1 = __importDefault(require(\"./RegularPolygonGeometry\"));\r\nvar SectorGeometry_1 = __importDefault(require(\"./SectorGeometry\"));\r\nvar StartGeometry_1 = __importDefault(require(\"./StartGeometry\"));\r\n/**\r\n * PointGeometry\r\n * @class PointGeometry\r\n * @classdesc PointGeometry - 点\r\n */\r\nvar PointGeometry = /** @class */ (function (_super) {\r\n    __extends(PointGeometry, _super);\r\n    function PointGeometry(coordinates) {\r\n        var _this = _super.call(this) || this;\r\n        _this.coordinates = coordinates;\r\n        return _this;\r\n    }\r\n    PointGeometry.prototype.setCoordinates = function (coordinates) {\r\n        var _a;\r\n        this.coordinates = coordinates;\r\n        (_a = this === null || this === void 0 ? void 0 : this.getLayer()) === null || _a === void 0 ? void 0 : _a.getEmitter().trigger(types_1.VectorActions.UPDATE);\r\n    };\r\n    PointGeometry.prototype.getCoordinates = function () {\r\n        return __assign({}, this.coordinates);\r\n    };\r\n    PointGeometry.prototype.getType = function () {\r\n        return types_1.GeometryType.Point;\r\n    };\r\n    PointGeometry.getCenterCoordinate = function (_a) {\r\n        var ctx = _a.ctx, coordinates = _a.coordinates, map = _a.map, style = _a.style, isScale = _a.isScale;\r\n        // @ts-ignore\r\n        return PointGeometry.centerCoordinateMapping.get(style.pointType)({\r\n            ctx: ctx,\r\n            coordinates: coordinates,\r\n            map: map,\r\n            style: style,\r\n            isScale: isScale,\r\n        });\r\n    };\r\n    // @ts-ignore\r\n    PointGeometry.prototype.getCenterCoordinate = function (_a) {\r\n        var ctx = _a.ctx, style = _a.style, isScale = _a.isScale;\r\n        return PointGeometry.getCenterCoordinate({\r\n            coordinates: this.coordinates,\r\n            ctx: ctx,\r\n            map: this.getMap(),\r\n            style: style,\r\n            isScale: false,\r\n        });\r\n    };\r\n    /**\r\n     * drawCirclePoint - 绘制圆的点\r\n     * @param ctx\r\n     * @param style\r\n     * @param coordinates\r\n     * @param map\r\n     */\r\n    PointGeometry.drawCirclePoint = function (_a) {\r\n        var ctx = _a.ctx, style = _a.style, coordinates = _a.coordinates, map = _a.map;\r\n        CircleGeometry_1.default.drawCircle({\r\n            ctx: ctx,\r\n            style: style,\r\n            // @ts-ignore\r\n            coordinates: { radius: style.radius, center: coordinates },\r\n            map: map,\r\n            isScale: false,\r\n        });\r\n    };\r\n    /**\r\n     * drawImagePoint - 绘制图片的点\r\n     * @param ctx\r\n     * @param style\r\n     * @param coordinates\r\n     * @param map\r\n     */\r\n    PointGeometry.drawImagePoint = function (_a) {\r\n        var _b, _c, _d;\r\n        var ctx = _a.ctx, style = _a.style, coordinates = _a.coordinates, map = _a.map;\r\n        // @ts-ignore\r\n        var pixel = map.pointToPixel(new BMap.Point(coordinates.lng, coordinates.lat));\r\n        var image = ImageCache_1.default.get({\r\n            src: ((_b = style === null || style === void 0 ? void 0 : style.img) === null || _b === void 0 ? void 0 : _b.src) || '',\r\n            width: ((_c = style === null || style === void 0 ? void 0 : style.img) === null || _c === void 0 ? void 0 : _c.width) || 0,\r\n            height: ((_d = style === null || style === void 0 ? void 0 : style.img) === null || _d === void 0 ? void 0 : _d.height) || 0,\r\n        });\r\n        if (!image) {\r\n            // @ts-ignore\r\n            var image_1 = new Image(style.img.width, style.img.height);\r\n            image_1.onload = function () {\r\n                var _a, _b, _c;\r\n                ImageCache_1.default.add({\r\n                    src: ((_a = style === null || style === void 0 ? void 0 : style.img) === null || _a === void 0 ? void 0 : _a.src) || '',\r\n                    width: ((_b = style === null || style === void 0 ? void 0 : style.img) === null || _b === void 0 ? void 0 : _b.width) || 0,\r\n                    height: ((_c = style === null || style === void 0 ? void 0 : style.img) === null || _c === void 0 ? void 0 : _c.height) || 0,\r\n                }, image_1);\r\n                // @ts-ignore\r\n                ctx.drawImage(image_1, pixel.x, pixel.y, style.img.width, style.img.height);\r\n            };\r\n            // @ts-ignore\r\n            image_1.src = style.img.src;\r\n        }\r\n        else {\r\n            // @ts-ignore\r\n            ctx.drawImage(image, pixel.x, pixel.y, style.img.width, style.img.height);\r\n        }\r\n    };\r\n    /**\r\n     * drawRegularPolygon\r\n     * @param ctx\r\n     * @param style\r\n     * @param coordinates\r\n     * @param map\r\n     */\r\n    PointGeometry.drawRegularPolygon = function (_a) {\r\n        var ctx = _a.ctx, style = _a.style, coordinates = _a.coordinates, map = _a.map;\r\n        RegularPolygonGeometry_1.default.drawRegularPolygon({\r\n            ctx: ctx,\r\n            style: style,\r\n            // @ts-ignore\r\n            coordinates: __assign(__assign({}, style.regularPolygon), { center: coordinates }),\r\n            map: map,\r\n            isScale: false,\r\n        });\r\n    };\r\n    /**\r\n     * drawStart\r\n     * @param ctx\r\n     * @param style\r\n     * @param coordinates\r\n     * @param map\r\n     */\r\n    PointGeometry.drawStart = function (_a) {\r\n        var ctx = _a.ctx, style = _a.style, coordinates = _a.coordinates, map = _a.map;\r\n        StartGeometry_1.default.drawStart({\r\n            ctx: ctx,\r\n            style: style,\r\n            // @ts-ignore\r\n            coordinates: __assign(__assign({}, style.start), { center: coordinates }),\r\n            map: map,\r\n            isScale: false,\r\n        });\r\n    };\r\n    /**\r\n     * drawSector\r\n     * @param ctx\r\n     * @param style\r\n     * @param coordinates\r\n     * @param map\r\n     */\r\n    PointGeometry.drawSector = function (_a) {\r\n        var ctx = _a.ctx, style = _a.style, coordinates = _a.coordinates, map = _a.map;\r\n        SectorGeometry_1.default.drawSector({\r\n            ctx: ctx,\r\n            style: style,\r\n            // @ts-ignore\r\n            coordinates: __assign(__assign({}, style.sector), { center: coordinates }),\r\n            map: map,\r\n            isScale: false,\r\n        });\r\n    };\r\n    /**\r\n     * drawRect\r\n     * @param ctx\r\n     * @param style\r\n     * @param coordinates\r\n     * @param map\r\n     */\r\n    PointGeometry.drawRect = function (_a) {\r\n        var ctx = _a.ctx, style = _a.style, coordinates = _a.coordinates, map = _a.map;\r\n        RectGeometry_1.default.drawRect({\r\n            ctx: ctx,\r\n            style: style,\r\n            // @ts-ignore\r\n            coordinates: __assign(__assign({}, style.rect), { leftTop: coordinates }),\r\n            map: map,\r\n            isScale: false,\r\n        });\r\n    };\r\n    PointGeometry.drawRadiusRect = function (_a) {\r\n        var ctx = _a.ctx, style = _a.style, coordinates = _a.coordinates, map = _a.map;\r\n        RadiusRectGeometry_1.default.drawRadiusRect({\r\n            ctx: ctx,\r\n            style: style,\r\n            // @ts-ignore\r\n            coordinates: __assign(__assign({}, style.radiusRect), { leftTop: coordinates }),\r\n            map: map,\r\n            isScale: false,\r\n        });\r\n    };\r\n    PointGeometry.drawLeaf = function (_a) {\r\n        var ctx = _a.ctx, style = _a.style, coordinates = _a.coordinates, map = _a.map;\r\n        LeafGeometry_1.default.drawLeaf({\r\n            ctx: ctx,\r\n            style: style,\r\n            // @ts-ignore\r\n            coordinates: __assign(__assign({}, style.leaf), { center: coordinates }),\r\n            map: map,\r\n            isScale: false,\r\n        });\r\n    };\r\n    /**\r\n     * drawPoint\r\n     * @param ctx\r\n     * @param style\r\n     * @param coordinates\r\n     * @param map\r\n     */\r\n    PointGeometry.drawPoint = function (_a) {\r\n        var _b;\r\n        var ctx = _a.ctx, style = _a.style, coordinates = _a.coordinates, map = _a.map;\r\n        var targetStyle = __assign(__assign(__assign({}, GeometryStyle_1.default), { radius: 5, pointType: 'circle' }), (style || {}));\r\n        // @ts-ignore\r\n        PointGeometry.drawMapping.get((_b = targetStyle) === null || _b === void 0 ? void 0 : _b.pointType)({\r\n            ctx: ctx,\r\n            style: targetStyle,\r\n            coordinates: coordinates,\r\n            map: map,\r\n        });\r\n    };\r\n    /**\r\n     * draw\r\n     * @param ctx\r\n     * @param style\r\n     */\r\n    PointGeometry.prototype.draw = function (ctx, style) {\r\n        PointGeometry.drawPoint({\r\n            ctx: ctx,\r\n            style: style,\r\n            coordinates: this.coordinates,\r\n            map: this.getMap(),\r\n        });\r\n    };\r\n    PointGeometry.isPixelInGeometry = function (_a) {\r\n        var _b, _c;\r\n        var coordinates = _a.coordinates, map = _a.map, pixel = _a.pixel, style = _a.style;\r\n        // @ts-ignore\r\n        return PointGeometry.isPixelInGeometryMapping.get((_b = style) === null || _b === void 0 ? void 0 : _b.pointType)({\r\n            // @ts-ignore\r\n            coordinates: PointGeometry.pointTypeToCoordinatesMapping.get((_c = style) === null || _c === void 0 ? void 0 : _c.pointType)(coordinates, style),\r\n            isScale: false,\r\n            map: map,\r\n            style: style,\r\n            pixel: pixel,\r\n        });\r\n    };\r\n    /**\r\n     * isPixelInGeometry\r\n     * @param pixel\r\n     * @param style\r\n     * @return boolean\r\n     */\r\n    PointGeometry.prototype.isPixelInGeometry = function (pixel, style) {\r\n        return PointGeometry.isPixelInGeometry({\r\n            coordinates: this.coordinates,\r\n            pixel: pixel,\r\n            map: this.getMap(),\r\n            style: style,\r\n        });\r\n    };\r\n    PointGeometry.drawMapping = new Map([\r\n        ['circle', PointGeometry.drawCirclePoint],\r\n        ['image', PointGeometry.drawImagePoint],\r\n        ['regularPolygon', PointGeometry.drawRegularPolygon],\r\n        ['start', PointGeometry.drawStart],\r\n        ['sector', PointGeometry.drawSector],\r\n        ['rect', PointGeometry.drawRect],\r\n        ['radiusRect', PointGeometry.drawRadiusRect],\r\n        ['leaf', PointGeometry.drawLeaf],\r\n    ]);\r\n    PointGeometry.isPixelInGeometryMapping = new Map([\r\n        ['circle', CircleGeometry_1.default.isPixelInGeometry],\r\n        ['image', RectGeometry_1.default.isPixelInGeometry],\r\n        ['regularPolygon', RegularPolygonGeometry_1.default.isPixelInGeometry],\r\n        ['start', StartGeometry_1.default.isPixelInGeometry],\r\n        ['sector', SectorGeometry_1.default.isPixelInGeometry],\r\n        ['rect', RectGeometry_1.default.isPixelInGeometry],\r\n        ['radiusRect', RadiusRectGeometry_1.default.isPixelInGeometry],\r\n        ['leaf', LeafGeometry_1.default.isPixelInGeometry],\r\n    ]);\r\n    PointGeometry.centerCoordinateMapping = new Map([\r\n        [\r\n            'circle',\r\n            function (_a) {\r\n                var ctx = _a.ctx, coordinates = _a.coordinates, map = _a.map, style = _a.style, isScale = _a.isScale;\r\n                return CircleGeometry_1.default.getCenterCoordinate({\r\n                    ctx: ctx,\r\n                    map: map,\r\n                    style: style,\r\n                    isScale: isScale,\r\n                    coordinates: {\r\n                        center: coordinates,\r\n                        // @ts-ignore\r\n                        radius: style.radius,\r\n                    },\r\n                });\r\n            },\r\n        ],\r\n        [\r\n            'image',\r\n            function (_a) {\r\n                var ctx = _a.ctx, coordinates = _a.coordinates, map = _a.map, style = _a.style, isScale = _a.isScale;\r\n                return RectGeometry_1.default.getCenterCoordinate({\r\n                    ctx: ctx,\r\n                    map: map,\r\n                    style: style,\r\n                    isScale: isScale,\r\n                    // @ts-ignore\r\n                    coordinates: __assign({ leftTop: coordinates }, style.img),\r\n                });\r\n            },\r\n        ],\r\n        [\r\n            'regularPolygon',\r\n            function (_a) {\r\n                var ctx = _a.ctx, coordinates = _a.coordinates, map = _a.map, style = _a.style, isScale = _a.isScale;\r\n                return RegularPolygonGeometry_1.default.getCenterCoordinate({\r\n                    ctx: ctx,\r\n                    map: map,\r\n                    style: style,\r\n                    isScale: isScale,\r\n                    // @ts-ignore\r\n                    coordinates: __assign({ center: coordinates }, style.regularPolygon),\r\n                });\r\n            },\r\n        ],\r\n        [\r\n            'start',\r\n            function (_a) {\r\n                var ctx = _a.ctx, coordinates = _a.coordinates, map = _a.map, style = _a.style, isScale = _a.isScale;\r\n                return StartGeometry_1.default.getCenterCoordinate({\r\n                    ctx: ctx,\r\n                    map: map,\r\n                    style: style,\r\n                    isScale: isScale,\r\n                    // @ts-ignore\r\n                    coordinates: __assign({ center: coordinates }, style.start),\r\n                });\r\n            },\r\n        ],\r\n        [\r\n            'sector',\r\n            function (_a) {\r\n                var ctx = _a.ctx, coordinates = _a.coordinates, map = _a.map, style = _a.style, isScale = _a.isScale;\r\n                return SectorGeometry_1.default.getCenterCoordinate({\r\n                    ctx: ctx,\r\n                    map: map,\r\n                    style: style,\r\n                    isScale: isScale,\r\n                    // @ts-ignore\r\n                    coordinates: __assign({ center: coordinates }, style.sector),\r\n                });\r\n            },\r\n        ],\r\n        [\r\n            'rect',\r\n            function (_a) {\r\n                var ctx = _a.ctx, coordinates = _a.coordinates, map = _a.map, style = _a.style, isScale = _a.isScale;\r\n                return RectGeometry_1.default.getCenterCoordinate({\r\n                    ctx: ctx,\r\n                    map: map,\r\n                    style: style,\r\n                    isScale: isScale,\r\n                    // @ts-ignore\r\n                    coordinates: __assign({ leftTop: coordinates }, style.rect),\r\n                });\r\n            },\r\n        ],\r\n        [\r\n            'radiusRect',\r\n            function (_a) {\r\n                var ctx = _a.ctx, coordinates = _a.coordinates, map = _a.map, style = _a.style, isScale = _a.isScale;\r\n                return RadiusRectGeometry_1.default.getCenterCoordinate({\r\n                    ctx: ctx,\r\n                    map: map,\r\n                    style: style,\r\n                    isScale: isScale,\r\n                    // @ts-ignore\r\n                    coordinates: __assign({ leftTop: coordinates }, style.radiusRect),\r\n                });\r\n            },\r\n        ],\r\n        [\r\n            'leaf',\r\n            function (_a) {\r\n                var ctx = _a.ctx, coordinates = _a.coordinates, map = _a.map, style = _a.style, isScale = _a.isScale;\r\n                return LeafGeometry_1.default.getCenterCoordinate({\r\n                    ctx: ctx,\r\n                    map: map,\r\n                    style: style,\r\n                    isScale: isScale,\r\n                    // @ts-ignore\r\n                    coordinates: __assign({ center: coordinates }, style.leaf),\r\n                });\r\n            },\r\n        ],\r\n    ]);\r\n    PointGeometry.pointTypeToCoordinatesMapping = new Map([\r\n        [\r\n            'circle',\r\n            function (coordinates, style) { return ({\r\n                center: coordinates,\r\n                radius: style.radius,\r\n            }); },\r\n        ],\r\n        [\r\n            'image',\r\n            function (coordinates, style) { return ({\r\n                leftTop: coordinates,\r\n                // @ts-ignore\r\n                width: style.img.width,\r\n                // @ts-ignore\r\n                height: style.img.height,\r\n            }); },\r\n        ],\r\n        [\r\n            'regularPolygon',\r\n            function (coordinates, style) { return (__assign({ center: coordinates }, style.regularPolygon)); },\r\n        ],\r\n        [\r\n            'start',\r\n            function (coordinates, style) { return (__assign({ center: coordinates }, style.start)); },\r\n        ],\r\n        [\r\n            'sector',\r\n            function (coordinates, style) { return (__assign({ center: coordinates }, style.sector)); },\r\n        ],\r\n        [\r\n            'rect',\r\n            function (coordinates, style) { return (__assign({ leftTop: coordinates }, style.rect)); },\r\n        ],\r\n        [\r\n            'radiusRect',\r\n            function (coordinates, style) { return (__assign({ leftTop: coordinates }, style.radiusRect)); },\r\n        ],\r\n        [\r\n            'leaf',\r\n            function (coordinates, style) { return (__assign({ center: coordinates }, style.leaf)); },\r\n        ],\r\n    ]);\r\n    return PointGeometry;\r\n}(Geometry_1.default));\r\nexports.default = PointGeometry;\r\n"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__importDefault","mod","__esModule","default","ImageCache_1","defineProperty","exports","value","require","GeometryStyle_1","types_1","CircleGeometry_1","Geometry_1","LeafGeometry_1","RadiusRectGeometry_1","RectGeometry_1","RegularPolygonGeometry_1","SectorGeometry_1","StartGeometry_1","PointGeometry","_super","coordinates","_this","setCoordinates","_a","getLayer","getEmitter","trigger","VectorActions","UPDATE","getCoordinates","getType","GeometryType","Point","getCenterCoordinate","ctx","map","style","isScale","centerCoordinateMapping","get","pointType","getMap","drawCirclePoint","drawCircle","radius","center","drawImagePoint","image_1","pixel","pointToPixel","BMap","lng","lat","image","src","_b","img","width","_c","height","_d","drawImage","x","y","Image","onload","add","drawRegularPolygon","regularPolygon","drawStart","start","drawSector","sector","drawRect","rect","leftTop","drawRadiusRect","radiusRect","drawLeaf","leaf","drawPoint","targetStyle","drawMapping","draw","isPixelInGeometry","isPixelInGeometryMapping","pointTypeToCoordinatesMapping","Map"],"mappings":"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"}