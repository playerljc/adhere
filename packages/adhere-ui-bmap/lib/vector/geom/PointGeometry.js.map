{"version":3,"file":"PointGeometry.js","sources":["vector/geom/PointGeometry.js"],"sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ImageCache_1 = __importDefault(require(\"../ImageCache\"));\nvar GeometryStyle_1 = __importDefault(require(\"../style/GeometryStyle\"));\nvar types_1 = require(\"../types\");\nvar CircleGeometry_1 = __importDefault(require(\"./CircleGeometry\"));\nvar Geometry_1 = __importDefault(require(\"./Geometry\"));\nvar LeafGeometry_1 = __importDefault(require(\"./LeafGeometry\"));\nvar RadiusRectGeometry_1 = __importDefault(require(\"./RadiusRectGeometry\"));\nvar RectGeometry_1 = __importDefault(require(\"./RectGeometry\"));\nvar RegularPolygonGeometry_1 = __importDefault(require(\"./RegularPolygonGeometry\"));\nvar SectorGeometry_1 = __importDefault(require(\"./SectorGeometry\"));\nvar StartGeometry_1 = __importDefault(require(\"./StartGeometry\"));\n/**\n * PointGeometry\n * @class PointGeometry\n * @classdesc PointGeometry - 点\n */\nvar PointGeometry = /** @class */ (function (_super) {\n    __extends(PointGeometry, _super);\n    function PointGeometry(coordinates) {\n        var _this = _super.call(this) || this;\n        _this.coordinates = coordinates;\n        return _this;\n    }\n    PointGeometry.prototype.setCoordinates = function (coordinates) {\n        var _a;\n        this.coordinates = coordinates;\n        (_a = this === null || this === void 0 ? void 0 : this.getLayer()) === null || _a === void 0 ? void 0 : _a.getEmitter().trigger(types_1.VectorActions.UPDATE);\n    };\n    PointGeometry.prototype.getCoordinates = function () {\n        return __assign({}, this.coordinates);\n    };\n    PointGeometry.prototype.getType = function () {\n        return types_1.GeometryType.Point;\n    };\n    PointGeometry.getCenterCoordinate = function (_a) {\n        var ctx = _a.ctx, coordinates = _a.coordinates, map = _a.map, style = _a.style, isScale = _a.isScale;\n        // @ts-ignore\n        return PointGeometry.centerCoordinateMapping.get(style.pointType)({\n            ctx: ctx,\n            coordinates: coordinates,\n            map: map,\n            style: style,\n            isScale: isScale,\n        });\n    };\n    // @ts-ignore\n    PointGeometry.prototype.getCenterCoordinate = function (_a) {\n        var ctx = _a.ctx, style = _a.style, isScale = _a.isScale;\n        return PointGeometry.getCenterCoordinate({\n            coordinates: this.coordinates,\n            ctx: ctx,\n            map: this.getMap(),\n            style: style,\n            isScale: false,\n        });\n    };\n    /**\n     * drawCirclePoint - 绘制圆的点\n     * @param ctx\n     * @param style\n     * @param coordinates\n     * @param map\n     */\n    PointGeometry.drawCirclePoint = function (_a) {\n        var ctx = _a.ctx, style = _a.style, coordinates = _a.coordinates, map = _a.map;\n        CircleGeometry_1.default.drawCircle({\n            ctx: ctx,\n            style: style,\n            // @ts-ignore\n            coordinates: { radius: style.radius, center: coordinates },\n            map: map,\n            isScale: false,\n        });\n    };\n    /**\n     * drawImagePoint - 绘制图片的点\n     * @param ctx\n     * @param style\n     * @param coordinates\n     * @param map\n     */\n    PointGeometry.drawImagePoint = function (_a) {\n        var _b, _c, _d;\n        var ctx = _a.ctx, style = _a.style, coordinates = _a.coordinates, map = _a.map;\n        // @ts-ignore\n        var pixel = map.pointToPixel(new BMap.Point(coordinates.lng, coordinates.lat));\n        var image = ImageCache_1.default.get({\n            src: ((_b = style === null || style === void 0 ? void 0 : style.img) === null || _b === void 0 ? void 0 : _b.src) || '',\n            width: ((_c = style === null || style === void 0 ? void 0 : style.img) === null || _c === void 0 ? void 0 : _c.width) || 0,\n            height: ((_d = style === null || style === void 0 ? void 0 : style.img) === null || _d === void 0 ? void 0 : _d.height) || 0,\n        });\n        if (!image) {\n            // @ts-ignore\n            var image_1 = new Image(style.img.width, style.img.height);\n            image_1.onload = function () {\n                var _a, _b, _c;\n                ImageCache_1.default.add({\n                    src: ((_a = style === null || style === void 0 ? void 0 : style.img) === null || _a === void 0 ? void 0 : _a.src) || '',\n                    width: ((_b = style === null || style === void 0 ? void 0 : style.img) === null || _b === void 0 ? void 0 : _b.width) || 0,\n                    height: ((_c = style === null || style === void 0 ? void 0 : style.img) === null || _c === void 0 ? void 0 : _c.height) || 0,\n                }, image_1);\n                // @ts-ignore\n                ctx.drawImage(image_1, pixel.x, pixel.y, style.img.width, style.img.height);\n            };\n            // @ts-ignore\n            image_1.src = style.img.src;\n        }\n        else {\n            // @ts-ignore\n            ctx.drawImage(image, pixel.x, pixel.y, style.img.width, style.img.height);\n        }\n    };\n    /**\n     * drawRegularPolygon\n     * @param ctx\n     * @param style\n     * @param coordinates\n     * @param map\n     */\n    PointGeometry.drawRegularPolygon = function (_a) {\n        var ctx = _a.ctx, style = _a.style, coordinates = _a.coordinates, map = _a.map;\n        RegularPolygonGeometry_1.default.drawRegularPolygon({\n            ctx: ctx,\n            style: style,\n            // @ts-ignore\n            coordinates: __assign(__assign({}, style.regularPolygon), { center: coordinates }),\n            map: map,\n            isScale: false,\n        });\n    };\n    /**\n     * drawStart\n     * @param ctx\n     * @param style\n     * @param coordinates\n     * @param map\n     */\n    PointGeometry.drawStart = function (_a) {\n        var ctx = _a.ctx, style = _a.style, coordinates = _a.coordinates, map = _a.map;\n        StartGeometry_1.default.drawStart({\n            ctx: ctx,\n            style: style,\n            // @ts-ignore\n            coordinates: __assign(__assign({}, style.start), { center: coordinates }),\n            map: map,\n            isScale: false,\n        });\n    };\n    /**\n     * drawSector\n     * @param ctx\n     * @param style\n     * @param coordinates\n     * @param map\n     */\n    PointGeometry.drawSector = function (_a) {\n        var ctx = _a.ctx, style = _a.style, coordinates = _a.coordinates, map = _a.map;\n        SectorGeometry_1.default.drawSector({\n            ctx: ctx,\n            style: style,\n            // @ts-ignore\n            coordinates: __assign(__assign({}, style.sector), { center: coordinates }),\n            map: map,\n            isScale: false,\n        });\n    };\n    /**\n     * drawRect\n     * @param ctx\n     * @param style\n     * @param coordinates\n     * @param map\n     */\n    PointGeometry.drawRect = function (_a) {\n        var ctx = _a.ctx, style = _a.style, coordinates = _a.coordinates, map = _a.map;\n        RectGeometry_1.default.drawRect({\n            ctx: ctx,\n            style: style,\n            // @ts-ignore\n            coordinates: __assign(__assign({}, style.rect), { leftTop: coordinates }),\n            map: map,\n            isScale: false,\n        });\n    };\n    PointGeometry.drawRadiusRect = function (_a) {\n        var ctx = _a.ctx, style = _a.style, coordinates = _a.coordinates, map = _a.map;\n        RadiusRectGeometry_1.default.drawRadiusRect({\n            ctx: ctx,\n            style: style,\n            // @ts-ignore\n            coordinates: __assign(__assign({}, style.radiusRect), { leftTop: coordinates }),\n            map: map,\n            isScale: false,\n        });\n    };\n    PointGeometry.drawLeaf = function (_a) {\n        var ctx = _a.ctx, style = _a.style, coordinates = _a.coordinates, map = _a.map;\n        LeafGeometry_1.default.drawLeaf({\n            ctx: ctx,\n            style: style,\n            // @ts-ignore\n            coordinates: __assign(__assign({}, style.leaf), { center: coordinates }),\n            map: map,\n            isScale: false,\n        });\n    };\n    /**\n     * drawPoint\n     * @param ctx\n     * @param style\n     * @param coordinates\n     * @param map\n     */\n    PointGeometry.drawPoint = function (_a) {\n        var ctx = _a.ctx, style = _a.style, coordinates = _a.coordinates, map = _a.map;\n        var targetStyle = __assign(__assign(__assign({}, GeometryStyle_1.default), { radius: 5, pointType: 'circle' }), (style !== null && style !== void 0 ? style : {}));\n        // @ts-ignore\n        PointGeometry.drawMapping.get(targetStyle === null || targetStyle === void 0 ? void 0 : targetStyle.pointType)({\n            ctx: ctx,\n            style: targetStyle,\n            coordinates: coordinates,\n            map: map,\n        });\n    };\n    /**\n     * draw\n     * @param ctx\n     * @param style\n     */\n    PointGeometry.prototype.draw = function (ctx, style) {\n        PointGeometry.drawPoint({\n            ctx: ctx,\n            style: style,\n            coordinates: this.coordinates,\n            map: this.getMap(),\n        });\n    };\n    PointGeometry.isPixelInGeometry = function (_a) {\n        var coordinates = _a.coordinates, map = _a.map, pixel = _a.pixel, style = _a.style;\n        // @ts-ignore\n        return PointGeometry.isPixelInGeometryMapping.get(style === null || style === void 0 ? void 0 : style.pointType)({\n            // @ts-ignore\n            coordinates: PointGeometry.pointTypeToCoordinatesMapping.get(style === null || style === void 0 ? void 0 : style.pointType)(coordinates, style),\n            isScale: false,\n            map: map,\n            style: style,\n            pixel: pixel,\n        });\n    };\n    /**\n     * isPixelInGeometry\n     * @param pixel\n     * @param style\n     * @return boolean\n     */\n    PointGeometry.prototype.isPixelInGeometry = function (pixel, style) {\n        return PointGeometry.isPixelInGeometry({\n            coordinates: this.coordinates,\n            pixel: pixel,\n            map: this.getMap(),\n            style: style,\n        });\n    };\n    PointGeometry.drawMapping = new Map([\n        ['circle', PointGeometry.drawCirclePoint],\n        ['image', PointGeometry.drawImagePoint],\n        ['regularPolygon', PointGeometry.drawRegularPolygon],\n        ['start', PointGeometry.drawStart],\n        ['sector', PointGeometry.drawSector],\n        ['rect', PointGeometry.drawRect],\n        ['radiusRect', PointGeometry.drawRadiusRect],\n        ['leaf', PointGeometry.drawLeaf],\n    ]);\n    PointGeometry.isPixelInGeometryMapping = new Map([\n        ['circle', CircleGeometry_1.default.isPixelInGeometry],\n        ['image', RectGeometry_1.default.isPixelInGeometry],\n        ['regularPolygon', RegularPolygonGeometry_1.default.isPixelInGeometry],\n        ['start', StartGeometry_1.default.isPixelInGeometry],\n        ['sector', SectorGeometry_1.default.isPixelInGeometry],\n        ['rect', RectGeometry_1.default.isPixelInGeometry],\n        ['radiusRect', RadiusRectGeometry_1.default.isPixelInGeometry],\n        ['leaf', LeafGeometry_1.default.isPixelInGeometry],\n    ]);\n    PointGeometry.centerCoordinateMapping = new Map([\n        [\n            'circle',\n            function (_a) {\n                var ctx = _a.ctx, coordinates = _a.coordinates, map = _a.map, style = _a.style, isScale = _a.isScale;\n                return CircleGeometry_1.default.getCenterCoordinate({\n                    ctx: ctx,\n                    map: map,\n                    style: style,\n                    isScale: isScale,\n                    coordinates: {\n                        center: coordinates,\n                        // @ts-ignore\n                        radius: style.radius,\n                    },\n                });\n            },\n        ],\n        [\n            'image',\n            function (_a) {\n                var ctx = _a.ctx, coordinates = _a.coordinates, map = _a.map, style = _a.style, isScale = _a.isScale;\n                return RectGeometry_1.default.getCenterCoordinate({\n                    ctx: ctx,\n                    map: map,\n                    style: style,\n                    isScale: isScale,\n                    // @ts-ignore\n                    coordinates: __assign({ leftTop: coordinates }, style.img),\n                });\n            },\n        ],\n        [\n            'regularPolygon',\n            function (_a) {\n                var ctx = _a.ctx, coordinates = _a.coordinates, map = _a.map, style = _a.style, isScale = _a.isScale;\n                return RegularPolygonGeometry_1.default.getCenterCoordinate({\n                    ctx: ctx,\n                    map: map,\n                    style: style,\n                    isScale: isScale,\n                    // @ts-ignore\n                    coordinates: __assign({ center: coordinates }, style.regularPolygon),\n                });\n            },\n        ],\n        [\n            'start',\n            function (_a) {\n                var ctx = _a.ctx, coordinates = _a.coordinates, map = _a.map, style = _a.style, isScale = _a.isScale;\n                return StartGeometry_1.default.getCenterCoordinate({\n                    ctx: ctx,\n                    map: map,\n                    style: style,\n                    isScale: isScale,\n                    // @ts-ignore\n                    coordinates: __assign({ center: coordinates }, style.start),\n                });\n            },\n        ],\n        [\n            'sector',\n            function (_a) {\n                var ctx = _a.ctx, coordinates = _a.coordinates, map = _a.map, style = _a.style, isScale = _a.isScale;\n                return SectorGeometry_1.default.getCenterCoordinate({\n                    ctx: ctx,\n                    map: map,\n                    style: style,\n                    isScale: isScale,\n                    // @ts-ignore\n                    coordinates: __assign({ center: coordinates }, style.sector),\n                });\n            },\n        ],\n        [\n            'rect',\n            function (_a) {\n                var ctx = _a.ctx, coordinates = _a.coordinates, map = _a.map, style = _a.style, isScale = _a.isScale;\n                return RectGeometry_1.default.getCenterCoordinate({\n                    ctx: ctx,\n                    map: map,\n                    style: style,\n                    isScale: isScale,\n                    // @ts-ignore\n                    coordinates: __assign({ leftTop: coordinates }, style.rect),\n                });\n            },\n        ],\n        [\n            'radiusRect',\n            function (_a) {\n                var ctx = _a.ctx, coordinates = _a.coordinates, map = _a.map, style = _a.style, isScale = _a.isScale;\n                return RadiusRectGeometry_1.default.getCenterCoordinate({\n                    ctx: ctx,\n                    map: map,\n                    style: style,\n                    isScale: isScale,\n                    // @ts-ignore\n                    coordinates: __assign({ leftTop: coordinates }, style.radiusRect),\n                });\n            },\n        ],\n        [\n            'leaf',\n            function (_a) {\n                var ctx = _a.ctx, coordinates = _a.coordinates, map = _a.map, style = _a.style, isScale = _a.isScale;\n                return LeafGeometry_1.default.getCenterCoordinate({\n                    ctx: ctx,\n                    map: map,\n                    style: style,\n                    isScale: isScale,\n                    // @ts-ignore\n                    coordinates: __assign({ center: coordinates }, style.leaf),\n                });\n            },\n        ],\n    ]);\n    PointGeometry.pointTypeToCoordinatesMapping = new Map([\n        [\n            'circle',\n            function (coordinates, style) { return ({\n                center: coordinates,\n                radius: style.radius,\n            }); },\n        ],\n        [\n            'image',\n            function (coordinates, style) { return ({\n                leftTop: coordinates,\n                // @ts-ignore\n                width: style.img.width,\n                // @ts-ignore\n                height: style.img.height,\n            }); },\n        ],\n        [\n            'regularPolygon',\n            function (coordinates, style) { return (__assign({ center: coordinates }, style.regularPolygon)); },\n        ],\n        [\n            'start',\n            function (coordinates, style) { return (__assign({ center: coordinates }, style.start)); },\n        ],\n        [\n            'sector',\n            function (coordinates, style) { return (__assign({ center: coordinates }, style.sector)); },\n        ],\n        [\n            'rect',\n            function (coordinates, style) { return (__assign({ leftTop: coordinates }, style.rect)); },\n        ],\n        [\n            'radiusRect',\n            function (coordinates, style) { return (__assign({ leftTop: coordinates }, style.radiusRect)); },\n        ],\n        [\n            'leaf',\n            function (coordinates, style) { return (__assign({ center: coordinates }, style.leaf)); },\n        ],\n    ]);\n    return PointGeometry;\n}(Geometry_1.default));\nexports.default = PointGeometry;\n"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__assign","assign","t","s","i","n","arguments","length","apply","__importDefault","mod","__esModule","default","ImageCache_1","defineProperty","exports","value","require","GeometryStyle_1","types_1","CircleGeometry_1","Geometry_1","LeafGeometry_1","RadiusRectGeometry_1","RectGeometry_1","RegularPolygonGeometry_1","SectorGeometry_1","StartGeometry_1","PointGeometry","_super","coordinates","_this","setCoordinates","_a","getLayer","getEmitter","trigger","VectorActions","UPDATE","getCoordinates","getType","GeometryType","Point","getCenterCoordinate","ctx","map","style","isScale","centerCoordinateMapping","get","pointType","getMap","drawCirclePoint","drawCircle","radius","center","drawImagePoint","image_1","pixel","pointToPixel","BMap","lng","lat","image","src","_b","img","width","_c","height","_d","drawImage","x","y","Image","onload","add","drawRegularPolygon","regularPolygon","drawStart","start","drawSector","sector","drawRect","rect","leftTop","drawRadiusRect","radiusRect","drawLeaf","leaf","drawPoint","targetStyle","drawMapping","draw","isPixelInGeometry","isPixelInGeometryMapping","pointTypeToCoordinatesMapping","Map"],"mappings":"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"}