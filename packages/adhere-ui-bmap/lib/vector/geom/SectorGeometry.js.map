{"version":3,"file":"SectorGeometry.js","sources":["vector/geom/SectorGeometry.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nimport Geometry from './Geometry';\r\nimport { VectorActions, GeometryType, } from '../types';\r\nimport GeometryStyle from '../style/GeometryStyle';\r\nimport Util from '../../util';\r\n/**\r\n * SectorGeometry\r\n * @class SectorGeometry\r\n * @classdesc SectorGeometry - 扇形\r\n */\r\nvar SectorGeometry = /** @class */ (function (_super) {\r\n    __extends(SectorGeometry, _super);\r\n    function SectorGeometry(coordinates) {\r\n        var _this = _super.call(this) || this;\r\n        _this.coordinates = coordinates;\r\n        return _this;\r\n    }\r\n    SectorGeometry.prototype.setCoordinates = function (coordinates) {\r\n        var _a;\r\n        this.coordinates = coordinates;\r\n        (_a = this === null || this === void 0 ? void 0 : this.getLayer()) === null || _a === void 0 ? void 0 : _a.getEmitter().trigger(VectorActions.UPDATE);\r\n    };\r\n    SectorGeometry.prototype.getCoordinates = function () {\r\n        return __assign({}, this.coordinates);\r\n    };\r\n    SectorGeometry.prototype.getType = function () {\r\n        return GeometryType.Sector;\r\n    };\r\n    SectorGeometry.getCenterCoordinate = function (_a) {\r\n        var ctx = _a.ctx, coordinates = _a.coordinates, map = _a.map, style = _a.style, isScale = _a.isScale;\r\n        var centerPixel = map.pointToPixel(\r\n        // @ts-ignore\r\n        new BMap.Point(coordinates.center.lng, coordinates.center.lat));\r\n        return __assign({}, centerPixel);\r\n    };\r\n    SectorGeometry.prototype.getCenterCoordinate = function (_a) {\r\n        var ctx = _a.ctx, style = _a.style, isScale = _a.isScale;\r\n        return SectorGeometry.getCenterCoordinate({\r\n            coordinates: this.coordinates,\r\n            ctx: ctx,\r\n            map: this.getMap(),\r\n            style: style,\r\n            isScale: isScale,\r\n        });\r\n    };\r\n    SectorGeometry.drawSector = function (_a) {\r\n        var ctx = _a.ctx, style = _a.style, coordinates = _a.coordinates, map = _a.map, isScale = _a.isScale;\r\n        ctx.save();\r\n        var targetStyle = __assign(__assign({}, GeometryStyle), (style || {}));\r\n        ctx.beginPath();\r\n        ctx.lineWidth = targetStyle.lineWidth;\r\n        ctx.lineJoin = targetStyle.lineJoin;\r\n        ctx.lineCap = targetStyle.lineCap;\r\n        ctx.setLineDash(targetStyle.lineDash);\r\n        ctx.lineDashOffset = targetStyle.lineDashOffset;\r\n        ctx.strokeStyle = targetStyle.strokeStyle;\r\n        ctx.fillStyle = targetStyle.fillStyle;\r\n        var center = coordinates.center, radius = coordinates.radius, angle1 = coordinates.angle1, angle2 = coordinates.angle2;\r\n        var curRadius = radius;\r\n        if (isScale) {\r\n            // 比例尺\r\n            var scale = Util.getScale(map);\r\n            curRadius = scale * radius;\r\n        }\r\n        // @ts-ignore\r\n        var pixel = map.pointToPixel(new BMap.Point(center.lng, center.lat));\r\n        ctx.moveTo(pixel.x, pixel.y);\r\n        ctx.arc(pixel.x, pixel.y, curRadius, (angle1 * Math.PI) / 180, (angle2 * Math.PI) / 180, false);\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n        ctx.fill();\r\n        ctx.restore();\r\n    };\r\n    /**\r\n     * draw - 绘制一个五角星\r\n     * @param ctx\r\n     * @param style\r\n     */\r\n    SectorGeometry.prototype.draw = function (ctx, style) {\r\n        SectorGeometry.drawSector({\r\n            ctx: ctx,\r\n            style: style,\r\n            coordinates: this.coordinates,\r\n            map: this.getMap(),\r\n            isScale: true,\r\n        });\r\n    };\r\n    SectorGeometry.isPixelInGeometry = function (_a) {\r\n        var coordinates = _a.coordinates, map = _a.map, style = _a.style, pixel = _a.pixel, isScale = _a.isScale;\r\n        var canvas = document.createElement('canvas');\r\n        var ctx = canvas.getContext('2d');\r\n        if (!ctx)\r\n            return false;\r\n        SectorGeometry.drawSector({\r\n            ctx: ctx,\r\n            coordinates: coordinates,\r\n            // @ts-ignore\r\n            style: style,\r\n            map: map,\r\n            isScale: isScale,\r\n        });\r\n        return ctx.isPointInPath(pixel.x, pixel.y);\r\n    };\r\n    /**\r\n     * isPixelInGeometry\r\n     * @param pixel\r\n     * @param style\r\n     * @return boolean\r\n     */\r\n    SectorGeometry.prototype.isPixelInGeometry = function (pixel, style) {\r\n        return SectorGeometry.isPixelInGeometry({\r\n            coordinates: this.coordinates,\r\n            map: this.getMap(),\r\n            style: style,\r\n            pixel: pixel,\r\n            isScale: true,\r\n        });\r\n    };\r\n    return SectorGeometry;\r\n}(Geometry));\r\nexport default SectorGeometry;\r\n"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","Geometry","VectorActions","GeometryType","GeometryStyle","Util","SectorGeometry","_super","coordinates","_this","setCoordinates","_a","getLayer","getEmitter","trigger","UPDATE","getCoordinates","getType","Sector","getCenterCoordinate","ctx","map","centerPixel","style","isScale","pointToPixel","BMap","Point","center","lng","lat","getMap","drawSector","save","targetStyle","beginPath","lineWidth","lineJoin","lineCap","setLineDash","lineDash","lineDashOffset","strokeStyle","fillStyle","radius","angle1","angle2","curRadius","getScale","pixel","moveTo","x","y","arc","Math","PI","closePath","stroke","fill","restore","draw","isPixelInGeometry","document","createElement","getContext","isPointInPath"],"mappings":"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"}