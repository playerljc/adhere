{"version":3,"file":"PolygonDrawAction.js","sources":["vector/interaction/draw/PolygonDrawAction.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport BaseUtil from '@baifendian/adhere-util';\nimport * as turf from '@turf/turf';\nimport { ActionEvents, ActionStatus, ActionType, SelectType, } from '../types';\nimport DrawAction from './DrawAction';\n/**\n * PolygonAction\n * @class PolygonAction\n * @classdesc  - 多边形选取\n * @remark: 一个start - end的周期中只能绘制一个多边形\n */\nvar PolygonDrawAction = /** @class */ (function (_super) {\n    __extends(PolygonDrawAction, _super);\n    /**\n     * constructor\n     */\n    function PolygonDrawAction() {\n        var _this = _super.call(this) || this;\n        // 开始点\n        _this.startPoint = null;\n        // 点的集合\n        _this.pointStack = [];\n        _this.isMove = false;\n        _this.onCanvasClick = _this.onCanvasClick.bind(_this);\n        _this.onCanvasMousemove = _this.onCanvasMousemove.bind(_this);\n        _this.onCanvasDbClick = _this.onCanvasDbClick.bind(_this);\n        return _this;\n    }\n    /**\n     * booleanPointInData\n     * @description 判断点是否在\n     * @param context\n     * @param point\n     * @param data\n     */\n    PolygonDrawAction.booleanPointInData = function (context, point, data) {\n        var points = __spreadArray([], data.data, true);\n        points.push(points[0]);\n        points = PolygonDrawAction.transformOriginToReal(context, points);\n        var pt = turf.point([point.x, point.y]);\n        var poly = turf.polygon([points.map(function (point) { return [point.x, point.y]; })]);\n        return turf.booleanPointInPolygon(pt, poly);\n    };\n    /**\n     * draw\n     * @description\n     * @param context\n     * @param ctx\n     * @param data\n     */\n    PolygonDrawAction.draw = function (context, ctx, data) {\n        if (!ctx || !data)\n            return;\n        if (data.style) {\n            // 设置上下文属性\n            ctx.lineWidth = data.style.lineWidth;\n            ctx.lineJoin = data.style.lineJoin;\n            ctx.lineCap = data.style.lineCap;\n            ctx.setLineDash(data.style.lineDash);\n            ctx.lineDashOffset = data.style.lineDashOffset;\n            ctx.strokeStyle = data.style.strokeStyle;\n            ctx.fillStyle = data.style.fillStyle;\n            ctx.globalAlpha = data.style.globalAlpha || 1;\n        }\n        this.drawHistoryPath(context, ctx, data.data);\n        // 描边\n        ctx.stroke();\n        // 填充\n        ctx.fill();\n    };\n    /**\n     * drawHistoryPath - 绘制历史数据\n     * @param context\n     * @param ctx\n     * @param data\n     */\n    PolygonDrawAction.drawHistoryPath = function (context, ctx, data) {\n        if (data === void 0) { data = []; }\n        ctx.save();\n        ctx.beginPath();\n        var realData = PolygonDrawAction.transformOriginToReal(context, data);\n        (realData || []).forEach(function (point, index) {\n            if (index === 0) {\n                ctx.moveTo(point.x, point.y);\n            }\n            else {\n                ctx.lineTo(point.x, point.y);\n            }\n        });\n        ctx.closePath();\n        // 描边\n        ctx.stroke();\n        // 填充\n        ctx.fill();\n        ctx.restore();\n    };\n    /**\n     * transformOriginToReal - 原始数据转换成实际数据\n     * @param context\n     * @param data\n     */\n    PolygonDrawAction.transformOriginToReal = function (context, data) {\n        return data.map(function (point) { return context.pointToPixel(point); });\n    };\n    /**\n     * transformRealToOrigin - 实际数据转换成原始数据\n     * @param context\n     * @param data\n     */\n    PolygonDrawAction.transformRealToOrigin = function (context, data) {\n        return data.map(function (point) { return context.pixelToPoint(point); });\n    };\n    /**\n     * fill\n     */\n    PolygonDrawAction.prototype.fill = function () {\n        if (!this.context)\n            return;\n        var pointStack = this.pointStack;\n        var ctx = this.context.getCtx();\n        if (!ctx)\n            return;\n        if (pointStack.length <= 1)\n            return;\n        ctx.save();\n        ctx.beginPath();\n        for (var i = 0; i < pointStack.length; i++) {\n            var point = pointStack[i];\n            if (i === 0) {\n                ctx.moveTo(point.x, point.y);\n            }\n            else {\n                ctx.lineTo(point.x, point.y);\n            }\n        }\n        ctx.closePath();\n        ctx.fillStyle = this.style.fillStyle;\n        ctx.fill();\n        ctx.restore();\n    };\n    /**\n     * drawLine\n     * @param sP\n     * @param eP\n     */\n    PolygonDrawAction.prototype.drawLine = function (sP, eP) {\n        var context = this.context;\n        if (!context)\n            return;\n        var style = this.style;\n        var ctx = context.getCtx();\n        if (!ctx)\n            return;\n        ctx.beginPath();\n        ctx.moveTo(sP.x, sP.y);\n        ctx.lineTo(eP.x, eP.y);\n        ctx.strokeStyle = style.strokeStyle;\n        ctx.fillStyle = style.fillStyle;\n        ctx.lineWidth = style.lineWidth;\n        ctx.lineCap = style.lineCap;\n        ctx.lineJoin = style.lineJoin;\n        ctx.lineDashOffset = style.lineDashOffset;\n        ctx.setLineDash(style.lineDash);\n        ctx.stroke();\n    };\n    /**\n     * drawStack\n     */\n    PolygonDrawAction.prototype.drawStack = function () {\n        var pointStack = this.pointStack;\n        if (pointStack.length <= 1)\n            return;\n        var index = 0;\n        do {\n            this.drawLine(pointStack[index], pointStack[index + 1]);\n            index++;\n        } while (index !== pointStack.length - 1);\n    };\n    PolygonDrawAction.prototype.getCanvasClick = function () {\n        return this.onCanvasClick;\n    };\n    PolygonDrawAction.prototype.getCanvasMousemove = function () {\n        return this.onCanvasMousemove;\n    };\n    PolygonDrawAction.prototype.getCanvasDbClick = function () {\n        return this.onCanvasDbClick;\n    };\n    /**\n     * onCanvasClick\n     * @param e\n     */\n    PolygonDrawAction.prototype.onCanvasClick = function (e) {\n        // console.log('多边形Click');\n        if (!this.context) {\n            return;\n        }\n        var canvasEl = this.context.getCanvasEl();\n        if (!canvasEl) {\n            return;\n        }\n        if (e.detail >= 2) {\n            return;\n        }\n        // 第一次\n        if (!this.startPoint) {\n            canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.addEventListener('mousemove', this.getCanvasMousemove());\n            canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.addEventListener('dblclick', this.getCanvasDbClick());\n            this.startPoint = BaseUtil.clientToCtxPoint({\n                event: e,\n                rect: canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.getBoundingClientRect(),\n            });\n            if (!this.startPoint)\n                return;\n            this.pointStack.push(this.startPoint);\n            // 触发开始事件\n            this.trigger(ActionEvents.Start, {\n                selectType: this.getSelectType(),\n                actionType: ActionType.Draw,\n            });\n        }\n        // 不是第一次\n        else {\n            // 画一条直线\n            // 当前点\n            var targetPoint = BaseUtil.clientToCtxPoint({\n                event: e,\n                rect: canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.getBoundingClientRect(),\n            });\n            this.drawLine(this.startPoint, targetPoint);\n            this.startPoint = targetPoint;\n            if (this.startPoint) {\n                this.pointStack.push(this.startPoint);\n            }\n        }\n        e.stopPropagation();\n    };\n    /**\n     * onCanvasMousemove\n     * @param e\n     */\n    PolygonDrawAction.prototype.onCanvasMousemove = function (e) {\n        var _a = this, context = _a.context, startPoint = _a.startPoint;\n        if (!context)\n            return;\n        if (!startPoint)\n            return;\n        var canvasEl = context.getCanvasEl();\n        if (!canvasEl)\n            return;\n        this.isMove = true;\n        // 如果有startPoint,擦除绘制直线\n        context.clearDraw();\n        // 绘制历史数据\n        context.drawHistoryData();\n        // 绘制stack数据\n        this.drawStack();\n        // drawLine\n        this.drawLine(startPoint, BaseUtil.clientToCtxPoint({\n            event: e,\n            rect: canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.getBoundingClientRect(),\n        }));\n        e.stopPropagation();\n    };\n    /**\n     * onCanvasDbClick - 结束绘制\n     */\n    PolygonDrawAction.prototype.onCanvasDbClick = function (e) {\n        if (!this.isMove)\n            return;\n        this.end();\n        e.stopPropagation();\n    };\n    /**\n     * getSelectType\n     * @return SelectType\n     */\n    PolygonDrawAction.prototype.getSelectType = function () {\n        return SelectType.Polygon;\n    };\n    /**\n     * start - 开始\n     * @param style\n     */\n    PolygonDrawAction.prototype.start = function (style) {\n        var _a = this, context = _a.context, status = _a.status;\n        if (!context || [ActionStatus.Running, ActionStatus.Destroy].includes(status))\n            return;\n        if (!context)\n            return;\n        var canvasEl = context.getCanvasEl();\n        if (!canvasEl)\n            return;\n        _super.prototype.start.call(this, style);\n        style && (this.style = style);\n        // 触发开始之前事件\n        this.trigger(ActionEvents.BeforeStart, {\n            selectType: this.getSelectType(),\n            actionType: ActionType.Draw,\n        });\n        // 注册事件\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.addEventListener('mouseup', this.getCanvasClick());\n        // 修改状态\n        this.status = ActionStatus.Running;\n    };\n    /**\n     * end - 结束\n     */\n    PolygonDrawAction.prototype.end = function () {\n        // 结束\n        var context = this.context;\n        if (!context) {\n            _super.prototype.end.call(this);\n            return;\n        }\n        var canvasEl = context.getCanvasEl();\n        if (!canvasEl) {\n            _super.prototype.end.call(this);\n            return;\n        }\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mouseup', this.getCanvasClick());\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mousemove', this.getCanvasMousemove());\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('dblclick', this.getCanvasDbClick());\n        context.clearDraw();\n        context.drawHistoryData();\n        this.fill();\n        this.status = ActionStatus.End;\n        var id = BaseUtil.uuid();\n        var data = {\n            id: id,\n            type: this.getSelectType(),\n            data: PolygonDrawAction.transformRealToOrigin(context, this.pointStack),\n            style: this.style,\n        };\n        this.startPoint = null;\n        this.pointStack = [];\n        this.isMove = false;\n        context.addHistoryData(data);\n        this.trigger(ActionEvents.End, {\n            selectType: this.getSelectType(),\n            actionType: ActionType.Draw,\n            data: data,\n        });\n        _super.prototype.end.call(this);\n        return id;\n    };\n    /**\n     * destroy\n     */\n    PolygonDrawAction.prototype.destroy = function () {\n        var context = this.context;\n        if (!context) {\n            _super.prototype.destroy.call(this);\n            return;\n        }\n        var canvasEl = context.getCanvasEl();\n        if (!canvasEl) {\n            _super.prototype.destroy.call(this);\n            return;\n        }\n        // 如果是运行状态则删除之前的绘制\n        if (this.status === ActionStatus.Running) {\n            context.clearDraw();\n            context.drawHistoryData();\n        }\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mouseup', this.onCanvasClick);\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mousemove', this.onCanvasMousemove);\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('dblclick', this.onCanvasDbClick);\n        this.startPoint = null;\n        this.pointStack = [];\n        this.isMove = false;\n        this.status = ActionStatus.Destroy;\n        this.trigger(ActionEvents.Destroy, {\n            selectType: this.getSelectType(),\n            actionType: ActionType.Draw,\n        });\n        _super.prototype.destroy.call(this);\n    };\n    return PolygonDrawAction;\n}(DrawAction));\nexport default PolygonDrawAction;\n"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__spreadArray","to","from","pack","arguments","length","ar","i","l","slice","concat","BaseUtil","turf","ActionEvents","ActionStatus","ActionType","SelectType","DrawAction","PolygonDrawAction","_super","_this","startPoint","pointStack","isMove","onCanvasClick","bind","onCanvasMousemove","onCanvasDbClick","booleanPointInData","context","point","data","points","push","transformOriginToReal","pt","x","y","poly","polygon","map","booleanPointInPolygon","draw","ctx","style","lineWidth","lineJoin","lineCap","setLineDash","lineDash","lineDashOffset","strokeStyle","fillStyle","globalAlpha","drawHistoryPath","stroke","fill","save","beginPath","forEach","index","moveTo","lineTo","closePath","restore","pointToPixel","transformRealToOrigin","pixelToPoint","getCtx","drawLine","sP","eP","drawStack","getCanvasClick","getCanvasMousemove","getCanvasDbClick","e","canvasEl","getCanvasEl","detail","targetPoint","clientToCtxPoint","event","rect","getBoundingClientRect","addEventListener","trigger","Start","selectType","getSelectType","actionType","Draw","stopPropagation","clearDraw","drawHistoryData","end","Polygon","start","status","Running","Destroy","includes","BeforeStart","removeEventListener","End","id","uuid","type","addHistoryData","destroy"],"mappings":"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"}