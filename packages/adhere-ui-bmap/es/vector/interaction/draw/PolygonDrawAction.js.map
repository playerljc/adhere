{"version":3,"file":"PolygonDrawAction.js","sources":["vector/interaction/draw/PolygonDrawAction.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\nimport * as turf from '@turf/turf';\r\n// @ts-ignore\r\nimport BaseUtil from '@baifendian/adhere-util';\r\nimport { ActionEvents, ActionStatus, SelectType, ActionType, } from '../types';\r\nimport DrawAction from './DrawAction';\r\n/**\r\n * PolygonAction\r\n * @class PolygonAction\r\n * @classdesc  - 多边形选取\r\n * @remark: 一个start - end的周期中只能绘制一个多边形\r\n */\r\nvar PolygonDrawAction = /** @class */ (function (_super) {\r\n    __extends(PolygonDrawAction, _super);\r\n    /**\r\n     * constructor\r\n     */\r\n    function PolygonDrawAction() {\r\n        var _this = _super.call(this) || this;\r\n        // 开始点\r\n        _this.startPoint = null;\r\n        // 点的集合\r\n        _this.pointStack = [];\r\n        _this.isMove = false;\r\n        _this.onCanvasClick = _this.onCanvasClick.bind(_this);\r\n        _this.onCanvasMousemove = _this.onCanvasMousemove.bind(_this);\r\n        _this.onCanvasDbClick = _this.onCanvasDbClick.bind(_this);\r\n        return _this;\r\n    }\r\n    /**\r\n     * booleanPointInData\r\n     * @description 判断点是否在\r\n     * @param context\r\n     * @param point\r\n     * @param data\r\n     */\r\n    PolygonDrawAction.booleanPointInData = function (context, point, data) {\r\n        var points = __spreadArrays(data.data);\r\n        points.push(points[0]);\r\n        points = PolygonDrawAction.transformOriginToReal(context, points);\r\n        var pt = turf.point([point.x, point.y]);\r\n        var poly = turf.polygon([points.map(function (point) { return [point.x, point.y]; })]);\r\n        return turf.booleanPointInPolygon(pt, poly);\r\n    };\r\n    /**\r\n     * draw\r\n     * @description\r\n     * @param context\r\n     * @param ctx\r\n     * @param data\r\n     */\r\n    PolygonDrawAction.draw = function (context, ctx, data) {\r\n        if (!ctx || !data)\r\n            return;\r\n        if (data.style) {\r\n            // 设置上下文属性\r\n            ctx.lineWidth = data.style.lineWidth;\r\n            ctx.lineJoin = data.style.lineJoin;\r\n            ctx.lineCap = data.style.lineCap;\r\n            ctx.setLineDash(data.style.lineDash);\r\n            ctx.lineDashOffset = data.style.lineDashOffset;\r\n            ctx.strokeStyle = data.style.strokeStyle;\r\n            ctx.fillStyle = data.style.fillStyle;\r\n            ctx.globalAlpha = data.style.globalAlpha || 1;\r\n        }\r\n        this.drawHistoryPath(context, ctx, data.data);\r\n        // 描边\r\n        ctx.stroke();\r\n        // 填充\r\n        ctx.fill();\r\n    };\r\n    /**\r\n     * drawHistoryPath - 绘制历史数据\r\n     * @param context\r\n     * @param ctx\r\n     * @param data\r\n     */\r\n    PolygonDrawAction.drawHistoryPath = function (context, ctx, data) {\r\n        if (data === void 0) { data = []; }\r\n        ctx.save();\r\n        ctx.beginPath();\r\n        var realData = PolygonDrawAction.transformOriginToReal(context, data);\r\n        (realData || []).forEach(function (point, index) {\r\n            if (index === 0) {\r\n                ctx.moveTo(point.x, point.y);\r\n            }\r\n            else {\r\n                ctx.lineTo(point.x, point.y);\r\n            }\r\n        });\r\n        ctx.closePath();\r\n        // 描边\r\n        ctx.stroke();\r\n        // 填充\r\n        ctx.fill();\r\n        ctx.restore();\r\n    };\r\n    /**\r\n     * transformOriginToReal - 原始数据转换成实际数据\r\n     * @param context\r\n     * @param data\r\n     */\r\n    PolygonDrawAction.transformOriginToReal = function (context, data) {\r\n        return data.map(function (point) { return context.pointToPixel(point); });\r\n    };\r\n    /**\r\n     * transformRealToOrigin - 实际数据转换成原始数据\r\n     * @param context\r\n     * @param data\r\n     */\r\n    PolygonDrawAction.transformRealToOrigin = function (context, data) {\r\n        return data.map(function (point) { return context.pixelToPoint(point); });\r\n    };\r\n    /**\r\n     * fill\r\n     */\r\n    PolygonDrawAction.prototype.fill = function () {\r\n        if (!this.context)\r\n            return;\r\n        var pointStack = this.pointStack;\r\n        var ctx = this.context.getCtx();\r\n        if (!ctx)\r\n            return;\r\n        if (pointStack.length <= 1)\r\n            return;\r\n        ctx.save();\r\n        ctx.beginPath();\r\n        for (var i = 0; i < pointStack.length; i++) {\r\n            var point = pointStack[i];\r\n            if (i === 0) {\r\n                ctx.moveTo(point.x, point.y);\r\n            }\r\n            else {\r\n                ctx.lineTo(point.x, point.y);\r\n            }\r\n        }\r\n        ctx.closePath();\r\n        ctx.fillStyle = this.style.fillStyle;\r\n        ctx.fill();\r\n        ctx.restore();\r\n    };\r\n    /**\r\n     * drawLine\r\n     * @param sP\r\n     * @param eP\r\n     */\r\n    PolygonDrawAction.prototype.drawLine = function (sP, eP) {\r\n        var context = this.context;\r\n        if (!context)\r\n            return;\r\n        var style = this.style;\r\n        var ctx = context.getCtx();\r\n        if (!ctx)\r\n            return;\r\n        ctx.beginPath();\r\n        ctx.moveTo(sP.x, sP.y);\r\n        ctx.lineTo(eP.x, eP.y);\r\n        ctx.strokeStyle = style.strokeStyle;\r\n        ctx.fillStyle = style.fillStyle;\r\n        ctx.lineWidth = style.lineWidth;\r\n        ctx.lineCap = style.lineCap;\r\n        ctx.lineJoin = style.lineJoin;\r\n        ctx.lineDashOffset = style.lineDashOffset;\r\n        ctx.setLineDash(style.lineDash);\r\n        ctx.stroke();\r\n    };\r\n    /**\r\n     * drawStack\r\n     */\r\n    PolygonDrawAction.prototype.drawStack = function () {\r\n        var pointStack = this.pointStack;\r\n        if (pointStack.length <= 1)\r\n            return;\r\n        var index = 0;\r\n        do {\r\n            this.drawLine(pointStack[index], pointStack[index + 1]);\r\n            index++;\r\n        } while (index !== pointStack.length - 1);\r\n    };\r\n    PolygonDrawAction.prototype.getCanvasClick = function () {\r\n        return this.onCanvasClick;\r\n    };\r\n    PolygonDrawAction.prototype.getCanvasMousemove = function () {\r\n        return this.onCanvasMousemove;\r\n    };\r\n    PolygonDrawAction.prototype.getCanvasDbClick = function () {\r\n        return this.onCanvasDbClick;\r\n    };\r\n    /**\r\n     * onCanvasClick\r\n     * @param e\r\n     */\r\n    PolygonDrawAction.prototype.onCanvasClick = function (e) {\r\n        console.log('多边形Click');\r\n        if (!this.context) {\r\n            return;\r\n        }\r\n        var canvasEl = this.context.getCanvasEl();\r\n        if (!canvasEl) {\r\n            return;\r\n        }\r\n        if (e.detail >= 2) {\r\n            return;\r\n        }\r\n        // 第一次\r\n        if (!this.startPoint) {\r\n            canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.addEventListener('mousemove', this.getCanvasMousemove());\r\n            canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.addEventListener('dblclick', this.getCanvasDbClick());\r\n            this.startPoint = BaseUtil.clientToCtxPoint({\r\n                event: e,\r\n                rect: canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.getBoundingClientRect(),\r\n            });\r\n            if (!this.startPoint)\r\n                return;\r\n            this.pointStack.push(this.startPoint);\r\n            // 触发开始事件\r\n            this.trigger(ActionEvents.Start, {\r\n                selectType: this.getSelectType(),\r\n                actionType: ActionType.Draw,\r\n            });\r\n        }\r\n        // 不是第一次\r\n        else {\r\n            // 画一条直线\r\n            // 当前点\r\n            var targetPoint = BaseUtil.clientToCtxPoint({\r\n                event: e,\r\n                rect: canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.getBoundingClientRect(),\r\n            });\r\n            this.drawLine(this.startPoint, targetPoint);\r\n            this.startPoint = targetPoint;\r\n            if (this.startPoint) {\r\n                this.pointStack.push(this.startPoint);\r\n            }\r\n        }\r\n        e.stopPropagation();\r\n    };\r\n    /**\r\n     * onCanvasMousemove\r\n     * @param e\r\n     */\r\n    PolygonDrawAction.prototype.onCanvasMousemove = function (e) {\r\n        var _a = this, context = _a.context, startPoint = _a.startPoint;\r\n        if (!context)\r\n            return;\r\n        if (!startPoint)\r\n            return;\r\n        var canvasEl = context.getCanvasEl();\r\n        if (!canvasEl)\r\n            return;\r\n        this.isMove = true;\r\n        // 如果有startPoint,擦除绘制直线\r\n        context.clearDraw();\r\n        // 绘制历史数据\r\n        context.drawHistoryData();\r\n        // 绘制stack数据\r\n        this.drawStack();\r\n        // drawLine\r\n        this.drawLine(startPoint, BaseUtil.clientToCtxPoint({\r\n            event: e,\r\n            rect: canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.getBoundingClientRect(),\r\n        }));\r\n        e.stopPropagation();\r\n    };\r\n    /**\r\n     * onCanvasDbClick - 结束绘制\r\n     */\r\n    PolygonDrawAction.prototype.onCanvasDbClick = function (e) {\r\n        if (!this.isMove)\r\n            return;\r\n        this.end();\r\n        e.stopPropagation();\r\n    };\r\n    /**\r\n     * getSelectType\r\n     * @return SelectType\r\n     */\r\n    PolygonDrawAction.prototype.getSelectType = function () {\r\n        return SelectType.Polygon;\r\n    };\r\n    /**\r\n     * start - 开始\r\n     * @param style\r\n     */\r\n    PolygonDrawAction.prototype.start = function (style) {\r\n        var _a = this, context = _a.context, status = _a.status;\r\n        if (!context || [ActionStatus.Running, ActionStatus.Destroy].includes(status))\r\n            return;\r\n        if (!context)\r\n            return;\r\n        var canvasEl = context.getCanvasEl();\r\n        if (!canvasEl)\r\n            return;\r\n        _super.prototype.start.call(this, style);\r\n        style && (this.style = style);\r\n        // 触发开始之前事件\r\n        this.trigger(ActionEvents.BeforeStart, {\r\n            selectType: this.getSelectType(),\r\n            actionType: ActionType.Draw,\r\n        });\r\n        // 注册事件\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.addEventListener('mouseup', this.getCanvasClick());\r\n        // 修改状态\r\n        this.status = ActionStatus.Running;\r\n    };\r\n    /**\r\n     * end - 结束\r\n     */\r\n    PolygonDrawAction.prototype.end = function () {\r\n        // 结束\r\n        var context = this.context;\r\n        if (!context) {\r\n            _super.prototype.end.call(this);\r\n            return;\r\n        }\r\n        var canvasEl = context.getCanvasEl();\r\n        if (!canvasEl) {\r\n            _super.prototype.end.call(this);\r\n            return;\r\n        }\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mouseup', this.getCanvasClick());\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mousemove', this.getCanvasMousemove());\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('dblclick', this.getCanvasDbClick());\r\n        context.clearDraw();\r\n        context.drawHistoryData();\r\n        this.fill();\r\n        this.status = ActionStatus.End;\r\n        var id = BaseUtil.uuid();\r\n        var data = {\r\n            id: id,\r\n            type: this.getSelectType(),\r\n            data: PolygonDrawAction.transformRealToOrigin(context, this.pointStack),\r\n            style: this.style,\r\n        };\r\n        this.startPoint = null;\r\n        this.pointStack = [];\r\n        this.isMove = false;\r\n        context.addHistoryData(data);\r\n        this.trigger(ActionEvents.End, {\r\n            selectType: this.getSelectType(),\r\n            actionType: ActionType.Draw,\r\n            data: data,\r\n        });\r\n        _super.prototype.end.call(this);\r\n        return id;\r\n    };\r\n    /**\r\n     * destroy\r\n     */\r\n    PolygonDrawAction.prototype.destroy = function () {\r\n        var context = this.context;\r\n        if (!context) {\r\n            _super.prototype.destroy.call(this);\r\n            return;\r\n        }\r\n        var canvasEl = context.getCanvasEl();\r\n        if (!canvasEl) {\r\n            _super.prototype.destroy.call(this);\r\n            return;\r\n        }\r\n        // 如果是运行状态则删除之前的绘制\r\n        if (this.status === ActionStatus.Running) {\r\n            context.clearDraw();\r\n            context.drawHistoryData();\r\n        }\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mouseup', this.onCanvasClick);\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mousemove', this.onCanvasMousemove);\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('dblclick', this.onCanvasDbClick);\r\n        this.startPoint = null;\r\n        this.pointStack = [];\r\n        this.isMove = false;\r\n        this.status = ActionStatus.Destroy;\r\n        this.trigger(ActionEvents.Destroy, {\r\n            selectType: this.getSelectType(),\r\n            actionType: ActionType.Draw,\r\n        });\r\n        _super.prototype.destroy.call(this);\r\n    };\r\n    return PolygonDrawAction;\r\n}(DrawAction));\r\nexport default PolygonDrawAction;\r\n"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__spreadArrays","s","i","il","arguments","length","r","k","a","j","jl","turf","BaseUtil","ActionEvents","ActionStatus","SelectType","ActionType","DrawAction","PolygonDrawAction","_super","_this","call","startPoint","pointStack","isMove","onCanvasClick","bind","onCanvasMousemove","onCanvasDbClick","booleanPointInData","context","point","data","points","push","transformOriginToReal","pt","x","y","poly","polygon","map","booleanPointInPolygon","draw","ctx","style","lineWidth","lineJoin","lineCap","setLineDash","lineDash","lineDashOffset","strokeStyle","fillStyle","globalAlpha","drawHistoryPath","stroke","fill","save","beginPath","forEach","index","moveTo","lineTo","closePath","restore","pointToPixel","transformRealToOrigin","pixelToPoint","getCtx","drawLine","sP","eP","drawStack","getCanvasClick","getCanvasMousemove","getCanvasDbClick","e","console","log","canvasEl","getCanvasEl","detail","targetPoint","clientToCtxPoint","event","rect","getBoundingClientRect","addEventListener","trigger","Start","selectType","getSelectType","actionType","Draw","stopPropagation","clearDraw","drawHistoryData","end","Polygon","start","status","Running","Destroy","includes","BeforeStart","removeEventListener","End","id","uuid","type","addHistoryData","destroy"],"mappings":"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"}