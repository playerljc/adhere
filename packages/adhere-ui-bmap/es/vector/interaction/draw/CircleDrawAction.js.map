{"version":3,"file":"CircleDrawAction.js","sources":["vector/interaction/draw/CircleDrawAction.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport Util from '@baifendian/adhere-util';\r\nimport { ActionEvents, ActionStatus, ActionType, SelectType, } from '../types';\r\nimport DrawAction from './DrawAction';\r\n/**\r\n * CircleDrawAction\r\n * @class\r\n * @classdesc - 圆形选取\r\n * @remark: - 一个start - end的周期中只能绘制一个圆形\r\n */\r\nvar CircleDrawAction = /** @class */ (function (_super) {\r\n    __extends(CircleDrawAction, _super);\r\n    /**\r\n     * context\r\n     */\r\n    function CircleDrawAction() {\r\n        var _this = _super.call(this) || this;\r\n        // 中心点\r\n        _this.centerPoint = null;\r\n        _this.isMove = false;\r\n        // 半径\r\n        _this.radius = 0;\r\n        _this.onCanvasMouseDown = _this.onCanvasMouseDown.bind(_this);\r\n        _this.onCanvasMouseMove = _this.onCanvasMouseMove.bind(_this);\r\n        _this.onCanvasMouseUp = _this.onCanvasMouseUp.bind(_this);\r\n        return _this;\r\n    }\r\n    /**\r\n     * booleanPointInData\r\n     * @description 判断点是否在\r\n     * @param context\r\n     * @param point\r\n     * @param data\r\n     */\r\n    CircleDrawAction.booleanPointInData = function (context, point, data) {\r\n        return Util.isPointInCircle(point, CircleDrawAction.transformOriginToReal(context, data.data));\r\n    };\r\n    /**\r\n     * draw - 移动的时候绘制\r\n     * @param e\r\n     */\r\n    CircleDrawAction.prototype.draw = function (e) {\r\n        var _a = this, context = _a.context, centerPoint = _a.centerPoint, style = _a.style;\r\n        var ctx = context === null || context === void 0 ? void 0 : context.getCtx();\r\n        if (!context || !ctx || !centerPoint)\r\n            return;\r\n        var canvasEl = context.getCanvasEl();\r\n        if (!canvasEl)\r\n            return;\r\n        var targetPoint = Util.clientToCtxPoint({\r\n            event: e,\r\n            rect: canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.getBoundingClientRect(),\r\n        });\r\n        if (!targetPoint)\r\n            return;\r\n        context.clearDraw();\r\n        context.drawHistoryData();\r\n        ctx.beginPath();\r\n        this.radius = Util.getDistanceByBetweenPoint({ p1: centerPoint, p2: targetPoint });\r\n        ctx.lineWidth = style.lineWidth;\r\n        ctx.lineJoin = style.lineJoin;\r\n        ctx.lineCap = style.lineCap;\r\n        ctx.setLineDash(style.lineDash);\r\n        ctx.lineDashOffset = style.lineDashOffset;\r\n        ctx.strokeStyle = style.strokeStyle;\r\n        ctx.fillStyle = style.fillStyle;\r\n        ctx.ellipse((centerPoint === null || centerPoint === void 0 ? void 0 : centerPoint.x) || 0, (centerPoint === null || centerPoint === void 0 ? void 0 : centerPoint.y) || 0, this.radius, this.radius, (45 * Math.PI) / 180, 0, 2 * Math.PI);\r\n        ctx.stroke();\r\n        ctx.fill();\r\n    };\r\n    /**\r\n     * draw\r\n     * @description 绘制\r\n     * @param context IInteractionLayer\r\n     * @param ctx\r\n     * @param data\r\n     */\r\n    CircleDrawAction.draw = function (context, ctx, data) {\r\n        if (!ctx || !data)\r\n            return;\r\n        if (data.style) {\r\n            // 设置上下文属性\r\n            ctx.lineWidth = data.style.lineWidth;\r\n            ctx.lineJoin = data.style.lineJoin;\r\n            ctx.lineCap = data.style.lineCap;\r\n            ctx.setLineDash(data.style.lineDash);\r\n            ctx.lineDashOffset = data.style.lineDashOffset;\r\n            ctx.strokeStyle = data.style.strokeStyle;\r\n            ctx.fillStyle = data.style.fillStyle;\r\n            ctx.globalAlpha = data.style.globalAlpha || 1;\r\n        }\r\n        CircleDrawAction.drawHistoryPath(context, ctx, data.data);\r\n        // 描边\r\n        ctx.stroke();\r\n        // 填充\r\n        ctx.fill();\r\n    };\r\n    /**\r\n     * drawHistoryPath - 绘制历史数据\r\n     * @param context\r\n     * @param ctx\r\n     * @param data\r\n     */\r\n    CircleDrawAction.drawHistoryPath = function (context, ctx, data) {\r\n        var centerPixel = context.pointToPixel(data.center);\r\n        var radius = context.actualToDistance(data.radius);\r\n        ctx.save();\r\n        ctx.beginPath();\r\n        // 需要转换\r\n        ctx.ellipse(centerPixel.x, centerPixel.y, radius, radius, (45 * Math.PI) / 180, 0, 2 * Math.PI);\r\n        // 描边\r\n        ctx.stroke();\r\n        // 填充\r\n        ctx.fill();\r\n        ctx.restore();\r\n    };\r\n    /**\r\n     * onCanvasMouseDown\r\n     * @param e\r\n     */\r\n    CircleDrawAction.prototype.onCanvasMouseDown = function (e) {\r\n        if (!this.context)\r\n            return;\r\n        var canvasEl = this.context.getCanvasEl();\r\n        if (!canvasEl)\r\n            return;\r\n        this.centerPoint = Util.clientToCtxPoint({\r\n            event: e,\r\n            rect: canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.getBoundingClientRect(),\r\n        });\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.addEventListener('mousemove', this.onCanvasMouseMove);\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.addEventListener('mouseup', this.onCanvasMouseUp);\r\n        e.stopPropagation();\r\n    };\r\n    /**\r\n     * onCanvasMouseMove\r\n     * @param e\r\n     */\r\n    CircleDrawAction.prototype.onCanvasMouseMove = function (e) {\r\n        var context = this.context;\r\n        if (!context)\r\n            return;\r\n        var ctx = context.getCtx();\r\n        if (!ctx)\r\n            return;\r\n        this.isMove = true;\r\n        this.draw(e);\r\n        e.stopPropagation();\r\n    };\r\n    /**\r\n     * onCanvasMouseUp\r\n     * @param e\r\n     */\r\n    CircleDrawAction.prototype.onCanvasMouseUp = function (e) {\r\n        if (!this.isMove)\r\n            return;\r\n        this.end(e);\r\n        e.stopPropagation();\r\n    };\r\n    /**\r\n     * transformRealToOrigin - 实际数据转换成原始数据\r\n     * @param context\r\n     * @param data\r\n     */\r\n    CircleDrawAction.transformRealToOrigin = function (context, data) {\r\n        return {\r\n            center: context.pixelToPoint(data.center),\r\n            radius: context.distanceToActual(data.radius),\r\n        };\r\n    };\r\n    /**\r\n     * transformOriginToReal - 原始数据转换成实际数据\r\n     * @param context\r\n     * @param data\r\n     */\r\n    CircleDrawAction.transformOriginToReal = function (context, data) {\r\n        return {\r\n            center: context.pointToPixel(data.center),\r\n            radius: context.actualToDistance(data.radius),\r\n        };\r\n    };\r\n    /**\r\n     * getSelectType\r\n     * @return SelectType\r\n     */\r\n    CircleDrawAction.prototype.getSelectType = function () {\r\n        return SelectType.Circle;\r\n    };\r\n    /**\r\n     * start\r\n     * @param style\r\n     */\r\n    CircleDrawAction.prototype.start = function (style) {\r\n        if (!this.context || [ActionStatus.Running, ActionStatus.Destroy].includes(this.status))\r\n            return;\r\n        var context = this.context;\r\n        var canvasEl = context.getCanvasEl();\r\n        if (!canvasEl)\r\n            return;\r\n        _super.prototype.start.call(this, style);\r\n        style && (this.style = style);\r\n        // 触发开始之前事件\r\n        this.trigger(ActionEvents.BeforeStart, {\r\n            selectType: this.getSelectType(),\r\n            actionType: ActionType.Draw,\r\n        });\r\n        // 注册事件\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.addEventListener('mousedown', this.onCanvasMouseDown);\r\n        // 修改状态\r\n        this.status = ActionStatus.Running;\r\n        // 触发开始事件\r\n        this.trigger(ActionEvents.Start, {\r\n            selectType: this.getSelectType(),\r\n            actionType: ActionType.Draw,\r\n        });\r\n    };\r\n    /**\r\n     * end\r\n     */\r\n    CircleDrawAction.prototype.end = function (e) {\r\n        var context = this.context;\r\n        if (!context) {\r\n            _super.prototype.end.call(this, e);\r\n            return;\r\n        }\r\n        var canvasEl = context.getCanvasEl();\r\n        if (!canvasEl) {\r\n            _super.prototype.end.call(this, e);\r\n            return;\r\n        }\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mousedown', this.onCanvasMouseDown);\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mousemove', this.onCanvasMouseMove);\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mouseup', this.onCanvasMouseUp);\r\n        e && this.draw(e);\r\n        this.status = ActionStatus.End;\r\n        var data = {\r\n            id: Util.uuid(),\r\n            type: this.getSelectType(),\r\n            data: CircleDrawAction.transformRealToOrigin(context, {\r\n                center: this.centerPoint,\r\n                radius: this.radius,\r\n            }),\r\n            style: this.style,\r\n        };\r\n        context.addHistoryData(data);\r\n        this.centerPoint = null;\r\n        this.radius = 0;\r\n        this.isMove = false;\r\n        this.trigger(ActionEvents.End, {\r\n            selectType: this.getSelectType(),\r\n            actionType: ActionType.Draw,\r\n            data: data,\r\n        });\r\n        _super.prototype.end.call(this, e);\r\n    };\r\n    /**\r\n     * destroy\r\n     */\r\n    CircleDrawAction.prototype.destroy = function () {\r\n        var context = this.context;\r\n        if (!context) {\r\n            _super.prototype.destroy.call(this);\r\n            return;\r\n        }\r\n        var canvasEl = context.getCanvasEl();\r\n        if (!canvasEl) {\r\n            _super.prototype.destroy.call(this);\r\n            return;\r\n        }\r\n        // 如果是运行状态则删除之前的绘制\r\n        if (this.status === ActionStatus.Running) {\r\n            context.clearDraw();\r\n            context.drawHistoryData();\r\n        }\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mousedown', this.onCanvasMouseDown);\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mousemove', this.onCanvasMouseMove);\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mouseup', this.onCanvasMouseUp);\r\n        this.centerPoint = null;\r\n        this.radius = 0;\r\n        this.isMove = false;\r\n        this.status = ActionStatus.Destroy;\r\n        this.trigger(ActionEvents.Destroy, {\r\n            selectType: this.getSelectType(),\r\n            actionType: ActionType.Draw,\r\n        });\r\n        _super.prototype.destroy.call(this);\r\n    };\r\n    return CircleDrawAction;\r\n}(DrawAction));\r\nexport default CircleDrawAction;\r\n"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","Util","ActionEvents","ActionStatus","ActionType","SelectType","DrawAction","CircleDrawAction","_super","_this","centerPoint","isMove","radius","onCanvasMouseDown","bind","onCanvasMouseMove","onCanvasMouseUp","booleanPointInData","context","point","data","isPointInCircle","transformOriginToReal","draw","e","canvasEl","_a","style","ctx","getCtx","getCanvasEl","targetPoint","clientToCtxPoint","event","rect","getBoundingClientRect","clearDraw","drawHistoryData","beginPath","getDistanceByBetweenPoint","p1","p2","lineWidth","lineJoin","lineCap","setLineDash","lineDash","lineDashOffset","strokeStyle","fillStyle","ellipse","x","y","Math","PI","stroke","fill","globalAlpha","drawHistoryPath","centerPixel","pointToPixel","center","actualToDistance","save","restore","addEventListener","stopPropagation","end","transformRealToOrigin","pixelToPoint","distanceToActual","getSelectType","Circle","start","Running","Destroy","includes","status","trigger","BeforeStart","selectType","actionType","Draw","Start","removeEventListener","End","id","uuid","type","addHistoryData","destroy"],"mappings":"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"}