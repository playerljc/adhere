{"version":3,"file":"CircleDrawAction.js","sources":["vector/interaction/draw/CircleDrawAction.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n// @ts-ignore\r\nimport Util from '@baifendian/adhere-util';\r\nimport DrawAction from './DrawAction';\r\nimport { ActionEvents, ActionStatus, SelectType, ActionType, } from '../types';\r\n/**\r\n * CircleDrawAction\r\n * @class\r\n * @classdesc - 圆形选取\r\n * @remark: - 一个start - end的周期中只能绘制一个圆形\r\n */\r\nvar CircleDrawAction = /** @class */ (function (_super) {\r\n    __extends(CircleDrawAction, _super);\r\n    /**\r\n     * context\r\n     */\r\n    function CircleDrawAction() {\r\n        var _this = _super.call(this) || this;\r\n        // 中心点\r\n        _this.centerPoint = null;\r\n        _this.isMove = false;\r\n        // 半径\r\n        _this.radius = 0;\r\n        _this.onCanvasMouseDown = _this.onCanvasMouseDown.bind(_this);\r\n        _this.onCanvasMouseMove = _this.onCanvasMouseMove.bind(_this);\r\n        _this.onCanvasMouseUp = _this.onCanvasMouseUp.bind(_this);\r\n        return _this;\r\n    }\r\n    /**\r\n     * booleanPointInData\r\n     * @description 判断点是否在\r\n     * @param context\r\n     * @param point\r\n     * @param data\r\n     */\r\n    CircleDrawAction.booleanPointInData = function (context, point, data) {\r\n        return Util.isPointInCircle(point, CircleDrawAction.transformOriginToReal(context, data.data));\r\n    };\r\n    /**\r\n     * draw - 移动的时候绘制\r\n     * @param e\r\n     */\r\n    CircleDrawAction.prototype.draw = function (e) {\r\n        var _a = this, context = _a.context, centerPoint = _a.centerPoint, style = _a.style;\r\n        var ctx = context === null || context === void 0 ? void 0 : context.getCtx();\r\n        if (!context || !ctx || !centerPoint)\r\n            return;\r\n        var canvasEl = context.getCanvasEl();\r\n        if (!canvasEl)\r\n            return;\r\n        var targetPoint = Util.clientToCtxPoint({\r\n            event: e,\r\n            rect: canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.getBoundingClientRect(),\r\n        });\r\n        if (!targetPoint)\r\n            return;\r\n        context.clearDraw();\r\n        context.drawHistoryData();\r\n        ctx.beginPath();\r\n        this.radius = Util.getDistanceByBetweenPoint({ p1: centerPoint, p2: targetPoint });\r\n        ctx.lineWidth = style.lineWidth;\r\n        ctx.lineJoin = style.lineJoin;\r\n        ctx.lineCap = style.lineCap;\r\n        ctx.setLineDash(style.lineDash);\r\n        ctx.lineDashOffset = style.lineDashOffset;\r\n        ctx.strokeStyle = style.strokeStyle;\r\n        ctx.fillStyle = style.fillStyle;\r\n        ctx.ellipse((centerPoint === null || centerPoint === void 0 ? void 0 : centerPoint.x) || 0, (centerPoint === null || centerPoint === void 0 ? void 0 : centerPoint.y) || 0, this.radius, this.radius, (45 * Math.PI) / 180, 0, 2 * Math.PI);\r\n        ctx.stroke();\r\n        ctx.fill();\r\n    };\r\n    /**\r\n     * draw\r\n     * @description 绘制\r\n     * @param context IInteractionLayer\r\n     * @param ctx\r\n     * @param data\r\n     */\r\n    CircleDrawAction.draw = function (context, ctx, data) {\r\n        if (!ctx || !data)\r\n            return;\r\n        if (data.style) {\r\n            // 设置上下文属性\r\n            ctx.lineWidth = data.style.lineWidth;\r\n            ctx.lineJoin = data.style.lineJoin;\r\n            ctx.lineCap = data.style.lineCap;\r\n            ctx.setLineDash(data.style.lineDash);\r\n            ctx.lineDashOffset = data.style.lineDashOffset;\r\n            ctx.strokeStyle = data.style.strokeStyle;\r\n            ctx.fillStyle = data.style.fillStyle;\r\n            ctx.globalAlpha = data.style.globalAlpha || 1;\r\n        }\r\n        CircleDrawAction.drawHistoryPath(context, ctx, data.data);\r\n        // 描边\r\n        ctx.stroke();\r\n        // 填充\r\n        ctx.fill();\r\n    };\r\n    /**\r\n     * drawHistoryPath - 绘制历史数据\r\n     * @param context\r\n     * @param ctx\r\n     * @param data\r\n     */\r\n    CircleDrawAction.drawHistoryPath = function (context, ctx, data) {\r\n        var centerPixel = context.pointToPixel(data.center);\r\n        var radius = context.actualToDistance(data.radius);\r\n        ctx.save();\r\n        ctx.beginPath();\r\n        // 需要转换\r\n        ctx.ellipse(centerPixel.x, centerPixel.y, radius, radius, (45 * Math.PI) / 180, 0, 2 * Math.PI);\r\n        // 描边\r\n        ctx.stroke();\r\n        // 填充\r\n        ctx.fill();\r\n        ctx.restore();\r\n    };\r\n    /**\r\n     * onCanvasMouseDown\r\n     * @param e\r\n     */\r\n    CircleDrawAction.prototype.onCanvasMouseDown = function (e) {\r\n        if (!this.context)\r\n            return;\r\n        var canvasEl = this.context.getCanvasEl();\r\n        if (!canvasEl)\r\n            return;\r\n        this.centerPoint = Util.clientToCtxPoint({\r\n            event: e,\r\n            rect: canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.getBoundingClientRect(),\r\n        });\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.addEventListener('mousemove', this.onCanvasMouseMove);\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.addEventListener('mouseup', this.onCanvasMouseUp);\r\n        e.stopPropagation();\r\n    };\r\n    /**\r\n     * onCanvasMouseMove\r\n     * @param e\r\n     */\r\n    CircleDrawAction.prototype.onCanvasMouseMove = function (e) {\r\n        var context = this.context;\r\n        if (!context)\r\n            return;\r\n        var ctx = context.getCtx();\r\n        if (!ctx)\r\n            return;\r\n        this.isMove = true;\r\n        this.draw(e);\r\n        e.stopPropagation();\r\n    };\r\n    /**\r\n     * onCanvasMouseUp\r\n     * @param e\r\n     */\r\n    CircleDrawAction.prototype.onCanvasMouseUp = function (e) {\r\n        if (!this.isMove)\r\n            return;\r\n        this.end(e);\r\n        e.stopPropagation();\r\n    };\r\n    /**\r\n     * transformRealToOrigin - 实际数据转换成原始数据\r\n     * @param context\r\n     * @param data\r\n     */\r\n    CircleDrawAction.transformRealToOrigin = function (context, data) {\r\n        return {\r\n            center: context.pixelToPoint(data.center),\r\n            radius: context.distanceToActual(data.radius),\r\n        };\r\n    };\r\n    /**\r\n     * transformOriginToReal - 原始数据转换成实际数据\r\n     * @param context\r\n     * @param data\r\n     */\r\n    CircleDrawAction.transformOriginToReal = function (context, data) {\r\n        return {\r\n            center: context.pointToPixel(data.center),\r\n            radius: context.actualToDistance(data.radius),\r\n        };\r\n    };\r\n    /**\r\n     * getSelectType\r\n     * @return SelectType\r\n     */\r\n    CircleDrawAction.prototype.getSelectType = function () {\r\n        return SelectType.Circle;\r\n    };\r\n    /**\r\n     * start\r\n     * @param style\r\n     */\r\n    CircleDrawAction.prototype.start = function (style) {\r\n        if (!this.context || [ActionStatus.Running, ActionStatus.Destroy].includes(this.status))\r\n            return;\r\n        var context = this.context;\r\n        var canvasEl = context.getCanvasEl();\r\n        if (!canvasEl)\r\n            return;\r\n        _super.prototype.start.call(this, style);\r\n        style && (this.style = style);\r\n        // 触发开始之前事件\r\n        this.trigger(ActionEvents.BeforeStart, {\r\n            selectType: this.getSelectType(),\r\n            actionType: ActionType.Draw,\r\n        });\r\n        // 注册事件\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.addEventListener('mousedown', this.onCanvasMouseDown);\r\n        // 修改状态\r\n        this.status = ActionStatus.Running;\r\n        // 触发开始事件\r\n        this.trigger(ActionEvents.Start, {\r\n            selectType: this.getSelectType(),\r\n            actionType: ActionType.Draw,\r\n        });\r\n    };\r\n    /**\r\n     * end\r\n     */\r\n    CircleDrawAction.prototype.end = function (e) {\r\n        var context = this.context;\r\n        if (!context) {\r\n            _super.prototype.end.call(this, e);\r\n            return;\r\n        }\r\n        var canvasEl = context.getCanvasEl();\r\n        if (!canvasEl) {\r\n            _super.prototype.end.call(this, e);\r\n            return;\r\n        }\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mousedown', this.onCanvasMouseDown);\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mousemove', this.onCanvasMouseMove);\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mouseup', this.onCanvasMouseUp);\r\n        e && this.draw(e);\r\n        this.status = ActionStatus.End;\r\n        var data = {\r\n            id: Util.uuid(),\r\n            type: this.getSelectType(),\r\n            data: CircleDrawAction.transformRealToOrigin(context, {\r\n                center: this.centerPoint,\r\n                radius: this.radius,\r\n            }),\r\n            style: this.style,\r\n        };\r\n        context.addHistoryData(data);\r\n        this.centerPoint = null;\r\n        this.radius = 0;\r\n        this.isMove = false;\r\n        this.trigger(ActionEvents.End, {\r\n            selectType: this.getSelectType(),\r\n            actionType: ActionType.Draw,\r\n            data: data,\r\n        });\r\n        _super.prototype.end.call(this, e);\r\n    };\r\n    /**\r\n     * destroy\r\n     */\r\n    CircleDrawAction.prototype.destroy = function () {\r\n        var context = this.context;\r\n        if (!context) {\r\n            _super.prototype.destroy.call(this);\r\n            return;\r\n        }\r\n        var canvasEl = context.getCanvasEl();\r\n        if (!canvasEl) {\r\n            _super.prototype.destroy.call(this);\r\n            return;\r\n        }\r\n        // 如果是运行状态则删除之前的绘制\r\n        if (this.status === ActionStatus.Running) {\r\n            context.clearDraw();\r\n            context.drawHistoryData();\r\n        }\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mousedown', this.onCanvasMouseDown);\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mousemove', this.onCanvasMouseMove);\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mouseup', this.onCanvasMouseUp);\r\n        this.centerPoint = null;\r\n        this.radius = 0;\r\n        this.isMove = false;\r\n        this.status = ActionStatus.Destroy;\r\n        this.trigger(ActionEvents.Destroy, {\r\n            selectType: this.getSelectType(),\r\n            actionType: ActionType.Draw,\r\n        });\r\n        _super.prototype.destroy.call(this);\r\n    };\r\n    return CircleDrawAction;\r\n}(DrawAction));\r\nexport default CircleDrawAction;\r\n"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Util","DrawAction","ActionEvents","ActionStatus","SelectType","ActionType","CircleDrawAction","_super","_this","call","centerPoint","isMove","radius","onCanvasMouseDown","bind","onCanvasMouseMove","onCanvasMouseUp","booleanPointInData","context","point","data","isPointInCircle","transformOriginToReal","draw","e","_a","style","ctx","getCtx","canvasEl","getCanvasEl","targetPoint","clientToCtxPoint","event","rect","getBoundingClientRect","clearDraw","drawHistoryData","beginPath","getDistanceByBetweenPoint","p1","p2","lineWidth","lineJoin","lineCap","setLineDash","lineDash","lineDashOffset","strokeStyle","fillStyle","ellipse","x","y","Math","PI","stroke","fill","globalAlpha","drawHistoryPath","centerPixel","pointToPixel","center","actualToDistance","save","restore","addEventListener","stopPropagation","end","transformRealToOrigin","pixelToPoint","distanceToActual","getSelectType","Circle","start","Running","Destroy","includes","status","trigger","BeforeStart","selectType","actionType","Draw","Start","removeEventListener","End","id","uuid","type","addHistoryData","destroy"],"mappings":"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"}