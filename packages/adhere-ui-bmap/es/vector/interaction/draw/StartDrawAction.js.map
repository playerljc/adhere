{"version":3,"file":"StartDrawAction.js","sources":["vector/interaction/draw/StartDrawAction.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport * as turf from '@turf/turf';\r\n// @ts-ignore\r\nimport MathUtil from '@baifendian/adhere-util/lib/math';\r\n// @ts-ignore\r\nimport BaseUtil from '@baifendian/adhere-util/lib/base';\r\nimport { ActionEvents, ActionStatus, ActionType, SelectType, } from '../types';\r\nimport DrawAction from './DrawAction';\r\n/**\r\n * StartDrawAction\r\n * @class\r\n * @classdesc - 五角星选取\r\n * @remark: - 一个start - end的周期中只能绘制一个五角星\r\n */\r\nvar StartDrawAction = /** @class */ (function (_super) {\r\n    __extends(StartDrawAction, _super);\r\n    /**\r\n     * context\r\n     */\r\n    function StartDrawAction() {\r\n        var _this = _super.call(this) || this;\r\n        // 中心点\r\n        _this.centerPoint = null;\r\n        // 外圆半径\r\n        _this.outRadius = 0;\r\n        // 内圆半径\r\n        _this.innerRadius = 0;\r\n        _this.isMove = false;\r\n        _this.onCanvasMouseDown = _this.onCanvasMouseDown.bind(_this);\r\n        _this.onCanvasMouseMove = _this.onCanvasMouseMove.bind(_this);\r\n        _this.onCanvasMouseUp = _this.onCanvasMouseUp.bind(_this);\r\n        return _this;\r\n    }\r\n    /**\r\n     * booleanPointInData\r\n     * @description 判断点是否在\r\n     * @param context\r\n     * @param point\r\n     * @param data\r\n     */\r\n    StartDrawAction.booleanPointInData = function (context, point, data) {\r\n        var _a = StartDrawAction.transformOriginToReal(context, data.data), \r\n        // 圆的中心点\r\n        center = _a.center, \r\n        // 外半径\r\n        outRadius = _a.outRadius, \r\n        // 内半径(外半径的一半)\r\n        innerRadius = _a.innerRadius;\r\n        var pt = turf.point([point.x, point.y]);\r\n        var startCount = 5;\r\n        var spend = 360 / startCount;\r\n        var min = 90 - spend;\r\n        var max = spend - min;\r\n        var points = [];\r\n        for (var i = 0; i < startCount; i++) {\r\n            points.push({\r\n                x: Math.cos(((min + i * spend) / 180) * Math.PI) * outRadius + center.x,\r\n                y: -Math.sin(((min + i * spend) / 180) * Math.PI) * outRadius + center.y,\r\n            });\r\n            points.push({\r\n                x: Math.cos(((max + i * spend) / 180) * Math.PI) * innerRadius + center.x,\r\n                y: -Math.sin(((max + i * spend) / 180) * Math.PI) * innerRadius + center.y,\r\n            });\r\n        }\r\n        var polygon = points.map(function (point) { return [point.x, point.y]; });\r\n        polygon.push(polygon[0]);\r\n        var poly = turf.polygon([polygon]);\r\n        return turf.booleanPointInPolygon(pt, poly);\r\n    };\r\n    /**\r\n     * drawStart\r\n     * @param context\r\n     * @param ctx\r\n     * @param data\r\n     */\r\n    StartDrawAction.drawStart = function (_a) {\r\n        var context = _a.context, ctx = _a.ctx, data = _a.data;\r\n        if (!data || !ctx)\r\n            return;\r\n        var style = data.style;\r\n        var _b = StartDrawAction.transformOriginToReal(context, data.data), center = _b.center, outRadius = _b.outRadius, innerRadius = _b.innerRadius;\r\n        ctx.save();\r\n        ctx.beginPath();\r\n        var startCount = 5;\r\n        var spend = 360 / startCount;\r\n        var min = 90 - spend;\r\n        var max = spend - min;\r\n        for (var i = 0; i < startCount; i++) {\r\n            if (style) {\r\n                ctx.lineWidth = style.lineWidth;\r\n                ctx.lineJoin = style.lineJoin;\r\n                ctx.lineCap = style.lineCap;\r\n                ctx.setLineDash(style.lineDash);\r\n                ctx.lineDashOffset = style.lineDashOffset;\r\n                ctx.strokeStyle = style.strokeStyle;\r\n                ctx.fillStyle = style.fillStyle;\r\n            }\r\n            ctx.lineTo(Math.cos(((min + i * spend) / 180) * Math.PI) * outRadius + center.x, -Math.sin(((min + i * spend) / 180) * Math.PI) * outRadius + center.y);\r\n            ctx.lineTo(Math.cos(((max + i * spend) / 180) * Math.PI) * innerRadius + center.x, -Math.sin(((max + i * spend) / 180) * Math.PI) * innerRadius + center.y);\r\n        }\r\n        ctx.stroke();\r\n        ctx.fill();\r\n        ctx.restore();\r\n    };\r\n    /**\r\n     * draw\r\n     * @param e\r\n     */\r\n    StartDrawAction.prototype.draw = function (e) {\r\n        var _a = this, context = _a.context, centerPoint = _a.centerPoint;\r\n        var ctx = context === null || context === void 0 ? void 0 : context.getCtx();\r\n        if (!context || !centerPoint || !ctx)\r\n            return;\r\n        var canvasEl = context.getCanvasEl();\r\n        if (!canvasEl || !this.centerPoint)\r\n            return;\r\n        var targetPoint = MathUtil.clientToCtxPoint({\r\n            event: e,\r\n            rect: canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.getBoundingClientRect(),\r\n        });\r\n        context.clearDraw();\r\n        context.drawHistoryData();\r\n        this.outRadius = MathUtil.getDistanceByBetweenPoint({ p1: centerPoint, p2: targetPoint });\r\n        this.innerRadius = this.outRadius / 2;\r\n        // 坐标， 实际距离\r\n        StartDrawAction.drawStart({\r\n            context: context,\r\n            ctx: ctx,\r\n            data: {\r\n                data: StartDrawAction.transformRealToOrigin(context, {\r\n                    // 像素\r\n                    center: this.centerPoint,\r\n                    // 图上距离\r\n                    outRadius: this.outRadius,\r\n                    // 图上距离\r\n                    innerRadius: this.innerRadius,\r\n                }),\r\n                style: this.style,\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * draw\r\n     * @description\r\n     * @param context\r\n     * @param ctx\r\n     * @param data\r\n     */\r\n    StartDrawAction.draw = function (context, ctx, data) {\r\n        if (!ctx || !data)\r\n            return;\r\n        if (data.style) {\r\n            // 设置上下文属性\r\n            ctx.lineWidth = data.style.lineWidth;\r\n            ctx.lineJoin = data.style.lineJoin;\r\n            ctx.lineCap = data.style.lineCap;\r\n            ctx.setLineDash(data.style.lineDash);\r\n            ctx.lineDashOffset = data.style.lineDashOffset;\r\n            ctx.strokeStyle = data.style.strokeStyle;\r\n            ctx.fillStyle = data.style.fillStyle;\r\n            ctx.globalAlpha = data.style.globalAlpha || 1;\r\n        }\r\n        this.drawHistoryPath(context, ctx, data.data);\r\n        // 描边\r\n        ctx.stroke();\r\n        // 填充\r\n        ctx.fill();\r\n    };\r\n    /**\r\n     * drawHistoryPath - 绘制历史数据\r\n     * @param context\r\n     * @param ctx\r\n     * @param data\r\n     */\r\n    StartDrawAction.drawHistoryPath = function (context, ctx, data) {\r\n        if (!data)\r\n            return;\r\n        StartDrawAction.drawStart({\r\n            context: context,\r\n            ctx: ctx,\r\n            data: {\r\n                data: data,\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * onCanvasMouseDown\r\n     * @param e\r\n     */\r\n    StartDrawAction.prototype.onCanvasMouseDown = function (e) {\r\n        if (!this.context)\r\n            return;\r\n        var canvasEl = this.context.getCanvasEl();\r\n        if (!canvasEl)\r\n            return;\r\n        this.centerPoint = MathUtil.clientToCtxPoint({\r\n            event: e,\r\n            rect: canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.getBoundingClientRect(),\r\n        });\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.addEventListener('mousemove', this.onCanvasMouseMove);\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.addEventListener('mouseup', this.onCanvasMouseUp);\r\n        e.stopPropagation();\r\n    };\r\n    /**\r\n     * onCanvasMouseMove\r\n     * @param e\r\n     */\r\n    StartDrawAction.prototype.onCanvasMouseMove = function (e) {\r\n        var context = this.context;\r\n        if (!context)\r\n            return;\r\n        this.isMove = true;\r\n        this.draw(e);\r\n        e.stopPropagation();\r\n    };\r\n    /**\r\n     * onCanvasMouseUp\r\n     * @param e\r\n     */\r\n    StartDrawAction.prototype.onCanvasMouseUp = function (e) {\r\n        if (!this.isMove)\r\n            return;\r\n        this.end(e);\r\n        e.stopPropagation();\r\n    };\r\n    /**\r\n     * transformOriginToReal - 原始数据转换成实际数据\r\n     * @param context\r\n     * @param data\r\n     */\r\n    StartDrawAction.transformOriginToReal = function (context, data) {\r\n        return {\r\n            // 圆的中心点\r\n            center: context.pointToPixel(data.center),\r\n            // 外半径\r\n            outRadius: context.actualToDistance(data.outRadius),\r\n            // 内半径(外半径的一半);\r\n            innerRadius: context.actualToDistance(data.innerRadius),\r\n        };\r\n    };\r\n    /**\r\n     * transformRealToOrigin - 实际数据转换成原始数据\r\n     * @param context\r\n     * @param data\r\n     */\r\n    StartDrawAction.transformRealToOrigin = function (context, data) {\r\n        return {\r\n            // 圆的中心点\r\n            center: context.pixelToPoint(data.center),\r\n            // 外半径\r\n            outRadius: context.distanceToActual(data.outRadius),\r\n            // 内半径(外半径的一半);\r\n            innerRadius: context.distanceToActual(data.innerRadius),\r\n        };\r\n    };\r\n    StartDrawAction.prototype.getSelectType = function () {\r\n        return SelectType.Start;\r\n    };\r\n    /**\r\n     * start\r\n     * @param style\r\n     */\r\n    StartDrawAction.prototype.start = function (style) {\r\n        if (!this.context || [ActionStatus.Running, ActionStatus.Destroy].includes(this.status))\r\n            return;\r\n        var context = this.context;\r\n        var canvasEl = context.getCanvasEl();\r\n        if (!canvasEl)\r\n            return;\r\n        _super.prototype.start.call(this, style);\r\n        style && (this.style = style);\r\n        // 触发开始之前事件\r\n        this.trigger(ActionEvents.BeforeStart, {\r\n            selectType: this.getSelectType(),\r\n            actionType: ActionType.Draw,\r\n        });\r\n        // 注册事件\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.addEventListener('mousedown', this.onCanvasMouseDown);\r\n        // 修改状态\r\n        this.status = ActionStatus.Running;\r\n        // 触发开始事件\r\n        this.trigger(ActionEvents.Start, {\r\n            selectType: this.getSelectType(),\r\n            actionType: ActionType.Draw,\r\n        });\r\n    };\r\n    /**\r\n     * end\r\n     */\r\n    StartDrawAction.prototype.end = function (e) {\r\n        var context = this.context;\r\n        if (!context) {\r\n            _super.prototype.end.call(this, e);\r\n            return;\r\n        }\r\n        var canvasEl = context.getCanvasEl();\r\n        if (!canvasEl || !this.centerPoint || !this.outRadius || !this.innerRadius) {\r\n            _super.prototype.end.call(this, e);\r\n            return;\r\n        }\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mousedown', this.onCanvasMouseDown);\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mousemove', this.onCanvasMouseMove);\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mouseup', this.onCanvasMouseUp);\r\n        e && this.draw(e);\r\n        this.status = ActionStatus.End;\r\n        var data = {\r\n            id: BaseUtil.uuid(),\r\n            type: this.getSelectType(),\r\n            data: StartDrawAction.transformRealToOrigin(context, {\r\n                center: this.centerPoint,\r\n                outRadius: this.outRadius,\r\n                innerRadius: this.innerRadius,\r\n            }),\r\n            style: this.style,\r\n        };\r\n        context.addHistoryData(data);\r\n        this.centerPoint = null;\r\n        this.outRadius = 0;\r\n        this.innerRadius = 0;\r\n        this.isMove = false;\r\n        this.trigger(ActionEvents.End, {\r\n            selectType: this.getSelectType(),\r\n            actionType: ActionType.Draw,\r\n            data: data,\r\n        });\r\n        _super.prototype.end.call(this, e);\r\n    };\r\n    /**\r\n     * destroy\r\n     */\r\n    StartDrawAction.prototype.destroy = function () {\r\n        var context = this.context;\r\n        if (!context) {\r\n            _super.prototype.destroy.call(this);\r\n            return;\r\n        }\r\n        var canvasEl = context.getCanvasEl();\r\n        if (!canvasEl) {\r\n            _super.prototype.destroy.call(this);\r\n            return;\r\n        }\r\n        // 如果是运行状态则删除之前的绘制\r\n        if (this.status === ActionStatus.Running) {\r\n            context.clearDraw();\r\n            context.drawHistoryData();\r\n        }\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mousedown', this.onCanvasMouseDown);\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mousemove', this.onCanvasMouseMove);\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mouseup', this.onCanvasMouseUp);\r\n        this.centerPoint = null;\r\n        this.outRadius = 0;\r\n        this.innerRadius = 0;\r\n        this.isMove = false;\r\n        this.status = ActionStatus.Destroy;\r\n        this.trigger(ActionEvents.Destroy, {\r\n            selectType: this.getSelectType(),\r\n            actionType: ActionType.Draw,\r\n        });\r\n        _super.prototype.destroy.call(this);\r\n    };\r\n    return StartDrawAction;\r\n}(DrawAction));\r\nexport default StartDrawAction;\r\n"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","turf","MathUtil","BaseUtil","ActionEvents","ActionStatus","ActionType","SelectType","DrawAction","StartDrawAction","_super","_this","call","centerPoint","outRadius","innerRadius","isMove","onCanvasMouseDown","bind","onCanvasMouseMove","onCanvasMouseUp","booleanPointInData","context","point","data","_a","transformOriginToReal","center","pt","x","y","spend","points","i","push","Math","cos","PI","sin","polygon","map","poly","booleanPointInPolygon","drawStart","ctx","style","_b","save","beginPath","lineWidth","lineJoin","lineCap","setLineDash","lineDash","lineDashOffset","strokeStyle","fillStyle","lineTo","stroke","fill","restore","draw","e","targetPoint","getCtx","canvasEl","getCanvasEl","clientToCtxPoint","event","rect","getBoundingClientRect","clearDraw","drawHistoryData","getDistanceByBetweenPoint","p1","p2","transformRealToOrigin","globalAlpha","drawHistoryPath","addEventListener","stopPropagation","end","pointToPixel","actualToDistance","pixelToPoint","distanceToActual","getSelectType","Start","start","Running","Destroy","includes","status","trigger","BeforeStart","selectType","actionType","Draw","removeEventListener","End","id","uuid","type","addHistoryData","destroy"],"mappings":"AAAA,IAAIA,UAAaC,MAAQA,KAAKD,WAAc,WACxC,IAAIE,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASO,IAAOV,KAAKW,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMO,EAAGE,UAAYT,EAAES,UAAW,IAAIF,IAV3C,SAahCI,iCAELC,uDAEAC,uDACEC,aAAcC,aAAcC,WAAYC,iCAC1CC,8BAOP,IAAIC,gBAAiC,SAAUC,GAK3C,SAASD,IACL,IAAIE,EAAQD,EAAOE,KAAKzB,OAASA,KAWjC,OATAwB,EAAME,YAAc,KAEpBF,EAAMG,UAAY,EAElBH,EAAMI,YAAc,EACpBJ,EAAMK,QAAS,EACfL,EAAMM,kBAAoBN,EAAMM,kBAAkBC,KAAKP,GACvDA,EAAMQ,kBAAoBR,EAAMQ,kBAAkBD,KAAKP,GACvDA,EAAMS,gBAAkBT,EAAMS,gBAAgBF,KAAKP,GAC5CA,EAyUX,OAzVAzB,UAAUuB,EAAiBC,GAyB3BD,EAAgBY,mBAAqB,SAAUC,EAASC,EAAOC,GAc3D,IAbA,IAAIC,EAAKhB,EAAgBiB,sBAAsBJ,EAASE,EAAKA,MAE7DG,EAASF,EAAGE,OAEZb,EAAYW,EAAGX,UAEfC,EAAcU,EAAGV,YACba,EAAK3B,KAAKsB,MAAM,CAACA,EAAMM,EAAGN,EAAMO,IAEhCC,EAAQ,GAGRC,EAAS,GACJC,EAAI,EAAGA,EALC,EAKeA,IAC5BD,EAAOE,KAAK,CACRL,EAAGM,KAAKC,KALN,GAKkBH,EAAIF,GAAS,IAAOI,KAAKE,IAAMvB,EAAYa,EAAOE,EACtEC,GAAIK,KAAKG,KANP,GAMmBL,EAAIF,GAAS,IAAOI,KAAKE,IAAMvB,EAAYa,EAAOG,IAE3EE,EAAOE,KAAK,CACRL,EAAGM,KAAKC,KARNL,GAQkBE,EAAIF,GAAS,IAAOI,KAAKE,IAAMtB,EAAcY,EAAOE,EACxEC,GAAIK,KAAKG,KATPP,GASmBE,EAAIF,GAAS,IAAOI,KAAKE,IAAMtB,EAAcY,EAAOG,IAG7ES,EAAUP,EAAOQ,IAAI,SAAUjB,GAAS,MAAO,CAACA,EAAMM,EAAGN,EAAMO,KACnES,EAAQL,KAAKK,EAAQ,IACjBE,EAAOxC,KAAKsC,QAAQ,CAACA,IACzB,OAAOtC,KAAKyC,sBAAsBd,EAAIa,IAQ1ChC,EAAgBkC,UAAY,SAAUlB,GAClC,IAAIH,EAAUG,EAAGH,QAASsB,EAAMnB,EAAGmB,IAAKpB,EAAOC,EAAGD,KAClD,GAAKA,GAASoB,EAAd,CAEA,IAAIC,EAAQrB,EAAKqB,MACbC,EAAKrC,EAAgBiB,sBAAsBJ,EAASE,EAAKA,MAAOG,EAASmB,EAAGnB,OAAQb,EAAYgC,EAAGhC,UAAWC,EAAc+B,EAAG/B,YACnI6B,EAAIG,OACJH,EAAII,YAKJ,IAJA,IACIjB,EAAQ,GAGHE,EAAI,EAAGA,EAJC,EAIeA,IACxBY,IACAD,EAAIK,UAAYJ,EAAMI,UACtBL,EAAIM,SAAWL,EAAMK,SACrBN,EAAIO,QAAUN,EAAMM,QACpBP,EAAIQ,YAAYP,EAAMQ,UACtBT,EAAIU,eAAiBT,EAAMS,eAC3BV,EAAIW,YAAcV,EAAMU,YACxBX,EAAIY,UAAYX,EAAMW,WAE1BZ,EAAIa,OAAOtB,KAAKC,KAZV,GAYsBH,EAAIF,GAAS,IAAOI,KAAKE,IAAMvB,EAAYa,EAAOE,GAAIM,KAAKG,KAZjF,GAY6FL,EAAIF,GAAS,IAAOI,KAAKE,IAAMvB,EAAYa,EAAOG,GACrJc,EAAIa,OAAOtB,KAAKC,KAZVL,GAYsBE,EAAIF,GAAS,IAAOI,KAAKE,IAAMtB,EAAcY,EAAOE,GAAIM,KAAKG,KAZnFP,GAY+FE,EAAIF,GAAS,IAAOI,KAAKE,IAAMtB,EAAcY,EAAOG,GAE7Jc,EAAIc,SACJd,EAAIe,OACJf,EAAIgB,YAMRnD,EAAgBV,UAAU8D,KAAO,SAAUC,GACvC,IAOIC,EAPWzC,EAANnC,KAAmBmC,QAAST,EAA5B1B,KAA6C0B,YAClD+B,EAAMtB,MAAAA,OAAyC,EAASA,EAAQ0C,SAC/D1C,GAAYT,GAAgB+B,KAE7BqB,EAAW3C,EAAQ4C,gBACL/E,KAAK0B,cAEnBkD,EAAc7D,SAASiE,iBAAiB,CACxCC,MAAON,EACPO,KAAMJ,MAAAA,OAA2C,EAASA,EAASK,0BAEvEhD,EAAQiD,YACRjD,EAAQkD,kBACRrF,KAAK2B,UAAYZ,SAASuE,0BAA0B,CAAEC,GAAI7D,EAAa8D,GAAIZ,IAC3E5E,KAAK4B,YAAc5B,KAAK2B,UAAY,EAEpCL,EAAgBkC,UAAU,CACtBrB,QAASA,EACTsB,IAAKA,EACLpB,KAAM,CACFA,KAAMf,EAAgBmE,sBAAsBtD,EAAS,CAEjDK,OAAQxC,KAAK0B,YAEbC,UAAW3B,KAAK2B,UAEhBC,YAAa5B,KAAK4B,cAEtB8B,MAAO1D,KAAK0D,YAWxBpC,EAAgBoD,KAAO,SAAUvC,EAASsB,EAAKpB,GACtCoB,GAAQpB,IAETA,EAAKqB,QAELD,EAAIK,UAAYzB,EAAKqB,MAAMI,UAC3BL,EAAIM,SAAW1B,EAAKqB,MAAMK,SAC1BN,EAAIO,QAAU3B,EAAKqB,MAAMM,QACzBP,EAAIQ,YAAY5B,EAAKqB,MAAMQ,UAC3BT,EAAIU,eAAiB9B,EAAKqB,MAAMS,eAChCV,EAAIW,YAAc/B,EAAKqB,MAAMU,YAC7BX,EAAIY,UAAYhC,EAAKqB,MAAMW,UAC3BZ,EAAIiC,YAAcrD,EAAKqB,MAAMgC,aAAe,GAEhD1F,KAAK2F,gBAAgBxD,EAASsB,EAAKpB,EAAKA,MAExCoB,EAAIc,SAEJd,EAAIe,SAQRlD,EAAgBqE,gBAAkB,SAAUxD,EAASsB,EAAKpB,GACjDA,GAELf,EAAgBkC,UAAU,CACtBrB,QAASA,EACTsB,IAAKA,EACLpB,KAAM,CACFA,KAAMA,MAQlBf,EAAgBV,UAAUkB,kBAAoB,SAAU6C,GACpD,IAEIG,GAFC9E,KAAKmC,UAEN2C,EAAW9E,KAAKmC,QAAQ4C,iBAG5B/E,KAAK0B,YAAcX,SAASiE,iBAAiB,CACzCC,MAAON,EACPO,KAAMJ,MAAAA,OAA2C,EAASA,EAASK,0BAEvEL,MAAAA,GAAoDA,EAASc,iBAAiB,YAAa5F,KAAKgC,mBAChG8C,MAAAA,GAAoDA,EAASc,iBAAiB,UAAW5F,KAAKiC,iBAC9F0C,EAAEkB,oBAMNvE,EAAgBV,UAAUoB,kBAAoB,SAAU2C,GACtC3E,KAAKmC,UAGnBnC,KAAK6B,QAAS,EACd7B,KAAK0E,KAAKC,GACVA,EAAEkB,oBAMNvE,EAAgBV,UAAUqB,gBAAkB,SAAU0C,GAC7C3E,KAAK6B,SAEV7B,KAAK8F,IAAInB,GACTA,EAAEkB,oBAONvE,EAAgBiB,sBAAwB,SAAUJ,EAASE,GACvD,MAAO,CAEHG,OAAQL,EAAQ4D,aAAa1D,EAAKG,QAElCb,UAAWQ,EAAQ6D,iBAAiB3D,EAAKV,WAEzCC,YAAaO,EAAQ6D,iBAAiB3D,EAAKT,eAQnDN,EAAgBmE,sBAAwB,SAAUtD,EAASE,GACvD,MAAO,CAEHG,OAAQL,EAAQ8D,aAAa5D,EAAKG,QAElCb,UAAWQ,EAAQ+D,iBAAiB7D,EAAKV,WAEzCC,YAAaO,EAAQ+D,iBAAiB7D,EAAKT,eAGnDN,EAAgBV,UAAUuF,cAAgB,WACtC,OAAO/E,WAAWgF,OAMtB9E,EAAgBV,UAAUyF,MAAQ,SAAU3C,GACxC,IAGIoB,GAHC9E,KAAKmC,SAAW,CAACjB,aAAaoF,QAASpF,aAAaqF,SAASC,SAASxG,KAAKyG,UAG5E3B,EADU9E,KAAKmC,QACI4C,iBAGvBxD,EAAOX,UAAUyF,MAAM5E,KAAKzB,KAAM0D,GAClCA,IAAU1D,KAAK0D,MAAQA,GAEvB1D,KAAK0G,QAAQzF,aAAa0F,YAAa,CACnCC,WAAY5G,KAAKmG,gBACjBU,WAAY1F,WAAW2F,OAG3BhC,MAAAA,GAAoDA,EAASc,iBAAiB,YAAa5F,KAAK8B,mBAEhG9B,KAAKyG,OAASvF,aAAaoF,QAE3BtG,KAAK0G,QAAQzF,aAAamF,MAAO,CAC7BQ,WAAY5G,KAAKmG,gBACjBU,WAAY1F,WAAW2F,SAM/BxF,EAAgBV,UAAUkF,IAAM,SAAUnB,GACtC,IAeItC,EAfAF,EAAUnC,KAAKmC,QACdA,IAID2C,EAAW3C,EAAQ4C,gBACL/E,KAAK0B,aAAgB1B,KAAK2B,WAAc3B,KAAK4B,cAI/DkD,MAAAA,GAAoDA,EAASiC,oBAAoB,YAAa/G,KAAK8B,mBACnGgD,MAAAA,GAAoDA,EAASiC,oBAAoB,YAAa/G,KAAKgC,mBACnG8C,MAAAA,GAAoDA,EAASiC,oBAAoB,UAAW/G,KAAKiC,iBACjG0C,GAAK3E,KAAK0E,KAAKC,GACf3E,KAAKyG,OAASvF,aAAa8F,IACvB3E,EAAO,CACP4E,GAAIjG,SAASkG,OACbC,KAAMnH,KAAKmG,gBACX9D,KAAMf,EAAgBmE,sBAAsBtD,EAAS,CACjDK,OAAQxC,KAAK0B,YACbC,UAAW3B,KAAK2B,UAChBC,YAAa5B,KAAK4B,cAEtB8B,MAAO1D,KAAK0D,OAEhBvB,EAAQiF,eAAe/E,GACvBrC,KAAK0B,YAAc,KACnB1B,KAAK2B,UAAY,EACjB3B,KAAK4B,YAAc,EACnB5B,KAAK6B,QAAS,EACd7B,KAAK0G,QAAQzF,aAAa+F,IAAK,CAC3BJ,WAAY5G,KAAKmG,gBACjBU,WAAY1F,WAAW2F,KACvBzE,KAAMA,KAEVd,EAAOX,UAAUkF,IAAIrE,KAAKzB,KAAM2E,IAKpCrD,EAAgBV,UAAUyG,QAAU,WAChC,IAKIvC,EALA3C,EAAUnC,KAAKmC,QACdA,IAID2C,EAAW3C,EAAQ4C,iBAMnB/E,KAAKyG,SAAWvF,aAAaoF,UAC7BnE,EAAQiD,YACRjD,EAAQkD,mBAEZP,MAAAA,GAAoDA,EAASiC,oBAAoB,YAAa/G,KAAK8B,mBACnGgD,MAAAA,GAAoDA,EAASiC,oBAAoB,YAAa/G,KAAKgC,mBACnG8C,MAAAA,GAAoDA,EAASiC,oBAAoB,UAAW/G,KAAKiC,iBACjGjC,KAAK0B,YAAc,KACnB1B,KAAK2B,UAAY,EACjB3B,KAAK4B,YAAc,EACnB5B,KAAK6B,QAAS,EACd7B,KAAKyG,OAASvF,aAAaqF,QAC3BvG,KAAK0G,QAAQzF,aAAasF,QAAS,CAC/BK,WAAY5G,KAAKmG,gBACjBU,WAAY1F,WAAW2F,QAE3BvF,EAAOX,UAAUyG,QAAQ5F,KAAKzB,OAE3BsB,EA1VyB,CA2VlCD,2BACaC"}