{"version":3,"file":"RectangleDrawAction.js","sources":["vector/interaction/draw/RectangleDrawAction.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport BaseUtil from '@baifendian/adhere-util';\r\nimport * as turf from '@turf/turf';\r\nimport { ActionEvents, ActionStatus, ActionType, SelectType, } from '../types';\r\nimport Util from '../util';\r\nimport DrawAction from './DrawAction';\r\n/**\r\n * RectangleDrawAction\r\n * @class\r\n * @classdesc - 矩形选取\r\n * @remark: - 一个start - end的周期中只能绘制一个矩形\r\n */\r\nvar RectangleDrawAction = /** @class */ (function (_super) {\r\n    __extends(RectangleDrawAction, _super);\r\n    /**\r\n     * context\r\n     */\r\n    function RectangleDrawAction() {\r\n        var _this = _super.call(this) || this;\r\n        // startPoint\r\n        _this.startPoint = null;\r\n        // 左上角坐标\r\n        _this.leftTopPoint = null;\r\n        // 宽度\r\n        _this.width = 0;\r\n        // 高度\r\n        _this.height = 0;\r\n        _this.isMove = false;\r\n        _this.onCanvasMouseDown = _this.onCanvasMouseDown.bind(_this);\r\n        _this.onCanvasMouseMove = _this.onCanvasMouseMove.bind(_this);\r\n        _this.onCanvasMouseUp = _this.onCanvasMouseUp.bind(_this);\r\n        return _this;\r\n    }\r\n    /**\r\n     * booleanPointInData\r\n     * @description 判断点是否在\r\n     * @param context\r\n     * @param point\r\n     * @param data\r\n     */\r\n    RectangleDrawAction.booleanPointInData = function (context, point, data) {\r\n        var _a = RectangleDrawAction.transformOriginToReal(context, data.data), leftTopPoint = _a.leftTopPoint, width = _a.width, height = _a.height;\r\n        var pt = turf.point([point.x, point.y]);\r\n        var poly = turf.polygon([\r\n            [\r\n                [leftTopPoint.x, leftTopPoint.y],\r\n                [leftTopPoint.x + width, leftTopPoint.y],\r\n                [leftTopPoint.x + width, leftTopPoint.y + height],\r\n                [leftTopPoint.x, leftTopPoint.y + height],\r\n                [leftTopPoint.x, leftTopPoint.y],\r\n            ],\r\n        ]);\r\n        return turf.booleanPointInPolygon(pt, poly);\r\n    };\r\n    /**\r\n     * draw\r\n     * @param e\r\n     */\r\n    RectangleDrawAction.prototype.draw = function (e) {\r\n        var _a, _b;\r\n        var _c = this, context = _c.context, startPoint = _c.startPoint, style = _c.style;\r\n        var ctx = context === null || context === void 0 ? void 0 : context.getCtx();\r\n        if (!context || !ctx)\r\n            return;\r\n        var canvasEl = context.getCanvasEl();\r\n        if (!canvasEl)\r\n            return;\r\n        var targetPoint = BaseUtil.clientToCtxPoint({\r\n            event: e,\r\n            rect: canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.getBoundingClientRect(),\r\n        });\r\n        context.clearDraw();\r\n        context.drawHistoryData();\r\n        ctx.beginPath();\r\n        this.leftTopPoint = Util.getRectLeftTopPoint({ startPoint: startPoint, targetPoint: targetPoint });\r\n        this.width = Math.abs(targetPoint.x - ((startPoint === null || startPoint === void 0 ? void 0 : startPoint.x) || 0));\r\n        this.height = Math.abs(targetPoint.y - ((startPoint === null || startPoint === void 0 ? void 0 : startPoint.y) || 0));\r\n        ctx.lineWidth = style.lineWidth;\r\n        ctx.lineJoin = style.lineJoin;\r\n        ctx.lineCap = style.lineCap;\r\n        ctx.setLineDash(style.lineDash);\r\n        ctx.lineDashOffset = style.lineDashOffset;\r\n        ctx.strokeStyle = style.strokeStyle;\r\n        ctx.fillStyle = style.fillStyle;\r\n        ctx.rect(((_a = this.leftTopPoint) === null || _a === void 0 ? void 0 : _a.x) || 0, ((_b = this.leftTopPoint) === null || _b === void 0 ? void 0 : _b.y) || 0, this.width, this.height);\r\n        ctx.stroke();\r\n        ctx.fill();\r\n    };\r\n    /**\r\n     * draw\r\n     * @description\r\n     * @param context\r\n     * @param ctx\r\n     * @param data\r\n     */\r\n    RectangleDrawAction.draw = function (context, ctx, data) {\r\n        if (!ctx || !data)\r\n            return;\r\n        if (data.style) {\r\n            // 设置上下文属性\r\n            ctx.lineWidth = data.style.lineWidth;\r\n            ctx.lineJoin = data.style.lineJoin;\r\n            ctx.lineCap = data.style.lineCap;\r\n            ctx.setLineDash(data.style.lineDash);\r\n            ctx.lineDashOffset = data.style.lineDashOffset;\r\n            ctx.strokeStyle = data.style.strokeStyle;\r\n            ctx.fillStyle = data.style.fillStyle;\r\n            ctx.globalAlpha = data.style.globalAlpha || 1;\r\n        }\r\n        this.drawHistoryPath(context, ctx, data.data);\r\n        // 描边\r\n        ctx.stroke();\r\n        // 填充\r\n        ctx.fill();\r\n    };\r\n    /**\r\n     * drawHistoryPath - 绘制历史数据\r\n     * @param context\r\n     * @param ctx\r\n     * @param data\r\n     */\r\n    RectangleDrawAction.drawHistoryPath = function (context, ctx, data) {\r\n        var _a, _b;\r\n        ctx.save();\r\n        ctx.beginPath();\r\n        var realData = RectangleDrawAction.transformOriginToReal(context, data);\r\n        ctx.rect(((_a = realData === null || realData === void 0 ? void 0 : realData.leftTopPoint) === null || _a === void 0 ? void 0 : _a.x) || 0, ((_b = realData === null || realData === void 0 ? void 0 : realData.leftTopPoint) === null || _b === void 0 ? void 0 : _b.y) || 0, realData === null || realData === void 0 ? void 0 : realData.width, realData === null || realData === void 0 ? void 0 : realData.height);\r\n        // 描边\r\n        ctx.stroke();\r\n        // 填充\r\n        ctx.fill();\r\n        ctx.restore();\r\n    };\r\n    /**\r\n     * onCanvasMouseDown\r\n     * @param e\r\n     */\r\n    RectangleDrawAction.prototype.onCanvasMouseDown = function (e) {\r\n        if (!this.context)\r\n            return;\r\n        var canvasEl = this.context.getCanvasEl();\r\n        if (!canvasEl)\r\n            return;\r\n        this.startPoint = BaseUtil.clientToCtxPoint({\r\n            event: e,\r\n            rect: canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.getBoundingClientRect(),\r\n        });\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.addEventListener('mousemove', this.onCanvasMouseMove);\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.addEventListener('mouseup', this.onCanvasMouseUp);\r\n        e.stopPropagation();\r\n    };\r\n    /**\r\n     * onCanvasMouseMove\r\n     * @param e\r\n     */\r\n    RectangleDrawAction.prototype.onCanvasMouseMove = function (e) {\r\n        var context = this.context;\r\n        if (!context)\r\n            return;\r\n        this.isMove = true;\r\n        this.draw(e);\r\n        e.stopPropagation();\r\n    };\r\n    /**\r\n     * onCanvasMouseUp\r\n     * @param e\r\n     */\r\n    RectangleDrawAction.prototype.onCanvasMouseUp = function (e) {\r\n        if (!this.isMove)\r\n            return;\r\n        this.end(e);\r\n        e.stopPropagation();\r\n    };\r\n    /**\r\n     * transformOriginToReal - 原始数据转换成实际数据\r\n     * @param context\r\n     * @param data\r\n     */\r\n    RectangleDrawAction.transformOriginToReal = function (context, data) {\r\n        return {\r\n            leftTopPoint: context.pointToPixel(data.leftTopPoint),\r\n            width: context.actualToDistance(data.width),\r\n            height: context.actualToDistance(data.height),\r\n        };\r\n    };\r\n    /**\r\n     * transformRealToOrigin - 实际数据转换成原始数据\r\n     * @param context\r\n     * @param data\r\n     */\r\n    RectangleDrawAction.transformRealToOrigin = function (context, data) {\r\n        return {\r\n            leftTopPoint: context.pixelToPoint(data.leftTopPoint),\r\n            width: context.distanceToActual(data.width),\r\n            height: context.distanceToActual(data.height),\r\n        };\r\n    };\r\n    RectangleDrawAction.prototype.getSelectType = function () {\r\n        return SelectType.Rectangle;\r\n    };\r\n    /**\r\n     * start\r\n     * @param style\r\n     */\r\n    RectangleDrawAction.prototype.start = function (style) {\r\n        if (!this.context || [ActionStatus.Running, ActionStatus.Destroy].includes(this.status))\r\n            return;\r\n        var context = this.context;\r\n        var canvasEl = context.getCanvasEl();\r\n        if (!canvasEl)\r\n            return;\r\n        _super.prototype.start.call(this, style);\r\n        style && (this.style = style);\r\n        // 触发开始之前事件\r\n        this.trigger(ActionEvents.BeforeStart, {\r\n            selectType: this.getSelectType(),\r\n            actionType: ActionType.Draw,\r\n        });\r\n        // 注册事件\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.addEventListener('mousedown', this.onCanvasMouseDown);\r\n        // 修改状态\r\n        this.status = ActionStatus.Running;\r\n        // 触发开始事件\r\n        this.trigger(ActionEvents.Start, {\r\n            selectType: this.getSelectType(),\r\n            actionType: ActionType.Draw,\r\n        });\r\n    };\r\n    /**\r\n     * end\r\n     */\r\n    RectangleDrawAction.prototype.end = function (e) {\r\n        var context = this.context;\r\n        if (!context) {\r\n            _super.prototype.end.call(this, e);\r\n            return;\r\n        }\r\n        var canvasEl = context.getCanvasEl();\r\n        if (!canvasEl) {\r\n            _super.prototype.end.call(this, e);\r\n            return;\r\n        }\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mousedown', this.onCanvasMouseDown);\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mousemove', this.onCanvasMouseMove);\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mouseup', this.onCanvasMouseUp);\r\n        e && this.draw(e);\r\n        this.status = ActionStatus.End;\r\n        var data = {\r\n            id: BaseUtil.uuid(),\r\n            type: this.getSelectType(),\r\n            data: RectangleDrawAction.transformRealToOrigin(context, {\r\n                leftTopPoint: this.leftTopPoint,\r\n                width: this.width,\r\n                height: this.height,\r\n            }),\r\n            style: this.style,\r\n        };\r\n        context.addHistoryData(data);\r\n        this.startPoint = null;\r\n        this.leftTopPoint = null;\r\n        this.width = 0;\r\n        this.height = 0;\r\n        this.isMove = false;\r\n        this.trigger(ActionEvents.End, {\r\n            selectType: this.getSelectType(),\r\n            actionType: ActionType.Draw,\r\n            data: data,\r\n        });\r\n        _super.prototype.end.call(this, e);\r\n    };\r\n    /**\r\n     * destroy\r\n     */\r\n    RectangleDrawAction.prototype.destroy = function () {\r\n        var context = this.context;\r\n        if (!context) {\r\n            _super.prototype.destroy.call(this);\r\n            return;\r\n        }\r\n        var canvasEl = context.getCanvasEl();\r\n        if (!canvasEl) {\r\n            _super.prototype.destroy.call(this);\r\n            return;\r\n        }\r\n        // 如果是运行状态则删除之前的绘制\r\n        if (this.status === ActionStatus.Running) {\r\n            context.clearDraw();\r\n            context.drawHistoryData();\r\n        }\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mousedown', this.onCanvasMouseDown);\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mousemove', this.onCanvasMouseMove);\r\n        canvasEl === null || canvasEl === void 0 ? void 0 : canvasEl.removeEventListener('mouseup', this.onCanvasMouseUp);\r\n        this.startPoint = null;\r\n        this.leftTopPoint = null;\r\n        this.width = 0;\r\n        this.height = 0;\r\n        this.isMove = false;\r\n        this.status = ActionStatus.Destroy;\r\n        this.trigger(ActionEvents.Destroy, {\r\n            selectType: this.getSelectType(),\r\n            actionType: ActionType.Draw,\r\n        });\r\n        _super.prototype.destroy.call(this);\r\n    };\r\n    return RectangleDrawAction;\r\n}(DrawAction));\r\nexport default RectangleDrawAction;\r\n"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","BaseUtil","turf","ActionEvents","ActionStatus","ActionType","SelectType","Util","DrawAction","RectangleDrawAction","_super","_this","call","startPoint","leftTopPoint","width","height","isMove","onCanvasMouseDown","bind","onCanvasMouseMove","onCanvasMouseUp","booleanPointInData","context","point","data","_a","transformOriginToReal","pt","x","y","poly","polygon","booleanPointInPolygon","draw","e","canvasEl","_c","style","ctx","getCtx","getCanvasEl","targetPoint","clientToCtxPoint","event","rect","getBoundingClientRect","clearDraw","drawHistoryData","beginPath","getRectLeftTopPoint","Math","abs","lineWidth","lineJoin","lineCap","setLineDash","lineDash","lineDashOffset","strokeStyle","fillStyle","_b","stroke","fill","globalAlpha","drawHistoryPath","save","realData","restore","addEventListener","stopPropagation","end","pointToPixel","actualToDistance","transformRealToOrigin","pixelToPoint","distanceToActual","getSelectType","Rectangle","start","Running","Destroy","includes","status","trigger","BeforeStart","selectType","actionType","Draw","Start","removeEventListener","End","id","uuid","type","addHistoryData","destroy"],"mappings":"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"}