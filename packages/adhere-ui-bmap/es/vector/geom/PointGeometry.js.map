{"version":3,"file":"PointGeometry.js","sources":["vector/geom/PointGeometry.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport ImageCache from '../ImageCache';\nimport GeometryStyle from '../style/GeometryStyle';\nimport { GeometryType, VectorActions, } from '../types';\nimport CircleGeometry from './CircleGeometry';\nimport Geometry from './Geometry';\nimport LeafGeometry from './LeafGeometry';\nimport RadiusRectGeometry from './RadiusRectGeometry';\nimport RectGeometry from './RectGeometry';\nimport RegularPolygonGeometry from './RegularPolygonGeometry';\nimport SectorGeometry from './SectorGeometry';\nimport StartGeometry from './StartGeometry';\n/**\n * PointGeometry\n * @class PointGeometry\n * @classdesc PointGeometry - 点\n */\nvar PointGeometry = /** @class */ (function (_super) {\n    __extends(PointGeometry, _super);\n    function PointGeometry(coordinates) {\n        var _this = _super.call(this) || this;\n        _this.coordinates = coordinates;\n        return _this;\n    }\n    PointGeometry.prototype.setCoordinates = function (coordinates) {\n        var _a;\n        this.coordinates = coordinates;\n        (_a = this === null || this === void 0 ? void 0 : this.getLayer()) === null || _a === void 0 ? void 0 : _a.getEmitter().trigger(VectorActions.UPDATE);\n    };\n    PointGeometry.prototype.getCoordinates = function () {\n        return __assign({}, this.coordinates);\n    };\n    PointGeometry.prototype.getType = function () {\n        return GeometryType.Point;\n    };\n    PointGeometry.getCenterCoordinate = function (_a) {\n        var ctx = _a.ctx, coordinates = _a.coordinates, map = _a.map, style = _a.style, isScale = _a.isScale;\n        // @ts-ignore\n        return PointGeometry.centerCoordinateMapping.get(style.pointType)({\n            ctx: ctx,\n            coordinates: coordinates,\n            map: map,\n            style: style,\n            isScale: isScale,\n        });\n    };\n    // @ts-ignore\n    PointGeometry.prototype.getCenterCoordinate = function (_a) {\n        var ctx = _a.ctx, style = _a.style, isScale = _a.isScale;\n        return PointGeometry.getCenterCoordinate({\n            coordinates: this.coordinates,\n            ctx: ctx,\n            map: this.getMap(),\n            style: style,\n            isScale: false,\n        });\n    };\n    /**\n     * drawCirclePoint - 绘制圆的点\n     * @param ctx\n     * @param style\n     * @param coordinates\n     * @param map\n     */\n    PointGeometry.drawCirclePoint = function (_a) {\n        var ctx = _a.ctx, style = _a.style, coordinates = _a.coordinates, map = _a.map;\n        CircleGeometry.drawCircle({\n            ctx: ctx,\n            style: style,\n            // @ts-ignore\n            coordinates: { radius: style.radius, center: coordinates },\n            map: map,\n            isScale: false,\n        });\n    };\n    /**\n     * drawImagePoint - 绘制图片的点\n     * @param ctx\n     * @param style\n     * @param coordinates\n     * @param map\n     */\n    PointGeometry.drawImagePoint = function (_a) {\n        var _b, _c, _d;\n        var ctx = _a.ctx, style = _a.style, coordinates = _a.coordinates, map = _a.map;\n        // @ts-ignore\n        var pixel = map.pointToPixel(new BMap.Point(coordinates.lng, coordinates.lat));\n        var image = ImageCache.get({\n            src: ((_b = style === null || style === void 0 ? void 0 : style.img) === null || _b === void 0 ? void 0 : _b.src) || '',\n            width: ((_c = style === null || style === void 0 ? void 0 : style.img) === null || _c === void 0 ? void 0 : _c.width) || 0,\n            height: ((_d = style === null || style === void 0 ? void 0 : style.img) === null || _d === void 0 ? void 0 : _d.height) || 0,\n        });\n        if (!image) {\n            // @ts-ignore\n            var image_1 = new Image(style.img.width, style.img.height);\n            image_1.onload = function () {\n                var _a, _b, _c;\n                ImageCache.add({\n                    src: ((_a = style === null || style === void 0 ? void 0 : style.img) === null || _a === void 0 ? void 0 : _a.src) || '',\n                    width: ((_b = style === null || style === void 0 ? void 0 : style.img) === null || _b === void 0 ? void 0 : _b.width) || 0,\n                    height: ((_c = style === null || style === void 0 ? void 0 : style.img) === null || _c === void 0 ? void 0 : _c.height) || 0,\n                }, image_1);\n                // @ts-ignore\n                ctx.drawImage(image_1, pixel.x, pixel.y, style.img.width, style.img.height);\n            };\n            // @ts-ignore\n            image_1.src = style.img.src;\n        }\n        else {\n            // @ts-ignore\n            ctx.drawImage(image, pixel.x, pixel.y, style.img.width, style.img.height);\n        }\n    };\n    /**\n     * drawRegularPolygon\n     * @param ctx\n     * @param style\n     * @param coordinates\n     * @param map\n     */\n    PointGeometry.drawRegularPolygon = function (_a) {\n        var ctx = _a.ctx, style = _a.style, coordinates = _a.coordinates, map = _a.map;\n        RegularPolygonGeometry.drawRegularPolygon({\n            ctx: ctx,\n            style: style,\n            // @ts-ignore\n            coordinates: __assign(__assign({}, style.regularPolygon), { center: coordinates }),\n            map: map,\n            isScale: false,\n        });\n    };\n    /**\n     * drawStart\n     * @param ctx\n     * @param style\n     * @param coordinates\n     * @param map\n     */\n    PointGeometry.drawStart = function (_a) {\n        var ctx = _a.ctx, style = _a.style, coordinates = _a.coordinates, map = _a.map;\n        StartGeometry.drawStart({\n            ctx: ctx,\n            style: style,\n            // @ts-ignore\n            coordinates: __assign(__assign({}, style.start), { center: coordinates }),\n            map: map,\n            isScale: false,\n        });\n    };\n    /**\n     * drawSector\n     * @param ctx\n     * @param style\n     * @param coordinates\n     * @param map\n     */\n    PointGeometry.drawSector = function (_a) {\n        var ctx = _a.ctx, style = _a.style, coordinates = _a.coordinates, map = _a.map;\n        SectorGeometry.drawSector({\n            ctx: ctx,\n            style: style,\n            // @ts-ignore\n            coordinates: __assign(__assign({}, style.sector), { center: coordinates }),\n            map: map,\n            isScale: false,\n        });\n    };\n    /**\n     * drawRect\n     * @param ctx\n     * @param style\n     * @param coordinates\n     * @param map\n     */\n    PointGeometry.drawRect = function (_a) {\n        var ctx = _a.ctx, style = _a.style, coordinates = _a.coordinates, map = _a.map;\n        RectGeometry.drawRect({\n            ctx: ctx,\n            style: style,\n            // @ts-ignore\n            coordinates: __assign(__assign({}, style.rect), { leftTop: coordinates }),\n            map: map,\n            isScale: false,\n        });\n    };\n    PointGeometry.drawRadiusRect = function (_a) {\n        var ctx = _a.ctx, style = _a.style, coordinates = _a.coordinates, map = _a.map;\n        RadiusRectGeometry.drawRadiusRect({\n            ctx: ctx,\n            style: style,\n            // @ts-ignore\n            coordinates: __assign(__assign({}, style.radiusRect), { leftTop: coordinates }),\n            map: map,\n            isScale: false,\n        });\n    };\n    PointGeometry.drawLeaf = function (_a) {\n        var ctx = _a.ctx, style = _a.style, coordinates = _a.coordinates, map = _a.map;\n        LeafGeometry.drawLeaf({\n            ctx: ctx,\n            style: style,\n            // @ts-ignore\n            coordinates: __assign(__assign({}, style.leaf), { center: coordinates }),\n            map: map,\n            isScale: false,\n        });\n    };\n    /**\n     * drawPoint\n     * @param ctx\n     * @param style\n     * @param coordinates\n     * @param map\n     */\n    PointGeometry.drawPoint = function (_a) {\n        var ctx = _a.ctx, style = _a.style, coordinates = _a.coordinates, map = _a.map;\n        var targetStyle = __assign(__assign(__assign({}, GeometryStyle), { radius: 5, pointType: 'circle' }), (style !== null && style !== void 0 ? style : {}));\n        // @ts-ignore\n        PointGeometry.drawMapping.get(targetStyle === null || targetStyle === void 0 ? void 0 : targetStyle.pointType)({\n            ctx: ctx,\n            style: targetStyle,\n            coordinates: coordinates,\n            map: map,\n        });\n    };\n    /**\n     * draw\n     * @param ctx\n     * @param style\n     */\n    PointGeometry.prototype.draw = function (ctx, style) {\n        PointGeometry.drawPoint({\n            ctx: ctx,\n            style: style,\n            coordinates: this.coordinates,\n            map: this.getMap(),\n        });\n    };\n    PointGeometry.isPixelInGeometry = function (_a) {\n        var coordinates = _a.coordinates, map = _a.map, pixel = _a.pixel, style = _a.style;\n        // @ts-ignore\n        return PointGeometry.isPixelInGeometryMapping.get(style === null || style === void 0 ? void 0 : style.pointType)({\n            // @ts-ignore\n            coordinates: PointGeometry.pointTypeToCoordinatesMapping.get(style === null || style === void 0 ? void 0 : style.pointType)(coordinates, style),\n            isScale: false,\n            map: map,\n            style: style,\n            pixel: pixel,\n        });\n    };\n    /**\n     * isPixelInGeometry\n     * @param pixel\n     * @param style\n     * @return boolean\n     */\n    PointGeometry.prototype.isPixelInGeometry = function (pixel, style) {\n        return PointGeometry.isPixelInGeometry({\n            coordinates: this.coordinates,\n            pixel: pixel,\n            map: this.getMap(),\n            style: style,\n        });\n    };\n    PointGeometry.drawMapping = new Map([\n        ['circle', PointGeometry.drawCirclePoint],\n        ['image', PointGeometry.drawImagePoint],\n        ['regularPolygon', PointGeometry.drawRegularPolygon],\n        ['start', PointGeometry.drawStart],\n        ['sector', PointGeometry.drawSector],\n        ['rect', PointGeometry.drawRect],\n        ['radiusRect', PointGeometry.drawRadiusRect],\n        ['leaf', PointGeometry.drawLeaf],\n    ]);\n    PointGeometry.isPixelInGeometryMapping = new Map([\n        ['circle', CircleGeometry.isPixelInGeometry],\n        ['image', RectGeometry.isPixelInGeometry],\n        ['regularPolygon', RegularPolygonGeometry.isPixelInGeometry],\n        ['start', StartGeometry.isPixelInGeometry],\n        ['sector', SectorGeometry.isPixelInGeometry],\n        ['rect', RectGeometry.isPixelInGeometry],\n        ['radiusRect', RadiusRectGeometry.isPixelInGeometry],\n        ['leaf', LeafGeometry.isPixelInGeometry],\n    ]);\n    PointGeometry.centerCoordinateMapping = new Map([\n        [\n            'circle',\n            function (_a) {\n                var ctx = _a.ctx, coordinates = _a.coordinates, map = _a.map, style = _a.style, isScale = _a.isScale;\n                return CircleGeometry.getCenterCoordinate({\n                    ctx: ctx,\n                    map: map,\n                    style: style,\n                    isScale: isScale,\n                    coordinates: {\n                        center: coordinates,\n                        // @ts-ignore\n                        radius: style.radius,\n                    },\n                });\n            },\n        ],\n        [\n            'image',\n            function (_a) {\n                var ctx = _a.ctx, coordinates = _a.coordinates, map = _a.map, style = _a.style, isScale = _a.isScale;\n                return RectGeometry.getCenterCoordinate({\n                    ctx: ctx,\n                    map: map,\n                    style: style,\n                    isScale: isScale,\n                    // @ts-ignore\n                    coordinates: __assign({ leftTop: coordinates }, style.img),\n                });\n            },\n        ],\n        [\n            'regularPolygon',\n            function (_a) {\n                var ctx = _a.ctx, coordinates = _a.coordinates, map = _a.map, style = _a.style, isScale = _a.isScale;\n                return RegularPolygonGeometry.getCenterCoordinate({\n                    ctx: ctx,\n                    map: map,\n                    style: style,\n                    isScale: isScale,\n                    // @ts-ignore\n                    coordinates: __assign({ center: coordinates }, style.regularPolygon),\n                });\n            },\n        ],\n        [\n            'start',\n            function (_a) {\n                var ctx = _a.ctx, coordinates = _a.coordinates, map = _a.map, style = _a.style, isScale = _a.isScale;\n                return StartGeometry.getCenterCoordinate({\n                    ctx: ctx,\n                    map: map,\n                    style: style,\n                    isScale: isScale,\n                    // @ts-ignore\n                    coordinates: __assign({ center: coordinates }, style.start),\n                });\n            },\n        ],\n        [\n            'sector',\n            function (_a) {\n                var ctx = _a.ctx, coordinates = _a.coordinates, map = _a.map, style = _a.style, isScale = _a.isScale;\n                return SectorGeometry.getCenterCoordinate({\n                    ctx: ctx,\n                    map: map,\n                    style: style,\n                    isScale: isScale,\n                    // @ts-ignore\n                    coordinates: __assign({ center: coordinates }, style.sector),\n                });\n            },\n        ],\n        [\n            'rect',\n            function (_a) {\n                var ctx = _a.ctx, coordinates = _a.coordinates, map = _a.map, style = _a.style, isScale = _a.isScale;\n                return RectGeometry.getCenterCoordinate({\n                    ctx: ctx,\n                    map: map,\n                    style: style,\n                    isScale: isScale,\n                    // @ts-ignore\n                    coordinates: __assign({ leftTop: coordinates }, style.rect),\n                });\n            },\n        ],\n        [\n            'radiusRect',\n            function (_a) {\n                var ctx = _a.ctx, coordinates = _a.coordinates, map = _a.map, style = _a.style, isScale = _a.isScale;\n                return RadiusRectGeometry.getCenterCoordinate({\n                    ctx: ctx,\n                    map: map,\n                    style: style,\n                    isScale: isScale,\n                    // @ts-ignore\n                    coordinates: __assign({ leftTop: coordinates }, style.radiusRect),\n                });\n            },\n        ],\n        [\n            'leaf',\n            function (_a) {\n                var ctx = _a.ctx, coordinates = _a.coordinates, map = _a.map, style = _a.style, isScale = _a.isScale;\n                return LeafGeometry.getCenterCoordinate({\n                    ctx: ctx,\n                    map: map,\n                    style: style,\n                    isScale: isScale,\n                    // @ts-ignore\n                    coordinates: __assign({ center: coordinates }, style.leaf),\n                });\n            },\n        ],\n    ]);\n    PointGeometry.pointTypeToCoordinatesMapping = new Map([\n        [\n            'circle',\n            function (coordinates, style) { return ({\n                center: coordinates,\n                radius: style.radius,\n            }); },\n        ],\n        [\n            'image',\n            function (coordinates, style) { return ({\n                leftTop: coordinates,\n                // @ts-ignore\n                width: style.img.width,\n                // @ts-ignore\n                height: style.img.height,\n            }); },\n        ],\n        [\n            'regularPolygon',\n            function (coordinates, style) { return (__assign({ center: coordinates }, style.regularPolygon)); },\n        ],\n        [\n            'start',\n            function (coordinates, style) { return (__assign({ center: coordinates }, style.start)); },\n        ],\n        [\n            'sector',\n            function (coordinates, style) { return (__assign({ center: coordinates }, style.sector)); },\n        ],\n        [\n            'rect',\n            function (coordinates, style) { return (__assign({ leftTop: coordinates }, style.rect)); },\n        ],\n        [\n            'radiusRect',\n            function (coordinates, style) { return (__assign({ leftTop: coordinates }, style.radiusRect)); },\n        ],\n        [\n            'leaf',\n            function (coordinates, style) { return (__assign({ center: coordinates }, style.leaf)); },\n        ],\n    ]);\n    return PointGeometry;\n}(Geometry));\nexport default PointGeometry;\n"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__assign","assign","t","s","i","n","arguments","length","apply","ImageCache","GeometryStyle","GeometryType","VectorActions","CircleGeometry","Geometry","LeafGeometry","RadiusRectGeometry","RectGeometry","RegularPolygonGeometry","SectorGeometry","StartGeometry","PointGeometry","_super","coordinates","_this","setCoordinates","_a","getLayer","getEmitter","trigger","UPDATE","getCoordinates","getType","Point","getCenterCoordinate","ctx","map","style","isScale","centerCoordinateMapping","get","pointType","getMap","drawCirclePoint","drawCircle","radius","center","drawImagePoint","image_1","pixel","pointToPixel","BMap","lng","lat","image","src","_b","img","width","_c","height","_d","drawImage","x","y","Image","onload","add","drawRegularPolygon","regularPolygon","drawStart","start","drawSector","sector","drawRect","rect","leftTop","drawRadiusRect","radiusRect","drawLeaf","leaf","drawPoint","targetStyle","drawMapping","draw","isPixelInGeometry","isPixelInGeometryMapping","pointTypeToCoordinatesMapping","Map"],"mappings":"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"}