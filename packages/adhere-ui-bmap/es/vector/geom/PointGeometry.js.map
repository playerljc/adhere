{"version":3,"file":"PointGeometry.js","sources":["vector/geom/PointGeometry.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nimport { GeometryType, VectorActions, } from '../types';\r\nimport Geometry from './Geometry';\r\nimport GeometryStyle from '../style/GeometryStyle';\r\nimport RegularPolygonGeometry from './RegularPolygonGeometry';\r\nimport StartGeometry from './StartGeometry';\r\nimport SectorGeometry from './SectorGeometry';\r\nimport CircleGeometry from './CircleGeometry';\r\nimport RectGeometry from './RectGeometry';\r\nimport RadiusRectGeometry from './RadiusRectGeometry';\r\nimport LeafGeometry from './LeafGeometry';\r\nimport ImageCache from '../ImageCache';\r\n/**\r\n * PointGeometry\r\n * @class PointGeometry\r\n * @classdesc PointGeometry - 点\r\n */\r\nvar PointGeometry = /** @class */ (function (_super) {\r\n    __extends(PointGeometry, _super);\r\n    function PointGeometry(coordinates) {\r\n        var _this = _super.call(this) || this;\r\n        _this.coordinates = coordinates;\r\n        return _this;\r\n    }\r\n    PointGeometry.prototype.setCoordinates = function (coordinates) {\r\n        var _a;\r\n        this.coordinates = coordinates;\r\n        (_a = this === null || this === void 0 ? void 0 : this.getLayer()) === null || _a === void 0 ? void 0 : _a.getEmitter().trigger(VectorActions.UPDATE);\r\n    };\r\n    PointGeometry.prototype.getCoordinates = function () {\r\n        return __assign({}, this.coordinates);\r\n    };\r\n    PointGeometry.prototype.getType = function () {\r\n        return GeometryType.Point;\r\n    };\r\n    PointGeometry.getCenterCoordinate = function (_a) {\r\n        var ctx = _a.ctx, coordinates = _a.coordinates, map = _a.map, style = _a.style, isScale = _a.isScale;\r\n        // @ts-ignore\r\n        return PointGeometry.centerCoordinateMapping.get(style.pointType)({\r\n            ctx: ctx,\r\n            coordinates: coordinates,\r\n            map: map,\r\n            style: style,\r\n            isScale: isScale,\r\n        });\r\n    };\r\n    // @ts-ignore\r\n    PointGeometry.prototype.getCenterCoordinate = function (_a) {\r\n        var ctx = _a.ctx, style = _a.style, isScale = _a.isScale;\r\n        return PointGeometry.getCenterCoordinate({\r\n            coordinates: this.coordinates,\r\n            ctx: ctx,\r\n            map: this.getMap(),\r\n            style: style,\r\n            isScale: false,\r\n        });\r\n    };\r\n    /**\r\n     * drawCirclePoint - 绘制圆的点\r\n     * @param ctx\r\n     * @param style\r\n     * @param coordinates\r\n     * @param map\r\n     */\r\n    PointGeometry.drawCirclePoint = function (_a) {\r\n        var ctx = _a.ctx, style = _a.style, coordinates = _a.coordinates, map = _a.map;\r\n        CircleGeometry.drawCircle({\r\n            ctx: ctx,\r\n            style: style,\r\n            // @ts-ignore\r\n            coordinates: { radius: style.radius, center: coordinates },\r\n            map: map,\r\n            isScale: false,\r\n        });\r\n    };\r\n    /**\r\n     * drawImagePoint - 绘制图片的点\r\n     * @param ctx\r\n     * @param style\r\n     * @param coordinates\r\n     * @param map\r\n     */\r\n    PointGeometry.drawImagePoint = function (_a) {\r\n        var _b, _c, _d;\r\n        var ctx = _a.ctx, style = _a.style, coordinates = _a.coordinates, map = _a.map;\r\n        // @ts-ignore\r\n        var pixel = map.pointToPixel(new BMap.Point(coordinates.lng, coordinates.lat));\r\n        var image = ImageCache.get({\r\n            src: ((_b = style === null || style === void 0 ? void 0 : style.img) === null || _b === void 0 ? void 0 : _b.src) || '',\r\n            width: ((_c = style === null || style === void 0 ? void 0 : style.img) === null || _c === void 0 ? void 0 : _c.width) || 0,\r\n            height: ((_d = style === null || style === void 0 ? void 0 : style.img) === null || _d === void 0 ? void 0 : _d.height) || 0,\r\n        });\r\n        if (!image) {\r\n            // @ts-ignore\r\n            var image_1 = new Image(style.img.width, style.img.height);\r\n            image_1.onload = function () {\r\n                var _a, _b, _c;\r\n                ImageCache.add({\r\n                    src: ((_a = style === null || style === void 0 ? void 0 : style.img) === null || _a === void 0 ? void 0 : _a.src) || '',\r\n                    width: ((_b = style === null || style === void 0 ? void 0 : style.img) === null || _b === void 0 ? void 0 : _b.width) || 0,\r\n                    height: ((_c = style === null || style === void 0 ? void 0 : style.img) === null || _c === void 0 ? void 0 : _c.height) || 0,\r\n                }, image_1);\r\n                // @ts-ignore\r\n                ctx.drawImage(image_1, pixel.x, pixel.y, style.img.width, style.img.height);\r\n            };\r\n            // @ts-ignore\r\n            image_1.src = style.img.src;\r\n        }\r\n        else {\r\n            // @ts-ignore\r\n            ctx.drawImage(image, pixel.x, pixel.y, style.img.width, style.img.height);\r\n        }\r\n    };\r\n    /**\r\n     * drawRegularPolygon\r\n     * @param ctx\r\n     * @param style\r\n     * @param coordinates\r\n     * @param map\r\n     */\r\n    PointGeometry.drawRegularPolygon = function (_a) {\r\n        var ctx = _a.ctx, style = _a.style, coordinates = _a.coordinates, map = _a.map;\r\n        RegularPolygonGeometry.drawRegularPolygon({\r\n            ctx: ctx,\r\n            style: style,\r\n            // @ts-ignore\r\n            coordinates: __assign(__assign({}, style.regularPolygon), { center: coordinates }),\r\n            map: map,\r\n            isScale: false,\r\n        });\r\n    };\r\n    /**\r\n     * drawStart\r\n     * @param ctx\r\n     * @param style\r\n     * @param coordinates\r\n     * @param map\r\n     */\r\n    PointGeometry.drawStart = function (_a) {\r\n        var ctx = _a.ctx, style = _a.style, coordinates = _a.coordinates, map = _a.map;\r\n        StartGeometry.drawStart({\r\n            ctx: ctx,\r\n            style: style,\r\n            // @ts-ignore\r\n            coordinates: __assign(__assign({}, style.start), { center: coordinates }),\r\n            map: map,\r\n            isScale: false,\r\n        });\r\n    };\r\n    /**\r\n     * drawSector\r\n     * @param ctx\r\n     * @param style\r\n     * @param coordinates\r\n     * @param map\r\n     */\r\n    PointGeometry.drawSector = function (_a) {\r\n        var ctx = _a.ctx, style = _a.style, coordinates = _a.coordinates, map = _a.map;\r\n        SectorGeometry.drawSector({\r\n            ctx: ctx,\r\n            style: style,\r\n            // @ts-ignore\r\n            coordinates: __assign(__assign({}, style.sector), { center: coordinates }),\r\n            map: map,\r\n            isScale: false,\r\n        });\r\n    };\r\n    /**\r\n     * drawRect\r\n     * @param ctx\r\n     * @param style\r\n     * @param coordinates\r\n     * @param map\r\n     */\r\n    PointGeometry.drawRect = function (_a) {\r\n        var ctx = _a.ctx, style = _a.style, coordinates = _a.coordinates, map = _a.map;\r\n        RectGeometry.drawRect({\r\n            ctx: ctx,\r\n            style: style,\r\n            // @ts-ignore\r\n            coordinates: __assign(__assign({}, style.rect), { leftTop: coordinates }),\r\n            map: map,\r\n            isScale: false,\r\n        });\r\n    };\r\n    PointGeometry.drawRadiusRect = function (_a) {\r\n        var ctx = _a.ctx, style = _a.style, coordinates = _a.coordinates, map = _a.map;\r\n        RadiusRectGeometry.drawRadiusRect({\r\n            ctx: ctx,\r\n            style: style,\r\n            // @ts-ignore\r\n            coordinates: __assign(__assign({}, style.radiusRect), { leftTop: coordinates }),\r\n            map: map,\r\n            isScale: false,\r\n        });\r\n    };\r\n    PointGeometry.drawLeaf = function (_a) {\r\n        var ctx = _a.ctx, style = _a.style, coordinates = _a.coordinates, map = _a.map;\r\n        LeafGeometry.drawLeaf({\r\n            ctx: ctx,\r\n            style: style,\r\n            // @ts-ignore\r\n            coordinates: __assign(__assign({}, style.leaf), { center: coordinates }),\r\n            map: map,\r\n            isScale: false,\r\n        });\r\n    };\r\n    /**\r\n     * drawPoint\r\n     * @param ctx\r\n     * @param style\r\n     * @param coordinates\r\n     * @param map\r\n     */\r\n    PointGeometry.drawPoint = function (_a) {\r\n        var _b;\r\n        var ctx = _a.ctx, style = _a.style, coordinates = _a.coordinates, map = _a.map;\r\n        var targetStyle = __assign(__assign(__assign({}, GeometryStyle), { radius: 5, pointType: 'circle' }), (style || {}));\r\n        // @ts-ignore\r\n        PointGeometry.drawMapping.get((_b = targetStyle) === null || _b === void 0 ? void 0 : _b.pointType)({\r\n            ctx: ctx,\r\n            style: targetStyle,\r\n            coordinates: coordinates,\r\n            map: map,\r\n        });\r\n    };\r\n    /**\r\n     * draw\r\n     * @param ctx\r\n     * @param style\r\n     */\r\n    PointGeometry.prototype.draw = function (ctx, style) {\r\n        PointGeometry.drawPoint({\r\n            ctx: ctx,\r\n            style: style,\r\n            coordinates: this.coordinates,\r\n            map: this.getMap(),\r\n        });\r\n    };\r\n    PointGeometry.isPixelInGeometry = function (_a) {\r\n        var _b, _c;\r\n        var coordinates = _a.coordinates, map = _a.map, pixel = _a.pixel, style = _a.style;\r\n        // @ts-ignore\r\n        return PointGeometry.isPixelInGeometryMapping.get((_b = style) === null || _b === void 0 ? void 0 : _b.pointType)({\r\n            // @ts-ignore\r\n            coordinates: PointGeometry.pointTypeToCoordinatesMapping.get((_c = style) === null || _c === void 0 ? void 0 : _c.pointType)(coordinates, style),\r\n            isScale: false,\r\n            map: map,\r\n            style: style,\r\n            pixel: pixel,\r\n        });\r\n    };\r\n    /**\r\n     * isPixelInGeometry\r\n     * @param pixel\r\n     * @param style\r\n     * @return boolean\r\n     */\r\n    PointGeometry.prototype.isPixelInGeometry = function (pixel, style) {\r\n        return PointGeometry.isPixelInGeometry({\r\n            coordinates: this.coordinates,\r\n            pixel: pixel,\r\n            map: this.getMap(),\r\n            style: style,\r\n        });\r\n    };\r\n    PointGeometry.drawMapping = new Map([\r\n        ['circle', PointGeometry.drawCirclePoint],\r\n        ['image', PointGeometry.drawImagePoint],\r\n        ['regularPolygon', PointGeometry.drawRegularPolygon],\r\n        ['start', PointGeometry.drawStart],\r\n        ['sector', PointGeometry.drawSector],\r\n        ['rect', PointGeometry.drawRect],\r\n        ['radiusRect', PointGeometry.drawRadiusRect],\r\n        ['leaf', PointGeometry.drawLeaf],\r\n    ]);\r\n    PointGeometry.isPixelInGeometryMapping = new Map([\r\n        ['circle', CircleGeometry.isPixelInGeometry],\r\n        ['image', RectGeometry.isPixelInGeometry],\r\n        ['regularPolygon', RegularPolygonGeometry.isPixelInGeometry],\r\n        ['start', StartGeometry.isPixelInGeometry],\r\n        ['sector', SectorGeometry.isPixelInGeometry],\r\n        ['rect', RectGeometry.isPixelInGeometry],\r\n        ['radiusRect', RadiusRectGeometry.isPixelInGeometry],\r\n        ['leaf', LeafGeometry.isPixelInGeometry],\r\n    ]);\r\n    PointGeometry.centerCoordinateMapping = new Map([\r\n        [\r\n            'circle',\r\n            function (_a) {\r\n                var ctx = _a.ctx, coordinates = _a.coordinates, map = _a.map, style = _a.style, isScale = _a.isScale;\r\n                return CircleGeometry.getCenterCoordinate({\r\n                    ctx: ctx,\r\n                    map: map,\r\n                    style: style,\r\n                    isScale: isScale,\r\n                    coordinates: {\r\n                        center: coordinates,\r\n                        // @ts-ignore\r\n                        radius: style.radius,\r\n                    },\r\n                });\r\n            },\r\n        ],\r\n        [\r\n            'image',\r\n            function (_a) {\r\n                var ctx = _a.ctx, coordinates = _a.coordinates, map = _a.map, style = _a.style, isScale = _a.isScale;\r\n                return RectGeometry.getCenterCoordinate({\r\n                    ctx: ctx,\r\n                    map: map,\r\n                    style: style,\r\n                    isScale: isScale,\r\n                    // @ts-ignore\r\n                    coordinates: __assign({ leftTop: coordinates }, style.img),\r\n                });\r\n            },\r\n        ],\r\n        [\r\n            'regularPolygon',\r\n            function (_a) {\r\n                var ctx = _a.ctx, coordinates = _a.coordinates, map = _a.map, style = _a.style, isScale = _a.isScale;\r\n                return RegularPolygonGeometry.getCenterCoordinate({\r\n                    ctx: ctx,\r\n                    map: map,\r\n                    style: style,\r\n                    isScale: isScale,\r\n                    // @ts-ignore\r\n                    coordinates: __assign({ center: coordinates }, style.regularPolygon),\r\n                });\r\n            },\r\n        ],\r\n        [\r\n            'start',\r\n            function (_a) {\r\n                var ctx = _a.ctx, coordinates = _a.coordinates, map = _a.map, style = _a.style, isScale = _a.isScale;\r\n                return StartGeometry.getCenterCoordinate({\r\n                    ctx: ctx,\r\n                    map: map,\r\n                    style: style,\r\n                    isScale: isScale,\r\n                    // @ts-ignore\r\n                    coordinates: __assign({ center: coordinates }, style.start),\r\n                });\r\n            },\r\n        ],\r\n        [\r\n            'sector',\r\n            function (_a) {\r\n                var ctx = _a.ctx, coordinates = _a.coordinates, map = _a.map, style = _a.style, isScale = _a.isScale;\r\n                return SectorGeometry.getCenterCoordinate({\r\n                    ctx: ctx,\r\n                    map: map,\r\n                    style: style,\r\n                    isScale: isScale,\r\n                    // @ts-ignore\r\n                    coordinates: __assign({ center: coordinates }, style.sector),\r\n                });\r\n            },\r\n        ],\r\n        [\r\n            'rect',\r\n            function (_a) {\r\n                var ctx = _a.ctx, coordinates = _a.coordinates, map = _a.map, style = _a.style, isScale = _a.isScale;\r\n                return RectGeometry.getCenterCoordinate({\r\n                    ctx: ctx,\r\n                    map: map,\r\n                    style: style,\r\n                    isScale: isScale,\r\n                    // @ts-ignore\r\n                    coordinates: __assign({ leftTop: coordinates }, style.rect),\r\n                });\r\n            },\r\n        ],\r\n        [\r\n            'radiusRect',\r\n            function (_a) {\r\n                var ctx = _a.ctx, coordinates = _a.coordinates, map = _a.map, style = _a.style, isScale = _a.isScale;\r\n                return RadiusRectGeometry.getCenterCoordinate({\r\n                    ctx: ctx,\r\n                    map: map,\r\n                    style: style,\r\n                    isScale: isScale,\r\n                    // @ts-ignore\r\n                    coordinates: __assign({ leftTop: coordinates }, style.radiusRect),\r\n                });\r\n            },\r\n        ],\r\n        [\r\n            'leaf',\r\n            function (_a) {\r\n                var ctx = _a.ctx, coordinates = _a.coordinates, map = _a.map, style = _a.style, isScale = _a.isScale;\r\n                return LeafGeometry.getCenterCoordinate({\r\n                    ctx: ctx,\r\n                    map: map,\r\n                    style: style,\r\n                    isScale: isScale,\r\n                    // @ts-ignore\r\n                    coordinates: __assign({ center: coordinates }, style.leaf),\r\n                });\r\n            },\r\n        ],\r\n    ]);\r\n    PointGeometry.pointTypeToCoordinatesMapping = new Map([\r\n        [\r\n            'circle',\r\n            function (coordinates, style) { return ({\r\n                center: coordinates,\r\n                radius: style.radius,\r\n            }); },\r\n        ],\r\n        [\r\n            'image',\r\n            function (coordinates, style) { return ({\r\n                leftTop: coordinates,\r\n                // @ts-ignore\r\n                width: style.img.width,\r\n                // @ts-ignore\r\n                height: style.img.height,\r\n            }); },\r\n        ],\r\n        [\r\n            'regularPolygon',\r\n            function (coordinates, style) { return (__assign({ center: coordinates }, style.regularPolygon)); },\r\n        ],\r\n        [\r\n            'start',\r\n            function (coordinates, style) { return (__assign({ center: coordinates }, style.start)); },\r\n        ],\r\n        [\r\n            'sector',\r\n            function (coordinates, style) { return (__assign({ center: coordinates }, style.sector)); },\r\n        ],\r\n        [\r\n            'rect',\r\n            function (coordinates, style) { return (__assign({ leftTop: coordinates }, style.rect)); },\r\n        ],\r\n        [\r\n            'radiusRect',\r\n            function (coordinates, style) { return (__assign({ leftTop: coordinates }, style.radiusRect)); },\r\n        ],\r\n        [\r\n            'leaf',\r\n            function (coordinates, style) { return (__assign({ center: coordinates }, style.leaf)); },\r\n        ],\r\n    ]);\r\n    return PointGeometry;\r\n}(Geometry));\r\nexport default PointGeometry;\r\n"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","GeometryType","VectorActions","Geometry","GeometryStyle","RegularPolygonGeometry","StartGeometry","SectorGeometry","CircleGeometry","RectGeometry","RadiusRectGeometry","LeafGeometry","ImageCache","PointGeometry","_super","coordinates","_this","setCoordinates","_a","getLayer","getEmitter","trigger","UPDATE","getCoordinates","getType","Point","getCenterCoordinate","ctx","map","style","isScale","centerCoordinateMapping","get","pointType","getMap","drawCirclePoint","drawCircle","radius","center","drawImagePoint","image_1","pixel","pointToPixel","BMap","lng","lat","image","src","_b","img","width","_c","height","_d","drawImage","x","y","Image","onload","add","drawRegularPolygon","regularPolygon","drawStart","start","drawSector","sector","drawRect","rect","leftTop","drawRadiusRect","radiusRect","drawLeaf","leaf","drawPoint","targetStyle","drawMapping","draw","isPixelInGeometry","isPixelInGeometryMapping","pointTypeToCoordinatesMapping","Map"],"mappings":"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"}