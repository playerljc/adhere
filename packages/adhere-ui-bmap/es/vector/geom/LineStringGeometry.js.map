{"version":3,"file":"LineStringGeometry.js","sources":["vector/geom/LineStringGeometry.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n// @ts-ignore\r\nimport MathUtil from '@baifendian/adhere-util/lib/math';\r\nimport { GeometryType, VectorActions, } from '../types';\r\nimport Geometry from './Geometry';\r\nimport GeometryStyle from '../style/GeometryStyle';\r\nimport Util from '../../util';\r\nimport TextStyle from '../style/TextStyle';\r\nvar SIZE = new Map([\r\n    ['small', 3],\r\n    ['normal', 10],\r\n    ['large', 20],\r\n]);\r\n/**\r\n * LineStringGeometry\r\n * @class LineStringGeometry\r\n * @classdesc LineStringGeometry - 直线\r\n */\r\nvar LineStringGeometry = /** @class */ (function (_super) {\r\n    __extends(LineStringGeometry, _super);\r\n    function LineStringGeometry(coordinates) {\r\n        var _this = _super.call(this) || this;\r\n        _this.coordinates = coordinates;\r\n        return _this;\r\n    }\r\n    /**\r\n     * drawStartArrow\r\n     * @param ctx\r\n     * @param style\r\n     * @param coordinates\r\n     * @param map\r\n     */\r\n    LineStringGeometry.drawStartArrow = function (_a) {\r\n        var ctx = _a.ctx, style = _a.style, coordinates = _a.coordinates, map = _a.map;\r\n        ctx.save();\r\n        ctx.beginPath();\r\n        ctx.lineWidth = style.lineWidth;\r\n        ctx.lineJoin = style.lineJoin;\r\n        ctx.lineCap = style.lineCap;\r\n        ctx.setLineDash(style.lineDash);\r\n        ctx.lineDashOffset = style.lineDashOffset;\r\n        ctx.strokeStyle = style.strokeStyle;\r\n        ctx.fillStyle = style.fillStyle;\r\n        // @ts-ignore\r\n        var pixel1 = map.pointToPixel(new BMap.Point(coordinates.point1.lng, coordinates.point1.lat));\r\n        // @ts-ignore\r\n        var pixel2 = map.pointToPixel(new BMap.Point(coordinates.point2.lng, coordinates.point2.lat));\r\n        var _b = Util.getArrowPoints({\r\n            from: pixel2,\r\n            to: pixel1,\r\n            scale: 1,\r\n            width: SIZE.get(style.arrow.size),\r\n        }), A = _b.A, B = _b.B, C = _b.C;\r\n        ctx.moveTo(A.x, A.y);\r\n        ctx.lineTo(B.x, B.y);\r\n        ctx.lineTo(C.x, C.y);\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n        ctx.fill();\r\n        ctx.restore();\r\n    };\r\n    /**\r\n     * drawEndArrow\r\n     * @param ctx\r\n     * @param style\r\n     * @param coordinates\r\n     * @param map\r\n     */\r\n    LineStringGeometry.drawEndArrow = function (_a) {\r\n        var ctx = _a.ctx, style = _a.style, coordinates = _a.coordinates, map = _a.map;\r\n        ctx.save();\r\n        ctx.beginPath();\r\n        ctx.lineWidth = style.lineWidth;\r\n        ctx.lineJoin = style.lineJoin;\r\n        ctx.lineCap = style.lineCap;\r\n        ctx.setLineDash(style.lineDash);\r\n        ctx.lineDashOffset = style.lineDashOffset;\r\n        ctx.strokeStyle = style.strokeStyle;\r\n        ctx.fillStyle = style.fillStyle;\r\n        // @ts-ignore\r\n        var pixel1 = map.pointToPixel(new BMap.Point(coordinates.point1.lng, coordinates.point1.lat));\r\n        // @ts-ignore\r\n        var pixel2 = map.pointToPixel(new BMap.Point(coordinates.point2.lng, coordinates.point2.lat));\r\n        var _b = Util.getArrowPoints({\r\n            from: pixel1,\r\n            to: pixel2,\r\n            scale: 1,\r\n            width: SIZE.get(style.arrow.size),\r\n        }), A = _b.A, B = _b.B, C = _b.C;\r\n        ctx.moveTo(A.x, A.y);\r\n        ctx.lineTo(B.x, B.y);\r\n        ctx.lineTo(C.x, C.y);\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n        ctx.fill();\r\n        ctx.restore();\r\n    };\r\n    /**\r\n     * drawLineString\r\n     * @param ctx\r\n     * @param style\r\n     * @param coordinates\r\n     * @param map\r\n     */\r\n    LineStringGeometry.drawLineString = function (_a) {\r\n        var ctx = _a.ctx, style = _a.style, coordinates = _a.coordinates, map = _a.map;\r\n        ctx.save();\r\n        var targetStyle = __assign(__assign(__assign({}, GeometryStyle), (style || {})), { arrow: {\r\n                draw: false,\r\n                direction: 'end',\r\n                type: 'normal',\r\n                size: 'normal',\r\n            } });\r\n        // 绘制直线\r\n        ctx.beginPath();\r\n        ctx.lineWidth = targetStyle.lineWidth;\r\n        ctx.lineJoin = targetStyle.lineJoin;\r\n        ctx.lineCap = targetStyle.lineCap;\r\n        ctx.setLineDash(targetStyle.lineDash);\r\n        ctx.lineDashOffset = targetStyle.lineDashOffset;\r\n        ctx.strokeStyle = targetStyle.strokeStyle;\r\n        var point1 = coordinates.point1, point2 = coordinates.point2;\r\n        // @ts-ignore\r\n        var pixel1 = map.pointToPixel(new BMap.Point(point1.lng, point1.lat));\r\n        // @ts-ignore\r\n        var pixel2 = map.pointToPixel(new BMap.Point(point2.lng, point2.lat));\r\n        ctx.moveTo(pixel1.x, pixel1.y);\r\n        ctx.lineTo(pixel2.x, pixel2.y);\r\n        ctx.stroke();\r\n        ctx.restore();\r\n        // 在绘制箭头\r\n        if (style.arrow.draw) {\r\n            if (style.arrow.direction === 'start') {\r\n                LineStringGeometry.drawStartArrow({ ctx: ctx, style: targetStyle, coordinates: coordinates, map: map });\r\n            }\r\n            else if (style.arrow.direction === 'end') {\r\n                LineStringGeometry.drawEndArrow({ ctx: ctx, style: targetStyle, coordinates: coordinates, map: map });\r\n            }\r\n            else if (style.arrow.direction === 'bothEnds') {\r\n                LineStringGeometry.drawStartArrow({ ctx: ctx, style: targetStyle, coordinates: coordinates, map: map });\r\n                LineStringGeometry.drawEndArrow({ ctx: ctx, style: targetStyle, coordinates: coordinates, map: map });\r\n            }\r\n        }\r\n    };\r\n    LineStringGeometry.prototype.setCoordinates = function (coordinates) {\r\n        var _a, _b;\r\n        this.coordinates = coordinates;\r\n        (_b = (_a = this === null || this === void 0 ? void 0 : this.getLayer()) === null || _a === void 0 ? void 0 : _a.getEmitter()) === null || _b === void 0 ? void 0 : _b.trigger(VectorActions.UPDATE);\r\n    };\r\n    LineStringGeometry.prototype.getCoordinates = function () {\r\n        return __assign({}, this.coordinates);\r\n    };\r\n    LineStringGeometry.prototype.getType = function () {\r\n        return GeometryType.LineString;\r\n    };\r\n    LineStringGeometry.getCenterCoordinate = function (_a) {\r\n        var ctx = _a.ctx, coordinates = _a.coordinates, map = _a.map, style = _a.style, isScale = _a.isScale;\r\n        var point1 = coordinates.point1, point2 = coordinates.point2;\r\n        var point1Pixel = map.pointToPixel(\r\n        // @ts-ignore\r\n        new BMap.Point(point1.lng, point1.lat));\r\n        var point2Pixel = map.pointToPixel(\r\n        // @ts-ignore\r\n        new BMap.Point(point2.lng, point2.lat));\r\n        return MathUtil.midpoint(point1Pixel, point2Pixel);\r\n    };\r\n    LineStringGeometry.prototype.getCenterCoordinate = function (_a) {\r\n        var ctx = _a.ctx, style = _a.style, isScale = _a.isScale;\r\n        return LineStringGeometry.getCenterCoordinate({\r\n            ctx: ctx,\r\n            coordinates: this.coordinates,\r\n            map: this.getMap(),\r\n            style: style,\r\n            isScale: isScale,\r\n        });\r\n    };\r\n    LineStringGeometry.prototype.draw = function (ctx, style) {\r\n        LineStringGeometry.drawLineString({\r\n            ctx: ctx,\r\n            style: style,\r\n            coordinates: this.coordinates,\r\n            map: this.getMap(),\r\n        });\r\n    };\r\n    LineStringGeometry.prototype.drawText = function (_a) {\r\n        var ctx = _a.ctx, text = _a.text, style = _a.style, textStyle = _a.textStyle;\r\n        ctx.save();\r\n        ctx.beginPath();\r\n        // 先旋转在进行绘制\r\n        var map = this.getMap();\r\n        // 中心点\r\n        var centerPixel = this.getCenterCoordinate({ ctx: ctx, style: style, isScale: true });\r\n        // 平移到中心点\r\n        ctx.translate(centerPixel.x, centerPixel.y);\r\n        var _b = this.coordinates, point1 = _b.point1, point2 = _b.point2;\r\n        // @ts-ignore\r\n        var point1Pixel = map.pointToPixel(new BMap.Point(point1.lng, point1.lat));\r\n        // @ts-ignore\r\n        var point2Pixel = map.pointToPixel(new BMap.Point(point2.lng, point2.lat));\r\n        // 斜率的角度\r\n        var radian = MathUtil.slopToRadian(point1Pixel, point2Pixel);\r\n        // 旋转斜率的角度\r\n        ctx.rotate(radian);\r\n        var targetTextStyle = __assign(__assign({}, TextStyle), (textStyle || {}));\r\n        ctx.font = targetTextStyle.font;\r\n        ctx.textAlign = targetTextStyle.textAlign;\r\n        ctx.textBaseline = targetTextStyle.textBaseline;\r\n        ctx.direction = targetTextStyle.direction;\r\n        ctx.strokeStyle = targetTextStyle.strokeStyle;\r\n        ctx.fillStyle = targetTextStyle.fillStyle;\r\n        var targetStyle = __assign(__assign({}, GeometryStyle), (style || {}));\r\n        ctx.lineWidth = targetStyle.lineWidth;\r\n        ctx.lineJoin = targetStyle.lineJoin;\r\n        ctx.lineCap = targetStyle.lineCap;\r\n        ctx.setLineDash(targetStyle.lineDash);\r\n        ctx.lineDashOffset = targetStyle.lineDashOffset;\r\n        ctx.strokeStyle = targetStyle.strokeStyle;\r\n        ctx.fillText(text || '', 0, 0);\r\n        ctx.restore();\r\n    };\r\n    LineStringGeometry.isPixelInGeometry = function (_a) {\r\n        var pixel = _a.pixel, style = _a.style, coordinates = _a.coordinates, map = _a.map;\r\n        var canvas = document.createElement('canvas');\r\n        var ctx = canvas.getContext('2d');\r\n        if (!ctx)\r\n            return false;\r\n        ctx.beginPath();\r\n        var point1 = coordinates.point1, point2 = coordinates.point2;\r\n        // @ts-ignore\r\n        var pixel1 = map.pointToPixel(new BMap.Point(point1.lng, point1.lat));\r\n        // @ts-ignore\r\n        var pixel2 = map.pointToPixel(new BMap.Point(point2.lng, point2.lat));\r\n        ctx.moveTo(pixel1.x, pixel1.y);\r\n        ctx.lineTo(pixel2.x, pixel2.y);\r\n        return ctx.isPointInPath(pixel.x, pixel.y);\r\n    };\r\n    /**\r\n     * isPixelInGeometry\r\n     * @param pixel\r\n     * @param style\r\n     * @return boolean\r\n     */\r\n    LineStringGeometry.prototype.isPixelInGeometry = function (pixel, style) {\r\n        return LineStringGeometry.isPixelInGeometry({\r\n            pixel: pixel,\r\n            style: style,\r\n            coordinates: this.coordinates,\r\n            map: this.getMap(),\r\n        });\r\n    };\r\n    return LineStringGeometry;\r\n}(Geometry));\r\nexport default LineStringGeometry;\r\n"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","MathUtil","GeometryType","VectorActions","Geometry","GeometryStyle","Util","TextStyle","SIZE","Map","LineStringGeometry","_super","coordinates","_this","drawStartArrow","_a","ctx","style","map","save","beginPath","lineWidth","lineJoin","lineCap","setLineDash","lineDash","lineDashOffset","strokeStyle","fillStyle","pixel1","pointToPixel","BMap","Point","point1","lng","lat","pixel2","point2","_b","getArrowPoints","from","to","scale","width","get","arrow","size","A","B","C","moveTo","x","y","lineTo","closePath","stroke","fill","restore","drawEndArrow","drawLineString","targetStyle","draw","direction","type","setCoordinates","getLayer","getEmitter","trigger","UPDATE","getCoordinates","getType","LineString","getCenterCoordinate","isScale","point1Pixel","point2Pixel","midpoint","getMap","drawText","text","textStyle","centerPixel","translate","radian","slopToRadian","rotate","targetTextStyle","font","textAlign","textBaseline","fillText","isPixelInGeometry","pixel","document","createElement","getContext","isPointInPath"],"mappings":"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"}