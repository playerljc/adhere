{"version":3,"file":"TextGeometry.js","sources":["vector/geom/TextGeometry.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nimport { GeometryType, VectorActions, } from '../types';\r\nimport Geometry from './Geometry';\r\nimport TextStyle from '../style/TextStyle';\r\n/**\r\n * TextGeometry\r\n * @class TextGeometry\r\n * @classdesc TextGeometry - 文本\r\n */\r\nvar TextGeometry = /** @class */ (function (_super) {\r\n    __extends(TextGeometry, _super);\r\n    function TextGeometry(coordinates) {\r\n        var _this = _super.call(this) || this;\r\n        _this.coordinates = coordinates;\r\n        return _this;\r\n    }\r\n    TextGeometry.prototype.setCoordinates = function (coordinates) {\r\n        var _a;\r\n        this.coordinates = coordinates;\r\n        (_a = this === null || this === void 0 ? void 0 : this.getLayer()) === null || _a === void 0 ? void 0 : _a.getEmitter().trigger(VectorActions.UPDATE);\r\n    };\r\n    TextGeometry.prototype.getCoordinates = function () {\r\n        return __assign({}, this.coordinates);\r\n    };\r\n    TextGeometry.prototype.getType = function () {\r\n        return GeometryType.Text;\r\n    };\r\n    TextGeometry.getCenterCoordinate = function (coordinates) {\r\n        return __assign({}, coordinates.point);\r\n    };\r\n    // @ts-ignore\r\n    TextGeometry.prototype.getCenterCoordinate = function () {\r\n        return TextGeometry.getCenterCoordinate(this.coordinates);\r\n    };\r\n    // @ts-ignore\r\n    TextGeometry.prototype.draw = function (ctx, style) {\r\n        ctx.save();\r\n        var targetStyle = __assign(__assign({}, TextStyle), (style || {}));\r\n        ctx.beginPath();\r\n        ctx.font = targetStyle.font;\r\n        ctx.textAlign = targetStyle.textAlign;\r\n        ctx.textBaseline = targetStyle.textBaseline;\r\n        ctx.direction = targetStyle.direction;\r\n        ctx.fillStyle = targetStyle.fillStyle;\r\n        ctx.strokeStyle = targetStyle.strokeStyle;\r\n        var map = this.getMap();\r\n        var _a = this.coordinates, text = _a.text, point = _a.point;\r\n        // @ts-ignore\r\n        var pixel = map.pointToPixel(new BMap.Point(point.lng, point.lat));\r\n        ctx.fillText(text, pixel.x, pixel.y);\r\n        ctx.restore();\r\n    };\r\n    /**\r\n     * isPixelInGeometry\r\n     * @param pixel\r\n     * @return boolean\r\n     */\r\n    TextGeometry.prototype.isPixelInGeometry = function (pixel) {\r\n        return false;\r\n    };\r\n    return TextGeometry;\r\n}(Geometry));\r\nexport default TextGeometry;\r\n"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","GeometryType","VectorActions","Geometry","TextStyle","TextGeometry","_super","coordinates","_this","setCoordinates","_a","getLayer","getEmitter","trigger","UPDATE","getCoordinates","getType","Text","getCenterCoordinate","point","draw","ctx","style","save","targetStyle","beginPath","font","textAlign","textBaseline","direction","fillStyle","strokeStyle","map","getMap","text","pixel","pointToPixel","BMap","Point","lng","lat","fillText","x","y","restore","isPixelInGeometry"],"mappings":"AAAA,IAAIA,UAAaC,MAAQA,KAAKD,WAAc,WACxC,IAAIE,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASO,IAAOV,KAAKW,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMO,EAAGE,UAAYT,EAAES,UAAW,IAAIF,IAV3C,GAaxCI,SAAYd,MAAQA,KAAKc,UAAa,WAStC,OARAA,SAAWV,OAAOW,QAAU,SAASC,GACjC,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAIV,KADTS,EAAIG,UAAUF,GACOd,OAAOQ,UAAUH,eAAea,KAAKL,EAAGT,KACzDQ,EAAER,GAAKS,EAAET,IAEjB,OAAOQ,IAEKO,MAAMvB,KAAMoB,mBAEvBI,aAAcC,oCAChBC,iCACAC,mCAMP,IAAIC,aAA8B,SAAUC,GAExC,SAASD,EAAaE,GAClB,IAAIC,EAAQF,EAAOP,KAAKtB,OAASA,KAEjC,OADA+B,EAAMD,YAAcA,EACbC,EA8CX,OAlDAhC,UAAU6B,EAAcC,GAMxBD,EAAahB,UAAUoB,eAAiB,SAAUF,GAE9C9B,KAAK8B,YAAcA,EACoD,QAAtEG,EAAKjC,MAAAA,UAAmC,EAASA,KAAKkC,kBAA+B,IAAPD,GAAyBA,EAAGE,aAAaC,QAAQX,cAAcY,SAElJT,EAAahB,UAAU0B,eAAiB,WACpC,OAAOxB,SAAS,GAAId,KAAK8B,cAE7BF,EAAahB,UAAU2B,QAAU,WAC7B,OAAOf,aAAagB,MAExBZ,EAAaa,oBAAsB,SAAUX,GACzC,OAAOhB,SAAS,GAAIgB,EAAYY,QAGpCd,EAAahB,UAAU6B,oBAAsB,WACzC,OAAOb,EAAaa,oBAAoBzC,KAAK8B,cAGjDF,EAAahB,UAAU+B,KAAO,SAAUC,EAAKC,GACzCD,EAAIE,OACJ,IAAIC,EAAcjC,SAASA,SAAS,GAAIa,WAAakB,GAAS,IAC9DD,EAAII,YACJJ,EAAIK,KAAOF,EAAYE,KACvBL,EAAIM,UAAYH,EAAYG,UAC5BN,EAAIO,aAAeJ,EAAYI,aAC/BP,EAAIQ,UAAYL,EAAYK,UAC5BR,EAAIS,UAAYN,EAAYM,UAC5BT,EAAIU,YAAcP,EAAYO,YAC9B,IAAIC,EAAMvD,KAAKwD,SACXvB,EAAKjC,KAAK8B,YAAa2B,EAAOxB,EAAGwB,KAAMf,EAAQT,EAAGS,MAElDgB,EAAQH,EAAII,aAAa,IAAIC,KAAKC,MAAMnB,EAAMoB,IAAKpB,EAAMqB,MAC7DnB,EAAIoB,SAASP,EAAMC,EAAMO,EAAGP,EAAMQ,GAClCtB,EAAIuB,WAORvC,EAAahB,UAAUwD,kBAAoB,SAAUV,GACjD,OAAO,GAEJ9B,EAnDsB,CAoD/BF,yBACaE"}