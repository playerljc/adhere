var __extends=this&&this.__extends||function(){var n=function(t,e){return(n=Object.setPrototypeOf||({__proto__:[]}instanceof Array?function(t,e){t.__proto__=e}:function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])}))(t,e)};return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function o(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(o.prototype=e.prototype,new o)}}(),__assign=this&&this.__assign||function(){return(__assign=Object.assign||function(t){for(var e,o=1,n=arguments.length;o<n;o++)for(var r in e=arguments[o])Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t}).apply(this,arguments)},__spreadArray=this&&this.__spreadArray||function(t,e,o){if(o||2===arguments.length)for(var n,r=0,i=e.length;r<i;r++)!n&&r in e||((n=n||Array.prototype.slice.call(e,0,r))[r]=e[r]);return t.concat(n||Array.prototype.slice.call(e))};import*as turf from"@turf/turf";import GeometryStyle from"../style/GeometryStyle";import{GeometryType,VectorActions}from"../types";import Geometry from"./Geometry";var PolygonGeometry=function(o){function n(t){var e=o.call(this)||this;return e.coordinates=t,e}return __extends(n,o),n.prototype.setCoordinates=function(t){this.coordinates=t,null!=(t=null==this?void 0:this.getLayer())&&t.getEmitter().trigger(VectorActions.UPDATE)},n.prototype.getCoordinates=function(){return __spreadArray([],this.coordinates,!0)},n.prototype.getType=function(){return GeometryType.Polygon},n.getCenterCoordinate=function(t){t.ctx;var e=t.coordinates,o=t.map,t=(t.style,t.isScale,turf.polygon([e.map(function(t){t=o.pointToPixel(new BMap.Point(t.lng,t.lat));return[t.x,t.y]})])),e=turf.centerOfMass(t);return{x:e.geometry.coordinates[0],y:e.geometry.coordinates[1]}},n.prototype.getCenterCoordinate=function(t){var e=t.ctx,o=t.style,t=t.isScale;return n.getCenterCoordinate({coordinates:this.coordinates,ctx:e,map:this.getMap(),style:o,isScale:t})},n.drawPolygon=function(t){var o=t.ctx,e=t.style,n=t.coordinates,r=t.map,t=(o.save(),__assign(__assign({},GeometryStyle),null!=e?e:{}));o.beginPath(),o.lineWidth=t.lineWidth,o.lineJoin=t.lineJoin,o.lineCap=t.lineCap,o.setLineDash(t.lineDash),o.lineDashOffset=t.lineDashOffset,o.strokeStyle=t.strokeStyle,o.fillStyle=t.fillStyle,n.forEach(function(t,e){t=r.pointToPixel(new BMap.Point(t.lng,t.lat));0===e?o.moveTo(t.x,t.y):o.lineTo(t.x,t.y)}),o.stroke(),o.fill(),o.restore()},n.prototype.draw=function(t,e){n.drawPolygon({ctx:t,style:e,coordinates:this.coordinates,map:this.getMap()})},n.isPixelInGeometry=function(t){var e=t.coordinates,o=t.map,t=t.pixel,t=turf.point([t.x,t.y]),e=turf.polygon([e.map(function(t){t=o.pointToPixel(new BMap.Point(t.lng,t.lat));return[t.x,t.y]})]);return turf.booleanPointInPolygon(t,e)},n.prototype.isPixelInGeometry=function(t){return n.isPixelInGeometry({coordinates:this.coordinates,pixel:t,map:this.getMap()})},n}(Geometry);export default PolygonGeometry;
//# sourceMappingURL=PolygonGeometry.js.map
