{"version":3,"file":"RectGeometry.js","sources":["vector/geom/RectGeometry.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nimport * as turf from '@turf/turf';\r\nimport Util from '../../util';\r\nimport GeometryStyle from '../style/GeometryStyle';\r\nimport { GeometryType, VectorActions, } from '../types';\r\nimport Geometry from './Geometry';\r\n/**\r\n * RectGeometry\r\n * @class RectGeometry\r\n * @classdesc RectGeometry - 矩形\r\n */\r\nvar RectGeometry = /** @class */ (function (_super) {\r\n    __extends(RectGeometry, _super);\r\n    function RectGeometry(coordinates) {\r\n        var _this = _super.call(this) || this;\r\n        _this.coordinates = coordinates;\r\n        return _this;\r\n    }\r\n    RectGeometry.prototype.setCoordinates = function (coordinates) {\r\n        var _a;\r\n        this.coordinates = coordinates;\r\n        (_a = this === null || this === void 0 ? void 0 : this.getLayer()) === null || _a === void 0 ? void 0 : _a.getEmitter().trigger(VectorActions.UPDATE);\r\n    };\r\n    RectGeometry.prototype.getCoordinates = function () {\r\n        return __assign({}, this.coordinates);\r\n    };\r\n    RectGeometry.prototype.getType = function () {\r\n        return GeometryType.Rect;\r\n    };\r\n    RectGeometry.getCenterCoordinate = function (_a) {\r\n        var ctx = _a.ctx, coordinates = _a.coordinates, map = _a.map, style = _a.style, isScale = _a.isScale;\r\n        var leftTop = coordinates.leftTop, width = coordinates.width, height = coordinates.height;\r\n        // @ts-ignore\r\n        var leftTopPixel = map.pointToPixel(new BMap.Point(leftTop.lng, leftTop.lat));\r\n        // 比例尺\r\n        var scale = Util.getScale(map);\r\n        var realWidth = width;\r\n        var realHeight = height;\r\n        if (isScale) {\r\n            realWidth = scale * width;\r\n            realHeight = scale * height;\r\n        }\r\n        var features = turf.featureCollection([\r\n            turf.point([leftTopPixel.x, leftTopPixel.y]),\r\n            turf.point([leftTopPixel.x + realWidth, leftTopPixel.y]),\r\n            turf.point([leftTopPixel.x + realWidth, leftTopPixel.y + realHeight]),\r\n            turf.point([leftTopPixel.x, leftTopPixel.y + realHeight]),\r\n        ]);\r\n        var center = turf.center(features);\r\n        return {\r\n            x: center.geometry.coordinates[0],\r\n            y: center.geometry.coordinates[1],\r\n        };\r\n    };\r\n    RectGeometry.prototype.getCenterCoordinate = function (_a) {\r\n        var ctx = _a.ctx, style = _a.style, isScale = _a.isScale;\r\n        return RectGeometry.getCenterCoordinate({\r\n            coordinates: this.coordinates,\r\n            ctx: ctx,\r\n            map: this.getMap(),\r\n            style: style,\r\n            isScale: isScale,\r\n        });\r\n    };\r\n    /**\r\n     * drawRect\r\n     * @param ctx\r\n     * @param style\r\n     * @param coordinates\r\n     * @param isScale\r\n     * @param map\r\n     */\r\n    RectGeometry.drawRect = function (_a) {\r\n        var ctx = _a.ctx, style = _a.style, coordinates = _a.coordinates, map = _a.map, isScale = _a.isScale;\r\n        ctx.save();\r\n        var targetStyle = __assign(__assign({}, GeometryStyle), (style || {}));\r\n        ctx.beginPath();\r\n        ctx.lineWidth = targetStyle.lineWidth;\r\n        ctx.lineJoin = targetStyle.lineJoin;\r\n        ctx.lineCap = targetStyle.lineCap;\r\n        ctx.setLineDash(targetStyle.lineDash);\r\n        ctx.lineDashOffset = targetStyle.lineDashOffset;\r\n        ctx.strokeStyle = targetStyle.strokeStyle;\r\n        ctx.fillStyle = targetStyle.fillStyle;\r\n        var leftTop = coordinates.leftTop, width = coordinates.width, height = coordinates.height;\r\n        // @ts-ignore\r\n        var pixel = map.pointToPixel(new BMap.Point(leftTop.lng, leftTop.lat));\r\n        // 比例尺\r\n        var scale = Util.getScale(map);\r\n        // 实际的宽度(图上距离)\r\n        var realWidth = width;\r\n        // 实际的高度(图上距离)\r\n        var realHeight = height;\r\n        if (isScale) {\r\n            realWidth = scale * width;\r\n            realHeight = scale * height;\r\n        }\r\n        ctx.rect(pixel.x, pixel.y, realWidth, realHeight);\r\n        ctx.stroke();\r\n        ctx.fill();\r\n        ctx.restore();\r\n    };\r\n    /**\r\n     * draw - 绘制\r\n     * @param ctx\r\n     * @param style\r\n     */\r\n    RectGeometry.prototype.draw = function (ctx, style) {\r\n        RectGeometry.drawRect({\r\n            ctx: ctx,\r\n            style: style,\r\n            coordinates: this.coordinates,\r\n            map: this.getMap(),\r\n            isScale: true,\r\n        });\r\n    };\r\n    RectGeometry.isPixelInGeometry = function (_a) {\r\n        // const { leftTop, width, height } = coordinates;\r\n        //\r\n        // const scale = Util.getScale(map);\r\n        //\r\n        // // @ts-ignore\r\n        // const leftTopPixel = map.pointToPixel(new BMap.Point(leftTop.lng, leftTop.lat));\r\n        //\r\n        // let realWidth = width;\r\n        // let realHeight = height;\r\n        //\r\n        // if (isScale) {\r\n        //   realWidth = scale * width;\r\n        //   realHeight = scale * height;\r\n        // }\r\n        //\r\n        // const point = turf.point([pixel.x, pixel.y]);\r\n        //\r\n        // const poly = turf.polygon([\r\n        //   [\r\n        //     [leftTopPixel.x, leftTopPixel.y],\r\n        //     [leftTopPixel.x + realWidth, leftTopPixel.y],\r\n        //     [leftTopPixel.x + realWidth, leftTopPixel.y + realHeight],\r\n        //     [leftTopPixel.x, leftTopPixel.y + realHeight],\r\n        //     [leftTopPixel.x, leftTopPixel.y],\r\n        //   ],\r\n        // ]);\r\n        //\r\n        // return turf.booleanPointInPolygon(point, poly);\r\n        var coordinates = _a.coordinates, map = _a.map, style = _a.style, pixel = _a.pixel, isScale = _a.isScale;\r\n        var canvas = document.createElement('canvas');\r\n        var ctx = canvas.getContext('2d');\r\n        if (!ctx)\r\n            return false;\r\n        RectGeometry.drawRect({\r\n            ctx: ctx,\r\n            coordinates: coordinates,\r\n            // @ts-ignore\r\n            style: style,\r\n            map: map,\r\n            isScale: isScale,\r\n        });\r\n        return ctx.isPointInPath(pixel.x, pixel.y);\r\n    };\r\n    /**\r\n     * isPixelInGeometry\r\n     * @param pixel\r\n     * @param style\r\n     * @return boolean\r\n     */\r\n    RectGeometry.prototype.isPixelInGeometry = function (pixel, style) {\r\n        return RectGeometry.isPixelInGeometry({\r\n            coordinates: this.coordinates,\r\n            map: this.getMap(),\r\n            style: style,\r\n            isScale: true,\r\n            pixel: pixel,\r\n        });\r\n    };\r\n    return RectGeometry;\r\n}(Geometry));\r\nexport default RectGeometry;\r\n"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__assign","assign","t","s","i","n","arguments","length","apply","turf","Util","GeometryStyle","GeometryType","VectorActions","Geometry","RectGeometry","_super","coordinates","_this","setCoordinates","_a","getLayer","getEmitter","trigger","UPDATE","getCoordinates","getType","Rect","getCenterCoordinate","ctx","map","isScale","style","leftTop","width","height","leftTopPixel","pointToPixel","BMap","Point","lng","lat","scale","getScale","realWidth","realHeight","features","featureCollection","point","x","y","center","geometry","getMap","drawRect","targetStyle","save","beginPath","lineWidth","lineJoin","lineCap","setLineDash","lineDash","lineDashOffset","strokeStyle","fillStyle","pixel","rect","stroke","fill","restore","draw","isPixelInGeometry","document","createElement","getContext","isPointInPath"],"mappings":"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"}