{"version":3,"file":"RectGeometry.js","sources":["vector/geom/RectGeometry.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as turf from '@turf/turf';\nimport Util from '../../util';\nimport GeometryStyle from '../style/GeometryStyle';\nimport { GeometryType, VectorActions, } from '../types';\nimport Geometry from './Geometry';\n/**\n * RectGeometry\n * @class RectGeometry\n * @classdesc RectGeometry - 矩形\n */\nvar RectGeometry = /** @class */ (function (_super) {\n    __extends(RectGeometry, _super);\n    function RectGeometry(coordinates) {\n        var _this = _super.call(this) || this;\n        _this.coordinates = coordinates;\n        return _this;\n    }\n    RectGeometry.prototype.setCoordinates = function (coordinates) {\n        var _a;\n        this.coordinates = coordinates;\n        (_a = this === null || this === void 0 ? void 0 : this.getLayer()) === null || _a === void 0 ? void 0 : _a.getEmitter().trigger(VectorActions.UPDATE);\n    };\n    RectGeometry.prototype.getCoordinates = function () {\n        return __assign({}, this.coordinates);\n    };\n    RectGeometry.prototype.getType = function () {\n        return GeometryType.Rect;\n    };\n    RectGeometry.getCenterCoordinate = function (_a) {\n        var ctx = _a.ctx, coordinates = _a.coordinates, map = _a.map, style = _a.style, isScale = _a.isScale;\n        var leftTop = coordinates.leftTop, width = coordinates.width, height = coordinates.height;\n        // @ts-ignore\n        var leftTopPixel = map.pointToPixel(new BMap.Point(leftTop.lng, leftTop.lat));\n        // 比例尺\n        var scale = Util.getScale(map);\n        var realWidth = width;\n        var realHeight = height;\n        if (isScale) {\n            realWidth = scale * width;\n            realHeight = scale * height;\n        }\n        var features = turf.featureCollection([\n            turf.point([leftTopPixel.x, leftTopPixel.y]),\n            turf.point([leftTopPixel.x + realWidth, leftTopPixel.y]),\n            turf.point([leftTopPixel.x + realWidth, leftTopPixel.y + realHeight]),\n            turf.point([leftTopPixel.x, leftTopPixel.y + realHeight]),\n        ]);\n        var center = turf.center(features);\n        return {\n            x: center.geometry.coordinates[0],\n            y: center.geometry.coordinates[1],\n        };\n    };\n    RectGeometry.prototype.getCenterCoordinate = function (_a) {\n        var ctx = _a.ctx, style = _a.style, isScale = _a.isScale;\n        return RectGeometry.getCenterCoordinate({\n            coordinates: this.coordinates,\n            ctx: ctx,\n            map: this.getMap(),\n            style: style,\n            isScale: isScale,\n        });\n    };\n    /**\n     * drawRect\n     * @param ctx\n     * @param style\n     * @param coordinates\n     * @param isScale\n     * @param map\n     */\n    RectGeometry.drawRect = function (_a) {\n        var ctx = _a.ctx, style = _a.style, coordinates = _a.coordinates, map = _a.map, isScale = _a.isScale;\n        ctx.save();\n        var targetStyle = __assign(__assign({}, GeometryStyle), (style !== null && style !== void 0 ? style : {}));\n        ctx.beginPath();\n        ctx.lineWidth = targetStyle.lineWidth;\n        ctx.lineJoin = targetStyle.lineJoin;\n        ctx.lineCap = targetStyle.lineCap;\n        ctx.setLineDash(targetStyle.lineDash);\n        ctx.lineDashOffset = targetStyle.lineDashOffset;\n        ctx.strokeStyle = targetStyle.strokeStyle;\n        ctx.fillStyle = targetStyle.fillStyle;\n        var leftTop = coordinates.leftTop, width = coordinates.width, height = coordinates.height;\n        // @ts-ignore\n        var pixel = map.pointToPixel(new BMap.Point(leftTop.lng, leftTop.lat));\n        // 比例尺\n        var scale = Util.getScale(map);\n        // 实际的宽度(图上距离)\n        var realWidth = width;\n        // 实际的高度(图上距离)\n        var realHeight = height;\n        if (isScale) {\n            realWidth = scale * width;\n            realHeight = scale * height;\n        }\n        ctx.rect(pixel.x, pixel.y, realWidth, realHeight);\n        ctx.stroke();\n        ctx.fill();\n        ctx.restore();\n    };\n    /**\n     * draw - 绘制\n     * @param ctx\n     * @param style\n     */\n    RectGeometry.prototype.draw = function (ctx, style) {\n        RectGeometry.drawRect({\n            ctx: ctx,\n            style: style,\n            coordinates: this.coordinates,\n            map: this.getMap(),\n            isScale: true,\n        });\n    };\n    RectGeometry.isPixelInGeometry = function (_a) {\n        // const { leftTop, width, height } = coordinates;\n        //\n        // const scale = Util.getScale(map);\n        //\n        // // @ts-ignore\n        // const leftTopPixel = map.pointToPixel(new BMap.Point(leftTop.lng, leftTop.lat));\n        //\n        // let realWidth = width;\n        // let realHeight = height;\n        //\n        // if (isScale) {\n        //   realWidth = scale * width;\n        //   realHeight = scale * height;\n        // }\n        //\n        // const point = turf.point([pixel.x, pixel.y]);\n        //\n        // const poly = turf.polygon([\n        //   [\n        //     [leftTopPixel.x, leftTopPixel.y],\n        //     [leftTopPixel.x + realWidth, leftTopPixel.y],\n        //     [leftTopPixel.x + realWidth, leftTopPixel.y + realHeight],\n        //     [leftTopPixel.x, leftTopPixel.y + realHeight],\n        //     [leftTopPixel.x, leftTopPixel.y],\n        //   ],\n        // ]);\n        //\n        // return turf.booleanPointInPolygon(point, poly);\n        var coordinates = _a.coordinates, map = _a.map, style = _a.style, pixel = _a.pixel, isScale = _a.isScale;\n        var canvas = document.createElement('canvas');\n        var ctx = canvas.getContext('2d');\n        if (!ctx)\n            return false;\n        RectGeometry.drawRect({\n            ctx: ctx,\n            coordinates: coordinates,\n            // @ts-ignore\n            style: style,\n            map: map,\n            isScale: isScale,\n        });\n        return ctx.isPointInPath(pixel.x, pixel.y);\n    };\n    /**\n     * isPixelInGeometry\n     * @param pixel\n     * @param style\n     * @return boolean\n     */\n    RectGeometry.prototype.isPixelInGeometry = function (pixel, style) {\n        return RectGeometry.isPixelInGeometry({\n            coordinates: this.coordinates,\n            map: this.getMap(),\n            style: style,\n            isScale: true,\n            pixel: pixel,\n        });\n    };\n    return RectGeometry;\n}(Geometry));\nexport default RectGeometry;\n"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__assign","assign","t","s","i","n","arguments","length","apply","turf","Util","GeometryStyle","GeometryType","VectorActions","Geometry","RectGeometry","_super","coordinates","_this","setCoordinates","_a","getLayer","getEmitter","trigger","UPDATE","getCoordinates","getType","Rect","getCenterCoordinate","ctx","map","isScale","style","leftTop","width","height","leftTopPixel","pointToPixel","BMap","Point","lng","lat","scale","getScale","realWidth","realHeight","features","featureCollection","point","x","y","center","geometry","getMap","drawRect","targetStyle","save","beginPath","lineWidth","lineJoin","lineCap","setLineDash","lineDash","lineDashOffset","strokeStyle","fillStyle","pixel","rect","stroke","fill","restore","draw","isPixelInGeometry","document","createElement","getContext","isPointInPath"],"mappings":"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"}