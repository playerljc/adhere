{"version":3,"file":"show.js","sources":["show.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { deal } from './util';\r\n/**\r\n * ConditionalRenderShow - 知识用于切换css的display\r\n * @class ConditionalRenderShow\r\n * @classdesc 只能用于children或noMatch为html元素，或为组件的时候组件需要保证组件的props中含有style且style属性需要混入到组件\r\n * 根元素的style中，如果是Array则每一个元素都需要满足以上两个条件中的一种\r\n */\r\nfunction ConditionalRenderShow(_a) {\r\n    var conditional = _a.conditional, noMatch = _a.noMatch, children = _a.children;\r\n    children = deal({\r\n        element: children,\r\n        conditional: conditional,\r\n        prop: 'display',\r\n        value: conditional ? '' : 'none',\r\n    });\r\n    // @ts-ignore\r\n    noMatch = deal({\r\n        element: noMatch,\r\n        conditional: conditional,\r\n        prop: 'display',\r\n        value: conditional ? 'none' : '',\r\n    });\r\n    return (React.createElement(React.Fragment, null,\r\n        children,\r\n        noMatch));\r\n}\r\nConditionalRenderShow.defaultProps = {\r\n    conditional: true,\r\n    noMatch: null,\r\n};\r\nConditionalRenderShow.propTypes = {\r\n    conditional: PropTypes.bool,\r\n    noMatch: PropTypes.node,\r\n};\r\nexport default ConditionalRenderShow;\r\n"],"names":["PropTypes","React","deal","ConditionalRenderShow","_a","conditional","noMatch","children","element","prop","value","createElement","Fragment","defaultProps","propTypes","bool","node"],"mappings":"OAAOA,kCACAC,yBACEC,kBAOT,SAASC,sBAAsBC,GAC3B,IAAIC,EAAcD,EAAGC,YAAaC,EAAUF,EAAGE,QAASC,EAAWH,EAAGG,SACtEA,EAAWL,KAAK,CACZM,QAASD,EACTF,YAAaA,EACbI,KAAM,UACNC,MAAOL,EAAc,GAAK,SAG9BC,EAAUJ,KAAK,CACXM,QAASF,EACTD,YAAaA,EACbI,KAAM,UACNC,MAAOL,EAAc,OAAS,KAElC,OAAQJ,MAAMU,cAAcV,MAAMW,SAAU,KACxCL,EACAD,GAERH,sBAAsBU,aAAe,CACjCR,aAAa,EACbC,QAAS,MAEbH,sBAAsBW,UAAY,CAC9BT,YAAaL,UAAUe,KACvBT,QAASN,UAAUgB,qBAERb"}