{"version":3,"file":"visibility.js","sources":["visibility.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { deal } from './util';\r\n/**\r\n * ConditionalRenderVisibility - 知识用于切换css的visibility\r\n * @class ConditionalRenderVisibility\r\n * @classdesc 只能用于children或noMatch为html元素，或为组件的时候组件需要保证组件的props中含有style且style属性需要混入到组件\r\n * 根元素的style中，如果是Array则每一个元素都需要满足以上两个条件中的一种\r\n */\r\nfunction ConditionalRenderVisibility(_a) {\r\n    var conditional = _a.conditional, noMatch = _a.noMatch, children = _a.children;\r\n    children = deal({\r\n        element: children,\r\n        conditional: conditional,\r\n        prop: 'visibility',\r\n        value: conditional ? 'visible' : 'hidden',\r\n    });\r\n    // @ts-ignore\r\n    noMatch = deal({\r\n        element: noMatch,\r\n        conditional: conditional,\r\n        prop: 'visibility',\r\n        value: conditional ? 'hidden' : 'visible',\r\n    });\r\n    return (React.createElement(React.Fragment, null,\r\n        children,\r\n        noMatch));\r\n}\r\nConditionalRenderVisibility.defaultProps = {\r\n    conditional: true,\r\n    noMatch: null,\r\n};\r\nConditionalRenderVisibility.propTypes = {\r\n    conditional: PropTypes.bool,\r\n    noMatch: PropTypes.node,\r\n};\r\nexport default ConditionalRenderVisibility;\r\n"],"names":["React","PropTypes","deal","ConditionalRenderVisibility","_a","conditional","noMatch","children","element","prop","value","createElement","Fragment","defaultProps","propTypes","bool","node"],"mappings":"OAAOA,yBACAC,kCACEC,kBAOT,SAASC,4BAA4BC,GACjC,IAAIC,EAAcD,EAAGC,YAAaC,EAAUF,EAAGE,QAASC,EAAWH,EAAGG,SACtEA,EAAWL,KAAK,CACZM,QAASD,EACTF,YAAaA,EACbI,KAAM,aACNC,MAAOL,EAAc,UAAY,WAGrCC,EAAUJ,KAAK,CACXM,QAASF,EACTD,YAAaA,EACbI,KAAM,aACNC,MAAOL,EAAc,SAAW,YAEpC,OAAQL,MAAMW,cAAcX,MAAMY,SAAU,KACxCL,EACAD,GAERH,4BAA4BU,aAAe,CACvCR,aAAa,EACbC,QAAS,MAEbH,4BAA4BW,UAAY,CACpCT,YAAaJ,UAAUc,KACvBT,QAASL,UAAUe,qBAERb"}