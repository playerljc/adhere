import _Transfer from"@baifendian/adhere-ui-anthoc/es/transfer";var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(a){for(var e,t=1,r=arguments.length;t<r;t++)for(var n in e=arguments[t])Object.prototype.hasOwnProperty.call(e,n)&&(a[n]=e[n]);return a}).apply(this,arguments)},__rest=this&&this.__rest||function(a,e){var t={};for(n in a)Object.prototype.hasOwnProperty.call(a,n)&&e.indexOf(n)<0&&(t[n]=a[n]);if(null!=a&&"function"==typeof Object.getOwnPropertySymbols)for(var r=0,n=Object.getOwnPropertySymbols(a);r<n.length;r++)e.indexOf(n[r])<0&&Object.prototype.propertyIsEnumerable.call(a,n[r])&&(t[n[r]]=a[n[r]]);return t};import React from"react";import{setItem}from"../ItemFactory";import{useAutoCompleteDict,useDict,useDynamicDict}from"../hooks";setItem("Transfer","Standard",function(r){return function(a){var e=a.cascadeParams,t=a.onDataSourceChange,a=__rest(a,["cascadeParams","onDataSourceChange"]),e=useDict({dictName:r,cascadeParams:e,onDataSourceChange:t});return React.createElement(_Transfer,__assign({},a,{dataSource:e}))}}),setItem("Transfer","Select",function(r){return function(a){var e=a.cascadeParams,t=a.onDataSourceChange,a=__rest(a,["cascadeParams","onDataSourceChange"]),e=useDict({dictName:r,cascadeParams:e,onDataSourceChange:t});return React.createElement(_Transfer.TransferSelect,__assign({},a,{options:e}))}}),setItem("TransferDynamic","Standard",function(r){return function(a){var e=a.cascadeParams,t=a.onDataSourceChange,a=__rest(a,["cascadeParams","onDataSourceChange"]),e=useDynamicDict({dictName:r,cascadeParams:e,onDataSourceChange:t});return React.createElement(_Transfer,__assign({},a,{dataSource:e}))}}),setItem("TransferDynamic","Select",function(r){return function(a){var e=a.cascadeParams,t=a.onDataSourceChange,a=__rest(a,["cascadeParams","onDataSourceChange"]),e=useDynamicDict({dictName:r,cascadeParams:e,onDataSourceChange:t});return React.createElement(_Transfer.TransferSelect,__assign({},a,{options:e}))}}),setItem("AutoCompleteTransfer","Standard",function(r){return function(a){var e=a.cascadeParams,t=a.onDataSourceChange,a=__rest(a,["cascadeParams","onDataSourceChange"]),e=useAutoCompleteDict({dictName:r,cascadeParams:e,onDataSourceChange:t}),t=e.options,e=e.loadData;return React.createElement(_Transfer.AutoCompleteTransferSelect,__assign({},a,{options:t,loadData:e}))}});
//# sourceMappingURL=Transfer.js.map
