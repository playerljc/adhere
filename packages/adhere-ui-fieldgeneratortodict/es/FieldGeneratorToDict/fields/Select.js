import _MultipleSelect from"@baifendian/adhere-ui-anthoc/es/multiple-select";import _Select from"@baifendian/adhere-ui-anthoc/es/select";var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(e){for(var a,t=1,c=arguments.length;t<c;t++)for(var n in a=arguments[t])Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n]);return e}).apply(this,arguments)},__rest=this&&this.__rest||function(e,a){var t={};for(n in e)Object.prototype.hasOwnProperty.call(e,n)&&a.indexOf(n)<0&&(t[n]=e[n]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var c=0,n=Object.getOwnPropertySymbols(e);c<n.length;c++)a.indexOf(n[c])<0&&Object.prototype.propertyIsEnumerable.call(e,n[c])&&(t[n[c]]=e[n[c]]);return t};import React from"react";import{setItem}from"../ItemFactory";import{useAutoCompleteDict,useDict,useDynamicDict}from"../hooks";setItem("Select","Standard",function(c){return function(e){var a=e.cascadeParams,t=e.onDataSourceChange,e=__rest(e,["cascadeParams","onDataSourceChange"]),a=useDict({dictName:c,cascadeParams:a,onDataSourceChange:t});return React.createElement(_Select,__assign({},e,{options:a}))}}),setItem("Select","Multi",function(c){return function(e){var a=e.cascadeParams,t=e.onDataSourceChange,e=__rest(e,["cascadeParams","onDataSourceChange"]),a=useDict({dictName:c,cascadeParams:a,onDataSourceChange:t});return React.createElement(_MultipleSelect,__assign({},e,{options:a}))}}),setItem("Select","CheckAll",function(c){return function(e){var a=e.cascadeParams,t=e.onDataSourceChange,e=__rest(e,["cascadeParams","onDataSourceChange"]),a=useDict({dictName:c,cascadeParams:a,onDataSourceChange:t});return React.createElement(_MultipleSelect.CheckAllSelect,__assign({},e,{options:a}))}}),setItem("Select","DropdownRender",function(c){return function(e){var a=e.cascadeParams,t=e.onDataSourceChange,e=__rest(e,["cascadeParams","onDataSourceChange"]),a=useDict({dictName:c,cascadeParams:a,onDataSourceChange:t});return React.createElement(_Select.DropdownRenderSelect,__assign({},e,{options:a}))}}),setItem("SelectDynamic","Standard",function(c){return function(e){var a=e.cascadeParams,t=e.onDataSourceChange,e=__rest(e,["cascadeParams","onDataSourceChange"]),a=useDynamicDict({dictName:c,cascadeParams:a,onDataSourceChange:t});return React.createElement(_Select,__assign({},e,{options:a}))}}),setItem("SelectDynamic","Multi",function(c){return function(e){var a=e.cascadeParams,t=e.onDataSourceChange,e=__rest(e,["cascadeParams","onDataSourceChange"]),a=useDynamicDict({dictName:c,cascadeParams:a,onDataSourceChange:t});return React.createElement(_MultipleSelect,__assign({},e,{options:a}))}}),setItem("SelectDynamic","CheckAll",function(c){return function(e){var a=e.cascadeParams,t=e.onDataSourceChange,e=__rest(e,["cascadeParams","onDataSourceChange"]),a=useDynamicDict({dictName:c,cascadeParams:a,onDataSourceChange:t});return React.createElement(_MultipleSelect.CheckAllSelect,__assign({},e,{options:a}))}}),setItem("SelectDynamic","DropdownRender",function(c){return function(e){var a=e.cascadeParams,t=e.onDataSourceChange,e=__rest(e,["cascadeParams","onDataSourceChange"]),a=useDynamicDict({dictName:c,cascadeParams:a,onDataSourceChange:t});return React.createElement(_Select.DropdownRenderSelect,__assign({},e,{options:a}))}}),setItem("AutoCompleteSelect","Standard",function(c){return function(e){var a=e.cascadeParams,t=e.onDataSourceChange,e=__rest(e,["cascadeParams","onDataSourceChange"]),a=useAutoCompleteDict({dictName:c,cascadeParams:a,onDataSourceChange:t}),t=a.options,a=a.loadData;return React.createElement(_Select.AutoCompleteSelect,__assign({},e,{options:t,loadData:a}))}}),setItem("AutoSelectComplete","Multi",function(c){return function(e){var a=e.cascadeParams,t=e.onDataSourceChange,e=__rest(e,["cascadeParams","onDataSourceChange"]),a=useAutoCompleteDict({dictName:c,cascadeParams:a,onDataSourceChange:t}),t=a.options,a=a.loadData;return React.createElement(_MultipleSelect.AutoCompleteMultipleSelect,__assign({},e,{options:t,loadData:a}))}}),setItem("AutoSelectComplete","CheckAll",function(c){return function(e){var a=e.cascadeParams,t=e.onDataSourceChange,e=__rest(e,["cascadeParams","onDataSourceChange"]),a=useAutoCompleteDict({dictName:c,cascadeParams:a,onDataSourceChange:t}),t=a.options,a=a.loadData;return React.createElement(_MultipleSelect.AutoCompleteCheckAllMultipleSelect,__assign({},e,{options:t,loadData:a}))}});
//# sourceMappingURL=Select.js.map
