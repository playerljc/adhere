{"version":3,"file":"TreeSelect.js","sources":["FieldGeneratorToDict/fields/TreeSelect.js"],"sourcesContent":["import _TreeSelect from \"@baifendian/adhere-ui-anthoc/es/tree-select\";\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport React from 'react';\nimport { useAsyncTree, useDict, useDynamicDict, useTreeAutoCompleteDict } from '../Hooks';\nimport { setItem } from '../ItemFactory';\n/**\n * TreeStandard\n */\nsetItem('Tree', 'Standard', function (dictName) {\n  return function (_a) {\n    var cascadeParams = _a.cascadeParams,\n      onDataSourceChange = _a.onDataSourceChange,\n      props = __rest(_a, [\"cascadeParams\", \"onDataSourceChange\"]);\n    var treeData = useDict({\n      dictName: dictName,\n      cascadeParams: cascadeParams,\n      onDataSourceChange: onDataSourceChange\n    });\n    return /*#__PURE__*/React.createElement(_TreeSelect, __assign({}, props, {\n      treeData: treeData\n    }));\n  };\n});\n/**\n * TreeMulti\n */\nsetItem('Tree', 'Multi', function (dictName) {\n  return function (_a) {\n    var cascadeParams = _a.cascadeParams,\n      onDataSourceChange = _a.onDataSourceChange,\n      props = __rest(_a, [\"cascadeParams\", \"onDataSourceChange\"]);\n    var treeData = useDict({\n      dictName: dictName,\n      cascadeParams: cascadeParams,\n      onDataSourceChange: onDataSourceChange\n    });\n    return /*#__PURE__*/React.createElement(_TreeSelect.TreeMultiSelect, __assign({}, props, {\n      treeData: treeData\n    }));\n  };\n});\n/**\n * TreeLeaf\n */\nsetItem('Tree', 'Leaf', function (dictName) {\n  return function (_a) {\n    var cascadeParams = _a.cascadeParams,\n      onDataSourceChange = _a.onDataSourceChange,\n      props = __rest(_a, [\"cascadeParams\", \"onDataSourceChange\"]);\n    var treeData = useDict({\n      dictName: dictName,\n      cascadeParams: cascadeParams,\n      onDataSourceChange: onDataSourceChange\n    });\n    return /*#__PURE__*/React.createElement(_TreeSelect.TreeLeafSelect, __assign({}, props, {\n      treeData: treeData\n    }));\n  };\n});\n/**\n * TreeLeafMulti\n */\nsetItem('Tree', 'LeafMulti', function (dictName) {\n  return function (_a) {\n    var cascadeParams = _a.cascadeParams,\n      onDataSourceChange = _a.onDataSourceChange,\n      props = __rest(_a, [\"cascadeParams\", \"onDataSourceChange\"]);\n    var treeData = useDict({\n      dictName: dictName,\n      cascadeParams: cascadeParams,\n      onDataSourceChange: onDataSourceChange\n    });\n    return /*#__PURE__*/React.createElement(_TreeSelect.TreeMultiLeafSelect, __assign({}, props, {\n      treeData: treeData\n    }));\n  };\n});\n/**\n * TreeCheckedShowAll\n */\nsetItem('Tree', 'CheckedShowAll', function (dictName) {\n  return function (_a) {\n    var cascadeParams = _a.cascadeParams,\n      onDataSourceChange = _a.onDataSourceChange,\n      props = __rest(_a, [\"cascadeParams\", \"onDataSourceChange\"]);\n    var treeData = useDict({\n      dictName: dictName,\n      cascadeParams: cascadeParams,\n      onDataSourceChange: onDataSourceChange\n    });\n    return /*#__PURE__*/React.createElement(_TreeSelect.TreeCheckedShowAllSelect, __assign({}, props, {\n      treeData: treeData\n    }));\n  };\n});\n/**\n * TreeCheckedShowChild\n */\nsetItem('Tree', 'CheckedShowChild', function (dictName) {\n  return function (_a) {\n    var cascadeParams = _a.cascadeParams,\n      onDataSourceChange = _a.onDataSourceChange,\n      props = __rest(_a, [\"cascadeParams\", \"onDataSourceChange\"]);\n    var treeData = useDict({\n      dictName: dictName,\n      cascadeParams: cascadeParams,\n      onDataSourceChange: onDataSourceChange\n    });\n    return /*#__PURE__*/React.createElement(_TreeSelect.TreeCheckedShowChildSelect, __assign({}, props, {\n      treeData: treeData\n    }));\n  };\n});\n/**\n * TreeCheckedShowParent\n */\nsetItem('Tree', 'CheckedShowParent', function (dictName) {\n  return function (_a) {\n    var cascadeParams = _a.cascadeParams,\n      onDataSourceChange = _a.onDataSourceChange,\n      props = __rest(_a, [\"cascadeParams\", \"onDataSourceChange\"]);\n    var treeData = useDict({\n      dictName: dictName,\n      cascadeParams: cascadeParams,\n      onDataSourceChange: onDataSourceChange\n    });\n    return /*#__PURE__*/React.createElement(_TreeSelect.TreeCheckedShowParentSelect, __assign({}, props, {\n      treeData: treeData\n    }));\n  };\n});\n/**\n * TreeFlat\n */\nsetItem('Tree', 'Flat', function (dictName) {\n  return function (_a) {\n    var cascadeParams = _a.cascadeParams,\n      onDataSourceChange = _a.onDataSourceChange,\n      props = __rest(_a, [\"cascadeParams\", \"onDataSourceChange\"]);\n    var treeData = useDict({\n      dictName: dictName,\n      cascadeParams: cascadeParams,\n      onDataSourceChange: onDataSourceChange\n    });\n    return /*#__PURE__*/React.createElement(_TreeSelect, __assign({}, props, {\n      treeData: treeData,\n      treeDataSimpleMode: true\n    }));\n  };\n});\n/**\n * TreeFlatMulti\n */\nsetItem('Tree', 'FlatMulti', function (dictName) {\n  return function (_a) {\n    var cascadeParams = _a.cascadeParams,\n      onDataSourceChange = _a.onDataSourceChange,\n      props = __rest(_a, [\"cascadeParams\", \"onDataSourceChange\"]);\n    var treeData = useDict({\n      dictName: dictName,\n      cascadeParams: cascadeParams,\n      onDataSourceChange: onDataSourceChange\n    });\n    return /*#__PURE__*/React.createElement(_TreeSelect.TreeMultiSelect, __assign({}, props, {\n      treeData: treeData,\n      treeDataSimpleMode: true\n    }));\n  };\n});\n/**\n * TreeFlatLeaf\n */\nsetItem('Tree', 'FlatLeaf', function (dictName) {\n  return function (_a) {\n    var cascadeParams = _a.cascadeParams,\n      onDataSourceChange = _a.onDataSourceChange,\n      props = __rest(_a, [\"cascadeParams\", \"onDataSourceChange\"]);\n    var treeData = useDict({\n      dictName: dictName,\n      cascadeParams: cascadeParams,\n      onDataSourceChange: onDataSourceChange\n    });\n    return /*#__PURE__*/React.createElement(_TreeSelect.TreeLeafSelect, __assign({}, props, {\n      treeData: treeData,\n      treeDataSimpleMode: true\n    }));\n  };\n});\n/**\n * TreeFlatLeafMulti\n */\nsetItem('Tree', 'FlatLeafMulti', function (dictName) {\n  return function (_a) {\n    var cascadeParams = _a.cascadeParams,\n      onDataSourceChange = _a.onDataSourceChange,\n      props = __rest(_a, [\"cascadeParams\", \"onDataSourceChange\"]);\n    var treeData = useDict({\n      dictName: dictName,\n      cascadeParams: cascadeParams,\n      onDataSourceChange: onDataSourceChange\n    });\n    return /*#__PURE__*/React.createElement(_TreeSelect.TreeMultiLeafSelect, __assign({}, props, {\n      treeData: treeData,\n      treeDataSimpleMode: true\n    }));\n  };\n});\n/**\n * TreeFlatCheckedShowAll\n */\nsetItem('Tree', 'FlatCheckedShowAll', function (dictName) {\n  return function (_a) {\n    var cascadeParams = _a.cascadeParams,\n      onDataSourceChange = _a.onDataSourceChange,\n      props = __rest(_a, [\"cascadeParams\", \"onDataSourceChange\"]);\n    var treeData = useDict({\n      dictName: dictName,\n      cascadeParams: cascadeParams,\n      onDataSourceChange: onDataSourceChange\n    });\n    return /*#__PURE__*/React.createElement(_TreeSelect.TreeCheckedShowAllSelect, __assign({}, props, {\n      treeData: treeData,\n      treeDataSimpleMode: true\n    }));\n  };\n});\n/**\n * TreeFlatCheckedShowChild\n */\nsetItem('Tree', 'FlatCheckedShowChild', function (dictName) {\n  return function (_a) {\n    var cascadeParams = _a.cascadeParams,\n      onDataSourceChange = _a.onDataSourceChange,\n      props = __rest(_a, [\"cascadeParams\", \"onDataSourceChange\"]);\n    var treeData = useDict({\n      dictName: dictName,\n      cascadeParams: cascadeParams,\n      onDataSourceChange: onDataSourceChange\n    });\n    return /*#__PURE__*/React.createElement(_TreeSelect.TreeCheckedShowChildSelect, __assign({}, props, {\n      treeData: treeData,\n      treeDataSimpleMode: true\n    }));\n  };\n});\n/**\n * TreeFlatCheckedShowParent\n */\nsetItem('Tree', 'FlatCheckedShowParent', function (dictName) {\n  return function (_a) {\n    var cascadeParams = _a.cascadeParams,\n      onDataSourceChange = _a.onDataSourceChange,\n      props = __rest(_a, [\"cascadeParams\", \"onDataSourceChange\"]);\n    var treeData = useDict({\n      dictName: dictName,\n      cascadeParams: cascadeParams,\n      onDataSourceChange: onDataSourceChange\n    });\n    return /*#__PURE__*/React.createElement(_TreeSelect.TreeCheckedShowParentSelect, __assign({}, props, {\n      treeData: treeData,\n      treeDataSimpleMode: true\n    }));\n  };\n});\n/**\n * TreeDynamicStandard\n */\nsetItem('TreeDynamic', 'Standard', function (dictName) {\n  return function (_a) {\n    var cascadeParams = _a.cascadeParams,\n      onDataSourceChange = _a.onDataSourceChange,\n      props = __rest(_a, [\"cascadeParams\", \"onDataSourceChange\"]);\n    var treeData = useDynamicDict({\n      dictName: dictName,\n      cascadeParams: cascadeParams,\n      onDataSourceChange: onDataSourceChange\n    });\n    return /*#__PURE__*/React.createElement(_TreeSelect, __assign({}, props, {\n      treeData: treeData\n    }));\n  };\n});\n/**\n * TreeDynamicMulti\n */\nsetItem('TreeDynamic', 'Multi', function (dictName) {\n  return function (_a) {\n    var cascadeParams = _a.cascadeParams,\n      onDataSourceChange = _a.onDataSourceChange,\n      props = __rest(_a, [\"cascadeParams\", \"onDataSourceChange\"]);\n    var treeData = useDynamicDict({\n      dictName: dictName,\n      cascadeParams: cascadeParams,\n      onDataSourceChange: onDataSourceChange\n    });\n    return /*#__PURE__*/React.createElement(_TreeSelect.TreeMultiSelect, __assign({}, props, {\n      treeData: treeData\n    }));\n  };\n});\n/**\n * TreeDynamicLeaf\n */\nsetItem('TreeDynamic', 'Leaf', function (dictName) {\n  return function (_a) {\n    var cascadeParams = _a.cascadeParams,\n      onDataSourceChange = _a.onDataSourceChange,\n      props = __rest(_a, [\"cascadeParams\", \"onDataSourceChange\"]);\n    var treeData = useDynamicDict({\n      dictName: dictName,\n      cascadeParams: cascadeParams,\n      onDataSourceChange: onDataSourceChange\n    });\n    return /*#__PURE__*/React.createElement(_TreeSelect.TreeLeafSelect, __assign({}, props, {\n      treeData: treeData\n    }));\n  };\n});\n/**\n * TreeDynamicLeafMulti\n */\nsetItem('TreeDynamic', 'LeafMulti', function (dictName) {\n  return function (_a) {\n    var cascadeParams = _a.cascadeParams,\n      onDataSourceChange = _a.onDataSourceChange,\n      props = __rest(_a, [\"cascadeParams\", \"onDataSourceChange\"]);\n    var treeData = useDynamicDict({\n      dictName: dictName,\n      cascadeParams: cascadeParams,\n      onDataSourceChange: onDataSourceChange\n    });\n    return /*#__PURE__*/React.createElement(_TreeSelect.TreeMultiLeafSelect, __assign({}, props, {\n      treeData: treeData\n    }));\n  };\n});\n/**\n * TreeDynamicCheckedShowAll\n */\nsetItem('TreeDynamic', 'CheckedShowAll', function (dictName) {\n  return function (_a) {\n    var cascadeParams = _a.cascadeParams,\n      onDataSourceChange = _a.onDataSourceChange,\n      props = __rest(_a, [\"cascadeParams\", \"onDataSourceChange\"]);\n    var treeData = useDynamicDict({\n      dictName: dictName,\n      cascadeParams: cascadeParams,\n      onDataSourceChange: onDataSourceChange\n    });\n    return /*#__PURE__*/React.createElement(_TreeSelect.TreeCheckedShowAllSelect, __assign({}, props, {\n      treeData: treeData\n    }));\n  };\n});\n/**\n * TreeDynamicCheckedShowChild\n */\nsetItem('TreeDynamic', 'CheckedShowChild', function (dictName) {\n  return function (_a) {\n    var cascadeParams = _a.cascadeParams,\n      onDataSourceChange = _a.onDataSourceChange,\n      props = __rest(_a, [\"cascadeParams\", \"onDataSourceChange\"]);\n    var treeData = useDynamicDict({\n      dictName: dictName,\n      cascadeParams: cascadeParams,\n      onDataSourceChange: onDataSourceChange\n    });\n    return /*#__PURE__*/React.createElement(_TreeSelect.TreeCheckedShowChildSelect, __assign({}, props, {\n      treeData: treeData\n    }));\n  };\n});\n/**\n * TreeDynamicCheckedShowParent\n */\nsetItem('TreeDynamic', 'CheckedShowParent', function (dictName) {\n  return function (_a) {\n    var cascadeParams = _a.cascadeParams,\n      onDataSourceChange = _a.onDataSourceChange,\n      props = __rest(_a, [\"cascadeParams\", \"onDataSourceChange\"]);\n    var treeData = useDynamicDict({\n      dictName: dictName,\n      cascadeParams: cascadeParams,\n      onDataSourceChange: onDataSourceChange\n    });\n    return /*#__PURE__*/React.createElement(_TreeSelect.TreeCheckedShowParentSelect, __assign({}, props, {\n      treeData: treeData\n    }));\n  };\n});\n/**\n * TreeDynamicFlat\n */\nsetItem('TreeDynamic', 'Flat', function (dictName) {\n  return function (_a) {\n    var cascadeParams = _a.cascadeParams,\n      onDataSourceChange = _a.onDataSourceChange,\n      props = __rest(_a, [\"cascadeParams\", \"onDataSourceChange\"]);\n    var treeData = useDynamicDict({\n      dictName: dictName,\n      cascadeParams: cascadeParams,\n      onDataSourceChange: onDataSourceChange\n    });\n    return /*#__PURE__*/React.createElement(_TreeSelect, __assign({}, props, {\n      treeData: treeData,\n      treeDataSimpleMode: true\n    }));\n  };\n});\n/**\n * TreeDynamicFlatMulti\n */\nsetItem('TreeDynamic', 'FlatMulti', function (dictName) {\n  return function (_a) {\n    var cascadeParams = _a.cascadeParams,\n      onDataSourceChange = _a.onDataSourceChange,\n      props = __rest(_a, [\"cascadeParams\", \"onDataSourceChange\"]);\n    var treeData = useDynamicDict({\n      dictName: dictName,\n      cascadeParams: cascadeParams,\n      onDataSourceChange: onDataSourceChange\n    });\n    return /*#__PURE__*/React.createElement(_TreeSelect.TreeMultiSelect, __assign({}, props, {\n      treeData: treeData,\n      treeDataSimpleMode: true\n    }));\n  };\n});\n/**\n * TreeDynamicFlatLeaf\n */\nsetItem('TreeDynamic', 'FlatLeaf', function (dictName) {\n  return function (_a) {\n    var cascadeParams = _a.cascadeParams,\n      onDataSourceChange = _a.onDataSourceChange,\n      props = __rest(_a, [\"cascadeParams\", \"onDataSourceChange\"]);\n    var treeData = useDynamicDict({\n      dictName: dictName,\n      cascadeParams: cascadeParams,\n      onDataSourceChange: onDataSourceChange\n    });\n    return /*#__PURE__*/React.createElement(_TreeSelect.TreeLeafSelect, __assign({}, props, {\n      treeData: treeData,\n      treeDataSimpleMode: true\n    }));\n  };\n});\n/**\n * TreeDynamicFlatLeafMulti\n */\nsetItem('TreeDynamic', 'FlatLeafMulti', function (dictName) {\n  return function (_a) {\n    var cascadeParams = _a.cascadeParams,\n      onDataSourceChange = _a.onDataSourceChange,\n      props = __rest(_a, [\"cascadeParams\", \"onDataSourceChange\"]);\n    var treeData = useDynamicDict({\n      dictName: dictName,\n      cascadeParams: cascadeParams,\n      onDataSourceChange: onDataSourceChange\n    });\n    return /*#__PURE__*/React.createElement(_TreeSelect.TreeMultiLeafSelect, __assign({}, props, {\n      treeData: treeData,\n      treeDataSimpleMode: true\n    }));\n  };\n});\n/**\n * TreeDynamicFlatCheckedShowAll\n */\nsetItem('TreeDynamic', 'FlatCheckedShowAll', function (dictName) {\n  return function (_a) {\n    var cascadeParams = _a.cascadeParams,\n      onDataSourceChange = _a.onDataSourceChange,\n      props = __rest(_a, [\"cascadeParams\", \"onDataSourceChange\"]);\n    var treeData = useDynamicDict({\n      dictName: dictName,\n      cascadeParams: cascadeParams,\n      onDataSourceChange: onDataSourceChange\n    });\n    return /*#__PURE__*/React.createElement(_TreeSelect.TreeCheckedShowAllSelect, __assign({}, props, {\n      treeData: treeData,\n      treeDataSimpleMode: true\n    }));\n  };\n});\n/**\n * TreeDynamicFlatCheckedShowChild\n */\nsetItem('TreeDynamic', 'FlatCheckedShowChild', function (dictName) {\n  return function (_a) {\n    var cascadeParams = _a.cascadeParams,\n      onDataSourceChange = _a.onDataSourceChange,\n      props = __rest(_a, [\"cascadeParams\", \"onDataSourceChange\"]);\n    var treeData = useDynamicDict({\n      dictName: dictName,\n      cascadeParams: cascadeParams,\n      onDataSourceChange: onDataSourceChange\n    });\n    return /*#__PURE__*/React.createElement(_TreeSelect.TreeCheckedShowChildSelect, __assign({}, props, {\n      treeData: treeData,\n      treeDataSimpleMode: true\n    }));\n  };\n});\n/**\n * TreeDynamicFlatCheckedShowParent\n */\nsetItem('TreeDynamic', 'FlatCheckedShowParent', function (dictName) {\n  return function (_a) {\n    var cascadeParams = _a.cascadeParams,\n      onDataSourceChange = _a.onDataSourceChange,\n      props = __rest(_a, [\"cascadeParams\", \"onDataSourceChange\"]);\n    var treeData = useDynamicDict({\n      dictName: dictName,\n      cascadeParams: cascadeParams,\n      onDataSourceChange: onDataSourceChange\n    });\n    return /*#__PURE__*/React.createElement(_TreeSelect.TreeCheckedShowParentSelect, __assign({}, props, {\n      treeData: treeData,\n      treeDataSimpleMode: true\n    }));\n  };\n});\n/**\n * TreeAsyncStandard\n */\nsetItem('TreeAsync', 'Standard', function (dictName) {\n  return function (props) {\n    var fetchData = useAsyncTree({\n      dictName: dictName\n    });\n    return /*#__PURE__*/React.createElement(_TreeSelect.AsyncTreeSelect, __assign({}, props, {\n      fetchData: fetchData\n    }));\n  };\n});\n/**\n * TreeAsyncMulti\n */\nsetItem('TreeAsync', 'Multi', function (dictName) {\n  return function (props) {\n    var fetchData = useAsyncTree({\n      dictName: dictName\n    });\n    return /*#__PURE__*/React.createElement(_TreeSelect.AsyncTreeMultiSelect, __assign({}, props, {\n      fetchData: fetchData\n    }));\n  };\n});\n/**\n * TreeAsyncLeaf\n */\nsetItem('TreeAsync', 'Leaf', function (dictName) {\n  return function (props) {\n    var fetchData = useAsyncTree({\n      dictName: dictName\n    });\n    return /*#__PURE__*/React.createElement(_TreeSelect.AsyncTreeLeafSelect, __assign({}, props, {\n      fetchData: fetchData\n    }));\n  };\n});\n/**\n * TreeAsyncLeafMulti\n */\nsetItem('TreeAsync', 'LeafMulti', function (dictName) {\n  return function (props) {\n    var fetchData = useAsyncTree({\n      dictName: dictName\n    });\n    return /*#__PURE__*/React.createElement(_TreeSelect.AsyncTreeMultiLeafSelect, __assign({}, props, {\n      fetchData: fetchData\n    }));\n  };\n});\n/**\n * TreeAsyncCheckedShowAll\n */\nsetItem('TreeAsync', 'CheckedShowAll', function (dictName) {\n  return function (props) {\n    var fetchData = useAsyncTree({\n      dictName: dictName\n    });\n    return /*#__PURE__*/React.createElement(_TreeSelect.AsyncTreeCheckedShowAllSelect, __assign({}, props, {\n      fetchData: fetchData\n    }));\n  };\n});\n/**\n * TreeAsyncChCheckedShowChild\n */\nsetItem('TreeAsync', 'CheckedShowChild', function (dictName) {\n  return function (props) {\n    var fetchData = useAsyncTree({\n      dictName: dictName\n    });\n    return /*#__PURE__*/React.createElement(_TreeSelect.AsyncTreeCheckedShowChildSelect, __assign({}, props, {\n      fetchData: fetchData\n    }));\n  };\n});\n/**\n * TreeAsyncCheckedShowParent\n */\nsetItem('TreeAsync', 'CheckedShowParent', function (dictName) {\n  return function (props) {\n    var fetchData = useAsyncTree({\n      dictName: dictName\n    });\n    return /*#__PURE__*/React.createElement(_TreeSelect.AsyncTreeCheckedShowParentSelect, __assign({}, props, {\n      fetchData: fetchData\n    }));\n  };\n});\n/**\n * TreeAsyncFlatStandard\n */\nsetItem('TreeAsync', 'FlatStandard', function (dictName) {\n  return function (props) {\n    var fetchData = useAsyncTree({\n      dictName: dictName\n    });\n    return /*#__PURE__*/React.createElement(_TreeSelect.AsyncTreeSelect, __assign({}, props, {\n      fetchData: fetchData,\n      treeDataSimpleMode: true\n    }));\n  };\n});\n/**\n * TreeAsyncFlatMulti\n */\nsetItem('TreeAsync', 'FlatMulti', function (dictName) {\n  return function (props) {\n    var fetchData = useAsyncTree({\n      dictName: dictName\n    });\n    return /*#__PURE__*/React.createElement(_TreeSelect.AsyncTreeMultiSelect, __assign({}, props, {\n      fetchData: fetchData,\n      treeDataSimpleMode: true\n    }));\n  };\n});\n/**\n * TreeAsyncFlatLeaf\n */\nsetItem('TreeAsync', 'FlatLeaf', function (dictName) {\n  return function (props) {\n    var fetchData = useAsyncTree({\n      dictName: dictName\n    });\n    return /*#__PURE__*/React.createElement(_TreeSelect.AsyncTreeLeafSelect, __assign({}, props, {\n      fetchData: fetchData,\n      treeDataSimpleMode: true\n    }));\n  };\n});\n/**\n * TreeAsyncFlatLeafMulti\n */\nsetItem('TreeAsync', 'FlatLeafMulti', function (dictName) {\n  return function (props) {\n    var fetchData = useAsyncTree({\n      dictName: dictName\n    });\n    return /*#__PURE__*/React.createElement(_TreeSelect.AsyncTreeMultiLeafSelect, __assign({}, props, {\n      fetchData: fetchData,\n      treeDataSimpleMode: true\n    }));\n  };\n});\n/**\n * TreeAsyncFlatCheckedShowAll\n */\nsetItem('TreeAsync', 'FlatCheckedShowAll', function (dictName) {\n  return function (props) {\n    var fetchData = useAsyncTree({\n      dictName: dictName\n    });\n    return /*#__PURE__*/React.createElement(_TreeSelect.AsyncTreeCheckedShowAllSelect, __assign({}, props, {\n      fetchData: fetchData,\n      treeDataSimpleMode: true\n    }));\n  };\n});\n/**\n * TreeAsyncFlatChCheckedShowChild\n */\nsetItem('TreeAsync', 'FlatCheckedShowChild', function (dictName) {\n  return function (props) {\n    var fetchData = useAsyncTree({\n      dictName: dictName\n    });\n    return /*#__PURE__*/React.createElement(_TreeSelect.AsyncTreeCheckedShowChildSelect, __assign({}, props, {\n      fetchData: fetchData,\n      treeDataSimpleMode: true\n    }));\n  };\n});\n/**\n * TreeAsyncFlatCheckedShowParent\n */\nsetItem('TreeAsync', 'FlatCheckedShowParent', function (dictName) {\n  return function (props) {\n    var fetchData = useAsyncTree({\n      dictName: dictName\n    });\n    return /*#__PURE__*/React.createElement(_TreeSelect.AsyncTreeCheckedShowParentSelect, __assign({}, props, {\n      fetchData: fetchData,\n      treeDataSimpleMode: true\n    }));\n  };\n});\nsetItem('TreeAC', 'Standard', function (dictName) {\n  return function (_a) {\n    var cascadeParams = _a.cascadeParams,\n      onDataSourceChange = _a.onDataSourceChange,\n      props = __rest(_a, [\"cascadeParams\", \"onDataSourceChange\"]);\n    var _b = useTreeAutoCompleteDict({\n        dictName: dictName,\n        cascadeParams: cascadeParams,\n        onDataSourceChange: onDataSourceChange\n      }),\n      treeData = _b.treeData,\n      loadData = _b.loadData;\n    return /*#__PURE__*/React.createElement(_TreeSelect.AutoCompleteTreeSelect, __assign({}, props, {\n      treeData: treeData,\n      loadData: loadData\n    }));\n  };\n});\nsetItem('TreeAC', 'Multi', function (dictName) {\n  return function (_a) {\n    var cascadeParams = _a.cascadeParams,\n      onDataSourceChange = _a.onDataSourceChange,\n      props = __rest(_a, [\"cascadeParams\", \"onDataSourceChange\"]);\n    var _b = useTreeAutoCompleteDict({\n        dictName: dictName,\n        cascadeParams: cascadeParams,\n        onDataSourceChange: onDataSourceChange\n      }),\n      treeData = _b.treeData,\n      loadData = _b.loadData;\n    return /*#__PURE__*/React.createElement(_TreeSelect.AutoCompleteTreeMultiSelect, __assign({}, props, {\n      treeData: treeData,\n      loadData: loadData\n    }));\n  };\n});\nsetItem('TreeAC', 'Leaf', function (dictName) {\n  return function (_a) {\n    var cascadeParams = _a.cascadeParams,\n      onDataSourceChange = _a.onDataSourceChange,\n      props = __rest(_a, [\"cascadeParams\", \"onDataSourceChange\"]);\n    var _b = useTreeAutoCompleteDict({\n        dictName: dictName,\n        cascadeParams: cascadeParams,\n        onDataSourceChange: onDataSourceChange\n      }),\n      treeData = _b.treeData,\n      loadData = _b.loadData;\n    return /*#__PURE__*/React.createElement(_TreeSelect.AutoCompleteTreeLeafSelect, __assign({}, props, {\n      treeData: treeData,\n      loadData: loadData\n    }));\n  };\n});\nsetItem('TreeAC', 'MultiLeaf', function (dictName) {\n  return function (_a) {\n    var cascadeParams = _a.cascadeParams,\n      onDataSourceChange = _a.onDataSourceChange,\n      props = __rest(_a, [\"cascadeParams\", \"onDataSourceChange\"]);\n    var _b = useTreeAutoCompleteDict({\n        dictName: dictName,\n        cascadeParams: cascadeParams,\n        onDataSourceChange: onDataSourceChange\n      }),\n      treeData = _b.treeData,\n      loadData = _b.loadData;\n    return /*#__PURE__*/React.createElement(_TreeSelect.AutoCompleteTreeMultiLeafSelect, __assign({}, props, {\n      treeData: treeData,\n      loadData: loadData\n    }));\n  };\n});\n// setItem<TreeAutoCompleteProps, TreeAutoCompleteProps['treeData']>(\n//   'TreeAC',\n//   'ShowAll',\n//   (dictName) =>\n//     ({ cascadeParams, onDataSourceChange, ...props }) => {\n//       const { treeData, loadData } = useTreeAutoCompleteDict<TreeAutoCompleteProps['treeData']>({\n//         dictName,\n//         cascadeParams,\n//         onDataSourceChange,\n//       });\n//\n//       return (\n//         <TreeSelect.AutoCompleteTreeCheckedShowAllSelect\n//           {...props}\n//           treeData={treeData}\n//           loadData={loadData}\n//         />\n//       );\n//     },\n// );\n//\n// setItem<TreeAutoCompleteProps, TreeAutoCompleteProps['treeData']>(\n//   'TreeAC',\n//   'ShowChild',\n//   (dictName) =>\n//     ({ cascadeParams, onDataSourceChange, ...props }) => {\n//       const { treeData, loadData } = useTreeAutoCompleteDict<TreeAutoCompleteProps['treeData']>({\n//         dictName,\n//         cascadeParams,\n//         onDataSourceChange,\n//       });\n//\n//       return (\n//         <TreeSelect.AutoCompleteTreeCheckedShowChildSelect\n//           {...props}\n//           treeData={treeData}\n//           loadData={loadData}\n//         />\n//       );\n//     },\n// );\n//\n// setItem<TreeAutoCompleteProps, TreeAutoCompleteProps['treeData']>(\n//   'TreeAC',\n//   'ShowParent',\n//   (dictName) =>\n//     ({ cascadeParams, onDataSourceChange, ...props }) => {\n//       const { treeData, loadData } = useTreeAutoCompleteDict<TreeAutoCompleteProps['treeData']>({\n//         dictName,\n//         cascadeParams,\n//         onDataSourceChange,\n//       });\n//\n//       return (\n//         <TreeSelect.AutoCompleteTreeCheckedShowParentSelect\n//           {...props}\n//           treeData={treeData}\n//           loadData={loadData}\n//         />\n//       );\n//     },\n// );"],"names":["_TreeSelect","__assign","this","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","useAsyncTree","useDict","useDynamicDict","useTreeAutoCompleteDict","setItem","dictName","_a","cascadeParams","onDataSourceChange","props","treeData","createElement","TreeMultiSelect","TreeLeafSelect","TreeMultiLeafSelect","TreeCheckedShowAllSelect","TreeCheckedShowChildSelect","TreeCheckedShowParentSelect","treeDataSimpleMode","fetchData","AsyncTreeSelect","AsyncTreeMultiSelect","AsyncTreeLeafSelect","AsyncTreeMultiLeafSelect","AsyncTreeCheckedShowAllSelect","AsyncTreeCheckedShowChildSelect","AsyncTreeCheckedShowParentSelect","_b","loadData","AutoCompleteTreeSelect","AutoCompleteTreeMultiSelect","AutoCompleteTreeLeafSelect","AutoCompleteTreeMultiLeafSelect"],"mappings":"OAAOA,gBAAiB,8CACxB,IAAIC,SAAWC,MAAQA,KAAKD,UAAY,WAQtC,OAPAA,SAAWE,OAAOC,QAAU,SAAUC,GACpC,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,CAAC,GAE/C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,CAAC,IAAGN,EAAEM,GAAKL,EAAEK,IAE5E,OAAON,CACT,GACgBU,MAAMb,KAAMO,SAAS,CACvC,EACIO,OAASd,MAAQA,KAAKc,QAAU,SAAUV,EAAGW,GAC/C,IAAIZ,EAAI,GACR,IAASM,KAAKL,EAAOH,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,CAAC,GAAKM,EAAEC,QAAQP,CAAC,EAAI,IAAGN,EAAEM,GAAKL,EAAEK,IAC9F,GAAS,MAALL,GAAqD,YAAxC,OAAOH,OAAOgB,sBAAsC,IAAK,IAAIZ,EAAI,EAAGI,EAAIR,OAAOgB,sBAAsBb,CAAC,EAAGC,EAAII,EAAED,OAAQH,CAAC,GACnIU,EAAEC,QAAQP,EAAEJ,EAAE,EAAI,GAAKJ,OAAOS,UAAUQ,qBAAqBN,KAAKR,EAAGK,EAAEJ,EAAE,IAAGF,EAAEM,EAAEJ,IAAMD,EAAEK,EAAEJ,KAEhG,OAAOF,CACT,SACOgB,UAAW,eACTC,aAAcC,QAASC,eAAgBC,uBAAyC,KAAV,kBACtEC,OAA+B,KAAhB,iBAIxBA,QAAQ,OAAQ,WAAY,SAAUC,GACpC,OAAO,SAAUC,GACf,IAAIC,EAAgBD,EAAGC,cACrBC,EAAqBF,EAAGE,mBACxBC,EAAQf,OAAOY,EAAI,CAAC,gBAAiB,qBAAqB,EACxDI,EAAWT,QAAQ,CACrBI,SAAUA,EACVE,cAAeA,EACfC,mBAAoBA,CACtB,CAAC,EACD,OAAoBT,MAAMY,cAAcjC,YAAaC,SAAS,GAAI8B,EAAO,CACvEC,SAAUA,CACZ,CAAC,CAAC,CACJ,CACF,CAAC,EAIDN,QAAQ,OAAQ,QAAS,SAAUC,GACjC,OAAO,SAAUC,GACf,IAAIC,EAAgBD,EAAGC,cACrBC,EAAqBF,EAAGE,mBACxBC,EAAQf,OAAOY,EAAI,CAAC,gBAAiB,qBAAqB,EACxDI,EAAWT,QAAQ,CACrBI,SAAUA,EACVE,cAAeA,EACfC,mBAAoBA,CACtB,CAAC,EACD,OAAoBT,MAAMY,cAAcjC,YAAYkC,gBAAiBjC,SAAS,GAAI8B,EAAO,CACvFC,SAAUA,CACZ,CAAC,CAAC,CACJ,CACF,CAAC,EAIDN,QAAQ,OAAQ,OAAQ,SAAUC,GAChC,OAAO,SAAUC,GACf,IAAIC,EAAgBD,EAAGC,cACrBC,EAAqBF,EAAGE,mBACxBC,EAAQf,OAAOY,EAAI,CAAC,gBAAiB,qBAAqB,EACxDI,EAAWT,QAAQ,CACrBI,SAAUA,EACVE,cAAeA,EACfC,mBAAoBA,CACtB,CAAC,EACD,OAAoBT,MAAMY,cAAcjC,YAAYmC,eAAgBlC,SAAS,GAAI8B,EAAO,CACtFC,SAAUA,CACZ,CAAC,CAAC,CACJ,CACF,CAAC,EAIDN,QAAQ,OAAQ,YAAa,SAAUC,GACrC,OAAO,SAAUC,GACf,IAAIC,EAAgBD,EAAGC,cACrBC,EAAqBF,EAAGE,mBACxBC,EAAQf,OAAOY,EAAI,CAAC,gBAAiB,qBAAqB,EACxDI,EAAWT,QAAQ,CACrBI,SAAUA,EACVE,cAAeA,EACfC,mBAAoBA,CACtB,CAAC,EACD,OAAoBT,MAAMY,cAAcjC,YAAYoC,oBAAqBnC,SAAS,GAAI8B,EAAO,CAC3FC,SAAUA,CACZ,CAAC,CAAC,CACJ,CACF,CAAC,EAIDN,QAAQ,OAAQ,iBAAkB,SAAUC,GAC1C,OAAO,SAAUC,GACf,IAAIC,EAAgBD,EAAGC,cACrBC,EAAqBF,EAAGE,mBACxBC,EAAQf,OAAOY,EAAI,CAAC,gBAAiB,qBAAqB,EACxDI,EAAWT,QAAQ,CACrBI,SAAUA,EACVE,cAAeA,EACfC,mBAAoBA,CACtB,CAAC,EACD,OAAoBT,MAAMY,cAAcjC,YAAYqC,yBAA0BpC,SAAS,GAAI8B,EAAO,CAChGC,SAAUA,CACZ,CAAC,CAAC,CACJ,CACF,CAAC,EAIDN,QAAQ,OAAQ,mBAAoB,SAAUC,GAC5C,OAAO,SAAUC,GACf,IAAIC,EAAgBD,EAAGC,cACrBC,EAAqBF,EAAGE,mBACxBC,EAAQf,OAAOY,EAAI,CAAC,gBAAiB,qBAAqB,EACxDI,EAAWT,QAAQ,CACrBI,SAAUA,EACVE,cAAeA,EACfC,mBAAoBA,CACtB,CAAC,EACD,OAAoBT,MAAMY,cAAcjC,YAAYsC,2BAA4BrC,SAAS,GAAI8B,EAAO,CAClGC,SAAUA,CACZ,CAAC,CAAC,CACJ,CACF,CAAC,EAIDN,QAAQ,OAAQ,oBAAqB,SAAUC,GAC7C,OAAO,SAAUC,GACf,IAAIC,EAAgBD,EAAGC,cACrBC,EAAqBF,EAAGE,mBACxBC,EAAQf,OAAOY,EAAI,CAAC,gBAAiB,qBAAqB,EACxDI,EAAWT,QAAQ,CACrBI,SAAUA,EACVE,cAAeA,EACfC,mBAAoBA,CACtB,CAAC,EACD,OAAoBT,MAAMY,cAAcjC,YAAYuC,4BAA6BtC,SAAS,GAAI8B,EAAO,CACnGC,SAAUA,CACZ,CAAC,CAAC,CACJ,CACF,CAAC,EAIDN,QAAQ,OAAQ,OAAQ,SAAUC,GAChC,OAAO,SAAUC,GACf,IAAIC,EAAgBD,EAAGC,cACrBC,EAAqBF,EAAGE,mBACxBC,EAAQf,OAAOY,EAAI,CAAC,gBAAiB,qBAAqB,EACxDI,EAAWT,QAAQ,CACrBI,SAAUA,EACVE,cAAeA,EACfC,mBAAoBA,CACtB,CAAC,EACD,OAAoBT,MAAMY,cAAcjC,YAAaC,SAAS,GAAI8B,EAAO,CACvEC,SAAUA,EACVQ,mBAAoB,CAAA,CACtB,CAAC,CAAC,CACJ,CACF,CAAC,EAIDd,QAAQ,OAAQ,YAAa,SAAUC,GACrC,OAAO,SAAUC,GACf,IAAIC,EAAgBD,EAAGC,cACrBC,EAAqBF,EAAGE,mBACxBC,EAAQf,OAAOY,EAAI,CAAC,gBAAiB,qBAAqB,EACxDI,EAAWT,QAAQ,CACrBI,SAAUA,EACVE,cAAeA,EACfC,mBAAoBA,CACtB,CAAC,EACD,OAAoBT,MAAMY,cAAcjC,YAAYkC,gBAAiBjC,SAAS,GAAI8B,EAAO,CACvFC,SAAUA,EACVQ,mBAAoB,CAAA,CACtB,CAAC,CAAC,CACJ,CACF,CAAC,EAIDd,QAAQ,OAAQ,WAAY,SAAUC,GACpC,OAAO,SAAUC,GACf,IAAIC,EAAgBD,EAAGC,cACrBC,EAAqBF,EAAGE,mBACxBC,EAAQf,OAAOY,EAAI,CAAC,gBAAiB,qBAAqB,EACxDI,EAAWT,QAAQ,CACrBI,SAAUA,EACVE,cAAeA,EACfC,mBAAoBA,CACtB,CAAC,EACD,OAAoBT,MAAMY,cAAcjC,YAAYmC,eAAgBlC,SAAS,GAAI8B,EAAO,CACtFC,SAAUA,EACVQ,mBAAoB,CAAA,CACtB,CAAC,CAAC,CACJ,CACF,CAAC,EAIDd,QAAQ,OAAQ,gBAAiB,SAAUC,GACzC,OAAO,SAAUC,GACf,IAAIC,EAAgBD,EAAGC,cACrBC,EAAqBF,EAAGE,mBACxBC,EAAQf,OAAOY,EAAI,CAAC,gBAAiB,qBAAqB,EACxDI,EAAWT,QAAQ,CACrBI,SAAUA,EACVE,cAAeA,EACfC,mBAAoBA,CACtB,CAAC,EACD,OAAoBT,MAAMY,cAAcjC,YAAYoC,oBAAqBnC,SAAS,GAAI8B,EAAO,CAC3FC,SAAUA,EACVQ,mBAAoB,CAAA,CACtB,CAAC,CAAC,CACJ,CACF,CAAC,EAIDd,QAAQ,OAAQ,qBAAsB,SAAUC,GAC9C,OAAO,SAAUC,GACf,IAAIC,EAAgBD,EAAGC,cACrBC,EAAqBF,EAAGE,mBACxBC,EAAQf,OAAOY,EAAI,CAAC,gBAAiB,qBAAqB,EACxDI,EAAWT,QAAQ,CACrBI,SAAUA,EACVE,cAAeA,EACfC,mBAAoBA,CACtB,CAAC,EACD,OAAoBT,MAAMY,cAAcjC,YAAYqC,yBAA0BpC,SAAS,GAAI8B,EAAO,CAChGC,SAAUA,EACVQ,mBAAoB,CAAA,CACtB,CAAC,CAAC,CACJ,CACF,CAAC,EAIDd,QAAQ,OAAQ,uBAAwB,SAAUC,GAChD,OAAO,SAAUC,GACf,IAAIC,EAAgBD,EAAGC,cACrBC,EAAqBF,EAAGE,mBACxBC,EAAQf,OAAOY,EAAI,CAAC,gBAAiB,qBAAqB,EACxDI,EAAWT,QAAQ,CACrBI,SAAUA,EACVE,cAAeA,EACfC,mBAAoBA,CACtB,CAAC,EACD,OAAoBT,MAAMY,cAAcjC,YAAYsC,2BAA4BrC,SAAS,GAAI8B,EAAO,CAClGC,SAAUA,EACVQ,mBAAoB,CAAA,CACtB,CAAC,CAAC,CACJ,CACF,CAAC,EAIDd,QAAQ,OAAQ,wBAAyB,SAAUC,GACjD,OAAO,SAAUC,GACf,IAAIC,EAAgBD,EAAGC,cACrBC,EAAqBF,EAAGE,mBACxBC,EAAQf,OAAOY,EAAI,CAAC,gBAAiB,qBAAqB,EACxDI,EAAWT,QAAQ,CACrBI,SAAUA,EACVE,cAAeA,EACfC,mBAAoBA,CACtB,CAAC,EACD,OAAoBT,MAAMY,cAAcjC,YAAYuC,4BAA6BtC,SAAS,GAAI8B,EAAO,CACnGC,SAAUA,EACVQ,mBAAoB,CAAA,CACtB,CAAC,CAAC,CACJ,CACF,CAAC,EAIDd,QAAQ,cAAe,WAAY,SAAUC,GAC3C,OAAO,SAAUC,GACf,IAAIC,EAAgBD,EAAGC,cACrBC,EAAqBF,EAAGE,mBACxBC,EAAQf,OAAOY,EAAI,CAAC,gBAAiB,qBAAqB,EACxDI,EAAWR,eAAe,CAC5BG,SAAUA,EACVE,cAAeA,EACfC,mBAAoBA,CACtB,CAAC,EACD,OAAoBT,MAAMY,cAAcjC,YAAaC,SAAS,GAAI8B,EAAO,CACvEC,SAAUA,CACZ,CAAC,CAAC,CACJ,CACF,CAAC,EAIDN,QAAQ,cAAe,QAAS,SAAUC,GACxC,OAAO,SAAUC,GACf,IAAIC,EAAgBD,EAAGC,cACrBC,EAAqBF,EAAGE,mBACxBC,EAAQf,OAAOY,EAAI,CAAC,gBAAiB,qBAAqB,EACxDI,EAAWR,eAAe,CAC5BG,SAAUA,EACVE,cAAeA,EACfC,mBAAoBA,CACtB,CAAC,EACD,OAAoBT,MAAMY,cAAcjC,YAAYkC,gBAAiBjC,SAAS,GAAI8B,EAAO,CACvFC,SAAUA,CACZ,CAAC,CAAC,CACJ,CACF,CAAC,EAIDN,QAAQ,cAAe,OAAQ,SAAUC,GACvC,OAAO,SAAUC,GACf,IAAIC,EAAgBD,EAAGC,cACrBC,EAAqBF,EAAGE,mBACxBC,EAAQf,OAAOY,EAAI,CAAC,gBAAiB,qBAAqB,EACxDI,EAAWR,eAAe,CAC5BG,SAAUA,EACVE,cAAeA,EACfC,mBAAoBA,CACtB,CAAC,EACD,OAAoBT,MAAMY,cAAcjC,YAAYmC,eAAgBlC,SAAS,GAAI8B,EAAO,CACtFC,SAAUA,CACZ,CAAC,CAAC,CACJ,CACF,CAAC,EAIDN,QAAQ,cAAe,YAAa,SAAUC,GAC5C,OAAO,SAAUC,GACf,IAAIC,EAAgBD,EAAGC,cACrBC,EAAqBF,EAAGE,mBACxBC,EAAQf,OAAOY,EAAI,CAAC,gBAAiB,qBAAqB,EACxDI,EAAWR,eAAe,CAC5BG,SAAUA,EACVE,cAAeA,EACfC,mBAAoBA,CACtB,CAAC,EACD,OAAoBT,MAAMY,cAAcjC,YAAYoC,oBAAqBnC,SAAS,GAAI8B,EAAO,CAC3FC,SAAUA,CACZ,CAAC,CAAC,CACJ,CACF,CAAC,EAIDN,QAAQ,cAAe,iBAAkB,SAAUC,GACjD,OAAO,SAAUC,GACf,IAAIC,EAAgBD,EAAGC,cACrBC,EAAqBF,EAAGE,mBACxBC,EAAQf,OAAOY,EAAI,CAAC,gBAAiB,qBAAqB,EACxDI,EAAWR,eAAe,CAC5BG,SAAUA,EACVE,cAAeA,EACfC,mBAAoBA,CACtB,CAAC,EACD,OAAoBT,MAAMY,cAAcjC,YAAYqC,yBAA0BpC,SAAS,GAAI8B,EAAO,CAChGC,SAAUA,CACZ,CAAC,CAAC,CACJ,CACF,CAAC,EAIDN,QAAQ,cAAe,mBAAoB,SAAUC,GACnD,OAAO,SAAUC,GACf,IAAIC,EAAgBD,EAAGC,cACrBC,EAAqBF,EAAGE,mBACxBC,EAAQf,OAAOY,EAAI,CAAC,gBAAiB,qBAAqB,EACxDI,EAAWR,eAAe,CAC5BG,SAAUA,EACVE,cAAeA,EACfC,mBAAoBA,CACtB,CAAC,EACD,OAAoBT,MAAMY,cAAcjC,YAAYsC,2BAA4BrC,SAAS,GAAI8B,EAAO,CAClGC,SAAUA,CACZ,CAAC,CAAC,CACJ,CACF,CAAC,EAIDN,QAAQ,cAAe,oBAAqB,SAAUC,GACpD,OAAO,SAAUC,GACf,IAAIC,EAAgBD,EAAGC,cACrBC,EAAqBF,EAAGE,mBACxBC,EAAQf,OAAOY,EAAI,CAAC,gBAAiB,qBAAqB,EACxDI,EAAWR,eAAe,CAC5BG,SAAUA,EACVE,cAAeA,EACfC,mBAAoBA,CACtB,CAAC,EACD,OAAoBT,MAAMY,cAAcjC,YAAYuC,4BAA6BtC,SAAS,GAAI8B,EAAO,CACnGC,SAAUA,CACZ,CAAC,CAAC,CACJ,CACF,CAAC,EAIDN,QAAQ,cAAe,OAAQ,SAAUC,GACvC,OAAO,SAAUC,GACf,IAAIC,EAAgBD,EAAGC,cACrBC,EAAqBF,EAAGE,mBACxBC,EAAQf,OAAOY,EAAI,CAAC,gBAAiB,qBAAqB,EACxDI,EAAWR,eAAe,CAC5BG,SAAUA,EACVE,cAAeA,EACfC,mBAAoBA,CACtB,CAAC,EACD,OAAoBT,MAAMY,cAAcjC,YAAaC,SAAS,GAAI8B,EAAO,CACvEC,SAAUA,EACVQ,mBAAoB,CAAA,CACtB,CAAC,CAAC,CACJ,CACF,CAAC,EAIDd,QAAQ,cAAe,YAAa,SAAUC,GAC5C,OAAO,SAAUC,GACf,IAAIC,EAAgBD,EAAGC,cACrBC,EAAqBF,EAAGE,mBACxBC,EAAQf,OAAOY,EAAI,CAAC,gBAAiB,qBAAqB,EACxDI,EAAWR,eAAe,CAC5BG,SAAUA,EACVE,cAAeA,EACfC,mBAAoBA,CACtB,CAAC,EACD,OAAoBT,MAAMY,cAAcjC,YAAYkC,gBAAiBjC,SAAS,GAAI8B,EAAO,CACvFC,SAAUA,EACVQ,mBAAoB,CAAA,CACtB,CAAC,CAAC,CACJ,CACF,CAAC,EAIDd,QAAQ,cAAe,WAAY,SAAUC,GAC3C,OAAO,SAAUC,GACf,IAAIC,EAAgBD,EAAGC,cACrBC,EAAqBF,EAAGE,mBACxBC,EAAQf,OAAOY,EAAI,CAAC,gBAAiB,qBAAqB,EACxDI,EAAWR,eAAe,CAC5BG,SAAUA,EACVE,cAAeA,EACfC,mBAAoBA,CACtB,CAAC,EACD,OAAoBT,MAAMY,cAAcjC,YAAYmC,eAAgBlC,SAAS,GAAI8B,EAAO,CACtFC,SAAUA,EACVQ,mBAAoB,CAAA,CACtB,CAAC,CAAC,CACJ,CACF,CAAC,EAIDd,QAAQ,cAAe,gBAAiB,SAAUC,GAChD,OAAO,SAAUC,GACf,IAAIC,EAAgBD,EAAGC,cACrBC,EAAqBF,EAAGE,mBACxBC,EAAQf,OAAOY,EAAI,CAAC,gBAAiB,qBAAqB,EACxDI,EAAWR,eAAe,CAC5BG,SAAUA,EACVE,cAAeA,EACfC,mBAAoBA,CACtB,CAAC,EACD,OAAoBT,MAAMY,cAAcjC,YAAYoC,oBAAqBnC,SAAS,GAAI8B,EAAO,CAC3FC,SAAUA,EACVQ,mBAAoB,CAAA,CACtB,CAAC,CAAC,CACJ,CACF,CAAC,EAIDd,QAAQ,cAAe,qBAAsB,SAAUC,GACrD,OAAO,SAAUC,GACf,IAAIC,EAAgBD,EAAGC,cACrBC,EAAqBF,EAAGE,mBACxBC,EAAQf,OAAOY,EAAI,CAAC,gBAAiB,qBAAqB,EACxDI,EAAWR,eAAe,CAC5BG,SAAUA,EACVE,cAAeA,EACfC,mBAAoBA,CACtB,CAAC,EACD,OAAoBT,MAAMY,cAAcjC,YAAYqC,yBAA0BpC,SAAS,GAAI8B,EAAO,CAChGC,SAAUA,EACVQ,mBAAoB,CAAA,CACtB,CAAC,CAAC,CACJ,CACF,CAAC,EAIDd,QAAQ,cAAe,uBAAwB,SAAUC,GACvD,OAAO,SAAUC,GACf,IAAIC,EAAgBD,EAAGC,cACrBC,EAAqBF,EAAGE,mBACxBC,EAAQf,OAAOY,EAAI,CAAC,gBAAiB,qBAAqB,EACxDI,EAAWR,eAAe,CAC5BG,SAAUA,EACVE,cAAeA,EACfC,mBAAoBA,CACtB,CAAC,EACD,OAAoBT,MAAMY,cAAcjC,YAAYsC,2BAA4BrC,SAAS,GAAI8B,EAAO,CAClGC,SAAUA,EACVQ,mBAAoB,CAAA,CACtB,CAAC,CAAC,CACJ,CACF,CAAC,EAIDd,QAAQ,cAAe,wBAAyB,SAAUC,GACxD,OAAO,SAAUC,GACf,IAAIC,EAAgBD,EAAGC,cACrBC,EAAqBF,EAAGE,mBACxBC,EAAQf,OAAOY,EAAI,CAAC,gBAAiB,qBAAqB,EACxDI,EAAWR,eAAe,CAC5BG,SAAUA,EACVE,cAAeA,EACfC,mBAAoBA,CACtB,CAAC,EACD,OAAoBT,MAAMY,cAAcjC,YAAYuC,4BAA6BtC,SAAS,GAAI8B,EAAO,CACnGC,SAAUA,EACVQ,mBAAoB,CAAA,CACtB,CAAC,CAAC,CACJ,CACF,CAAC,EAIDd,QAAQ,YAAa,WAAY,SAAUC,GACzC,OAAO,SAAUI,GACf,IAAIU,EAAYnB,aAAa,CAC3BK,SAAUA,CACZ,CAAC,EACD,OAAoBN,MAAMY,cAAcjC,YAAY0C,gBAAiBzC,SAAS,GAAI8B,EAAO,CACvFU,UAAWA,CACb,CAAC,CAAC,CACJ,CACF,CAAC,EAIDf,QAAQ,YAAa,QAAS,SAAUC,GACtC,OAAO,SAAUI,GACf,IAAIU,EAAYnB,aAAa,CAC3BK,SAAUA,CACZ,CAAC,EACD,OAAoBN,MAAMY,cAAcjC,YAAY2C,qBAAsB1C,SAAS,GAAI8B,EAAO,CAC5FU,UAAWA,CACb,CAAC,CAAC,CACJ,CACF,CAAC,EAIDf,QAAQ,YAAa,OAAQ,SAAUC,GACrC,OAAO,SAAUI,GACf,IAAIU,EAAYnB,aAAa,CAC3BK,SAAUA,CACZ,CAAC,EACD,OAAoBN,MAAMY,cAAcjC,YAAY4C,oBAAqB3C,SAAS,GAAI8B,EAAO,CAC3FU,UAAWA,CACb,CAAC,CAAC,CACJ,CACF,CAAC,EAIDf,QAAQ,YAAa,YAAa,SAAUC,GAC1C,OAAO,SAAUI,GACf,IAAIU,EAAYnB,aAAa,CAC3BK,SAAUA,CACZ,CAAC,EACD,OAAoBN,MAAMY,cAAcjC,YAAY6C,yBAA0B5C,SAAS,GAAI8B,EAAO,CAChGU,UAAWA,CACb,CAAC,CAAC,CACJ,CACF,CAAC,EAIDf,QAAQ,YAAa,iBAAkB,SAAUC,GAC/C,OAAO,SAAUI,GACf,IAAIU,EAAYnB,aAAa,CAC3BK,SAAUA,CACZ,CAAC,EACD,OAAoBN,MAAMY,cAAcjC,YAAY8C,8BAA+B7C,SAAS,GAAI8B,EAAO,CACrGU,UAAWA,CACb,CAAC,CAAC,CACJ,CACF,CAAC,EAIDf,QAAQ,YAAa,mBAAoB,SAAUC,GACjD,OAAO,SAAUI,GACf,IAAIU,EAAYnB,aAAa,CAC3BK,SAAUA,CACZ,CAAC,EACD,OAAoBN,MAAMY,cAAcjC,YAAY+C,gCAAiC9C,SAAS,GAAI8B,EAAO,CACvGU,UAAWA,CACb,CAAC,CAAC,CACJ,CACF,CAAC,EAIDf,QAAQ,YAAa,oBAAqB,SAAUC,GAClD,OAAO,SAAUI,GACf,IAAIU,EAAYnB,aAAa,CAC3BK,SAAUA,CACZ,CAAC,EACD,OAAoBN,MAAMY,cAAcjC,YAAYgD,iCAAkC/C,SAAS,GAAI8B,EAAO,CACxGU,UAAWA,CACb,CAAC,CAAC,CACJ,CACF,CAAC,EAIDf,QAAQ,YAAa,eAAgB,SAAUC,GAC7C,OAAO,SAAUI,GACf,IAAIU,EAAYnB,aAAa,CAC3BK,SAAUA,CACZ,CAAC,EACD,OAAoBN,MAAMY,cAAcjC,YAAY0C,gBAAiBzC,SAAS,GAAI8B,EAAO,CACvFU,UAAWA,EACXD,mBAAoB,CAAA,CACtB,CAAC,CAAC,CACJ,CACF,CAAC,EAIDd,QAAQ,YAAa,YAAa,SAAUC,GAC1C,OAAO,SAAUI,GACf,IAAIU,EAAYnB,aAAa,CAC3BK,SAAUA,CACZ,CAAC,EACD,OAAoBN,MAAMY,cAAcjC,YAAY2C,qBAAsB1C,SAAS,GAAI8B,EAAO,CAC5FU,UAAWA,EACXD,mBAAoB,CAAA,CACtB,CAAC,CAAC,CACJ,CACF,CAAC,EAIDd,QAAQ,YAAa,WAAY,SAAUC,GACzC,OAAO,SAAUI,GACf,IAAIU,EAAYnB,aAAa,CAC3BK,SAAUA,CACZ,CAAC,EACD,OAAoBN,MAAMY,cAAcjC,YAAY4C,oBAAqB3C,SAAS,GAAI8B,EAAO,CAC3FU,UAAWA,EACXD,mBAAoB,CAAA,CACtB,CAAC,CAAC,CACJ,CACF,CAAC,EAIDd,QAAQ,YAAa,gBAAiB,SAAUC,GAC9C,OAAO,SAAUI,GACf,IAAIU,EAAYnB,aAAa,CAC3BK,SAAUA,CACZ,CAAC,EACD,OAAoBN,MAAMY,cAAcjC,YAAY6C,yBAA0B5C,SAAS,GAAI8B,EAAO,CAChGU,UAAWA,EACXD,mBAAoB,CAAA,CACtB,CAAC,CAAC,CACJ,CACF,CAAC,EAIDd,QAAQ,YAAa,qBAAsB,SAAUC,GACnD,OAAO,SAAUI,GACf,IAAIU,EAAYnB,aAAa,CAC3BK,SAAUA,CACZ,CAAC,EACD,OAAoBN,MAAMY,cAAcjC,YAAY8C,8BAA+B7C,SAAS,GAAI8B,EAAO,CACrGU,UAAWA,EACXD,mBAAoB,CAAA,CACtB,CAAC,CAAC,CACJ,CACF,CAAC,EAIDd,QAAQ,YAAa,uBAAwB,SAAUC,GACrD,OAAO,SAAUI,GACf,IAAIU,EAAYnB,aAAa,CAC3BK,SAAUA,CACZ,CAAC,EACD,OAAoBN,MAAMY,cAAcjC,YAAY+C,gCAAiC9C,SAAS,GAAI8B,EAAO,CACvGU,UAAWA,EACXD,mBAAoB,CAAA,CACtB,CAAC,CAAC,CACJ,CACF,CAAC,EAIDd,QAAQ,YAAa,wBAAyB,SAAUC,GACtD,OAAO,SAAUI,GACf,IAAIU,EAAYnB,aAAa,CAC3BK,SAAUA,CACZ,CAAC,EACD,OAAoBN,MAAMY,cAAcjC,YAAYgD,iCAAkC/C,SAAS,GAAI8B,EAAO,CACxGU,UAAWA,EACXD,mBAAoB,CAAA,CACtB,CAAC,CAAC,CACJ,CACF,CAAC,EACDd,QAAQ,SAAU,WAAY,SAAUC,GACtC,OAAO,SAAUC,GACf,IAAIC,EAAgBD,EAAGC,cACrBC,EAAqBF,EAAGE,mBACxBC,EAAQf,OAAOY,EAAI,CAAC,gBAAiB,qBAAqB,EACxDqB,EAAKxB,wBAAwB,CAC7BE,SAAUA,EACVE,cAAeA,EACfC,mBAAoBA,CACtB,CAAC,EACDE,EAAWiB,EAAGjB,SACdkB,EAAWD,EAAGC,SAChB,OAAoB7B,MAAMY,cAAcjC,YAAYmD,uBAAwBlD,SAAS,GAAI8B,EAAO,CAC9FC,SAAUA,EACVkB,SAAUA,CACZ,CAAC,CAAC,CACJ,CACF,CAAC,EACDxB,QAAQ,SAAU,QAAS,SAAUC,GACnC,OAAO,SAAUC,GACf,IAAIC,EAAgBD,EAAGC,cACrBC,EAAqBF,EAAGE,mBACxBC,EAAQf,OAAOY,EAAI,CAAC,gBAAiB,qBAAqB,EACxDqB,EAAKxB,wBAAwB,CAC7BE,SAAUA,EACVE,cAAeA,EACfC,mBAAoBA,CACtB,CAAC,EACDE,EAAWiB,EAAGjB,SACdkB,EAAWD,EAAGC,SAChB,OAAoB7B,MAAMY,cAAcjC,YAAYoD,4BAA6BnD,SAAS,GAAI8B,EAAO,CACnGC,SAAUA,EACVkB,SAAUA,CACZ,CAAC,CAAC,CACJ,CACF,CAAC,EACDxB,QAAQ,SAAU,OAAQ,SAAUC,GAClC,OAAO,SAAUC,GACf,IAAIC,EAAgBD,EAAGC,cACrBC,EAAqBF,EAAGE,mBACxBC,EAAQf,OAAOY,EAAI,CAAC,gBAAiB,qBAAqB,EACxDqB,EAAKxB,wBAAwB,CAC7BE,SAAUA,EACVE,cAAeA,EACfC,mBAAoBA,CACtB,CAAC,EACDE,EAAWiB,EAAGjB,SACdkB,EAAWD,EAAGC,SAChB,OAAoB7B,MAAMY,cAAcjC,YAAYqD,2BAA4BpD,SAAS,GAAI8B,EAAO,CAClGC,SAAUA,EACVkB,SAAUA,CACZ,CAAC,CAAC,CACJ,CACF,CAAC,EACDxB,QAAQ,SAAU,YAAa,SAAUC,GACvC,OAAO,SAAUC,GACf,IAAIC,EAAgBD,EAAGC,cACrBC,EAAqBF,EAAGE,mBACxBC,EAAQf,OAAOY,EAAI,CAAC,gBAAiB,qBAAqB,EACxDqB,EAAKxB,wBAAwB,CAC7BE,SAAUA,EACVE,cAAeA,EACfC,mBAAoBA,CACtB,CAAC,EACDE,EAAWiB,EAAGjB,SACdkB,EAAWD,EAAGC,SAChB,OAAoB7B,MAAMY,cAAcjC,YAAYsD,gCAAiCrD,SAAS,GAAI8B,EAAO,CACvGC,SAAUA,EACVkB,SAAUA,CACZ,CAAC,CAAC,CACJ,CACF,CAAC"}