import _Cascader from"@baifendian/adhere-ui-anthoc/es/cascader";var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(a){for(var e,t=1,c=arguments.length;t<c;t++)for(var n in e=arguments[t])Object.prototype.hasOwnProperty.call(e,n)&&(a[n]=e[n]);return a}).apply(this,arguments)},__rest=this&&this.__rest||function(a,e){var t={};for(n in a)Object.prototype.hasOwnProperty.call(a,n)&&e.indexOf(n)<0&&(t[n]=a[n]);if(null!=a&&"function"==typeof Object.getOwnPropertySymbols)for(var c=0,n=Object.getOwnPropertySymbols(a);c<n.length;c++)e.indexOf(n[c])<0&&Object.prototype.propertyIsEnumerable.call(a,n[c])&&(t[n[c]]=a[n[c]]);return t};import React from"react";import{setItem}from"../ItemFactory";import{useAsyncTree,useDict,useDynamicDict}from"../hooks";setItem("Cascader","Standard",function(c){return function(a){var e=a.cascadeParams,t=a.onDataSourceChange,a=__rest(a,["cascadeParams","onDataSourceChange"]),e=useDict({dictName:c,cascadeParams:e,onDataSourceChange:t});return React.createElement(_Cascader,__assign({},a,{options:e}))}}),setItem("Cascader","Multi",function(c){return function(a){var e=a.cascadeParams,t=a.onDataSourceChange,a=__rest(a,["cascadeParams","onDataSourceChange"]),e=useDict({dictName:c,cascadeParams:e,onDataSourceChange:t});return React.createElement(_Cascader.CascaderMulti,__assign({},a,{options:e}))}}),setItem("Cascader","ShowChild",function(c){return function(a){var e=a.cascadeParams,t=a.onDataSourceChange,a=__rest(a,["cascadeParams","onDataSourceChange"]),e=useDict({dictName:c,cascadeParams:e,onDataSourceChange:t});return React.createElement(_Cascader.CascaderShowChild,__assign({},a,{options:e}))}}),setItem("Cascader","ShowParent",function(c){return function(a){var e=a.cascadeParams,t=a.onDataSourceChange,a=__rest(a,["cascadeParams","onDataSourceChange"]),e=useDict({dictName:c,cascadeParams:e,onDataSourceChange:t});return React.createElement(_Cascader.CascaderShowParent,__assign({},a,{options:e}))}}),setItem("Cascader","ChangeOnSelect",function(c){return function(a){var e=a.cascadeParams,t=a.onDataSourceChange,a=__rest(a,["cascadeParams","onDataSourceChange"]),e=useDict({dictName:c,cascadeParams:e,onDataSourceChange:t});return React.createElement(_Cascader.CascaderChangeOnSelect,__assign({},a,{options:e}))}}),setItem("Cascader","TreeSelect",function(c){return function(a){var e=a.cascadeParams,t=a.onDataSourceChange,a=__rest(a,["cascadeParams","onDataSourceChange"]),e=useDict({dictName:c,cascadeParams:e,onDataSourceChange:t});return React.createElement(_Cascader.CascaderTreeSelect,__assign({},a,{options:e}))}}),setItem("Cascader","FlatStandard",function(c){return function(a){var e=a.cascadeParams,t=a.onDataSourceChange,a=__rest(a,["cascadeParams","onDataSourceChange"]),e=useDict({dictName:c,cascadeParams:e,onDataSourceChange:t});return React.createElement(_Cascader,__assign({},a,{options:e,treeDataSimpleMode:!0}))}}),setItem("Cascader","FlatMulti",function(c){return function(a){var e=a.cascadeParams,t=a.onDataSourceChange,a=__rest(a,["cascadeParams","onDataSourceChange"]),e=useDict({dictName:c,cascadeParams:e,onDataSourceChange:t});return React.createElement(_Cascader.CascaderMulti,__assign({},a,{options:e,treeDataSimpleMode:!0}))}}),setItem("Cascader","FlatShowChild",function(c){return function(a){var e=a.cascadeParams,t=a.onDataSourceChange,a=__rest(a,["cascadeParams","onDataSourceChange"]),e=useDict({dictName:c,cascadeParams:e,onDataSourceChange:t});return React.createElement(_Cascader.CascaderShowChild,__assign({},a,{options:e,treeDataSimpleMode:!0}))}}),setItem("Cascader","FlatShowParent",function(c){return function(a){var e=a.cascadeParams,t=a.onDataSourceChange,a=__rest(a,["cascadeParams","onDataSourceChange"]),e=useDict({dictName:c,cascadeParams:e,onDataSourceChange:t});return React.createElement(_Cascader.CascaderShowParent,__assign({},a,{options:e,treeDataSimpleMode:!0}))}}),setItem("Cascader","FlatChangeOnSelect",function(c){return function(a){var e=a.cascadeParams,t=a.onDataSourceChange,a=__rest(a,["cascadeParams","onDataSourceChange"]),e=useDict({dictName:c,cascadeParams:e,onDataSourceChange:t});return React.createElement(_Cascader.CascaderChangeOnSelect,__assign({},a,{options:e,treeDataSimpleMode:!0}))}}),setItem("Cascader","FlatTreeSelect",function(c){return function(a){var e=a.cascadeParams,t=a.onDataSourceChange,a=__rest(a,["cascadeParams","onDataSourceChange"]),e=useDict({dictName:c,cascadeParams:e,onDataSourceChange:t});return React.createElement(_Cascader.CascaderTreeSelect,__assign({},a,{options:e,treeDataSimpleMode:!0}))}}),setItem("CascaderDynamic","Standard",function(c){return function(a){var e=a.cascadeParams,t=a.onDataSourceChange,a=__rest(a,["cascadeParams","onDataSourceChange"]),e=useDynamicDict({dictName:c,cascadeParams:e,onDataSourceChange:t});return React.createElement(_Cascader,__assign({},a,{options:e}))}}),setItem("CascaderDynamic","Multi",function(c){return function(a){var e=a.cascadeParams,t=a.onDataSourceChange,a=__rest(a,["cascadeParams","onDataSourceChange"]),e=useDynamicDict({dictName:c,cascadeParams:e,onDataSourceChange:t});return React.createElement(_Cascader.CascaderMulti,__assign({},a,{options:e}))}}),setItem("CascaderDynamic","ShowChild",function(c){return function(a){var e=a.cascadeParams,t=a.onDataSourceChange,a=__rest(a,["cascadeParams","onDataSourceChange"]),e=useDynamicDict({dictName:c,cascadeParams:e,onDataSourceChange:t});return React.createElement(_Cascader.CascaderShowChild,__assign({},a,{options:e}))}}),setItem("CascaderDynamic","ShowParent",function(c){return function(a){var e=a.cascadeParams,t=a.onDataSourceChange,a=__rest(a,["cascadeParams","onDataSourceChange"]),e=useDynamicDict({dictName:c,cascadeParams:e,onDataSourceChange:t});return React.createElement(_Cascader.CascaderShowParent,__assign({},a,{options:e}))}}),setItem("CascaderDynamic","ChangeOnSelect",function(c){return function(a){var e=a.cascadeParams,t=a.onDataSourceChange,a=__rest(a,["cascadeParams","onDataSourceChange"]),e=useDynamicDict({dictName:c,cascadeParams:e,onDataSourceChange:t});return React.createElement(_Cascader.CascaderChangeOnSelect,__assign({},a,{options:e}))}}),setItem("CascaderDynamic","TreeSelect",function(c){return function(a){var e=a.cascadeParams,t=a.onDataSourceChange,a=__rest(a,["cascadeParams","onDataSourceChange"]),e=useDynamicDict({dictName:c,cascadeParams:e,onDataSourceChange:t});return React.createElement(_Cascader.CascaderTreeSelect,__assign({},a,{options:e}))}}),setItem("CascaderDynamic","FlatStandard",function(c){return function(a){var e=a.cascadeParams,t=a.onDataSourceChange,a=__rest(a,["cascadeParams","onDataSourceChange"]),e=useDynamicDict({dictName:c,cascadeParams:e,onDataSourceChange:t});return React.createElement(_Cascader,__assign({},a,{options:e,treeDataSimpleMode:!0}))}}),setItem("CascaderDynamic","FlatMulti",function(c){return function(a){var e=a.cascadeParams,t=a.onDataSourceChange,a=__rest(a,["cascadeParams","onDataSourceChange"]),e=useDynamicDict({dictName:c,cascadeParams:e,onDataSourceChange:t});return React.createElement(_Cascader.CascaderMulti,__assign({},a,{options:e,treeDataSimpleMode:!0}))}}),setItem("CascaderDynamic","FlatShowChild",function(c){return function(a){var e=a.cascadeParams,t=a.onDataSourceChange,a=__rest(a,["cascadeParams","onDataSourceChange"]),e=useDynamicDict({dictName:c,cascadeParams:e,onDataSourceChange:t});return React.createElement(_Cascader.CascaderShowChild,__assign({},a,{options:e,treeDataSimpleMode:!0}))}}),setItem("CascaderDynamic","FlatShowParent",function(c){return function(a){var e=a.cascadeParams,t=a.onDataSourceChange,a=__rest(a,["cascadeParams","onDataSourceChange"]),e=useDynamicDict({dictName:c,cascadeParams:e,onDataSourceChange:t});return React.createElement(_Cascader.CascaderShowParent,__assign({},a,{options:e,treeDataSimpleMode:!0}))}}),setItem("CascaderDynamic","FlatChangeOnSelect",function(c){return function(a){var e=a.cascadeParams,t=a.onDataSourceChange,a=__rest(a,["cascadeParams","onDataSourceChange"]),e=useDynamicDict({dictName:c,cascadeParams:e,onDataSourceChange:t});return React.createElement(_Cascader.CascaderChangeOnSelect,__assign({},a,{options:e,treeDataSimpleMode:!0}))}}),setItem("CascaderDynamic","FlatTreeSelect",function(c){return function(a){var e=a.cascadeParams,t=a.onDataSourceChange,a=__rest(a,["cascadeParams","onDataSourceChange"]),e=useDynamicDict({dictName:c,cascadeParams:e,onDataSourceChange:t});return React.createElement(_Cascader.CascaderTreeSelect,__assign({},a,{options:e,treeDataSimpleMode:!0}))}}),setItem("CascaderAsync","Standard",function(t){return function(a){var e=useAsyncTree({dictName:t});return React.createElement(_Cascader.AsyncCascader,__assign({},a,{fetchData:e}))}}),setItem("CascaderAsync","Multi",function(t){return function(a){var e=useAsyncTree({dictName:t});return React.createElement(_Cascader.AsyncCascaderMulti,__assign({},a,{fetchData:e}))}}),setItem("CascaderAsync","ShowChild",function(t){return function(a){var e=useAsyncTree({dictName:t});return React.createElement(_Cascader.AsyncCascaderShowChild,__assign({},a,{fetchData:e}))}}),setItem("CascaderAsync","ShowParent",function(t){return function(a){var e=useAsyncTree({dictName:t});return React.createElement(_Cascader.AsyncCascaderShowParent,__assign({},a,{fetchData:e}))}}),setItem("CascaderAsync","ChangeOnSelect",function(t){return function(a){var e=useAsyncTree({dictName:t});return React.createElement(_Cascader.AsyncCascaderChangeOnSelect,__assign({},a,{fetchData:e}))}}),setItem("CascaderAsync","FlatStandard",function(t){return function(a){var e=useAsyncTree({dictName:t});return React.createElement(_Cascader.AsyncCascader,__assign({},a,{fetchData:e,treeDataSimpleMode:!0}))}}),setItem("CascaderAsync","FlatMulti",function(t){return function(a){var e=useAsyncTree({dictName:t});return React.createElement(_Cascader.AsyncCascaderMulti,__assign({},a,{fetchData:e,treeDataSimpleMode:!0}))}}),setItem("CascaderAsync","FlatShowChild",function(t){return function(a){var e=useAsyncTree({dictName:t});return React.createElement(_Cascader.AsyncCascaderShowChild,__assign({},a,{fetchData:e,treeDataSimpleMode:!0}))}}),setItem("CascaderAsync","FlatShowParent",function(t){return function(a){var e=useAsyncTree({dictName:t});return React.createElement(_Cascader.AsyncCascaderShowParent,__assign({},a,{fetchData:e,treeDataSimpleMode:!0}))}}),setItem("CascaderAsync","FlatChangeOnSelect",function(t){return function(a){var e=useAsyncTree({dictName:t});return React.createElement(_Cascader.AsyncCascaderChangeOnSelect,__assign({},a,{fetchData:e,treeDataSimpleMode:!0}))}});
//# sourceMappingURL=Cascader.js.map
