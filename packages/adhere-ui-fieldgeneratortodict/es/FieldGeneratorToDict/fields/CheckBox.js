import _Checkbox from"@baifendian/adhere-ui-anthoc/es/checkbox";var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(e){for(var a,c=1,t=arguments.length;c<t;c++)for(var n in a=arguments[c])Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n]);return e}).apply(this,arguments)},__rest=this&&this.__rest||function(e,a){var c={};for(n in e)Object.prototype.hasOwnProperty.call(e,n)&&a.indexOf(n)<0&&(c[n]=e[n]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var t=0,n=Object.getOwnPropertySymbols(e);t<n.length;t++)a.indexOf(n[t])<0&&Object.prototype.propertyIsEnumerable.call(e,n[t])&&(c[n[t]]=e[n[t]]);return c};import React from"react";import{useAutoCompleteDict,useDict,useDynamicDict}from"../Hooks";import{setItem}from"../ItemFactory";import Suspense from"../Suspense";setItem("CheckBox","Standard",function(t){return function(e){var a=e.cascadeParams,c=e.onDataSourceChange,e=__rest(e,["cascadeParams","onDataSourceChange"]),a=useDict({dictName:t,cascadeParams:a,onDataSourceChange:c});return React.createElement(_Checkbox.Group,__assign({},e,{options:a}))}}),setItem("CheckBox","GroupExt",function(t){return function(e){var a=e.cascadeParams,c=e.onDataSourceChange,e=__rest(e,["cascadeParams","onDataSourceChange"]),a=useDict({dictName:t,cascadeParams:a,onDataSourceChange:c});return React.createElement(_Checkbox.CheckboxGroupExt,__assign({},e,{options:a}))}}),setItem("CheckBox","Vertical",function(t){return function(e){var a=e.cascadeParams,c=e.onDataSourceChange,e=__rest(e,["cascadeParams","onDataSourceChange"]),a=useDict({dictName:t,cascadeParams:a,onDataSourceChange:c});return React.createElement(_Checkbox.VerticalCheckbox,__assign({},e,{options:a}))}}),setItem("CheckBox","CheckAllVertical",function(t){return function(e){var a=e.cascadeParams,c=e.onDataSourceChange,e=__rest(e,["cascadeParams","onDataSourceChange"]),a=useDict({dictName:t,cascadeParams:a,onDataSourceChange:c});return React.createElement(_Checkbox.VerticalCheckAllCheckbox,__assign({},e,{options:a}))}}),setItem("CheckBox","Horizontal",function(t){return function(e){var a=e.cascadeParams,c=e.onDataSourceChange,e=__rest(e,["cascadeParams","onDataSourceChange"]),a=useDict({dictName:t,cascadeParams:a,onDataSourceChange:c});return React.createElement(_Checkbox.HorizontalCheckbox,__assign({},e,{options:a}))}}),setItem("CheckBox","CheckAllHorizontal",function(t){return function(e){var a=e.cascadeParams,c=e.onDataSourceChange,e=__rest(e,["cascadeParams","onDataSourceChange"]),a=useDict({dictName:t,cascadeParams:a,onDataSourceChange:c});return React.createElement(_Checkbox.HorizontalCheckAllCheckbox,__assign({},e,{options:a}))}}),setItem("CheckBox","Custom",function(t){return function(e){var a=e.cascadeParams,c=e.onDataSourceChange,e=__rest(e,["cascadeParams","onDataSourceChange"]),a=useDict({dictName:t,cascadeParams:a,onDataSourceChange:c});return React.createElement(_Checkbox.CustomCheckbox,__assign({},e,{options:a}))}}),setItem("CheckBox","CheckAllCustom",function(t){return function(e){var a=e.cascadeParams,c=e.onDataSourceChange,e=__rest(e,["cascadeParams","onDataSourceChange"]),a=useDict({dictName:t,cascadeParams:a,onDataSourceChange:c});return React.createElement(_Checkbox.CustomCheckAllCheckbox,__assign({},e,{options:a}))}}),setItem("CheckBox","SuspenseStandard",function(n){return function(e){var a=e.cascadeParams,c=e.onDataSourceChange,t=e.suspenseProps,e=__rest(e,["cascadeParams","onDataSourceChange","suspenseProps"]),a=useDict({dictName:n,cascadeParams:a,onDataSourceChange:c});return React.createElement(Suspense,__assign({},null!=t?t:{},{data:a}),React.createElement(_Checkbox.Group,__assign({},e,{options:a})))}}),setItem("CheckBox","SuspenseGroupExt",function(n){return function(e){var a=e.cascadeParams,c=e.onDataSourceChange,t=e.suspenseProps,e=__rest(e,["cascadeParams","onDataSourceChange","suspenseProps"]),a=useDict({dictName:n,cascadeParams:a,onDataSourceChange:c});return React.createElement(Suspense,__assign({},null!=t?t:{},{data:a}),React.createElement(_Checkbox.CheckboxGroupExt,__assign({},e,{options:a})))}}),setItem("CheckBox","SuspenseVertical",function(n){return function(e){var a=e.cascadeParams,c=e.onDataSourceChange,t=e.suspenseProps,e=__rest(e,["cascadeParams","onDataSourceChange","suspenseProps"]),a=useDict({dictName:n,cascadeParams:a,onDataSourceChange:c});return React.createElement(Suspense,__assign({},null!=t?t:{},{data:a}),React.createElement(_Checkbox.VerticalCheckbox,__assign({},e,{options:a})))}}),setItem("CheckBox","SuspenseCheckAllVertical",function(n){return function(e){var a=e.cascadeParams,c=e.onDataSourceChange,t=e.suspenseProps,e=__rest(e,["cascadeParams","onDataSourceChange","suspenseProps"]),a=useDict({dictName:n,cascadeParams:a,onDataSourceChange:c});return React.createElement(Suspense,__assign({},null!=t?t:{},{data:a}),React.createElement(_Checkbox.VerticalCheckAllCheckbox,__assign({},e,{options:a})))}}),setItem("CheckBox","SuspenseHorizontal",function(n){return function(e){var a=e.cascadeParams,c=e.onDataSourceChange,t=e.suspenseProps,e=__rest(e,["cascadeParams","onDataSourceChange","suspenseProps"]),a=useDict({dictName:n,cascadeParams:a,onDataSourceChange:c});return React.createElement(Suspense,__assign({},null!=t?t:{},{data:a}),React.createElement(_Checkbox.HorizontalCheckbox,__assign({},e,{options:a})))}}),setItem("CheckBox","SuspenseCheckAllHorizontal",function(n){return function(e){var a=e.cascadeParams,c=e.onDataSourceChange,t=e.suspenseProps,e=__rest(e,["cascadeParams","onDataSourceChange","suspenseProps"]),a=useDict({dictName:n,cascadeParams:a,onDataSourceChange:c});return React.createElement(Suspense,__assign({},null!=t?t:{},{data:a}),React.createElement(_Checkbox.HorizontalCheckAllCheckbox,__assign({},e,{options:a})))}}),setItem("CheckBox","SuspenseCustom",function(n){return function(e){var a=e.cascadeParams,c=e.onDataSourceChange,t=e.suspenseProps,e=__rest(e,["cascadeParams","onDataSourceChange","suspenseProps"]),a=useDict({dictName:n,cascadeParams:a,onDataSourceChange:c});return React.createElement(Suspense,__assign({},null!=t?t:{},{data:a}),React.createElement(_Checkbox.CustomCheckbox,__assign({},e,{options:a})))}}),setItem("CheckBox","SuspenseCheckAllCustom",function(n){return function(e){var a=e.cascadeParams,c=e.onDataSourceChange,t=e.suspenseProps,e=__rest(e,["cascadeParams","onDataSourceChange","suspenseProps"]),a=useDict({dictName:n,cascadeParams:a,onDataSourceChange:c});return React.createElement(Suspense,__assign({},null!=t?t:{},{data:a}),React.createElement(_Checkbox.CustomCheckAllCheckbox,__assign({},e,{options:a})))}}),setItem("CheckBox","Select",function(t){return function(e){var a=e.cascadeParams,c=e.onDataSourceChange,e=__rest(e,["cascadeParams","onDataSourceChange"]),a=useDict({dictName:t,cascadeParams:a,onDataSourceChange:c});return React.createElement(_Checkbox.CheckboxSelect,__assign({},e,{options:a}))}}),setItem("CheckBox","CheckAllSelect",function(t){return function(e){var a=e.cascadeParams,c=e.onDataSourceChange,e=__rest(e,["cascadeParams","onDataSourceChange"]),a=useDict({dictName:t,cascadeParams:a,onDataSourceChange:c});return React.createElement(_Checkbox.CheckAllCheckboxSelect,__assign({},e,{options:a}))}}),setItem("CheckBox","CustomSelect",function(t){return function(e){var a=e.cascadeParams,c=e.onDataSourceChange,e=__rest(e,["cascadeParams","onDataSourceChange"]),a=useDict({dictName:t,cascadeParams:a,onDataSourceChange:c});return React.createElement(_Checkbox.CustomCheckboxSelect,__assign({},e,{options:a}))}}),setItem("CheckBox","CheckAllCustomSelect",function(t){return function(e){var a=e.cascadeParams,c=e.onDataSourceChange,e=__rest(e,["cascadeParams","onDataSourceChange"]),a=useDict({dictName:t,cascadeParams:a,onDataSourceChange:c});return React.createElement(_Checkbox.CheckAllCustomCheckboxSelect,__assign({},e,{options:a}))}}),setItem("CheckBoxDynamic","Standard",function(t){return function(e){var a=e.cascadeParams,c=e.onDataSourceChange,e=__rest(e,["cascadeParams","onDataSourceChange"]),a=useDynamicDict({dictName:t,cascadeParams:a,onDataSourceChange:c});return React.createElement(_Checkbox.Group,__assign({},e,{options:a}))}}),setItem("CheckBoxDynamic","GroupExt",function(t){return function(e){var a=e.cascadeParams,c=e.onDataSourceChange,e=__rest(e,["cascadeParams","onDataSourceChange"]),a=useDynamicDict({dictName:t,cascadeParams:a,onDataSourceChange:c});return React.createElement(_Checkbox.CheckboxGroupExt,__assign({},e,{options:a}))}}),setItem("CheckBoxDynamic","Vertical",function(t){return function(e){var a=e.cascadeParams,c=e.onDataSourceChange,e=__rest(e,["cascadeParams","onDataSourceChange"]),a=useDynamicDict({dictName:t,cascadeParams:a,onDataSourceChange:c});return React.createElement(_Checkbox.VerticalCheckbox,__assign({},e,{options:a}))}}),setItem("CheckBoxDynamic","CheckAllVertical",function(t){return function(e){var a=e.cascadeParams,c=e.onDataSourceChange,e=__rest(e,["cascadeParams","onDataSourceChange"]),a=useDynamicDict({dictName:t,cascadeParams:a,onDataSourceChange:c});return React.createElement(_Checkbox.VerticalCheckAllCheckbox,__assign({},e,{options:a}))}}),setItem("CheckBoxDynamic","Horizontal",function(t){return function(e){var a=e.cascadeParams,c=e.onDataSourceChange,e=__rest(e,["cascadeParams","onDataSourceChange"]),a=useDynamicDict({dictName:t,cascadeParams:a,onDataSourceChange:c});return React.createElement(_Checkbox.HorizontalCheckbox,__assign({},e,{options:a}))}}),setItem("CheckBoxDynamic","CheckAllHorizontal",function(t){return function(e){var a=e.cascadeParams,c=e.onDataSourceChange,e=__rest(e,["cascadeParams","onDataSourceChange"]),a=useDynamicDict({dictName:t,cascadeParams:a,onDataSourceChange:c});return React.createElement(_Checkbox.HorizontalCheckAllCheckbox,__assign({},e,{options:a}))}}),setItem("CheckBoxDynamic","Custom",function(t){return function(e){var a=e.cascadeParams,c=e.onDataSourceChange,e=__rest(e,["cascadeParams","onDataSourceChange"]),a=useDynamicDict({dictName:t,cascadeParams:a,onDataSourceChange:c});return React.createElement(_Checkbox.CustomCheckbox,__assign({},e,{options:a}))}}),setItem("CheckBoxDynamic","CheckAllCustom",function(t){return function(e){var a=e.cascadeParams,c=e.onDataSourceChange,e=__rest(e,["cascadeParams","onDataSourceChange"]),a=useDynamicDict({dictName:t,cascadeParams:a,onDataSourceChange:c});return React.createElement(_Checkbox.CustomCheckAllCheckbox,__assign({},e,{options:a}))}}),setItem("CheckBoxDynamic","SuspenseStandard",function(n){return function(e){var a=e.cascadeParams,c=e.onDataSourceChange,t=e.suspenseProps,e=__rest(e,["cascadeParams","onDataSourceChange","suspenseProps"]),a=useDynamicDict({dictName:n,cascadeParams:a,onDataSourceChange:c});return React.createElement(Suspense,__assign({},null!=t?t:{},{data:a}),React.createElement(_Checkbox.Group,__assign({},e,{options:a})))}}),setItem("CheckBoxDynamic","SuspenseGroupExt",function(n){return function(e){var a=e.cascadeParams,c=e.onDataSourceChange,t=e.suspenseProps,e=__rest(e,["cascadeParams","onDataSourceChange","suspenseProps"]),a=useDynamicDict({dictName:n,cascadeParams:a,onDataSourceChange:c});return React.createElement(Suspense,__assign({},null!=t?t:{},{data:a}),React.createElement(_Checkbox.CheckboxGroupExt,__assign({},e,{options:a})))}}),setItem("CheckBoxDynamic","SuspenseVertical",function(n){return function(e){var a=e.cascadeParams,c=e.onDataSourceChange,t=e.suspenseProps,e=__rest(e,["cascadeParams","onDataSourceChange","suspenseProps"]),a=useDynamicDict({dictName:n,cascadeParams:a,onDataSourceChange:c});return React.createElement(Suspense,__assign({},null!=t?t:{},{data:a}),React.createElement(_Checkbox.VerticalCheckbox,__assign({},e,{options:a})))}}),setItem("CheckBoxDynamic","SuspenseCheckAllVertical",function(n){return function(e){var a=e.cascadeParams,c=e.onDataSourceChange,t=e.suspenseProps,e=__rest(e,["cascadeParams","onDataSourceChange","suspenseProps"]),a=useDynamicDict({dictName:n,cascadeParams:a,onDataSourceChange:c});return React.createElement(Suspense,__assign({},null!=t?t:{},{data:a}),React.createElement(_Checkbox.VerticalCheckAllCheckbox,__assign({},e,{options:a})))}}),setItem("CheckBoxDynamic","SuspenseHorizontal",function(n){return function(e){var a=e.cascadeParams,c=e.onDataSourceChange,t=e.suspenseProps,e=__rest(e,["cascadeParams","onDataSourceChange","suspenseProps"]),a=useDynamicDict({dictName:n,cascadeParams:a,onDataSourceChange:c});return React.createElement(Suspense,__assign({},null!=t?t:{},{data:a}),React.createElement(_Checkbox.HorizontalCheckbox,__assign({},e,{options:a})))}}),setItem("CheckBoxDynamic","SuspenseCheckAllHorizontal",function(n){return function(e){var a=e.cascadeParams,c=e.onDataSourceChange,t=e.suspenseProps,e=__rest(e,["cascadeParams","onDataSourceChange","suspenseProps"]),a=useDynamicDict({dictName:n,cascadeParams:a,onDataSourceChange:c});return React.createElement(Suspense,__assign({},null!=t?t:{},{data:a}),React.createElement(_Checkbox.HorizontalCheckAllCheckbox,__assign({},e,{options:a})))}}),setItem("CheckBoxDynamic","SuspenseCustom",function(n){return function(e){var a=e.cascadeParams,c=e.onDataSourceChange,t=e.suspenseProps,e=__rest(e,["cascadeParams","onDataSourceChange","suspenseProps"]),a=useDynamicDict({dictName:n,cascadeParams:a,onDataSourceChange:c});return React.createElement(Suspense,__assign({},null!=t?t:{},{data:a}),React.createElement(_Checkbox.CustomCheckbox,__assign({},e,{options:a})))}}),setItem("CheckBoxDynamic","SuspenseCheckAllCustom",function(n){return function(e){var a=e.cascadeParams,c=e.onDataSourceChange,t=e.suspenseProps,e=__rest(e,["cascadeParams","onDataSourceChange","suspenseProps"]),a=useDynamicDict({dictName:n,cascadeParams:a,onDataSourceChange:c});return React.createElement(Suspense,__assign({},null!=t?t:{},{data:a}),React.createElement(_Checkbox.CustomCheckAllCheckbox,__assign({},e,{options:a})))}}),setItem("CheckBoxDynamic","Select",function(t){return function(e){var a=e.cascadeParams,c=e.onDataSourceChange,e=__rest(e,["cascadeParams","onDataSourceChange"]),a=useDynamicDict({dictName:t,cascadeParams:a,onDataSourceChange:c});return React.createElement(_Checkbox.CheckboxSelect,__assign({},e,{options:a}))}}),setItem("CheckBoxDynamic","CheckAllSelect",function(t){return function(e){var a=e.cascadeParams,c=e.onDataSourceChange,e=__rest(e,["cascadeParams","onDataSourceChange"]),a=useDynamicDict({dictName:t,cascadeParams:a,onDataSourceChange:c});return React.createElement(_Checkbox.CheckAllCheckboxSelect,__assign({},e,{options:a}))}}),setItem("CheckBoxDynamic","CustomSelect",function(t){return function(e){var a=e.cascadeParams,c=e.onDataSourceChange,e=__rest(e,["cascadeParams","onDataSourceChange"]),a=useDynamicDict({dictName:t,cascadeParams:a,onDataSourceChange:c});return React.createElement(_Checkbox.CustomCheckboxSelect,__assign({},e,{options:a}))}}),setItem("CheckBoxDynamic","CheckAllCustomSelect",function(t){return function(e){var a=e.cascadeParams,c=e.onDataSourceChange,e=__rest(e,["cascadeParams","onDataSourceChange"]),a=useDynamicDict({dictName:t,cascadeParams:a,onDataSourceChange:c});return React.createElement(_Checkbox.CheckAllCustomCheckboxSelect,__assign({},e,{options:a}))}}),setItem("CheckBoxAC","Standard",function(t){return function(e){var a=e.cascadeParams,c=e.onDataSourceChange,e=__rest(e,["cascadeParams","onDataSourceChange"]),a=useAutoCompleteDict({dictName:t,cascadeParams:a,onDataSourceChange:c}),c=a.options,a=a.loadData;return React.createElement(_Checkbox.AutoCompleteCheckboxSelect,__assign({},e,{options:c,loadData:a}))}}),setItem("CheckBoxAC","CheckAll",function(t){return function(e){var a=e.cascadeParams,c=e.onDataSourceChange,e=__rest(e,["cascadeParams","onDataSourceChange"]),a=useAutoCompleteDict({dictName:t,cascadeParams:a,onDataSourceChange:c}),c=a.options,a=a.loadData;return React.createElement(_Checkbox.AutoCompleteCheckAllCheckboxSelect,__assign({},e,{options:c,loadData:a}))}}),setItem("CheckBoxAC","Custom",function(t){return function(e){var a=e.cascadeParams,c=e.onDataSourceChange,e=__rest(e,["cascadeParams","onDataSourceChange"]),a=useAutoCompleteDict({dictName:t,cascadeParams:a,onDataSourceChange:c}),c=a.options,a=a.loadData;return React.createElement(_Checkbox.AutoCompleteCustomCheckboxSelect,__assign({},e,{options:c,loadData:a}))}}),setItem("CheckBoxAC","CheckAllCustom",function(t){return function(e){var a=e.cascadeParams,c=e.onDataSourceChange,e=__rest(e,["cascadeParams","onDataSourceChange"]),a=useAutoCompleteDict({dictName:t,cascadeParams:a,onDataSourceChange:c}),c=a.options,a=a.loadData;return React.createElement(_Checkbox.AutoCompleteCheckAllCustomCheckboxSelect,__assign({},e,{options:c,loadData:a}))}});
//# sourceMappingURL=CheckBox.js.map
