{"version":3,"file":"hooks.js","sources":["FormItemGeneratorToDict/hooks.js"],"sourcesContent":["var __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { useMount, useUpdateEffect } from 'ahooks';\nimport { useMemo, useRef, useState } from 'react';\nimport Dict from '@baifendian/adhere-util-dict';\nimport { deepDep } from './util';\n/**\n * useTreeSelectLeaf\n * @description 处理TreeSelect数据的leaf\n * @param dataSource\n */\nexport function useTreeSelectLeaf(dataSource) {\n  return useMemo(function () {\n    function loop(nodes) {\n      (nodes || []).forEach(function (node) {\n        node.disabled = !('leaf' in node && node.leaf);\n        loop(node.children);\n      });\n    }\n    var source = JSON.parse(JSON.stringify(dataSource));\n    loop(source);\n    return source;\n  }, [dataSource]);\n}\n/**\n * useAsyncTreeSelect\n * @param dictName\n * @param cascadeParams\n * @param onDataSourceChange\n * @param fetchBranch\n * @param defaultId\n * @param value\n */\nexport function useAsyncTreeSelect(dictName, _a) {\n  var cascadeParams = _a.cascadeParams,\n    onDataSourceChange = _a.onDataSourceChange,\n    fetchBranch = _a.fetchBranch,\n    defaultId = _a.defaultId,\n    value = _a.value;\n  var _b = useState([]),\n    treeData = _b[0],\n    setTreeData = _b[1];\n  var changeValue = useRef();\n  var handler = Dict.value[dictName].value;\n  /**\n   * findNodeById\n   * @description 通过id寻找节点\n   * @param _treeData\n   * @param {string} id\n   * @return object\n   */\n  var findNodeById = function findNodeById(_treeData, id) {\n    function loop(_data) {\n      var result;\n      for (var i = 0; i < _data.length; i++) {\n        if (_data[i].value === id) {\n          result = _data[i];\n          break;\n        } else {\n          result = loop(_data[i].children || []);\n          if (result) {\n            break;\n          }\n        }\n      }\n      return result;\n    }\n    return loop(_treeData);\n  };\n  /**\n   * loadDefaultData\n   * @description 加载初始化的数据\n   */\n  var loadDefaultData = function loadDefaultData() {\n    handler(defaultId !== null && defaultId !== void 0 ? defaultId : '', cascadeParams).then(function (data) {\n      setTreeData(data);\n    });\n  };\n  /**\n   * loadDefaultBranchData\n   * @description 加载回显的数据\n   */\n  var loadDefaultBranchData = function loadDefaultBranchData() {\n    // const treeBranchNode = Util.arrayToAntdTreeSelect(data, {\n    //   keyAttr: 'id',\n    //   titleAttr: 'title',\n    //   rootParentId: '0',\n    //   parentIdAttr: 'pid',\n    // });\n    // 回显 回显数据 并集 topLevel\n    Promise.all([loadData(defaultId), fetchBranch === null || fetchBranch === void 0 ? void 0 : fetchBranch(value, cascadeParams)]).then(function (_a) {\n      var _b = _a[0],\n        rootNodes = _b === void 0 ? [] : _b,\n        _c = _a[1],\n        treeBranchNode = _c === void 0 ? [] : _c;\n      setTreeData(__spreadArray(__spreadArray([], treeBranchNode !== null && treeBranchNode !== void 0 ? treeBranchNode : [], true), (rootNodes !== null && rootNodes !== void 0 ? rootNodes : []).filter(function (_node) {\n        return !(treeBranchNode !== null && treeBranchNode !== void 0 ? treeBranchNode : []).map(function (t) {\n          return t.value;\n        }).includes(_node.value);\n      }), true));\n    });\n  };\n  /**\n   * loadData\n   * @description Async加载数据\n   * @param {string} id\n   * @return {LabelValue[]}\n   */\n  var loadData = function loadData(id) {\n    return handler(id, cascadeParams).then(function (data) {\n      return data;\n    });\n  };\n  /**\n   * onLoadData\n   * @param id\n   * @return {Promise<undefined>}\n   */\n  var onLoadData = function onLoadData(_a) {\n    var id = _a.value;\n    return new Promise(function (resolve) {\n      setTimeout(function () {\n        loadData(id).then(function (data) {\n          setTreeData(function (_treeData) {\n            var node = findNodeById(_treeData, id);\n            // children中可能有回显数据，需要分情况处理\n            if (node.children && Array.isArray(node.children)) {\n              if (!node.children.length) {\n                node.children = data;\n              } else {\n                node.children = __spreadArray(__spreadArray([], node.children, true), data.filter(function (t) {\n                  return node.children.find(function (n) {\n                    return n.value !== t.value;\n                  });\n                }), true);\n              }\n            } else {\n              node.children = data;\n            }\n            return __spreadArray([], _treeData, true);\n          });\n        });\n        resolve(undefined);\n      }, 300);\n    });\n  };\n  var onChange = function onChange(callback, params) {\n    changeValue.current = params;\n    callback.apply(void 0, params);\n  };\n  useMount(function () {\n    if (value) {\n      if (Array.isArray(value)) {\n        if (!!value.length) {\n          loadDefaultBranchData();\n        } else {\n          loadDefaultData();\n        }\n      } else {\n        loadDefaultBranchData();\n      }\n    } else {\n      loadDefaultData();\n    }\n  });\n  useUpdateEffect(function () {\n    if (!changeValue.current) {\n      loadDefaultBranchData();\n    }\n  }, [value]);\n  useUpdateEffect(function () {\n    if (value) {\n      loadDefaultBranchData();\n    } else {\n      loadDefaultData();\n    }\n  }, [deepDep(cascadeParams)]);\n  useUpdateEffect(function () {\n    onDataSourceChange === null || onDataSourceChange === void 0 ? void 0 : onDataSourceChange(treeData);\n  }, [treeData]);\n  return {\n    treeData: treeData,\n    onLoadData: onLoadData,\n    onChange: onChange\n  };\n}\n/**\n * useAsyncCascader\n * @param dictName\n * @param cascadeParams\n * @param onDataSourceChange\n * @param fetchBranch\n * @param defaultId\n * @param value\n */\nexport function useAsyncCascader(dictName, _a) {\n  var cascadeParams = _a.cascadeParams,\n    onDataSourceChange = _a.onDataSourceChange,\n    fetchBranch = _a.fetchBranch,\n    defaultId = _a.defaultId,\n    value = _a.value;\n  var _b = useState([]),\n    treeData = _b[0],\n    setTreeData = _b[1];\n  var changeValue = useRef();\n  var handler = Dict.value[dictName].value;\n  /**\n   * findNodeById\n   * @description 通过id寻找节点\n   * @param _treeData\n   * @param {string} id\n   * @return object\n   */\n  var findNodeById = function findNodeById(_treeData, id) {\n    function loop(_data) {\n      var result;\n      for (var i = 0; i < _data.length; i++) {\n        if (_data[i].value === id) {\n          result = _data[i];\n          break;\n        } else {\n          result = loop(_data[i].children || []);\n          if (result) {\n            break;\n          }\n        }\n      }\n      return result;\n    }\n    return loop(_treeData);\n  };\n  /**\n   * loadDefaultData\n   * @description 加载初始化的数据\n   */\n  var loadDefaultData = function loadDefaultData() {\n    handler(defaultId !== null && defaultId !== void 0 ? defaultId : '', cascadeParams).then(function (data) {\n      setTreeData(data);\n    });\n  };\n  /**\n   * loadDefaultBranchData\n   * @description 加载回显的数据\n   */\n  var loadDefaultBranchData = function loadDefaultBranchData() {\n    // const treeBranchNode = Util.arrayToAntdTreeSelect(data, {\n    //   keyAttr: 'id',\n    //   titleAttr: 'title',\n    //   rootParentId: '0',\n    //   parentIdAttr: 'pid',\n    // });\n    // 回显 回显数据 并集 topLevel\n    Promise.all([loadData(defaultId), fetchBranch === null || fetchBranch === void 0 ? void 0 : fetchBranch(value, cascadeParams)]).then(function (_a) {\n      var rootNodes = _a[0],\n        treeBranchNode = _a[1];\n      setTreeData(__spreadArray(__spreadArray([], treeBranchNode, true), rootNodes.filter(function (_node) {\n        return !treeBranchNode.map(function (t) {\n          return t.value;\n        }).includes(_node.value);\n      }), true));\n    });\n  };\n  /**\n   * loadData\n   * @description Async加载数据\n   * @param {string} id\n   * @return {LabelValue[]}\n   */\n  var loadData = function loadData(id) {\n    return handler(id, cascadeParams).then(function (data) {\n      return data;\n    });\n  };\n  /**\n   * onLoadData\n   * @return {Promise<undefined>}\n   * @param selectedOptions\n   */\n  var onLoadData = function onLoadData(selectedOptions) {\n    return new Promise(function (resolve) {\n      var targetOption = selectedOptions[selectedOptions.length - 1];\n      var id = targetOption.value;\n      setTimeout(function () {\n        loadData(id).then(function (data) {\n          setTreeData(function (_treeData) {\n            var node = findNodeById(_treeData, id);\n            // children中可能有回显数据，需要分情况处理\n            if (node.children && Array.isArray(node.children)) {\n              if (!node.children.length) {\n                node.children = data;\n              } else {\n                node.children = __spreadArray(__spreadArray([], node.children, true), data.filter(function (t) {\n                  return node.children.find(function (n) {\n                    return n.value !== t.value;\n                  });\n                }), true);\n              }\n            } else {\n              node.children = data;\n            }\n            return __spreadArray([], _treeData, true);\n          });\n        });\n        resolve(undefined);\n      }, 300);\n    });\n  };\n  var onChange = function onChange(callback, params) {\n    changeValue.current = params;\n    callback.apply(void 0, params);\n  };\n  useMount(function () {\n    if (value) {\n      if (Array.isArray(value)) {\n        if (!!value.length) {\n          loadDefaultBranchData();\n        } else {\n          loadDefaultData();\n        }\n      } else {\n        loadDefaultBranchData();\n      }\n    } else {\n      loadDefaultData();\n    }\n  });\n  useUpdateEffect(function () {\n    if (!changeValue.current) {\n      loadDefaultBranchData();\n    }\n  }, [value]);\n  useUpdateEffect(function () {\n    if (value) {\n      loadDefaultBranchData();\n    } else {\n      loadDefaultData();\n    }\n  }, [deepDep(cascadeParams)]);\n  useUpdateEffect(function () {\n    onDataSourceChange === null || onDataSourceChange === void 0 ? void 0 : onDataSourceChange(treeData);\n  }, [treeData]);\n  return {\n    treeData: treeData,\n    onLoadData: onLoadData,\n    onChange: onChange\n  };\n}"],"names":["__spreadArray","this","to","from","pack","arguments","length","ar","i","l","Array","prototype","slice","call","concat","useMount","useUpdateEffect","useMemo","useRef","useState","Dict","deepDep","useTreeSelectLeaf","dataSource","source","JSON","parse","stringify","loop","nodes","forEach","node","disabled","leaf","children","useAsyncTreeSelect","dictName","_a","findNodeById","_treeData","id","_data","result","value","loadDefaultData","handler","defaultId","cascadeParams","then","data","setTreeData","loadDefaultBranchData","Promise","all","loadData","fetchBranch","_b","rootNodes","_c","treeBranchNode","filter","_node","map","t","includes","onDataSourceChange","treeData","changeValue","isArray","current","onLoadData","resolve","setTimeout","find","n","undefined","onChange","callback","params","apply","useAsyncCascader","selectedOptions"],"mappings":"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"}