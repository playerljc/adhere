var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var n in t=arguments[a])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}).apply(this,arguments)},__rest=this&&this.__rest||function(e,t){var a={};for(n in e)Object.prototype.hasOwnProperty.call(e,n)&&t.indexOf(n)<0&&(a[n]=e[n]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var r=0,n=Object.getOwnPropertySymbols(e);r<n.length;r++)t.indexOf(n[r])<0&&Object.prototype.propertyIsEnumerable.call(e,n[r])&&(a[n[r]]=e[n[r]]);return a};import{useMount,useUpdateEffect}from"ahooks";import React,{useState}from"react";import Dict from"@baifendian/adhere-util-dict";import{setItem}from"../ItemFactory";import TreeMulitSelectFormItem from"../TreeMulitSelectFormItem";import TreeSelectFormItem from"../TreeSelectFormItem";import TreeSelectLeafFormItem from"../TreeSelectLeafFormItem";import TreeSelectLeafMulitFormItem from"../TreeSelectLeafMulitFormItem";import{deepDep}from"../util";var TreeSelectFormItemWrap=function(e){var t=e.dataSource,e=__rest(e,["dataSource"]);return React.createElement(TreeSelectFormItem,__assign({},e,{treeData:t}))},TreeSelectMulitFormItemWrap=function(e){var t=e.dataSource,e=__rest(e,["dataSource"]);return React.createElement(TreeMulitSelectFormItem,__assign({},e,{treeData:t}))};setItem("Tree","FormItem",function(r){return function(e){var t=e.cascadeParams,e=__rest(e,["cascadeParams"]),a=Dict.value[r].value,t=a instanceof Function?a(t):a;return React.createElement(TreeSelectFormItemWrap,__assign({},e,{dataSource:t}))}}),setItem("Tree","LeafFormItem",function(r){return function(e){var t=e.cascadeParams,e=__rest(e,["cascadeParams"]),a=Dict.value[r].value,t=a instanceof Function?a(t):a;return React.createElement(TreeSelectLeafFormItem,__assign({},e,{dataSource:t}))}}),setItem("Tree","MulitFormItem",function(r){return function(e){var t=e.cascadeParams,e=__rest(e,["cascadeParams"]),a=Dict.value[r].value,t=a instanceof Function?a(t):a;return React.createElement(TreeSelectMulitFormItemWrap,__assign({},e,{dataSource:t}))}}),setItem("Tree","LeafMulitFormItem",function(r){return function(e){var t=e.cascadeParams,e=__rest(e,["cascadeParams"]),a=Dict.value[r].value,t=a instanceof Function?a(t):a;return React.createElement(TreeSelectLeafMulitFormItem,__assign({},e,{dataSource:t}))}}),setItem("TreeDynamic","FormItem",function(o){return function(e){var t=e.cascadeParams,e=__rest(e,["cascadeParams"]),a=useState([]),r=a[0],n=a[1],c=Dict.value[o].value;return useMount(function(){c.then&&c.then(function(e){n(e)})}),useUpdateEffect(function(){c instanceof Function&&c(t).then(function(e){n(e)})},[deepDep(t)]),React.createElement(TreeSelectFormItemWrap,__assign({},e,{dataSource:r}))}}),setItem("TreeDynamic","LeafFormItem",function(o){return function(e){var t=e.cascadeParams,e=__rest(e,["cascadeParams"]),a=useState([]),r=a[0],n=a[1],c=Dict.value[o].value;return useMount(function(){c.then&&c.then(function(e){n(e)})}),useUpdateEffect(function(){c instanceof Function&&c(t).then(function(e){n(e)})},[deepDep(t)]),React.createElement(TreeSelectLeafFormItem,__assign({},e,{dataSource:r}))}}),setItem("TreeDynamic","MulitFormItem",function(o){return function(e){var t=e.cascadeParams,e=__rest(e,["cascadeParams"]),a=useState([]),r=a[0],n=a[1],c=Dict.value[o].value;return useMount(function(){c.then&&c.then(function(e){n(e)})}),useUpdateEffect(function(){c instanceof Function&&c(t).then(function(e){n(e)})},[deepDep(t)]),React.createElement(TreeSelectMulitFormItemWrap,__assign({},e,{dataSource:r}))}}),setItem("TreeDynamic","LeafMulitFormItem",function(o){return function(e){var t=e.cascadeParams,e=__rest(e,["cascadeParams"]),a=useState([]),r=a[0],n=a[1],c=Dict.value[o].value;return useMount(function(){c.then&&c.then(function(e){n(e)})}),useUpdateEffect(function(){c instanceof Function&&c(t).then(function(e){n(e)})},[deepDep(t)]),React.createElement(TreeSelectLeafMulitFormItem,__assign({},e,{dataSource:r}))}});
//# sourceMappingURL=TreeSelect.js.map
