var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)},__rest=this&&this.__rest||function(e,t){var r={};for(o in e)Object.prototype.hasOwnProperty.call(e,o)&&t.indexOf(o)<0&&(r[o]=e[o]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var n=0,o=Object.getOwnPropertySymbols(e);n<o.length;n++)t.indexOf(o[n])<0&&Object.prototype.propertyIsEnumerable.call(e,o[n])&&(r[o[n]]=e[o[n]]);return r};import React,{useMemo}from"react";import TreeMulitSelectFormItem from"../TreeMulitSelectFormItem";var TreeSelectLeafMulitFormItem=function(e){var t=e.dataSource,e=__rest(e,["dataSource"]),r=useMemo(function(){var e=JSON.parse(JSON.stringify(t));return function t(e){(e||[]).forEach(function(e){e.disabled=!("leaf"in e&&e.leaf),t(e.children)})}(e),e},[t]);return React.createElement(TreeMulitSelectFormItem,__assign({},e,{treeData:r}))};export default TreeSelectLeafMulitFormItem;
//# sourceMappingURL=index.js.map
