{"version":3,"file":"hooks.js","sources":["FormItemGeneratorToDict/hooks.js"],"sourcesContent":["\"use strict\";\n\nvar __spreadArray = void 0 && (void 0).__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar __importDefault = void 0 && (void 0).__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useAsyncTreeSelect = exports.useTreeSelectLeaf = void 0;\nvar ahooks_1 = require(\"ahooks\");\nvar react_1 = require(\"react\");\n// import Util from '@baifendian/adhere-util';\nvar adhere_util_dict_1 = __importDefault(require(\"@baifendian/adhere-util-dict\"));\nvar util_1 = require(\"./util\");\n/**\n * useTreeSelectLeaf\n * @description 处理TreeSelect数据的leaf\n * @param dataSource\n */\nfunction useTreeSelectLeaf(dataSource) {\n  return (0, react_1.useMemo)(function () {\n    function loop(nodes) {\n      (nodes || []).forEach(function (node) {\n        node.disabled = !('leaf' in node && node.leaf);\n        loop(node.children);\n      });\n    }\n    var source = JSON.parse(JSON.stringify(dataSource));\n    loop(source);\n    return source;\n  }, [dataSource]);\n}\nexports.useTreeSelectLeaf = useTreeSelectLeaf;\n/**\n * useAsyncTreeSelect\n * @param dictName\n * @param cascadeParams\n * @param onDataSourceChange\n * @param fetchBranch\n * @param defaultId\n * @param value\n */\nfunction useAsyncTreeSelect(dictName, _a) {\n  var cascadeParams = _a.cascadeParams,\n    onDataSourceChange = _a.onDataSourceChange,\n    fetchBranch = _a.fetchBranch,\n    defaultId = _a.defaultId,\n    value = _a.value;\n  var _b = (0, react_1.useState)([]),\n    treeData = _b[0],\n    setTreeData = _b[1];\n  var previous = (0, ahooks_1.usePrevious)(value);\n  var handler = adhere_util_dict_1.default.value[dictName].value;\n  /**\n   * findNodeById\n   * @description 通过id寻找节点\n   * @param _treeData\n   * @param {string} id\n   * @return object\n   */\n  var findNodeById = function findNodeById(_treeData, id) {\n    function loop(_data) {\n      var result;\n      for (var i = 0; i < _data.length; i++) {\n        if (_data[i].value === id) {\n          result = _data[i];\n          break;\n        } else {\n          result = loop(_data[i].children || []);\n          if (result) {\n            break;\n          }\n        }\n      }\n      return result;\n    }\n    return loop(_treeData);\n  };\n  /**\n   * loadDefaultData\n   * @description 加载初始化的数据\n   */\n  var loadDefaultData = function loadDefaultData() {\n    handler(defaultId !== null && defaultId !== void 0 ? defaultId : '', cascadeParams).then(function (data) {\n      setTreeData(data);\n    });\n  };\n  /**\n   * loadDefaultBranchData\n   * @description 加载回显的数据\n   */\n  var loadDefaultBranchData = function loadDefaultBranchData() {\n    var _a, _b;\n    (_b = (_a = fetchBranch === null || fetchBranch === void 0 ? void 0 : fetchBranch(value, cascadeParams)) === null || _a === void 0 ? void 0 : _a.then) === null || _b === void 0 ? void 0 : _b.call(_a, function (treeBranchNode) {\n      // const treeBranchNode = Util.arrayToAntdTreeSelect(data, {\n      //   keyAttr: 'id',\n      //   titleAttr: 'title',\n      //   rootParentId: '0',\n      //   parentIdAttr: 'pid',\n      // });\n      // if (!treeBranchNode || !Array.isArray(treeBranchNode) || !treeBranchNode.length) return;\n      if (!treeBranchNode || !Array.isArray(treeBranchNode) || !treeBranchNode.length) return;\n      setTreeData(treeBranchNode);\n    });\n  };\n  /**\n   * loadData\n   * @description Async加载数据\n   * @param {string} id\n   * @return {LabelValue[]}\n   */\n  var loadData = function loadData(id) {\n    return handler(id, cascadeParams).then(function (data) {\n      return data;\n    });\n  };\n  /**\n   * onLoadData\n   * @param id\n   * @return {Promise<undefined>}\n   */\n  var onLoadData = function onLoadData(_a) {\n    var id = _a.value;\n    return new Promise(function (resolve) {\n      setTimeout(function () {\n        loadData(id).then(function (data) {\n          setTreeData(function (_treeData) {\n            var node = findNodeById(_treeData, id);\n            node.children = data;\n            return __spreadArray([], _treeData, true);\n          });\n        });\n        resolve(undefined);\n      }, 300);\n    });\n  };\n  (0, ahooks_1.useMount)(function () {\n    if (value) {\n      if (Array.isArray(value)) {\n        if (!!value.length) {\n          loadDefaultBranchData();\n        } else {\n          loadDefaultData();\n        }\n      } else {\n        loadDefaultBranchData();\n      }\n    } else {\n      loadDefaultData();\n    }\n  });\n  (0, ahooks_1.useUpdateEffect)(function () {\n    if (!previous && !!value) {\n      loadDefaultBranchData();\n    }\n  }, [value]);\n  (0, ahooks_1.useUpdateEffect)(function () {\n    if (value) {\n      loadDefaultBranchData();\n    } else {\n      loadDefaultData();\n    }\n  }, [(0, util_1.deepDep)(cascadeParams)]);\n  (0, ahooks_1.useUpdateEffect)(function () {\n    onDataSourceChange === null || onDataSourceChange === void 0 ? void 0 : onDataSourceChange(treeData);\n  }, [treeData]);\n  return {\n    treeData: treeData,\n    onLoadData: onLoadData\n  };\n}\nexports.useAsyncTreeSelect = useAsyncTreeSelect;"],"names":["__spreadArray","to","from","pack","arguments","length","ar","i","l","Array","prototype","slice","call","concat","__importDefault","mod","__esModule","default","ahooks_1","Object","defineProperty","exports","value","useAsyncTreeSelect","useTreeSelectLeaf","require","react_1","adhere_util_dict_1","util_1","dataSource","useMemo","source","JSON","parse","stringify","loop","nodes","forEach","node","disabled","leaf","children","dictName","_a","findNodeById","_treeData","id","_data","result","loadDefaultData","handler","defaultId","cascadeParams","then","data","setTreeData","loadDefaultBranchData","_b","fetchBranch","treeBranchNode","isArray","onDataSourceChange","useState","treeData","previous","usePrevious","useMount","useUpdateEffect","deepDep","onLoadData","Promise","resolve","setTimeout","undefined"],"mappings":"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"}