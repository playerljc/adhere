{"version":3,"file":"hooks.js","sources":["FormItemGeneratorToDict/hooks.js"],"sourcesContent":["\"use strict\";\n\nvar __spreadArray = void 0 && (void 0).__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar __importDefault = void 0 && (void 0).__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useAsyncCascader = exports.useAsyncTreeSelect = exports.useTreeSelectLeaf = void 0;\nvar ahooks_1 = require(\"ahooks\");\nvar react_1 = require(\"react\");\nvar adhere_util_dict_1 = __importDefault(require(\"@baifendian/adhere-util-dict\"));\nvar util_1 = require(\"./util\");\n/**\n * useTreeSelectLeaf\n * @description 处理TreeSelect数据的leaf\n * @param dataSource\n */\nfunction useTreeSelectLeaf(dataSource) {\n  return (0, react_1.useMemo)(function () {\n    function loop(nodes) {\n      (nodes || []).forEach(function (node) {\n        node.disabled = !('leaf' in node && node.leaf);\n        loop(node.children);\n      });\n    }\n    var source = JSON.parse(JSON.stringify(dataSource));\n    loop(source);\n    return source;\n  }, [dataSource]);\n}\nexports.useTreeSelectLeaf = useTreeSelectLeaf;\n/**\n * useAsyncTreeSelect\n * @param dictName\n * @param cascadeParams\n * @param onDataSourceChange\n * @param fetchBranch\n * @param defaultId\n * @param value\n */\nfunction useAsyncTreeSelect(dictName, _a) {\n  var cascadeParams = _a.cascadeParams,\n    onDataSourceChange = _a.onDataSourceChange,\n    fetchBranch = _a.fetchBranch,\n    defaultId = _a.defaultId,\n    value = _a.value;\n  var _b = (0, react_1.useState)([]),\n    treeData = _b[0],\n    setTreeData = _b[1];\n  var changeValue = (0, react_1.useRef)();\n  var handler = adhere_util_dict_1.default.value[dictName].value;\n  /**\n   * findNodeById\n   * @description 通过id寻找节点\n   * @param _treeData\n   * @param {string} id\n   * @return object\n   */\n  var findNodeById = function findNodeById(_treeData, id) {\n    function loop(_data) {\n      var result;\n      for (var i = 0; i < _data.length; i++) {\n        if (_data[i].value === id) {\n          result = _data[i];\n          break;\n        } else {\n          result = loop(_data[i].children || []);\n          if (result) {\n            break;\n          }\n        }\n      }\n      return result;\n    }\n    return loop(_treeData);\n  };\n  /**\n   * loadDefaultData\n   * @description 加载初始化的数据\n   */\n  var loadDefaultData = function loadDefaultData() {\n    handler(defaultId !== null && defaultId !== void 0 ? defaultId : '', cascadeParams).then(function (data) {\n      setTreeData(data);\n    });\n  };\n  /**\n   * loadDefaultBranchData\n   * @description 加载回显的数据\n   */\n  var loadDefaultBranchData = function loadDefaultBranchData() {\n    // const treeBranchNode = Util.arrayToAntdTreeSelect(data, {\n    //   keyAttr: 'id',\n    //   titleAttr: 'title',\n    //   rootParentId: '0',\n    //   parentIdAttr: 'pid',\n    // });\n    // 回显 回显数据 并集 topLevel\n    Promise.all([loadData(defaultId), fetchBranch === null || fetchBranch === void 0 ? void 0 : fetchBranch(value, cascadeParams)]).then(function (_a) {\n      var _b = _a[0],\n        rootNodes = _b === void 0 ? [] : _b,\n        _c = _a[1],\n        treeBranchNode = _c === void 0 ? [] : _c;\n      setTreeData(__spreadArray(__spreadArray([], treeBranchNode !== null && treeBranchNode !== void 0 ? treeBranchNode : [], true), (rootNodes !== null && rootNodes !== void 0 ? rootNodes : []).filter(function (_node) {\n        return !(treeBranchNode !== null && treeBranchNode !== void 0 ? treeBranchNode : []).map(function (t) {\n          return t.value;\n        }).includes(_node.value);\n      }), true));\n    });\n  };\n  /**\n   * loadData\n   * @description Async加载数据\n   * @param {string} id\n   * @return {LabelValue[]}\n   */\n  var loadData = function loadData(id) {\n    return handler(id, cascadeParams).then(function (data) {\n      return data;\n    });\n  };\n  /**\n   * onLoadData\n   * @param id\n   * @return {Promise<undefined>}\n   */\n  var onLoadData = function onLoadData(_a) {\n    var id = _a.value;\n    return new Promise(function (resolve) {\n      setTimeout(function () {\n        loadData(id).then(function (data) {\n          setTreeData(function (_treeData) {\n            var node = findNodeById(_treeData, id);\n            // children中可能有回显数据，需要分情况处理\n            if (node.children && Array.isArray(node.children)) {\n              if (!node.children.length) {\n                node.children = data;\n              } else {\n                node.children = __spreadArray(__spreadArray([], node.children, true), data.filter(function (t) {\n                  return node.children.find(function (n) {\n                    return n.value !== t.value;\n                  });\n                }), true);\n              }\n            } else {\n              node.children = data;\n            }\n            return __spreadArray([], _treeData, true);\n          });\n        });\n        resolve(undefined);\n      }, 300);\n    });\n  };\n  var onChange = function onChange(callback, params) {\n    changeValue.current = params;\n    callback.apply(void 0, params);\n  };\n  (0, ahooks_1.useMount)(function () {\n    if (value) {\n      if (Array.isArray(value)) {\n        if (!!value.length) {\n          loadDefaultBranchData();\n        } else {\n          loadDefaultData();\n        }\n      } else {\n        loadDefaultBranchData();\n      }\n    } else {\n      loadDefaultData();\n    }\n  });\n  (0, ahooks_1.useUpdateEffect)(function () {\n    if (!changeValue.current) {\n      loadDefaultBranchData();\n    }\n  }, [value]);\n  (0, ahooks_1.useUpdateEffect)(function () {\n    if (value) {\n      loadDefaultBranchData();\n    } else {\n      loadDefaultData();\n    }\n  }, [(0, util_1.deepDep)(cascadeParams)]);\n  (0, ahooks_1.useUpdateEffect)(function () {\n    onDataSourceChange === null || onDataSourceChange === void 0 ? void 0 : onDataSourceChange(treeData);\n  }, [treeData]);\n  return {\n    treeData: treeData,\n    onLoadData: onLoadData,\n    onChange: onChange\n  };\n}\nexports.useAsyncTreeSelect = useAsyncTreeSelect;\n/**\n * useAsyncCascader\n * @param dictName\n * @param cascadeParams\n * @param onDataSourceChange\n * @param fetchBranch\n * @param defaultId\n * @param value\n */\nfunction useAsyncCascader(dictName, _a) {\n  var cascadeParams = _a.cascadeParams,\n    onDataSourceChange = _a.onDataSourceChange,\n    fetchBranch = _a.fetchBranch,\n    defaultId = _a.defaultId,\n    value = _a.value;\n  var _b = (0, react_1.useState)([]),\n    treeData = _b[0],\n    setTreeData = _b[1];\n  var changeValue = (0, react_1.useRef)();\n  var handler = adhere_util_dict_1.default.value[dictName].value;\n  /**\n   * findNodeById\n   * @description 通过id寻找节点\n   * @param _treeData\n   * @param {string} id\n   * @return object\n   */\n  var findNodeById = function findNodeById(_treeData, id) {\n    function loop(_data) {\n      var result;\n      for (var i = 0; i < _data.length; i++) {\n        if (_data[i].value === id) {\n          result = _data[i];\n          break;\n        } else {\n          result = loop(_data[i].children || []);\n          if (result) {\n            break;\n          }\n        }\n      }\n      return result;\n    }\n    return loop(_treeData);\n  };\n  /**\n   * loadDefaultData\n   * @description 加载初始化的数据\n   */\n  var loadDefaultData = function loadDefaultData() {\n    handler(defaultId !== null && defaultId !== void 0 ? defaultId : '', cascadeParams).then(function (data) {\n      setTreeData(data);\n    });\n  };\n  /**\n   * loadDefaultBranchData\n   * @description 加载回显的数据\n   */\n  var loadDefaultBranchData = function loadDefaultBranchData() {\n    // const treeBranchNode = Util.arrayToAntdTreeSelect(data, {\n    //   keyAttr: 'id',\n    //   titleAttr: 'title',\n    //   rootParentId: '0',\n    //   parentIdAttr: 'pid',\n    // });\n    // 回显 回显数据 并集 topLevel\n    Promise.all([loadData(defaultId), fetchBranch === null || fetchBranch === void 0 ? void 0 : fetchBranch(value, cascadeParams)]).then(function (_a) {\n      var rootNodes = _a[0],\n        treeBranchNode = _a[1];\n      setTreeData(__spreadArray(__spreadArray([], treeBranchNode, true), rootNodes.filter(function (_node) {\n        return !treeBranchNode.map(function (t) {\n          return t.value;\n        }).includes(_node.value);\n      }), true));\n    });\n  };\n  /**\n   * loadData\n   * @description Async加载数据\n   * @param {string} id\n   * @return {LabelValue[]}\n   */\n  var loadData = function loadData(id) {\n    return handler(id, cascadeParams).then(function (data) {\n      return data;\n    });\n  };\n  /**\n   * onLoadData\n   * @return {Promise<undefined>}\n   * @param selectedOptions\n   */\n  var onLoadData = function onLoadData(selectedOptions) {\n    return new Promise(function (resolve) {\n      var targetOption = selectedOptions[selectedOptions.length - 1];\n      var id = targetOption.value;\n      setTimeout(function () {\n        loadData(id).then(function (data) {\n          setTreeData(function (_treeData) {\n            var node = findNodeById(_treeData, id);\n            // children中可能有回显数据，需要分情况处理\n            if (node.children && Array.isArray(node.children)) {\n              if (!node.children.length) {\n                node.children = data;\n              } else {\n                node.children = __spreadArray(__spreadArray([], node.children, true), data.filter(function (t) {\n                  return node.children.find(function (n) {\n                    return n.value !== t.value;\n                  });\n                }), true);\n              }\n            } else {\n              node.children = data;\n            }\n            return __spreadArray([], _treeData, true);\n          });\n        });\n        resolve(undefined);\n      }, 300);\n    });\n  };\n  var onChange = function onChange(callback, params) {\n    changeValue.current = params;\n    callback.apply(void 0, params);\n  };\n  (0, ahooks_1.useMount)(function () {\n    if (value) {\n      if (Array.isArray(value)) {\n        if (!!value.length) {\n          loadDefaultBranchData();\n        } else {\n          loadDefaultData();\n        }\n      } else {\n        loadDefaultBranchData();\n      }\n    } else {\n      loadDefaultData();\n    }\n  });\n  (0, ahooks_1.useUpdateEffect)(function () {\n    if (!changeValue.current) {\n      loadDefaultBranchData();\n    }\n  }, [value]);\n  (0, ahooks_1.useUpdateEffect)(function () {\n    if (value) {\n      loadDefaultBranchData();\n    } else {\n      loadDefaultData();\n    }\n  }, [(0, util_1.deepDep)(cascadeParams)]);\n  (0, ahooks_1.useUpdateEffect)(function () {\n    onDataSourceChange === null || onDataSourceChange === void 0 ? void 0 : onDataSourceChange(treeData);\n  }, [treeData]);\n  return {\n    treeData: treeData,\n    onLoadData: onLoadData,\n    onChange: onChange\n  };\n}\nexports.useAsyncCascader = useAsyncCascader;"],"names":["__spreadArray","to","from","pack","arguments","length","ar","i","l","Array","prototype","slice","call","concat","__importDefault","mod","__esModule","default","ahooks_1","Object","defineProperty","exports","value","useAsyncCascader","useAsyncTreeSelect","useTreeSelectLeaf","require","react_1","adhere_util_dict_1","util_1","dataSource","useMemo","source","JSON","parse","stringify","loop","nodes","forEach","node","disabled","leaf","children","dictName","_a","findNodeById","_treeData","id","_data","result","loadDefaultData","handler","defaultId","cascadeParams","then","data","setTreeData","loadDefaultBranchData","Promise","all","loadData","fetchBranch","_b","rootNodes","_c","treeBranchNode","filter","_node","map","t","includes","onDataSourceChange","useState","treeData","changeValue","useRef","useMount","isArray","useUpdateEffect","current","deepDep","onLoadData","resolve","setTimeout","find","n","undefined","onChange","callback","params","apply","selectedOptions"],"mappings":"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"}