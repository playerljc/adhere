{"version":3,"file":"index.js","sources":["FormItemGeneratorToDict/TreeSelectLeafMulitFormItem/index.js"],"sourcesContent":["import \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { useMemo } from 'react';\nimport TreeMulitSelectFormItem from '../TreeMulitSelectFormItem';\n/**\n * TreeSelectLeafMulitFormItem\n * @param dataSource\n * @param props\n * @constructor\n */\n\nvar TreeSelectLeafMulitFormItem = function TreeSelectLeafMulitFormItem(_a) {\n  var dataSource = _a.dataSource,\n      props = __rest(_a, [\"dataSource\"]);\n\n  var targetDataSource = useMemo(function () {\n    function loop(nodes) {\n      (nodes || []).forEach(function (node) {\n        node.disabled = !('leaf' in node && node.leaf);\n        loop(node.children);\n      });\n    }\n\n    var source = JSON.parse(JSON.stringify(dataSource));\n    loop(source);\n    return source;\n  }, [dataSource]);\n  return /*#__PURE__*/React.createElement(TreeMulitSelectFormItem, __assign({}, props, {\n    treeData: targetDataSource\n  }));\n};\n\nexport default TreeSelectLeafMulitFormItem;"],"names":["__assign","this","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","useMemo","TreeMulitSelectFormItem","TreeSelectLeafMulitFormItem","_a","dataSource","props","targetDataSource","source","JSON","parse","stringify","loop","nodes","forEach","node","disabled","leaf","children","createElement","treeData"],"mappings":"MAAO,4CACA,6CACA,qCACA,+CACA,kDAEP,IAAIA,SAAWC,MAAQA,KAAKD,UAAY,WAatC,OAZAA,SAAWE,OAAOC,QAAU,SAAUC,GACpC,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,CAAC,GAG/C,IAAK,IAAII,KAFTL,EAAIG,UAAUF,GAGRJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,CAAC,IAAGN,EAAEM,GAAKL,EAAEK,IAI7D,OAAON,CACT,GAEgBU,MAAMb,KAAMO,SAAS,CACvC,EAEIO,OAASd,MAAQA,KAAKc,QAAU,SAAUV,EAAGW,GAC/C,IAAIZ,EAAI,GAER,IAASM,KAAKL,EACRH,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,CAAC,GAAKM,EAAEC,QAAQP,CAAC,EAAI,IAAGN,EAAEM,GAAKL,EAAEK,IAG/E,GAAS,MAALL,GAAqD,YAAxC,OAAOH,OAAOgB,sBAAsC,IAAK,IAAIZ,EAAI,EAAGI,EAAIR,OAAOgB,sBAAsBb,CAAC,EAAGC,EAAII,EAAED,OAAQH,CAAC,GACnIU,EAAEC,QAAQP,EAAEJ,EAAE,EAAI,GAAKJ,OAAOS,UAAUQ,qBAAqBN,KAAKR,EAAGK,EAAEJ,EAAE,IAAGF,EAAEM,EAAEJ,IAAMD,EAAEK,EAAEJ,KAEhG,OAAOF,CACT,SAEOgB,OAASC,OAAsB,KAAP,eACxBC,4BAA6B,6BAQpC,IAAIC,4BAA8B,SAAqCC,GACrE,IAAIC,EAAaD,EAAGC,WAChBC,EAAQX,OAAOS,EAAI,CAAC,aAAa,EAEjCG,EAAmBN,QAAQ,WAQ7B,IAAIO,EAASC,KAAKC,MAAMD,KAAKE,UAAUN,CAAU,CAAC,EAElD,OATA,SAASO,EAAKC,IACXA,GAAS,IAAIC,QAAQ,SAAUC,GAC9BA,EAAKC,SAAW,EAAE,SAAUD,GAAQA,EAAKE,MACzCL,EAAKG,EAAKG,QAAQ,CACpB,CAAC,CACH,EAGKV,CAAM,EACJA,CACT,EAAG,CAACH,EAAW,EACf,OAAoBL,MAAMmB,cAAcjB,wBAAyBtB,SAAS,GAAI0B,EAAO,CACnFc,SAAUb,CACZ,CAAC,CAAC,CACJ,iBAEeJ"}