import"core-js/modules/es.object.assign.js";import"core-js/modules/es.array.index-of.js";import"core-js/modules/es.symbol.js";import"core-js/modules/es.array.filter.js";import"core-js/modules/es.object.to-string.js";import"core-js/modules/es.object.keys.js";import"core-js/modules/es.string.ends-with.js";import"core-js/modules/web.dom-collections.for-each.js";var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var a in t=arguments[r])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)},__rest=this&&this.__rest||function(e,t){var r={};for(a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.indexOf(a)<0&&(r[a]=e[a]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var n=0,a=Object.getOwnPropertySymbols(e);n<a.length;n++)t.indexOf(a[n])<0&&Object.prototype.propertyIsEnumerable.call(e,a[n])&&(r[a[n]]=e[a[n]]);return r};import React,{useEffect,useState}from"react";import Dict from"@baifendian/adhere-util-dict";import TreeMulitSelectFormItem from"../TreeMulitSelectFormItem";import TreeSelectFormItem from"../TreeSelectFormItem";import TreeSelectLeafFormItem from"../TreeSelectLeafFormItem";import TreeSelectLeafMulitFormItem from"../TreeSelectLeafMulitFormItem";var FormItemComponents={};export default function(){var e=Object.keys(Dict.handlers).filter(function(e){return e.endsWith("Tree")}),t=Object.keys(Dict.handlers).filter(function(e){return e.endsWith("DynamicTree")});return FormItemComponents.TreeSelectFormItem=function(e){var t=e.dataSource,e=__rest(e,["dataSource"]);return React.createElement(TreeSelectFormItem,__assign({},e,{treeData:t}))},FormItemComponents.TreeSelectMulitFormItem=function(e){var t=e.dataSource,e=__rest(e,["dataSource"]);return React.createElement(TreeMulitSelectFormItem,__assign({},e,{treeData:t}))},e.forEach(function(n){FormItemComponents["".concat(n,"FormItem")]=function(e){var t=e.cascadeParams,e=__rest(e,["cascadeParams"]),r=Dict.value[n].value,t=r instanceof Function?r(t):r,r=FormItemComponents.TreeSelectFormItem;return React.createElement(r,__assign({},e,{dataSource:t}))},FormItemComponents["".concat(n,"LeafFormItem")]=function(e){var t=e.cascadeParams,e=__rest(e,["cascadeParams"]),r=Dict.value[n].value,t=r instanceof Function?r(t):r;return React.createElement(TreeSelectLeafFormItem,__assign({},e,{dataSource:t}))},FormItemComponents["".concat(n,"MulitFormItem")]=function(e){var t=e.cascadeParams,e=__rest(e,["cascadeParams"]),r=Dict.value[n].value,t=r instanceof Function?r(t):r,r=FormItemComponents.TreeSelectMulitFormItem;return React.createElement(r,__assign({},e,{dataSource:t}))},FormItemComponents["".concat(n,"LeafMulitFormItem")]=function(e){var t=e.cascadeParams,e=__rest(e,["cascadeParams"]),r=Dict.value[n].value,t=r instanceof Function?r(t):r;return React.createElement(TreeSelectLeafMulitFormItem,__assign({},e,{dataSource:t}))}}),t.forEach(function(c){FormItemComponents["".concat(c,"FormItem")]=function(e){var t=e.cascadeParams,e=__rest(e,["cascadeParams"]),r=useState([]),n=r[0],a=r[1],o=Dict.value[c].value,r=(useEffect(function(){o.then&&o.then(function(e){a(e)})},[]),useEffect(function(){o instanceof Function&&o(t).then(function(e){a(e)})},[t]),FormItemComponents.TreeSelectFormItem);return React.createElement(r,__assign({},e,{dataSource:n}))},FormItemComponents["".concat(c,"LeafFormItem")]=function(e){var t=e.cascadeParams,e=__rest(e,["cascadeParams"]),r=useState([]),n=r[0],a=r[1],o=Dict.value[c].value;return useEffect(function(){o.then&&o.then(function(e){a(e)})},[]),useEffect(function(){o instanceof Function&&o(t).then(function(e){a(e)})},[t]),React.createElement(TreeSelectLeafFormItem,__assign({},e,{dataSource:n}))},FormItemComponents["".concat(c,"MulitFormItem")]=function(e){var t=e.cascadeParams,e=__rest(e,["cascadeParams"]),r=useState([]),n=r[0],a=r[1],o=Dict.value[c].value,r=(useEffect(function(){o.then&&o.then(function(e){a(e)})},[]),useEffect(function(){o instanceof Function&&o(t).then(function(e){a(e)})},[t]),FormItemComponents.TreeSelectMulitFormItem);return React.createElement(r,__assign({},e,{dataSource:n}))},FormItemComponents["".concat(c,"LeafMulitFormItem")]=function(e){var t=e.cascadeParams,e=__rest(e,["cascadeParams"]),r=useState([]),n=r[0],a=r[1],o=Dict.value[c].value;return useEffect(function(){o.then&&o.then(function(e){a(e)})},[]),useEffect(function(){o instanceof Function&&o(t).then(function(e){a(e)})},[t]),React.createElement(TreeSelectLeafMulitFormItem,__assign({},e,{dataSource:n}))}}),FormItemComponents}
//# sourceMappingURL=TreeSelect.js.map
