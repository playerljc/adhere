{"version":3,"file":"TreeSelect.js","sources":["FormItemGeneratorToDict/Fields/TreeSelect.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __rest = (this && this.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\nimport React, { useEffect, useState } from 'react';\r\nimport Dict from '@baifendian/adhere-util-dict';\r\nimport TreeMulitSelectFormItem from '../TreeMulitSelectFormItem';\r\nimport TreeSelectFormItem from '../TreeSelectFormItem';\r\nimport TreeSelectLeafFormItem from '../TreeSelectLeafFormItem';\r\nimport TreeSelectLeafMulitFormItem from '../TreeSelectLeafMulitFormItem';\r\nimport { deepDep } from '../util';\r\nvar FormItemComponents = {};\r\n/**\r\n * initTreeSelect\r\n * @description 初始化TreeSelect\r\n */\r\nexport default (function () {\r\n    // 名称以Tree结尾的字典\r\n    var treeSelectDictNames = Object.keys(Dict.handlers).filter(function (dictName) {\r\n        return dictName.endsWith('Tree');\r\n    });\r\n    // 名称以DynamicTree结尾的字典\r\n    var treeSelectDynamicDictNames = Object.keys(Dict.handlers).filter(function (dictName) {\r\n        return dictName.endsWith('DynamicTree');\r\n    });\r\n    // treeSelectFormItem\r\n    FormItemComponents[\"TreeSelectFormItem\"] = function (_a) {\r\n        var dataSource = _a.dataSource, props = __rest(_a, [\"dataSource\"]);\r\n        return React.createElement(TreeSelectFormItem, __assign({}, props, { treeData: dataSource }));\r\n    };\r\n    // MulitSelectFormItem\r\n    FormItemComponents[\"TreeSelectMulitFormItem\"] = function (_a) {\r\n        var dataSource = _a.dataSource, props = __rest(_a, [\"dataSource\"]);\r\n        return React.createElement(TreeMulitSelectFormItem, __assign({}, props, { treeData: dataSource }));\r\n    };\r\n    // 静态的TreeSelect\r\n    treeSelectDictNames.forEach(function (selectDictName) {\r\n        // treeSelectFormItem\r\n        FormItemComponents[\"\".concat(selectDictName, \"FormItem\")] = function (_a) {\r\n            var cascadeParams = _a.cascadeParams, props = __rest(_a, [\"cascadeParams\"]);\r\n            var handler = Dict.value[selectDictName].value;\r\n            var dataSource;\r\n            // 如果是函数(一般是级联)\r\n            if (handler instanceof Function) {\r\n                dataSource = handler(cascadeParams);\r\n            }\r\n            else {\r\n                dataSource = handler;\r\n            }\r\n            var Component = FormItemComponents[\"TreeSelectFormItem\"];\r\n            return React.createElement(Component, __assign({}, props, { dataSource: dataSource }));\r\n        };\r\n        // treeSelectLeafFormItem\r\n        FormItemComponents[\"\".concat(selectDictName, \"LeafFormItem\")] = function (_a) {\r\n            var cascadeParams = _a.cascadeParams, props = __rest(_a, [\"cascadeParams\"]);\r\n            var handler = Dict.value[selectDictName].value;\r\n            var dataSource;\r\n            // 如果是函数(一般是级联)\r\n            if (handler instanceof Function) {\r\n                dataSource = handler(cascadeParams);\r\n            }\r\n            else {\r\n                dataSource = handler;\r\n            }\r\n            return React.createElement(TreeSelectLeafFormItem, __assign({}, props, { dataSource: dataSource }));\r\n        };\r\n        // MulitSelectFormItem\r\n        FormItemComponents[\"\".concat(selectDictName, \"MulitFormItem\")] = function (_a) {\r\n            var cascadeParams = _a.cascadeParams, props = __rest(_a, [\"cascadeParams\"]);\r\n            var handler = Dict.value[selectDictName].value;\r\n            var dataSource;\r\n            // 如果是函数(一般是级联)\r\n            if (handler instanceof Function) {\r\n                dataSource = handler(cascadeParams);\r\n            }\r\n            else {\r\n                dataSource = handler;\r\n            }\r\n            var Component = FormItemComponents[\"TreeSelectMulitFormItem\"];\r\n            return React.createElement(Component, __assign({}, props, { dataSource: dataSource }));\r\n        };\r\n        // MulitSelectLeafFormItem\r\n        FormItemComponents[\"\".concat(selectDictName, \"LeafMulitFormItem\")] = function (_a) {\r\n            var cascadeParams = _a.cascadeParams, props = __rest(_a, [\"cascadeParams\"]);\r\n            var handler = Dict.value[selectDictName].value;\r\n            var dataSource;\r\n            // 如果是函数(一般是级联)\r\n            if (handler instanceof Function) {\r\n                dataSource = handler(cascadeParams);\r\n            }\r\n            else {\r\n                dataSource = handler;\r\n            }\r\n            return React.createElement(TreeSelectLeafMulitFormItem, __assign({}, props, { dataSource: dataSource }));\r\n        };\r\n    });\r\n    // 动态的TreeSelect\r\n    treeSelectDynamicDictNames.forEach(function (selectDictName) {\r\n        // treeSelectFormItem\r\n        FormItemComponents[\"\".concat(selectDictName, \"FormItem\")] = function (_a) {\r\n            var cascadeParams = _a.cascadeParams, props = __rest(_a, [\"cascadeParams\"]);\r\n            var _b = useState([]), data = _b[0], setData = _b[1];\r\n            // 存放字典的返回值(可能是promise也可能是Function)\r\n            var handler = Dict.value[selectDictName].value;\r\n            useEffect(function () {\r\n                // 如果是Promise直接返回\r\n                if (handler.then) {\r\n                    handler.then(function (res) {\r\n                        setData(res);\r\n                    });\r\n                }\r\n            }, []);\r\n            useEffect(function () {\r\n                // 如果是函数(一般是级联)\r\n                if (handler instanceof Function) {\r\n                    handler(cascadeParams).then(function (res) {\r\n                        setData(res);\r\n                    });\r\n                }\r\n            }, [deepDep(cascadeParams)]);\r\n            var Component = FormItemComponents[\"TreeSelectFormItem\"];\r\n            return React.createElement(Component, __assign({}, props, { dataSource: data }));\r\n        };\r\n        // treeSelectLeafFormItem\r\n        FormItemComponents[\"\".concat(selectDictName, \"LeafFormItem\")] = function (_a) {\r\n            var cascadeParams = _a.cascadeParams, props = __rest(_a, [\"cascadeParams\"]);\r\n            var _b = useState([]), data = _b[0], setData = _b[1];\r\n            // 存放字典的返回值(可能是promise也可能是Function)\r\n            var handler = Dict.value[selectDictName].value;\r\n            useEffect(function () {\r\n                // 如果是Promise直接返回\r\n                if (handler.then) {\r\n                    handler.then(function (res) {\r\n                        setData(res);\r\n                    });\r\n                }\r\n            }, []);\r\n            useEffect(function () {\r\n                // 如果是函数(一般是级联)\r\n                if (handler instanceof Function) {\r\n                    handler(cascadeParams).then(function (res) {\r\n                        setData(res);\r\n                    });\r\n                }\r\n            }, [deepDep(cascadeParams)]);\r\n            return React.createElement(TreeSelectLeafFormItem, __assign({}, props, { dataSource: data }));\r\n        };\r\n        // MulitSelectFormItem\r\n        FormItemComponents[\"\".concat(selectDictName, \"MulitFormItem\")] = function (_a) {\r\n            var cascadeParams = _a.cascadeParams, props = __rest(_a, [\"cascadeParams\"]);\r\n            var _b = useState([]), data = _b[0], setData = _b[1];\r\n            // 存放字典的返回值(可能是promise也可能是Function)\r\n            var handler = Dict.value[selectDictName].value;\r\n            useEffect(function () {\r\n                // 如果是Promise直接返回\r\n                if (handler.then) {\r\n                    handler.then(function (res) {\r\n                        setData(res);\r\n                    });\r\n                }\r\n            }, []);\r\n            useEffect(function () {\r\n                // 如果是函数(一般是级联)\r\n                if (handler instanceof Function) {\r\n                    handler(cascadeParams).then(function (res) {\r\n                        setData(res);\r\n                    });\r\n                }\r\n            }, [deepDep(cascadeParams)]);\r\n            var Component = FormItemComponents[\"TreeSelectMulitFormItem\"];\r\n            return React.createElement(Component, __assign({}, props, { dataSource: data }));\r\n        };\r\n        // MulitSelectFormItem\r\n        FormItemComponents[\"\".concat(selectDictName, \"LeafMulitFormItem\")] = function (_a) {\r\n            var cascadeParams = _a.cascadeParams, props = __rest(_a, [\"cascadeParams\"]);\r\n            var _b = useState([]), data = _b[0], setData = _b[1];\r\n            // 存放字典的返回值(可能是promise也可能是Function)\r\n            var handler = Dict.value[selectDictName].value;\r\n            useEffect(function () {\r\n                // 如果是Promise直接返回\r\n                if (handler.then) {\r\n                    handler.then(function (res) {\r\n                        setData(res);\r\n                    });\r\n                }\r\n            }, []);\r\n            useEffect(function () {\r\n                // 如果是函数(一般是级联)\r\n                if (handler instanceof Function) {\r\n                    handler(cascadeParams).then(function (res) {\r\n                        setData(res);\r\n                    });\r\n                }\r\n            }, [deepDep(cascadeParams)]);\r\n            return React.createElement(TreeSelectLeafMulitFormItem, __assign({}, props, { dataSource: data }));\r\n        };\r\n    });\r\n    return FormItemComponents;\r\n});\r\n"],"names":["__assign","this","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","useEffect","useState","Dict","TreeMulitSelectFormItem","TreeSelectFormItem","TreeSelectLeafFormItem","TreeSelectLeafMulitFormItem","deepDep","FormItemComponents","treeSelectDictNames","keys","handlers","filter","dictName","endsWith","treeSelectDynamicDictNames","_a","dataSource","props","createElement","treeData","forEach","selectDictName","concat","cascadeParams","handler","value","Function","Component","_b","data","setData","then","res"],"mappings":"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"}